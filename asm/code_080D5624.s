	.include "asm/macros.inc"
	.include "constants/constants.inc"

	.syntax unified

	.text

	thumb_func_start CreateBoxy
CreateBoxy: @ 0x080D5624
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080D5658 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080D565C @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xbc
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080D5660
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080D5668
	.align 2, 0
_080D5658: .4byte ObjectMain
_080D565C: .4byte ObjectDestroy
_080D5660:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080D5668:
	adds r4, r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	adds r0, r4, #0
	adds r0, #0xb4
	movs r1, #0
	str r1, [r0]
	adds r0, #4
	strb r1, [r0]
	ldr r0, [r4, #0xc]
	movs r3, #1
	orrs r0, r3
	str r0, [r4, #0xc]
	ldr r2, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r2, r0
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r2, r0
	movs r0, #0x80
	lsls r0, r0, #0xe
	orrs r2, r0
	str r2, [r4, #8]
	ldr r0, [r4, #0x5c]
	subs r1, #8
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	movs r1, #0xa0
	orrs r0, r1
	str r0, [r4, #0x5c]
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080D56BE
	orrs r2, r3
	b _080D56C4
_080D56BE:
	movs r0, #2
	rsbs r0, r0, #0
	ands r2, r0
_080D56C4:
	str r2, [r4, #8]
	movs r1, #0x14
	rsbs r1, r1, #0
	movs r2, #0xc
	rsbs r2, r2, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #8
	bl sub_0803E2B0
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r2, #0x12
	rsbs r2, r2, #0
	movs r0, #9
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0xa
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	movs r1, #0
	movs r0, #0xd8
	lsls r0, r0, #3
	strh r0, [r4, #0x24]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r1, [r0]
	ldr r0, _080D5718 @ =sub_080D7958
	str r0, [r4, #0x7c]
	adds r0, r4, #0
	bl sub_080D77B8
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080D5718: .4byte sub_080D7958

	thumb_func_start sub_080D571C
sub_080D571C: @ 0x080D571C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	bl sub_0803D368
	adds r4, r0, #0
	adds r0, r6, #0
	adds r0, #0xac
	str r4, [r0]
	ldr r3, [r6, #8]
	movs r0, #4
	orrs r3, r0
	str r3, [r6, #8]
	ldr r0, [r4, #0xc]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	beq _080D574C
	b _080D5904
_080D574C:
	adds r0, r6, #0
	adds r0, #0x60
	adds r2, r4, #0
	adds r2, #0x60
	ldrh r1, [r0]
	mov sl, r0
	ldrh r2, [r2]
	cmp r1, r2
	beq _080D5760
	b _080D5904
_080D5760:
	ldr r1, [r6, #0x40]
	ldr r0, [r4, #0x40]
	cmp r1, r0
	ble _080D576E
	movs r0, #1
	orrs r3, r0
	b _080D5774
_080D576E:
	movs r0, #2
	rsbs r0, r0, #0
	ands r3, r0
_080D5774:
	str r3, [r6, #8]
	adds r7, r6, #0
	adds r7, #0xac
	ldr r0, [r7]
	movs r1, #0xb0
	adds r1, r1, r6
	mov sb, r1
	ldr r5, [r1]
	movs r2, #6
	ldrsh r1, [r5, r2]
	lsls r1, r1, #8
	movs r3, #8
	ldrsh r2, [r5, r3]
	lsls r2, r2, #8
	movs r3, #0x1a
	ldrsh r4, [r5, r3]
	mov ip, r4
	movs r3, #0x1c
	ldrsh r4, [r5, r3]
	str r4, [sp]
	ldrh r4, [r5, #0x1e]
	str r4, [sp, #4]
	ldrh r4, [r5, #0x20]
	str r4, [sp, #8]
	mov r3, ip
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080D57B2
	b _080D5904
_080D57B2:
	ldr r4, _080D5914 @ =gCurLevelInfo
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r1, r4, #0
	adds r1, #0xa0
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r6, #0
	adds r1, #0xa4
	movs r2, #0
	mov r8, r2
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r5, r0
	adds r1, r4, #0
	adds r1, #0xa4
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r6, #0
	adds r1, #0xa6
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r5, r0
	adds r1, r4, #0
	adds r1, #0xa8
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r6, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r5, r0
	adds r1, r4, #0
	adds r1, #0xac
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r6, #0
	adds r1, #0xaa
	strh r0, [r1]
	ldr r0, [r6, #8]
	ldr r1, _080D5918 @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r6, #8]
	adds r0, r6, #0
	adds r0, #0x85
	mov r3, r8
	strb r3, [r0]
	adds r0, r6, #0
	bl sub_080D777C
	adds r0, r6, #0
	bl sub_08034E14
	cmp r0, #0
	beq _080D5840
	mov r1, r8
	strb r1, [r0, #9]
_080D5840:
	adds r0, r6, #0
	adds r0, #0x82
	ldrb r3, [r0]
	adds r1, r3, #0
	subs r1, #0x38
	subs r0, #0x2c
	ldrb r0, [r0]
	muls r0, r5, r0
	adds r0, r0, r4
	ldr r2, _080D591C @ =0x0000065E
	adds r0, r0, r2
	ldrb r5, [r0]
	lsls r2, r1, #0x10
	asrs r1, r2, #0x10
	cmp r1, #0
	blt _080D5904
	ldr r0, _080D5920 @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080D5904
	mov r4, sb
	ldr r0, [r4]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080D5904
	adds r0, r3, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r6, r2, #0
	cmp r0, #0xf
	bls _080D58C2
	movs r4, #1
_080D588A:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r5, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _080D588A
	adds r0, r5, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0
	bl sub_08002A44
_080D58C2:
	ldr r1, _080D5920 @ =gUnk_08352D80
	asrs r0, r6, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r5, #0
	bl sub_08002A1C
	ldr r2, _080D5924 @ =gUnk_02020EE0
	ldr r0, _080D5928 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sl
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D5904
	ldr r0, _080D592C @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080D5904
	adds r0, r5, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080D5904:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D5914: .4byte gCurLevelInfo
_080D5918: .4byte 0xFFFFFDFF
_080D591C: .4byte 0x0000065E
_080D5920: .4byte gUnk_08352D80
_080D5924: .4byte gUnk_02020EE0
_080D5928: .4byte gUnk_0203AD3C
_080D592C: .4byte gUnk_0203AD20

	thumb_func_start sub_080D5930
sub_080D5930: @ 0x080D5930
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D5942
	movs r7, #0x60
	movs r3, #2
	b _080D5974
_080D5942:
	adds r2, r5, #0
	adds r2, #0x80
	ldr r1, _080D5968 @ =gUnk_08351530
	ldr r0, _080D596C @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x28
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080D5970
	movs r7, #0x48
	movs r3, #2
	b _080D5974
	.align 2, 0
_080D5968: .4byte gUnk_08351530
_080D596C: .4byte gUnk_0203AD30
_080D5970:
	movs r7, #0x48
	movs r3, #4
_080D5974:
	adds r1, r5, #0
	adds r1, #0x85
	ldrb r2, [r1]
	movs r0, #0xf
	ands r0, r2
	adds r4, r1, #0
	cmp r0, #5
	bls _080D5990
	movs r0, #0
	strb r0, [r4]
	adds r0, r5, #0
	bl sub_080D6B9C
	b _080D5AA8
_080D5990:
	adds r0, r2, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1c
	ldr r6, _080D59D4 @ =gRngVal
	cmp r0, r3
	bge _080D5A4C
	ldr r1, [r6]
	ldr r0, _080D59D8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080D59DC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r6]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	beq _080D5A4C
	adds r0, r2, #0
	adds r0, #0x11
	strb r0, [r4]
	lsls r3, r7, #8
	adds r0, r5, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r2, [r0, #0x40]
	ldr r0, [r5, #0x40]
	subs r1, r2, r0
	cmp r1, #0
	blt _080D59E0
	cmp r1, r3
	blt _080D59E6
	b _080D5A08
	.align 2, 0
_080D59D4: .4byte gRngVal
_080D59D8: .4byte 0x00196225
_080D59DC: .4byte 0x3C6EF35F
_080D59E0:
	subs r0, r0, r2
	cmp r0, r3
	bge _080D5A08
_080D59E6:
	ldr r1, [r6]
	ldr r0, _080D5A00 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080D5A04 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r6]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D5AA8
	b _080D5A32
	.align 2, 0
_080D5A00: .4byte 0x00196225
_080D5A04: .4byte 0x3C6EF35F
_080D5A08:
	ldr r0, [r6]
	ldr r3, _080D5A3C @ =0x00196225
	muls r0, r3, r0
	ldr r1, _080D5A40 @ =0x3C6EF35F
	adds r2, r0, r1
	str r2, [r6]
	lsrs r0, r2, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D5AA8
	adds r0, r2, #0
	muls r0, r3, r0
	ldr r3, _080D5A40 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r6]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	beq _080D5A44
_080D5A32:
	adds r0, r5, #0
	bl sub_080D5B2C
	b _080D5AA8
	.align 2, 0
_080D5A3C: .4byte 0x00196225
_080D5A40: .4byte 0x3C6EF35F
_080D5A44:
	adds r0, r5, #0
	bl sub_080D5D54
	b _080D5AA8
_080D5A4C:
	ldrb r1, [r4]
	movs r0, #0xf
	ands r0, r1
	strb r0, [r4]
	ldr r0, [r6]
	ldr r3, _080D5A74 @ =0x00196225
	muls r0, r3, r0
	ldr r1, _080D5A78 @ =0x3C6EF35F
	adds r2, r0, r1
	str r2, [r6]
	lsrs r0, r2, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080D5A7C
	adds r0, r5, #0
	bl sub_080D6988
	b _080D5AA2
	.align 2, 0
_080D5A74: .4byte 0x00196225
_080D5A78: .4byte 0x3C6EF35F
_080D5A7C:
	adds r0, r2, #0
	muls r0, r3, r0
	ldr r3, _080D5A98 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r6]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D5A9C
	adds r0, r5, #0
	bl sub_080D655C
	b _080D5AA2
	.align 2, 0
_080D5A98: .4byte 0x3C6EF35F
_080D5A9C:
	adds r0, r5, #0
	bl sub_080D7824
_080D5AA2:
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
_080D5AA8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D5AB0
sub_080D5AB0: @ 0x080D5AB0
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	adds r6, #0x52
	ldrh r0, [r6]
	subs r0, #0x6a
	movs r2, #0
	strh r0, [r6]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _080D5AD0
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r6]
_080D5AD0:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r0, [r0]
	ands r1, r0
	cmp r1, #0
	beq _080D5B20
	adds r7, r4, #0
	adds r7, #0x50
	strh r2, [r7]
	strh r2, [r6]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _080D5B20
	ldr r2, _080D5B28 @ =sub_080D5AB0
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	strh r5, [r7]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r6]
	movs r0, #0x10
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080D5930
_080D5B20:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D5B28: .4byte sub_080D5AB0

	thumb_func_start sub_080D5B2C
sub_080D5B2C: @ 0x080D5B2C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D5B54 @ =sub_080D5BB0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080D5B58
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080D5B60
	.align 2, 0
_080D5B54: .4byte sub_080D5BB0
_080D5B58:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080D5B60:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D5B76
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #2
	b _080D5B7E
_080D5B76:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #1
_080D5B7E:
	strh r0, [r1]
	adds r2, r1, #0
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D5B9C
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080D5B9C:
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x10
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080D5BB0
sub_080D5BB0: @ 0x080D5BB0
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D5C48
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080D5C00 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080D5C04
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r0, r3
	b _080D5CC4
	.align 2, 0
_080D5C00: .4byte 0xFFFFF800
_080D5C04:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	adds r2, r4, #0
	adds r2, #0x62
	cmp r1, r0
	bgt _080D5CC8
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r6, #0
	ldrsh r1, [r3, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080D5C44 @ =0xFFFFF800
	adds r0, r0, r3
	b _080D5CC4
	.align 2, 0
_080D5C44: .4byte 0xFFFFF800
_080D5C48:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080D5C8C
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080D5C88 @ =0xFFFFF800
	adds r0, r0, r3
	b _080D5CC4
	.align 2, 0
_080D5C88: .4byte 0xFFFFF800
_080D5C8C:
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r2, #0
	ldrsh r0, [r3, r2]
	lsls r0, r0, #8
	ldr r2, _080D5D34 @ =0xFFFFF800
	adds r0, r0, r2
	adds r2, r4, #0
	adds r2, #0x62
	cmp r1, r0
	blt _080D5CC8
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080D5CC4:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080D5CC8:
	adds r6, r4, #0
	adds r6, #0x52
	ldrh r0, [r6]
	subs r0, #0x6a
	movs r3, #0
	strh r0, [r6]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _080D5CE4
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r6]
_080D5CE4:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	ldrb r0, [r2]
	ands r1, r0
	cmp r1, #0
	beq _080D5D3C
	adds r7, r4, #0
	adds r7, #0x50
	strh r3, [r7]
	strh r3, [r6]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _080D5D3C
	ldr r2, _080D5D38 @ =sub_080D5AB0
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	strh r5, [r7]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r6]
	movs r0, #0x10
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080D5930
	b _080D5D4E
	.align 2, 0
_080D5D34: .4byte 0xFFFFF800
_080D5D38: .4byte sub_080D5AB0
_080D5D3C:
	ldrb r1, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080D5D4E
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080D5D4E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080D5D54
sub_080D5D54: @ 0x080D5D54
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D5D7C @ =sub_080D5DD8
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080D5D80
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080D5D88
	.align 2, 0
_080D5D7C: .4byte sub_080D5DD8
_080D5D80:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080D5D88:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D5D9E
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xfe
	lsls r0, r0, #8
	b _080D5DA6
_080D5D9E:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xff
	lsls r0, r0, #8
_080D5DA6:
	strh r0, [r1]
	adds r2, r1, #0
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D5DC4
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080D5DC4:
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x10
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080D5DD8
sub_080D5DD8: @ 0x080D5DD8
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D5E70
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080D5E28 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080D5E2C
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r0, r3
	b _080D5EEC
	.align 2, 0
_080D5E28: .4byte 0xFFFFF800
_080D5E2C:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	adds r2, r4, #0
	adds r2, #0x62
	cmp r1, r0
	bgt _080D5EF0
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r6, #0
	ldrsh r1, [r3, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080D5E6C @ =0xFFFFF800
	adds r0, r0, r3
	b _080D5EEC
	.align 2, 0
_080D5E6C: .4byte 0xFFFFF800
_080D5E70:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080D5EB4
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080D5EB0 @ =0xFFFFF800
	adds r0, r0, r3
	b _080D5EEC
	.align 2, 0
_080D5EB0: .4byte 0xFFFFF800
_080D5EB4:
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r2, #0
	ldrsh r0, [r3, r2]
	lsls r0, r0, #8
	ldr r2, _080D5F5C @ =0xFFFFF800
	adds r0, r0, r2
	adds r2, r4, #0
	adds r2, #0x62
	cmp r1, r0
	blt _080D5EF0
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080D5EEC:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080D5EF0:
	adds r6, r4, #0
	adds r6, #0x52
	ldrh r0, [r6]
	subs r0, #0x6a
	movs r3, #0
	strh r0, [r6]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _080D5F0C
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r6]
_080D5F0C:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	ldrb r0, [r2]
	ands r1, r0
	cmp r1, #0
	beq _080D5F64
	adds r7, r4, #0
	adds r7, #0x50
	strh r3, [r7]
	strh r3, [r6]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _080D5F64
	ldr r2, _080D5F60 @ =sub_080D5AB0
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	strh r5, [r7]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r6]
	movs r0, #0x10
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080D5930
	b _080D5F76
	.align 2, 0
_080D5F5C: .4byte 0xFFFFF800
_080D5F60: .4byte sub_080D5AB0
_080D5F64:
	ldrb r1, [r2]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080D5F76
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080D5F76:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080D5F7C
sub_080D5F7C: @ 0x080D5F7C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r2, r5, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x3b
	strh r0, [r2]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _080D5F9A
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r2]
_080D5F9A:
	ldr r0, [r5, #8]
	movs r3, #4
	orrs r0, r3
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #2
	bne _080D5FC6
	ldrb r0, [r5, #1]
	cmp r0, #1
	bne _080D5FBA
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r2]
_080D5FBA:
	ldr r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080D60B0
	movs r0, #3
	b _080D60AE
_080D5FC6:
	movs r0, #0
	ldrsh r1, [r2, r0]
	movs r0, #0x40
	rsbs r0, r0, #0
	cmp r1, r0
	bgt _080D5FD4
	strb r3, [r6]
_080D5FD4:
	adds r0, r5, #0
	adds r0, #0x62
	ldrb r1, [r0]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _080D60B0
	ldr r1, _080D608C @ =gUnk_02020EE0
	ldr r0, _080D6090 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D604A
	ldrb r0, [r5]
	cmp r0, #0
	bne _080D600E
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080D604A
_080D600E:
	ldr r1, _080D6094 @ =gUnk_08D60FA4
	ldr r4, _080D6098 @ =gSongTable
	ldr r2, _080D609C @ =0x00000CBC
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080D6032
	ldr r1, _080D60A0 @ =0x00000CB8
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080D604A
_080D6032:
	cmp r3, #0
	beq _080D6044
	ldr r0, _080D60A4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D604A
_080D6044:
	ldr r0, _080D60A8 @ =0x00000197
	bl m4aSongNumStart
_080D604A:
	movs r0, #1
	adds r1, r5, #0
	bl sub_0806FE64
	movs r1, #8
	rsbs r1, r1, #0
	ldr r0, [r5, #8]
	movs r4, #1
	adds r3, r4, #0
	bics r3, r0
	adds r0, r5, #0
	movs r2, #0xc
	bl sub_08089864
	movs r1, #0x14
	rsbs r1, r1, #0
	ldr r3, [r5, #8]
	ands r3, r4
	adds r0, r5, #0
	movs r2, #0xc
	bl sub_08089864
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080D60AC
	adds r0, r5, #0
	bl sub_080D787C
	b _080D60B0
	.align 2, 0
_080D608C: .4byte gUnk_02020EE0
_080D6090: .4byte gUnk_0203AD3C
_080D6094: .4byte gUnk_08D60FA4
_080D6098: .4byte gSongTable
_080D609C: .4byte 0x00000CBC
_080D60A0: .4byte 0x00000CB8
_080D60A4: .4byte gUnk_0203AD10
_080D60A8: .4byte 0x00000197
_080D60AC:
	movs r0, #2
_080D60AE:
	strb r0, [r6]
_080D60B0:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D60B8
sub_080D60B8: @ 0x080D60B8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D60DC @ =sub_080D6194
	movs r1, #7
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D60E0
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0x88
	lsls r1, r1, #3
	strh r1, [r0]
	movs r1, #0x19
	b _080D60EC
	.align 2, 0
_080D60DC: .4byte sub_080D6194
_080D60E0:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0xd8
	lsls r1, r1, #2
	strh r1, [r0]
	movs r1, #0x28
_080D60EC:
	strh r1, [r4, #4]
	adds r2, r0, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D6100
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080D6100:
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _080D617C @ =gUnk_02020EE0
	ldr r0, _080D6180 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D6176
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D6136
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080D6176
_080D6136:
	ldr r1, _080D6184 @ =gUnk_08D60FA4
	ldr r4, _080D6188 @ =gSongTable
	ldr r2, _080D618C @ =0x00000CB4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080D615C
	movs r1, #0xcb
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080D6176
_080D615C:
	cmp r3, #0
	beq _080D616E
	ldr r0, _080D6190 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D6176
_080D616E:
	movs r0, #0xcb
	lsls r0, r0, #1
	bl m4aSongNumStart
_080D6176:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D617C: .4byte gUnk_02020EE0
_080D6180: .4byte gUnk_0203AD3C
_080D6184: .4byte gUnk_08D60FA4
_080D6188: .4byte gSongTable
_080D618C: .4byte 0x00000CB4
_080D6190: .4byte gUnk_0203AD10

	thumb_func_start sub_080D6194
sub_080D6194: @ 0x080D6194
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D622C
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080D61E4 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080D61E8
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	b _080D62A8
	.align 2, 0
_080D61E4: .4byte 0xFFFFF800
_080D61E8:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	cmp r1, r0
	bgt _080D62AC
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r6, #0
	ldrsh r1, [r3, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _080D6228 @ =0xFFFFF800
	adds r0, r0, r2
	b _080D62A8
	.align 2, 0
_080D6228: .4byte 0xFFFFF800
_080D622C:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080D6270
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _080D626C @ =0xFFFFF800
	adds r0, r0, r2
	b _080D62A8
	.align 2, 0
_080D626C: .4byte 0xFFFFF800
_080D6270:
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r2, #0
	ldrsh r0, [r3, r2]
	lsls r0, r0, #8
	ldr r2, _080D62F4 @ =0xFFFFF800
	adds r0, r0, r2
	cmp r1, r0
	blt _080D62AC
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080D62A8:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080D62AC:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _080D62FC
	ldr r2, _080D62F8 @ =sub_080D5AB0
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	strh r5, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	movs r0, #0x10
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080D5930
	b _080D6310
	.align 2, 0
_080D62F4: .4byte 0xFFFFF800
_080D62F8: .4byte sub_080D5AB0
_080D62FC:
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080D6310
	adds r0, r4, #0
	bl sub_080D6318
_080D6310:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D6318
sub_080D6318: @ 0x080D6318
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D63B8 @ =sub_080D63D4
	movs r1, #8
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r0, #5
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #1
	adds r1, r4, #0
	bl sub_0806FE64
	ldr r1, _080D63BC @ =gUnk_02020EE0
	ldr r0, _080D63C0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D63B0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D6370
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080D63B0
_080D6370:
	ldr r1, _080D63C4 @ =gUnk_08D60FA4
	ldr r4, _080D63C8 @ =gSongTable
	ldr r2, _080D63CC @ =0x00000B24
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080D6396
	movs r1, #0xb2
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080D63B0
_080D6396:
	cmp r3, #0
	beq _080D63A8
	ldr r0, _080D63D0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D63B0
_080D63A8:
	movs r0, #0xb2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080D63B0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D63B8: .4byte sub_080D63D4
_080D63BC: .4byte gUnk_02020EE0
_080D63C0: .4byte gUnk_0203AD3C
_080D63C4: .4byte gUnk_08D60FA4
_080D63C8: .4byte gSongTable
_080D63CC: .4byte 0x00000B24
_080D63D0: .4byte gUnk_0203AD10

	thumb_func_start sub_080D63D4
sub_080D63D4: @ 0x080D63D4
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0x52
	ldrh r0, [r5]
	subs r0, #0x10
	movs r6, #0
	strh r0, [r5]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _080D63F4
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r5]
_080D63F4:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #8
	bne _080D6430
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080D640E
	b _080D6552
_080D640E:
	movs r0, #9
	strb r0, [r7]
	adds r2, r4, #0
	adds r2, #0x50
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r2]
	movs r0, #0xc0
	lsls r0, r0, #2
	strh r0, [r5]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D642E
	b _080D6552
_080D642E:
	b _080D64E8
_080D6430:
	cmp r1, #9
	bne _080D650C
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080D6444
	b _080D6552
_080D6444:
	ldr r1, _080D64F0 @ =gUnk_02020EE0
	ldr r0, _080D64F4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D64B0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D6470
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080D64B0
_080D6470:
	ldr r1, _080D64F8 @ =gUnk_08D60FA4
	ldr r5, _080D64FC @ =gSongTable
	ldr r2, _080D6500 @ =0x00000B24
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080D6496
	movs r1, #0xb2
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080D64B0
_080D6496:
	cmp r3, #0
	beq _080D64A8
	ldr r0, _080D6504 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D64B0
_080D64A8:
	movs r0, #0xb2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080D64B0:
	movs r0, #3
	adds r1, r4, #0
	bl sub_0806FE64
	movs r1, #0xc
	rsbs r1, r1, #0
	ldr r3, [r4, #8]
	adds r0, r4, #0
	movs r2, #0xa
	bl sub_08089864
	movs r0, #0xa
	strb r0, [r7]
	adds r2, r4, #0
	adds r2, #0x50
	ldr r0, _080D6508 @ =0x0000FE80
	strh r0, [r2]
	ldr r1, [r4, #8]
	movs r0, #3
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r4, #8]
	movs r0, #4
	strh r0, [r4, #4]
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080D6552
_080D64E8:
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
	b _080D6552
	.align 2, 0
_080D64F0: .4byte gUnk_02020EE0
_080D64F4: .4byte gUnk_0203AD3C
_080D64F8: .4byte gUnk_08D60FA4
_080D64FC: .4byte gSongTable
_080D6500: .4byte 0x00000B24
_080D6504: .4byte gUnk_0203AD10
_080D6508: .4byte 0x0000FE80
_080D650C:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080D651E
	adds r0, r4, #0
	adds r0, #0x50
	strh r6, [r0]
_080D651E:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080D6552
	ldr r2, _080D6558 @ =sub_080D5AB0
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	strh r6, [r0]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r5]
	movs r0, #0x10
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080D5930
_080D6552:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D6558: .4byte sub_080D5AB0

	thumb_func_start sub_080D655C
sub_080D655C: @ 0x080D655C
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r6, #0
	ldr r2, _080D6588 @ =sub_080D6648
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080D658C
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080D6594
	.align 2, 0
_080D6588: .4byte sub_080D6648
_080D658C:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080D6594:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xac
	ldr r1, [r0]
	ldr r5, [r1, #0x40]
	ldr r1, [r4, #0x40]
	subs r2, r5, r1
	adds r7, r0, #0
	adds r3, r1, #0
	cmp r2, #0
	blt _080D65B4
	movs r0, #0xc0
	lsls r0, r0, #6
	cmp r2, r0
	bgt _080D65BE
	b _080D65E8
_080D65B4:
	subs r1, r3, r5
	movs r0, #0xc0
	lsls r0, r0, #6
	cmp r1, r0
	ble _080D65E8
_080D65BE:
	adds r0, r6, #3
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [r7]
	ldr r0, [r0, #0x40]
	subs r1, r0, r3
	cmp r1, #0
	blt _080D65D8
	movs r0, #0xc0
	lsls r0, r0, #7
	cmp r1, r0
	bgt _080D65E2
	b _080D65E8
_080D65D8:
	subs r1, r3, r0
	movs r0, #0xc0
	lsls r0, r0, #7
	cmp r1, r0
	ble _080D65E8
_080D65E2:
	adds r0, r6, #3
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_080D65E8:
	ldr r2, _080D661C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080D6620 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080D6624 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	adds r0, r6, r0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, _080D6628 @ =gUnk_08356214
	adds r0, r6, r0
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x9f
	strb r0, [r1]
	ldrb r0, [r1]
	cmp r0, #1
	beq _080D662C
	cmp r0, #2
	beq _080D6630
	movs r0, #0x17
	b _080D6632
	.align 2, 0
_080D661C: .4byte gRngVal
_080D6620: .4byte 0x00196225
_080D6624: .4byte 0x3C6EF35F
_080D6628: .4byte gUnk_08356214
_080D662C:
	movs r0, #0x1b
	b _080D6632
_080D6630:
	movs r0, #0x21
_080D6632:
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D6648
sub_080D6648: @ 0x080D6648
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080D665E
	adds r0, r4, #0
	bl sub_080D66AC
_080D665E:
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #7
	bgt _080D668C
	adds r2, r4, #0
	adds r2, #0x54
	ldr r0, _080D6688 @ =gUnk_0203AD40
	ldr r1, [r0]
	movs r0, #2
	ands r1, r0
	lsls r1, r1, #1
	ldrb r0, [r2]
	adds r0, r0, r1
	strb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x55
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _080D66A2
	.align 2, 0
_080D6688: .4byte gUnk_0203AD40
_080D668C:
	cmp r0, #0xf
	bgt _080D66A2
	adds r2, r4, #0
	adds r2, #0x54
	ldr r0, _080D66A8 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	ldrb r1, [r2]
	adds r0, r0, r1
	strb r0, [r2]
_080D66A2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D66A8: .4byte gUnk_0203AD40

	thumb_func_start sub_080D66AC
sub_080D66AC: @ 0x080D66AC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r0, #0x9f
	ldrb r5, [r0]
	ldr r2, _080D66D0 @ =sub_080D6718
	adds r0, r4, #0
	movs r1, #2
	bl ObjectSetFunc
	cmp r5, #1
	beq _080D66D4
	cmp r5, #2
	beq _080D66EA
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0xe0
	lsls r1, r1, #1
	b _080D66DC
	.align 2, 0
_080D66D0: .4byte sub_080D6718
_080D66D4:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0x90
	lsls r1, r1, #2
_080D66DC:
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0x52
	adds r1, #0x60
	strh r1, [r2]
	adds r2, r0, #0
	b _080D66FC
_080D66EA:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xc0
	lsls r0, r0, #2
	strh r0, [r1]
	adds r2, r4, #0
	adds r2, #0x52
	strh r0, [r2]
	adds r2, r1, #0
_080D66FC:
	ldr r0, [r4, #8]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D6712
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080D6712:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080D6718
sub_080D6718: @ 0x080D6718
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D67AC
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080D6764 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080D6768
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	b _080D67E8
	.align 2, 0
_080D6764: .4byte 0xFFFFF800
_080D6768:
	adds r3, r4, #0
	adds r3, #0x3c
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa4
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	adds r5, r4, #0
	adds r5, #0x62
	cmp r1, r0
	bgt _080D6834
	ldrb r1, [r5]
	movs r0, #1
	orrs r0, r1
	strb r0, [r5]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	ldr r2, _080D67A8 @ =0xFFFFF800
	adds r0, r0, r2
	b _080D6830
	.align 2, 0
_080D67A8: .4byte 0xFFFFF800
_080D67AC:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080D67F8
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080D67F4 @ =0xFFFFF800
_080D67E8:
	adds r0, r0, r3
	subs r1, r1, r0
	str r1, [r4, #0x40]
	adds r5, r2, #0
	b _080D6834
	.align 2, 0
_080D67F4: .4byte 0xFFFFF800
_080D67F8:
	adds r3, r4, #0
	adds r3, #0x3e
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa8
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	ldr r5, _080D6870 @ =0xFFFFF800
	adds r0, r0, r5
	adds r5, r4, #0
	adds r5, #0x62
	cmp r1, r0
	blt _080D6834
	ldrb r1, [r5]
	movs r0, #1
	orrs r0, r1
	strb r0, [r5]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080D6830:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080D6834:
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x10
	strh r0, [r2]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _080D684E
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r2]
_080D684E:
	ldr r0, [r4, #8]
	movs r6, #4
	orrs r0, r6
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r3, r0, #0
	cmp r1, #2
	bne _080D6874
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0x40
	bgt _080D6882
	movs r0, #3
	strb r0, [r3]
	b _080D6882
	.align 2, 0
_080D6870: .4byte 0xFFFFF800
_080D6874:
	movs r0, #0
	ldrsh r1, [r2, r0]
	movs r0, #0x80
	rsbs r0, r0, #0
	cmp r1, r0
	bgt _080D6882
	strb r6, [r3]
_080D6882:
	ldrb r1, [r3]
	cmp r1, #4
	bne _080D6896
	ldrb r0, [r5]
	ands r1, r0
	cmp r1, #0
	beq _080D6896
	adds r0, r4, #0
	bl sub_080D68B0
_080D6896:
	ldrb r1, [r5]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080D68A8
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080D68A8:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D68B0
sub_080D68B0: @ 0x080D68B0
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r2, _080D6964 @ =sub_080D77DC
	movs r1, #5
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r1, _080D6968 @ =gUnk_02020EE0
	ldr r0, _080D696C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D6930
	ldrb r0, [r5]
	cmp r0, #0
	bne _080D68F4
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080D6930
_080D68F4:
	ldr r1, _080D6970 @ =gUnk_08D60FA4
	ldr r4, _080D6974 @ =gSongTable
	ldr r2, _080D6978 @ =0x00000CBC
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080D6918
	ldr r1, _080D697C @ =0x00000CB8
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080D6930
_080D6918:
	cmp r3, #0
	beq _080D692A
	ldr r0, _080D6980 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D6930
_080D692A:
	ldr r0, _080D6984 @ =0x00000197
	bl m4aSongNumStart
_080D6930:
	movs r0, #1
	adds r1, r5, #0
	bl sub_0806FE64
	movs r1, #8
	rsbs r1, r1, #0
	ldr r0, [r5, #8]
	movs r4, #1
	adds r3, r4, #0
	bics r3, r0
	adds r0, r5, #0
	movs r2, #0xc
	bl sub_08089864
	movs r1, #0x14
	rsbs r1, r1, #0
	ldr r3, [r5, #8]
	ands r3, r4
	adds r0, r5, #0
	movs r2, #0xc
	bl sub_08089864
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D6964: .4byte sub_080D77DC
_080D6968: .4byte gUnk_02020EE0
_080D696C: .4byte gUnk_0203AD3C
_080D6970: .4byte gUnk_08D60FA4
_080D6974: .4byte gSongTable
_080D6978: .4byte 0x00000CBC
_080D697C: .4byte 0x00000CB8
_080D6980: .4byte gUnk_0203AD10
_080D6984: .4byte 0x00000197

	thumb_func_start sub_080D6988
sub_080D6988: @ 0x080D6988
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D69B0 @ =sub_080D6A30
	movs r1, #2
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080D69B4
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080D69BC
	.align 2, 0
_080D69B0: .4byte sub_080D6A30
_080D69B4:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080D69BC:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D69FC
	ldr r2, _080D69F0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080D69F4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080D69F8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D6A14
	movs r0, #2
	b _080D6A26
	.align 2, 0
_080D69F0: .4byte gRngVal
_080D69F4: .4byte 0x00196225
_080D69F8: .4byte 0x3C6EF35F
_080D69FC:
	ldr r2, _080D6A18 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080D6A1C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080D6A20 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D6A24
_080D6A14:
	strh r1, [r4, #4]
	b _080D6A28
	.align 2, 0
_080D6A18: .4byte gRngVal
_080D6A1C: .4byte 0x00196225
_080D6A20: .4byte 0x3C6EF35F
_080D6A24:
	movs r0, #3
_080D6A26:
	strh r0, [r4, #4]
_080D6A28:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D6A30
sub_080D6A30: @ 0x080D6A30
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r2, r5, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x3b
	strh r0, [r2]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _080D6A4E
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r2]
_080D6A4E:
	ldr r0, [r5, #8]
	movs r3, #4
	orrs r0, r3
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #2
	bne _080D6A7C
	ldrb r0, [r5, #1]
	cmp r0, #1
	bne _080D6A6E
	movs r0, #0x84
	lsls r0, r0, #3
	strh r0, [r2]
_080D6A6E:
	ldr r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	bne _080D6A78
	b _080D6B94
_080D6A78:
	movs r0, #3
	b _080D6B92
_080D6A7C:
	movs r0, #0
	ldrsh r1, [r2, r0]
	movs r0, #0x40
	rsbs r0, r0, #0
	cmp r1, r0
	bgt _080D6A8A
	strb r3, [r6]
_080D6A8A:
	adds r0, r5, #0
	adds r0, #0x62
	ldrb r1, [r0]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _080D6B94
	ldr r1, _080D6B6C @ =gUnk_02020EE0
	ldr r0, _080D6B70 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D6B00
	ldrb r0, [r5]
	cmp r0, #0
	bne _080D6AC4
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080D6B00
_080D6AC4:
	ldr r1, _080D6B74 @ =gUnk_08D60FA4
	ldr r4, _080D6B78 @ =gSongTable
	ldr r2, _080D6B7C @ =0x00000CBC
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080D6AE8
	ldr r1, _080D6B80 @ =0x00000CB8
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080D6B00
_080D6AE8:
	cmp r3, #0
	beq _080D6AFA
	ldr r0, _080D6B84 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D6B00
_080D6AFA:
	ldr r0, _080D6B88 @ =0x00000197
	bl m4aSongNumStart
_080D6B00:
	movs r0, #1
	adds r1, r5, #0
	bl sub_0806FE64
	movs r1, #8
	rsbs r1, r1, #0
	ldr r0, [r5, #8]
	movs r4, #1
	adds r3, r4, #0
	bics r3, r0
	adds r0, r5, #0
	movs r2, #0xc
	bl sub_08089864
	movs r1, #0x14
	rsbs r1, r1, #0
	ldr r3, [r5, #8]
	ands r3, r4
	adds r0, r5, #0
	movs r2, #0xc
	bl sub_08089864
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _080D6B90
	ldr r2, _080D6B8C @ =sub_080D5AB0
	adds r0, r5, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r1, r5, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	movs r0, #0x10
	strh r0, [r5, #4]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	bl sub_080D5930
	b _080D6B94
	.align 2, 0
_080D6B6C: .4byte gUnk_02020EE0
_080D6B70: .4byte gUnk_0203AD3C
_080D6B74: .4byte gUnk_08D60FA4
_080D6B78: .4byte gSongTable
_080D6B7C: .4byte 0x00000CBC
_080D6B80: .4byte 0x00000CB8
_080D6B84: .4byte gUnk_0203AD10
_080D6B88: .4byte 0x00000197
_080D6B8C: .4byte sub_080D5AB0
_080D6B90:
	movs r0, #2
_080D6B92:
	strb r0, [r6]
_080D6B94:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D6B9C
sub_080D6B9C: @ 0x080D6B9C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D6BC4 @ =sub_080D6C0C
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080D6BC8
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080D6BD0
	.align 2, 0
_080D6BC4: .4byte sub_080D6C0C
_080D6BC8:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080D6BD0:
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x50
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r2]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D6BF6
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080D6BF6:
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x10
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D6C0C
sub_080D6C0C: @ 0x080D6C0C
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D6CA4
	adds r5, r3, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r3, #0x40]
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa8
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r6, _080D6C5C @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080D6C60
	adds r2, r3, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r4, #0x80
	lsls r4, r4, #4
	adds r0, r0, r4
	b _080D6D24
	.align 2, 0
_080D6C5C: .4byte 0xFFFFF800
_080D6C60:
	adds r5, r3, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	adds r2, r3, #0
	adds r2, #0x62
	cmp r1, r0
	bgt _080D6D28
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r6, #0
	ldrsh r1, [r4, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r4, _080D6CA0 @ =0xFFFFF800
	adds r0, r0, r4
	b _080D6D24
	.align 2, 0
_080D6CA0: .4byte 0xFFFFF800
_080D6CA4:
	adds r5, r3, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r3, #0x40]
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080D6CE8
	adds r2, r3, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r4, _080D6CE4 @ =0xFFFFF800
	adds r0, r0, r4
	b _080D6D24
	.align 2, 0
_080D6CE4: .4byte 0xFFFFF800
_080D6CE8:
	movs r0, #0x3e
	adds r0, r0, r3
	mov ip, r0
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa8
	movs r2, #0
	ldrsh r0, [r4, r2]
	lsls r0, r0, #8
	ldr r2, _080D6D74 @ =0xFFFFF800
	adds r0, r0, r2
	adds r2, r3, #0
	adds r2, #0x62
	cmp r1, r0
	blt _080D6D28
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	mov r4, ip
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080D6D24:
	subs r1, r1, r0
	str r1, [r3, #0x40]
_080D6D28:
	movs r6, #0x52
	adds r6, r6, r3
	mov ip, r6
	ldrh r0, [r6]
	subs r0, #0x6a
	movs r4, #0
	strh r0, [r6]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _080D6D46
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r6]
_080D6D46:
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	ldrb r0, [r2]
	ands r1, r0
	cmp r1, #0
	beq _080D6D78
	adds r0, r3, #0
	adds r0, #0x50
	strh r4, [r0]
	mov r0, ip
	strh r4, [r0]
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080D6D78
	adds r0, r3, #0
	bl sub_080D78F0
	b _080D6D8A
	.align 2, 0
_080D6D74: .4byte 0xFFFFF800
_080D6D78:
	ldrb r1, [r2]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080D6D8A
	adds r1, r3, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080D6D8A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080D6D90
sub_080D6D90: @ 0x080D6D90
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #1]
	cmp r0, #9
	bne _080D6DD4
	ldr r2, _080D6DB4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080D6DB8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080D6DBC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080D6DC0 @ =0x00005554
	cmp r2, r0
	bhi _080D6DC4
	movs r1, #0
	b _080D6DCE
	.align 2, 0
_080D6DB4: .4byte gRngVal
_080D6DB8: .4byte 0x00196225
_080D6DBC: .4byte 0x3C6EF35F
_080D6DC0: .4byte 0x00005554
_080D6DC4:
	ldr r0, _080D6E14 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080D6DCE
	movs r1, #1
_080D6DCE:
	adds r0, r4, #0
	bl sub_080D6E1C
_080D6DD4:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080D6E0C
	ldr r2, _080D6E18 @ =sub_080D5AB0
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	movs r0, #0x10
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080D5930
_080D6E0C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D6E14: .4byte 0x0000AAA9
_080D6E18: .4byte sub_080D5AB0

	thumb_func_start sub_080D6E1C
sub_080D6E1C: @ 0x080D6E1C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D6E40
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	subs r0, #8
	b _080D6E46
_080D6E40:
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	adds r0, #8
_080D6E46:
	mov sl, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	subs r0, #4
	mov ip, r0
	movs r4, #0
	ldr r1, _080D6E68 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080D6E6C @ =gUnk_020229E0
	movs r7, #0x56
	adds r7, r7, r5
	mov r8, r7
	b _080D6E84
	.align 2, 0
_080D6E68: .4byte gUnk_020229D4
_080D6E6C: .4byte gUnk_020229E0
_080D6E70:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080D6E8C
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080D6E84:
	cmp r0, #0
	bne _080D6E70
	orrs r2, r3
	str r2, [r1]
_080D6E8C:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, sl
	strh r0, [r1, #6]
	mov r7, ip
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xb0
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sb
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D6EF0
sub_080D6EF0: @ 0x080D6EF0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080D6F24 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080D6F28 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080D6F2C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080D6F34
	.align 2, 0
_080D6F24: .4byte ObjectMain
_080D6F28: .4byte ObjectDestroy
_080D6F2C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080D6F34:
	adds r4, r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #9
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0xc]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0xc]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080D7004 @ =sub_0809F840
	str r0, [r4, #0x7c]
	movs r2, #5
	rsbs r2, r2, #0
	movs r0, #6
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r2, #0
	movs r3, #5
	bl sub_0803E2B0
	movs r2, #6
	rsbs r2, r2, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r2, #0
	movs r3, #6
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	adds r0, r4, #0
	bl sub_080D7020
	ldr r1, _080D7008 @ =gUnk_02020EE0
	ldr r0, _080D700C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D6FF8
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D6FB8
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080D6FF8
_080D6FB8:
	ldr r1, _080D7010 @ =gUnk_08D60FA4
	ldr r5, _080D7014 @ =gSongTable
	ldr r2, _080D7018 @ =0x00000BA4
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080D6FDE
	movs r1, #0xba
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080D6FF8
_080D6FDE:
	cmp r3, #0
	beq _080D6FF0
	ldr r0, _080D701C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D6FF8
_080D6FF0:
	movs r0, #0xba
	lsls r0, r0, #1
	bl m4aSongNumStart
_080D6FF8:
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080D7004: .4byte sub_0809F840
_080D7008: .4byte gUnk_02020EE0
_080D700C: .4byte gUnk_0203AD3C
_080D7010: .4byte gUnk_08D60FA4
_080D7014: .4byte gSongTable
_080D7018: .4byte 0x00000BA4
_080D701C: .4byte gUnk_0203AD10

	thumb_func_start sub_080D7020
sub_080D7020: @ 0x080D7020
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D7054 @ =sub_080D712C
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080D7040
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080D7040:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _080D7072
	cmp r0, #1
	bgt _080D7058
	cmp r0, #0
	beq _080D705E
	b _080D709A
	.align 2, 0
_080D7054: .4byte sub_080D712C
_080D7058:
	cmp r0, #2
	beq _080D7086
	b _080D709A
_080D705E:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0xc0
	lsls r1, r1, #1
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x88
	lsls r0, r0, #2
	b _080D7098
_080D7072:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0x88
	lsls r1, r1, #2
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xe0
	lsls r0, r0, #1
	b _080D7098
_080D7086:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0xa0
	lsls r1, r1, #2
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xc0
	lsls r0, r0, #1
_080D7098:
	strh r0, [r1]
_080D709A:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D70AE
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
_080D70AE:
	movs r0, #0xf0
	lsls r0, r0, #1
	strh r0, [r4, #4]
	ldr r0, _080D7128 @ =gCurLevelInfo
	mov ip, r0
	adds r3, r4, #0
	adds r3, #0xac
	ldr r0, [r3]
	adds r0, #0x56
	ldrb r0, [r0]
	movs r2, #0xcd
	lsls r2, r2, #3
	muls r0, r2, r0
	mov r1, ip
	adds r1, #0xa0
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa4
	strh r0, [r1]
	ldr r0, [r3]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	mov r1, ip
	adds r1, #0xa4
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa6
	strh r0, [r1]
	ldr r0, [r3]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	mov r1, ip
	adds r1, #0xa8
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r3]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	mov r1, ip
	adds r1, #0xac
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xaa
	strh r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D7128: .4byte gCurLevelInfo

	thumb_func_start sub_080D712C
sub_080D712C: @ 0x080D712C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D71C0
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080D7178 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080D717C
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	b _080D71FC
	.align 2, 0
_080D7178: .4byte 0xFFFFF800
_080D717C:
	adds r3, r4, #0
	adds r3, #0x3c
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa4
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	adds r5, r4, #0
	adds r5, #0x62
	cmp r1, r0
	bgt _080D7248
	ldrb r1, [r5]
	movs r0, #1
	orrs r0, r1
	strb r0, [r5]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	ldr r2, _080D71BC @ =0xFFFFF800
	adds r0, r0, r2
	b _080D7244
	.align 2, 0
_080D71BC: .4byte 0xFFFFF800
_080D71C0:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080D720C
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080D7208 @ =0xFFFFF800
_080D71FC:
	adds r0, r0, r3
	subs r1, r1, r0
	str r1, [r4, #0x40]
	adds r5, r2, #0
	b _080D7248
	.align 2, 0
_080D7208: .4byte 0xFFFFF800
_080D720C:
	adds r3, r4, #0
	adds r3, #0x3e
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa8
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	ldr r5, _080D7288 @ =0xFFFFF800
	adds r0, r0, r5
	adds r5, r4, #0
	adds r5, #0x62
	cmp r1, r0
	blt _080D7248
	ldrb r1, [r5]
	movs r0, #1
	orrs r0, r1
	strb r0, [r5]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080D7244:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080D7248:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	ldrb r0, [r5]
	ands r1, r0
	cmp r1, #0
	beq _080D72E8
	adds r3, r4, #0
	adds r3, #0x9e
	ldrb r0, [r3]
	cmp r0, #0
	bne _080D728C
	adds r2, r4, #0
	adds r2, #0x50
	movs r0, #0x80
	strh r0, [r2]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xc0
	strh r0, [r1]
	movs r1, #1
	strb r1, [r3]
	ldr r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080D72BC
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
	b _080D72BC
	.align 2, 0
_080D7288: .4byte 0xFFFFF800
_080D728C:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #0x5a
	ldr r0, [r0]
	ldr r0, [r0, #0x40]
	ldr r1, [r4, #0x40]
	subs r2, r0, r1
	cmp r2, #0
	blt _080D72B4
	ldr r0, _080D72B0 @ =0x00002FFF
	cmp r2, r0
	ble _080D72C8
	b _080D72BC
	.align 2, 0
_080D72B0: .4byte 0x00002FFF
_080D72B4:
	subs r1, r1, r0
	ldr r0, _080D72D0 @ =0x00002FFF
	cmp r1, r0
	ble _080D72C8
_080D72BC:
	ldrh r0, [r4, #4]
	subs r1, r0, #1
	strh r1, [r4, #4]
	lsls r0, r1, #0x10
	cmp r0, #0
	bne _080D72D4
_080D72C8:
	adds r0, r4, #0
	bl sub_080D730C
	b _080D7304
	.align 2, 0
_080D72D0: .4byte 0x00002FFF
_080D72D4:
	movs r0, #0xf
	ands r1, r0
	cmp r1, #0
	bne _080D72E8
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
_080D72E8:
	ldrb r1, [r5]
	movs r2, #1
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _080D7304
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r1, [r0]
	rsbs r1, r1, #0
	strh r1, [r0]
	ldr r0, [r4, #8]
	eors r0, r2
	str r0, [r4, #8]
_080D7304:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D730C
sub_080D730C: @ 0x080D730C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D73A4 @ =sub_080D73C8
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x3c
	strh r0, [r4, #4]
	movs r2, #0xab
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r1, _080D73A8 @ =gUnk_02020EE0
	ldr r0, _080D73AC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D739C
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D7360
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080D739C
_080D7360:
	ldr r1, _080D73B0 @ =gUnk_08D60FA4
	ldr r4, _080D73B4 @ =gSongTable
	ldr r2, _080D73B8 @ =0x00000BAC
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080D7384
	ldr r1, _080D73BC @ =0x00000BA8
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080D739C
_080D7384:
	cmp r3, #0
	beq _080D7396
	ldr r0, _080D73C0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D739C
_080D7396:
	ldr r0, _080D73C4 @ =0x00000175
	bl m4aSongNumStart
_080D739C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D73A4: .4byte sub_080D73C8
_080D73A8: .4byte gUnk_02020EE0
_080D73AC: .4byte gUnk_0203AD3C
_080D73B0: .4byte gUnk_08D60FA4
_080D73B4: .4byte gSongTable
_080D73B8: .4byte 0x00000BAC
_080D73BC: .4byte 0x00000BA8
_080D73C0: .4byte gUnk_0203AD10
_080D73C4: .4byte 0x00000175

	thumb_func_start sub_080D73C8
sub_080D73C8: @ 0x080D73C8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	ldr r4, [r5, #0x70]
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0x34
	beq _080D73DC
	b _080D775A
_080D73DC:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #1
	strb r0, [r1]
	ldr r1, _080D7400 @ =gRngVal
	ldr r2, [r1]
	ldr r0, _080D7404 @ =0x00196225
	muls r0, r2, r0
	ldr r2, _080D7408 @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r1]
	lsrs r2, r0, #0x10
	ldr r0, _080D740C @ =0x00005554
	adds r6, r1, #0
	cmp r2, r0
	bhi _080D7410
	movs r3, #0
	b _080D741A
	.align 2, 0
_080D7400: .4byte gRngVal
_080D7404: .4byte 0x00196225
_080D7408: .4byte 0x3C6EF35F
_080D740C: .4byte 0x00005554
_080D7410:
	ldr r0, _080D742C @ =0x0000AAA9
	movs r3, #2
	cmp r2, r0
	bhi _080D741A
	movs r3, #1
_080D741A:
	cmp r3, #1
	bne _080D7420
	b _080D75E4
_080D7420:
	cmp r3, #1
	bgt _080D7430
	cmp r3, #0
	beq _080D7438
	b _080D775A
	.align 2, 0
_080D742C: .4byte 0x0000AAA9
_080D7430:
	cmp r3, #2
	bne _080D7436
	b _080D76CA
_080D7436:
	b _080D775A
_080D7438:
	adds r0, r4, #0
	adds r0, #0xb8
	ldrb r1, [r0]
	adds r2, r0, #0
	cmp r1, #2
	bls _080D7458
	ldr r1, [r6]
	ldr r0, _080D7450 @ =0x00196225
	muls r0, r1, r0
	ldr r7, _080D7454 @ =0x3C6EF35F
	adds r0, r0, r7
	b _080D7462
	.align 2, 0
_080D7450: .4byte 0x00196225
_080D7454: .4byte 0x3C6EF35F
_080D7458:
	ldr r1, [r6]
	ldr r0, _080D7498 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080D749C @ =0x3C6EF35F
	adds r0, r0, r1
_080D7462:
	str r0, [r6]
	ldr r1, [r6]
	ldr r0, _080D7498 @ =0x00196225
	muls r0, r1, r0
	ldr r7, _080D749C @ =0x3C6EF35F
	adds r0, r0, r7
	str r0, [r6]
	lsrs r0, r0, #0x10
	movs r3, #1
	ands r0, r3
	cmp r0, #0
	beq _080D7554
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	movs r4, #0
	ldr r1, _080D74A0 @ =gUnk_020229D4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _080D74A4 @ =gUnk_020229E0
	mov r8, r7
	movs r7, #0x56
	adds r7, r7, r5
	mov ip, r7
	b _080D74BC
	.align 2, 0
_080D7498: .4byte 0x00196225
_080D749C: .4byte 0x3C6EF35F
_080D74A0: .4byte gUnk_020229D4
_080D74A4: .4byte gUnk_020229E0
_080D74A8:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080D74C4
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080D74BC:
	cmp r0, #0
	bne _080D74A8
	orrs r2, r3
	str r2, [r1]
_080D74C4:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	add r1, r8
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	movs r2, #0
	strh r0, [r1, #6]
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	strh r0, [r1, #8]
	strb r2, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r2, [r1, #4]
	strb r2, [r1, #5]
	movs r0, #0x5e
	strb r0, [r1, #0xc]
	adds r7, r1, #0
	ldr r1, [r6]
	ldr r0, _080D7548 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080D754C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r6]
	lsrs r2, r0, #0x10
	movs r3, #0
	ldr r0, _080D7550 @ =0x00003333
	cmp r2, r0
	blt _080D7524
_080D7508:
	adds r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #3
	bhi _080D7524
	adds r1, r3, #1
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r1, r0, #4
	adds r0, r0, r1
	lsls r1, r0, #8
	adds r0, r0, r1
	cmp r2, r0
	bge _080D7508
_080D7524:
	movs r2, #0
	strb r3, [r7, #0xe]
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	add r1, r8
	strb r2, [r1, #0xf]
	movs r0, #2
	strb r0, [r1, #0x10]
	movs r0, #0
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r0, [r1, #0x11]
	b _080D75D2
	.align 2, 0
_080D7548: .4byte 0x00196225
_080D754C: .4byte 0x3C6EF35F
_080D7550: .4byte 0x00003333
_080D7554:
	movs r4, #0
	ldr r1, _080D756C @ =gUnk_020229D4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080D7570 @ =gUnk_020229E0
	mov r8, r6
	movs r7, #0x56
	adds r7, r7, r5
	mov ip, r7
	b _080D7588
	.align 2, 0
_080D756C: .4byte gUnk_020229D4
_080D7570: .4byte gUnk_020229E0
_080D7574:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080D7590
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080D7588:
	cmp r0, #0
	bne _080D7574
	orrs r2, r3
	str r2, [r1]
_080D7590:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	add r1, r8
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	movs r3, #0
	strh r0, [r1, #6]
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0x62
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	movs r0, #2
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
_080D75D2:
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, ip
	ldrb r0, [r2]
	bl CreateObject
	b _080D775A
_080D75E4:
	adds r2, r4, #0
	adds r2, #0xb4
	ldr r0, [r2]
	cmp r0, #0
	bne _080D7690
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _080D7690
	adds r6, r2, #0
	movs r4, #0
	ldr r1, _080D7618 @ =gUnk_020229D4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _080D761C @ =gUnk_020229E0
	mov r8, r7
	movs r7, #0x56
	adds r7, r7, r5
	mov ip, r7
	b _080D7634
	.align 2, 0
_080D7618: .4byte gUnk_020229D4
_080D761C: .4byte gUnk_020229E0
_080D7620:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080D763C
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080D7634:
	cmp r0, #0
	bne _080D7620
	orrs r2, r3
	str r2, [r1]
_080D763C:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	add r1, r8
	movs r3, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	movs r2, #0
	strh r0, [r1, #6]
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	strh r0, [r1, #8]
	strb r2, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r2, [r1, #4]
	strb r2, [r1, #5]
	movs r0, #0x27
	strb r0, [r1, #0xc]
	strb r2, [r1, #0xe]
	strb r2, [r1, #0xf]
	strb r2, [r1, #0x10]
	strh r3, [r1, #0x22]
	strh r3, [r1, #0x1a]
	strh r3, [r1, #0x1c]
	strh r3, [r1, #0x1e]
	strh r3, [r1, #0x20]
	strb r2, [r1, #0x11]
	strh r3, [r1, #0x12]
	strh r3, [r1, #0x14]
	strh r3, [r1, #0x16]
	strh r3, [r1, #0x18]
	mov r2, ip
	ldrb r0, [r2]
	bl CreateObject
	str r0, [r6]
	b _080D775A
_080D7690:
	movs r4, #0
	ldr r1, _080D76A8 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080D76AC @ =gUnk_020229E0
	mov r8, r6
	movs r7, #0x56
	adds r7, r7, r5
	mov ip, r7
	b _080D76C4
	.align 2, 0
_080D76A8: .4byte gUnk_020229D4
_080D76AC: .4byte gUnk_020229E0
_080D76B0:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080D7708
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080D76C4:
	cmp r0, #0
	bne _080D76B0
	b _080D7704
_080D76CA:
	movs r4, #0
	ldr r1, _080D76E4 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080D76E8 @ =gUnk_020229E0
	mov r8, r6
	movs r7, #0x56
	adds r7, r7, r5
	mov ip, r7
	b _080D7700
	.align 2, 0
_080D76E4: .4byte gUnk_020229D4
_080D76E8: .4byte gUnk_020229E0
_080D76EC:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080D7708
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080D7700:
	cmp r0, #0
	bne _080D76EC
_080D7704:
	orrs r2, r3
	str r2, [r1]
_080D7708:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	add r1, r8
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	movs r3, #0
	strh r0, [r1, #6]
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xad
	strb r0, [r1, #0xc]
	strb r4, [r1, #0xe]
	strb r3, [r1, #0xf]
	strb r3, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, ip
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
_080D775A:
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080D7770
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r5, #8]
_080D7770:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D777C
sub_080D777C: @ 0x080D777C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D77B4 @ =sub_080D5AB0
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	movs r0, #0x10
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080D5930
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D77B4: .4byte sub_080D5AB0

	thumb_func_start sub_080D77B8
sub_080D77B8: @ 0x080D77B8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D77D8 @ =sub_080D571C
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r4, #0x52
	strh r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D77D8: .4byte sub_080D571C

	thumb_func_start sub_080D77DC
sub_080D77DC: @ 0x080D77DC
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080D7818
	ldr r2, _080D7820 @ =sub_080D5AB0
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	movs r0, #0x10
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080D5930
_080D7818:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D7820: .4byte sub_080D5AB0

	thumb_func_start sub_080D7824
sub_080D7824: @ 0x080D7824
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D784C @ =sub_080D5F7C
	movs r1, #2
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080D7850
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080D7858
	.align 2, 0
_080D784C: .4byte sub_080D5F7C
_080D7850:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080D7858:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D7872
	movs r0, #1
	b _080D7874
_080D7872:
	movs r0, #2
_080D7874:
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080D787C
sub_080D787C: @ 0x080D787C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D78A4 @ =sub_080D78D0
	movs r1, #6
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080D78A8
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080D78B0
	.align 2, 0
_080D78A4: .4byte sub_080D78D0
_080D78A8:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080D78B0:
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _080D78CC @ =gUnk_083561CC
	adds r0, r4, #0
	bl sub_08088398
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D78CC: .4byte gUnk_083561CC

	thumb_func_start sub_080D78D0
sub_080D78D0: @ 0x080D78D0
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080D78EA
	adds r0, r2, #0
	bl sub_080D60B8
_080D78EA:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D78F0
sub_080D78F0: @ 0x080D78F0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D7910 @ =sub_080D7914
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r4, #0x52
	strh r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D7910: .4byte sub_080D7914

	thumb_func_start sub_080D7914
sub_080D7914: @ 0x080D7914
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080D7928
	adds r0, r2, #0
	bl sub_080D792C
_080D7928:
	pop {r0}
	bx r0

	thumb_func_start sub_080D792C
sub_080D792C: @ 0x080D792C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D7954 @ =sub_080D6D90
	movs r1, #0xc
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D7954: .4byte sub_080D6D90

	thumb_func_start sub_080D7958
sub_080D7958: @ 0x080D7958
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0xb4
	ldr r0, [r1]
	cmp r0, #0
	beq _080D7984
	ldr r0, [r2, #8]
	movs r2, #0x80
	lsls r2, r2, #5
	ands r0, r2
	cmp r0, #0
	beq _080D7976
	movs r0, #0
	str r0, [r1]
_080D7976:
	ldr r0, [r1]
	ldr r0, [r0, #8]
	ands r0, r2
	cmp r0, #0
	beq _080D7984
	movs r0, #0
	str r0, [r1]
_080D7984:
	pop {r0}
	bx r0

	thumb_func_start CreateBombar
CreateBombar: @ 0x080D7988
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _080D79BC @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080D79C0 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080D79C4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080D79CC
	.align 2, 0
_080D79BC: .4byte ObjectMain
_080D79C0: .4byte ObjectDestroy
_080D79C4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080D79CC:
	adds r6, r0, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r2, [r6, #8]
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r2, r0
	ldr r0, [r6, #0xc]
	movs r1, #4
	orrs r0, r1
	movs r3, #1
	orrs r0, r3
	str r0, [r6, #0xc]
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r2, r0
	movs r0, #0x80
	lsls r0, r0, #0xe
	orrs r2, r0
	str r2, [r6, #8]
	ldr r0, [r6, #0x5c]
	subs r1, #0xc
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	movs r1, #0xa0
	orrs r0, r1
	str r0, [r6, #0x5c]
	adds r0, r6, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080D7A1C
	movs r0, #2
	rsbs r0, r0, #0
	ands r2, r0
	b _080D7A1E
_080D7A1C:
	orrs r2, r3
_080D7A1E:
	str r2, [r6, #8]
	movs r2, #0x10
	rsbs r2, r2, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r2, #0
	movs r3, #0x14
	bl sub_0803E2B0
	movs r1, #8
	rsbs r1, r1, #0
	movs r0, #0x12
	str r0, [sp]
	adds r0, r6, #0
	movs r2, #8
	movs r3, #8
	bl sub_0803E308
	adds r0, r6, #0
	bl ObjectInitSprite
	movs r4, #0
	movs r5, #0
	movs r0, #0xd8
	lsls r0, r0, #3
	strh r0, [r6, #0x24]
	adds r0, r6, #0
	bl sub_080D9F54
	adds r0, r6, #0
	adds r0, #0x9e
	strb r4, [r0]
	str r5, [r6, #0x7c]
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_080D7A6C
sub_080D7A6C: @ 0x080D7A6C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r5, r0, #0
	bl sub_0803D368
	adds r6, r0, #0
	adds r7, r5, #0
	adds r7, #0xac
	str r6, [r7]
	ldr r0, [r5, #8]
	movs r1, #4
	mov sl, r1
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r6, #0xc]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	beq _080D7A9E
	b _080D7C2E
_080D7A9E:
	adds r0, r5, #0
	adds r0, #0x60
	adds r2, r6, #0
	adds r2, #0x60
	ldrh r1, [r0]
	mov sb, r0
	ldrh r2, [r2]
	cmp r1, r2
	beq _080D7AB2
	b _080D7C2E
_080D7AB2:
	ldr r1, [r5, #0x40]
	ldr r2, [r5, #0x44]
	movs r3, #0xb0
	adds r3, r3, r5
	mov r8, r3
	ldr r4, [r3]
	movs r3, #0x1a
	ldrsh r0, [r4, r3]
	mov ip, r0
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	adds r0, r6, #0
	mov r3, ip
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080D7AE2
	b _080D7C2E
_080D7AE2:
	ldr r4, _080D7C40 @ =gCurLevelInfo
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	movs r6, #0xcd
	lsls r6, r6, #3
	muls r0, r6, r0
	adds r1, r4, #0
	adds r1, #0xa0
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa4
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r6, r0
	adds r1, r4, #0
	adds r1, #0xa4
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa6
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r6, r0
	adds r1, r4, #0
	adds r1, #0xa8
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r6, r0
	adds r1, r4, #0
	adds r1, #0xac
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xaa
	strh r0, [r1]
	ldr r0, [r5, #8]
	ldr r1, _080D7C44 @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	bl sub_080D9E94
	movs r0, #0x5a
	strh r0, [r5, #4]
	adds r0, r5, #0
	bl sub_08034E14
	adds r1, r0, #0
	cmp r1, #0
	beq _080D7B6A
	movs r0, #0
	strb r0, [r1, #9]
_080D7B6A:
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r3, [r0]
	adds r1, r3, #0
	subs r1, #0x38
	subs r0, #0x2c
	ldrb r0, [r0]
	muls r0, r6, r0
	adds r0, r0, r4
	ldr r2, _080D7C48 @ =0x0000065E
	adds r0, r0, r2
	ldrb r5, [r0]
	lsls r2, r1, #0x10
	asrs r1, r2, #0x10
	cmp r1, #0
	blt _080D7C2E
	ldr r0, _080D7C4C @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080D7C2E
	mov r1, r8
	ldr r0, [r1]
	ldrh r1, [r0, #0x22]
	mov r0, sl
	ands r0, r1
	cmp r0, #0
	bne _080D7C2E
	adds r0, r3, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r6, r2, #0
	cmp r0, #0xf
	bls _080D7BEC
	movs r4, #1
_080D7BB4:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r5, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _080D7BB4
	adds r0, r5, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0
	bl sub_08002A44
_080D7BEC:
	ldr r1, _080D7C4C @ =gUnk_08352D80
	asrs r0, r6, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r5, #0
	bl sub_08002A1C
	ldr r2, _080D7C50 @ =gUnk_02020EE0
	ldr r0, _080D7C54 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, sb
	ldrh r2, [r2]
	cmp r0, r2
	bne _080D7C2E
	ldr r0, _080D7C58 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080D7C2E
	adds r0, r5, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080D7C2E:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D7C40: .4byte gCurLevelInfo
_080D7C44: .4byte 0xFFFFFDFF
_080D7C48: .4byte 0x0000065E
_080D7C4C: .4byte gUnk_08352D80
_080D7C50: .4byte gUnk_02020EE0
_080D7C54: .4byte gUnk_0203AD3C
_080D7C58: .4byte gUnk_0203AD20

	thumb_func_start sub_080D7C5C
sub_080D7C5C: @ 0x080D7C5C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x85
	ldrb r0, [r1]
	cmp r0, #1
	bls _080D7C90
	ldr r2, _080D7C84 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080D7C88 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080D7C8C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D7D08
	b _080D7D14
	.align 2, 0
_080D7C84: .4byte gRngVal
_080D7C88: .4byte 0x00196225
_080D7C8C: .4byte 0x3C6EF35F
_080D7C90:
	adds r0, #1
	strb r0, [r1]
	ldr r5, _080D7CC8 @ =gRngVal
	ldr r0, [r5]
	ldr r3, _080D7CCC @ =0x00196225
	muls r0, r3, r0
	ldr r6, _080D7CD0 @ =0x3C6EF35F
	adds r2, r0, r6
	str r2, [r5]
	lsrs r0, r2, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	beq _080D7CF4
	adds r0, r2, #0
	muls r0, r3, r0
	adds r1, r0, r6
	str r1, [r5]
	lsrs r0, r1, #0x10
	movs r2, #1
	ands r0, r2
	cmp r0, #0
	beq _080D7CD4
	adds r0, r4, #0
	bl sub_080DA00C
	b _080D7D22
	.align 2, 0
_080D7CC8: .4byte gRngVal
_080D7CCC: .4byte 0x00196225
_080D7CD0: .4byte 0x3C6EF35F
_080D7CD4:
	adds r0, r1, #0
	muls r0, r3, r0
	adds r0, r0, r6
	str r0, [r5]
	lsrs r0, r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _080D7CEC
	adds r0, r4, #0
	bl sub_080D9F84
	b _080D7D22
_080D7CEC:
	adds r0, r4, #0
	bl sub_080D9FC8
	b _080D7D22
_080D7CF4:
	adds r0, r2, #0
	muls r0, r3, r0
	ldr r2, _080D7D10 @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r5]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D7D14
_080D7D08:
	adds r0, r4, #0
	bl sub_080DA070
	b _080D7D1A
	.align 2, 0
_080D7D10: .4byte 0x3C6EF35F
_080D7D14:
	adds r0, r4, #0
	bl sub_080D923C
_080D7D1A:
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
_080D7D22:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080D7D28
sub_080D7D28: @ 0x080D7D28
	push {r4, lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r3, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080D7D50
	adds r0, r3, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D7D60
	b _080D7D5C
_080D7D50:
	adds r0, r3, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D7D60
_080D7D5C:
	movs r0, #0
	strh r0, [r1]
_080D7D60:
	adds r0, r2, #0
	adds r0, #0x52
	ldrh r3, [r0]
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r4, r0, #0
	cmp r1, #0
	bge _080D7D7E
	adds r0, r3, #0
	adds r0, #0x20
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D7D8E
	b _080D7D8A
_080D7D7E:
	adds r0, r3, #0
	subs r0, #0x20
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D7D8E
_080D7D8A:
	movs r0, #0
	strh r0, [r4]
_080D7D8E:
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080D7DA2
	adds r0, r2, #0
	bl sub_080D7C5C
	b _080D7DC0
_080D7DA2:
	ldr r3, _080D7DC8 @ =gUnk_08356380
	adds r2, #0x9e
	ldrb r0, [r2]
	lsrs r0, r0, #1
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	ldrh r1, [r4]
	adds r0, r0, r1
	strh r0, [r4]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
_080D7DC0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D7DC8: .4byte gUnk_08356380

	thumb_func_start sub_080D7DCC
sub_080D7DCC: @ 0x080D7DCC
	push {r4, r5, lr}
	mov ip, r0
	ldr r0, [r0, #8]
	movs r1, #4
	orrs r0, r1
	mov r1, ip
	str r0, [r1, #8]
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r5, #0
	strb r0, [r1]
	mov r2, ip
	ldr r3, [r2, #0x44]
	ldr r1, _080D7E18 @ =0xFFFFF800
	ands r3, r1
	mov r0, ip
	adds r0, #0xa2
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	ble _080D7E1C
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r4, r1, #0
	cmp r0, r2
	ble _080D7E6C
	strh r2, [r4]
	b _080D7E6C
	.align 2, 0
_080D7E18: .4byte 0xFFFFF800
_080D7E1C:
	cmp r3, r0
	bge _080D7E40
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D7E3C @ =0xFFFFFEC0
	adds r4, r1, #0
	cmp r0, r2
	bge _080D7E6C
	strh r2, [r4]
	b _080D7E6C
	.align 2, 0
_080D7E3C: .4byte 0xFFFFFEC0
_080D7E40:
	mov r0, ip
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	cmp r1, #0
	bge _080D7E5E
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D7E6C
	b _080D7E6A
_080D7E5E:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D7E6C
_080D7E6A:
	strh r5, [r4]
_080D7E6C:
	mov r5, ip
	ldr r3, [r5, #0x40]
	ldr r2, _080D7E98 @ =0xFFFFF800
	ands r3, r2
	mov r1, ip
	adds r1, #0xa0
	movs r5, #0
	ldrsh r0, [r1, r5]
	lsls r0, r0, #8
	ands r0, r2
	adds r5, r1, #0
	cmp r3, r0
	bge _080D7E9C
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	b _080D7ED4
	.align 2, 0
_080D7E98: .4byte 0xFFFFF800
_080D7E9C:
	cmp r3, r0
	ble _080D7EF8
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
	ands r0, r1
	cmp r0, #0
	beq _080D7ED4
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D7ED0 @ =0xFFFFFEC0
	cmp r0, r2
	blt _080D7ECC
	movs r2, #0xa0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080D7F24
_080D7ECC:
	strh r2, [r1]
	b _080D7F24
	.align 2, 0
_080D7ED0: .4byte 0xFFFFFEC0
_080D7ED4:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080D7ECC
	ldr r2, _080D7EF4 @ =0xFFFFFEC0
	cmp r0, r2
	bge _080D7F24
	b _080D7ECC
	.align 2, 0
_080D7EF4: .4byte 0xFFFFFEC0
_080D7EF8:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080D7F14
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D7F24
	b _080D7F20
_080D7F14:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D7F24
_080D7F20:
	movs r0, #0
	strh r0, [r1]
_080D7F24:
	mov r0, ip
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080D7F40
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	b _080D7F4A
_080D7F40:
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
_080D7F4A:
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0x1f
	ble _080D7F5A
	mov r1, ip
	adds r1, #0x83
	movs r0, #1
	strb r0, [r1]
_080D7F5A:
	movs r2, #0
	ldrsh r1, [r4, r2]
	movs r0, #0x20
	rsbs r0, r0, #0
	cmp r1, r0
	bgt _080D7F6E
	mov r1, ip
	adds r1, #0x83
	movs r0, #2
	strb r0, [r1]
_080D7F6E:
	ldrh r0, [r4]
	adds r0, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x20
	bhi _080D7F82
	mov r1, ip
	adds r1, #0x83
	movs r0, #0
	strb r0, [r1]
_080D7F82:
	movs r3, #0
	ldrsh r1, [r5, r3]
	mov r5, ip
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	subs r2, r1, r0
	cmp r2, #0
	blt _080D7F98
	cmp r2, #0xf
	ble _080D7F9E
	b _080D7FC6
_080D7F98:
	subs r0, r0, r1
	cmp r0, #0xf
	bgt _080D7FC6
_080D7F9E:
	mov r0, ip
	adds r0, #0xa2
	movs r1, #0
	ldrsh r2, [r0, r1]
	mov r3, ip
	ldr r0, [r3, #0x44]
	asrs r0, r0, #8
	subs r1, r2, r0
	cmp r1, #0
	blt _080D7FB8
	cmp r1, #0xf
	ble _080D7FBE
	b _080D7FC6
_080D7FB8:
	subs r0, r0, r2
	cmp r0, #0xf
	bgt _080D7FC6
_080D7FBE:
	mov r0, ip
	bl sub_080D7C5C
	b _080D7FE6
_080D7FC6:
	ldr r2, _080D7FEC @ =gUnk_08356380
	mov r5, ip
	ldrh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	ldrh r1, [r4]
	adds r0, r0, r1
	strh r0, [r4]
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
_080D7FE6:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D7FEC: .4byte gUnk_08356380

	thumb_func_start sub_080D7FF0
sub_080D7FF0: @ 0x080D7FF0
	push {r4, r5, r6, lr}
	mov ip, r0
	ldr r0, [r0, #8]
	movs r1, #4
	orrs r0, r1
	mov r1, ip
	str r0, [r1, #8]
	mov r0, ip
	adds r0, #0x87
	ldrb r5, [r0]
	cmp r5, #0
	bne _080D800A
	b _080D815C
_080D800A:
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r5, #0
	strb r0, [r1]
	mov r2, ip
	ldr r3, [r2, #0x44]
	ldr r2, _080D8048 @ =0xFFFFF800
	ands r3, r2
	adds r1, #4
	movs r4, #0
	ldrsh r0, [r1, r4]
	lsls r0, r0, #8
	ands r0, r2
	adds r6, r1, #0
	cmp r3, r0
	ble _080D804C
	subs r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	adds r4, r1, #0
	cmp r0, r2
	ble _080D809C
	strh r2, [r4]
	b _080D809C
	.align 2, 0
_080D8048: .4byte 0xFFFFF800
_080D804C:
	cmp r3, r0
	bge _080D8070
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D806C @ =0xFFFFFE40
	adds r4, r1, #0
	cmp r0, r2
	bge _080D809C
	strh r2, [r4]
	b _080D809C
	.align 2, 0
_080D806C: .4byte 0xFFFFFE40
_080D8070:
	mov r0, ip
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	cmp r1, #0
	bge _080D808E
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D809C
	b _080D809A
_080D808E:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D809C
_080D809A:
	strh r5, [r4]
_080D809C:
	mov r5, ip
	ldr r3, [r5, #0x40]
	ldr r2, _080D80E0 @ =0xFFFFF800
	ands r3, r2
	mov r1, ip
	adds r1, #0xa0
	movs r5, #0
	ldrsh r0, [r1, r5]
	lsls r0, r0, #8
	ands r0, r2
	adds r5, r1, #0
	cmp r3, r0
	bge _080D80E8
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080D80DC
	b _080D824C
_080D80DC:
	ldr r2, _080D80E4 @ =0xFFFFFE40
	b _080D826C
	.align 2, 0
_080D80E0: .4byte 0xFFFFF800
_080D80E4: .4byte 0xFFFFFE40
_080D80E8:
	cmp r3, r0
	ble _080D813C
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
	ands r0, r1
	cmp r0, #0
	beq _080D811C
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D8118 @ =0xFFFFFE40
	cmp r0, r2
	bge _080D8112
	b _080D824C
_080D8112:
	movs r2, #0xe0
	lsls r2, r2, #1
	b _080D8248
	.align 2, 0
_080D8118: .4byte 0xFFFFFE40
_080D811C:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080D8134
	b _080D824C
_080D8134:
	ldr r2, _080D8138 @ =0xFFFFFE40
	b _080D826C
	.align 2, 0
_080D8138: .4byte 0xFFFFFE40
_080D813C:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	blt _080D814C
	b _080D8294
_080D814C:
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080D815A
	b _080D82A4
_080D815A:
	b _080D82A0
_080D815C:
	mov r1, ip
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	mov r4, ip
	ldr r3, [r4, #0x44]
	ldr r2, _080D8198 @ =0xFFFFF800
	ands r3, r2
	adds r1, #4
	movs r4, #0
	ldrsh r0, [r1, r4]
	lsls r0, r0, #8
	ands r0, r2
	adds r6, r1, #0
	cmp r3, r0
	ble _080D819C
	subs r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r4, r1, #0
	cmp r0, r2
	ble _080D81EC
	strh r2, [r4]
	b _080D81EC
	.align 2, 0
_080D8198: .4byte 0xFFFFF800
_080D819C:
	cmp r3, r0
	bge _080D81C0
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D81BC @ =0xFFFFFEC0
	adds r4, r1, #0
	cmp r0, r2
	bge _080D81EC
	strh r2, [r4]
	b _080D81EC
	.align 2, 0
_080D81BC: .4byte 0xFFFFFEC0
_080D81C0:
	mov r0, ip
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	cmp r1, #0
	bge _080D81DE
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D81EC
	b _080D81EA
_080D81DE:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D81EC
_080D81EA:
	strh r5, [r4]
_080D81EC:
	mov r5, ip
	ldr r3, [r5, #0x40]
	ldr r2, _080D8218 @ =0xFFFFF800
	ands r3, r2
	mov r1, ip
	adds r1, #0xa0
	movs r5, #0
	ldrsh r0, [r1, r5]
	lsls r0, r0, #8
	ands r0, r2
	adds r5, r1, #0
	cmp r3, r0
	bge _080D821C
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	b _080D8254
	.align 2, 0
_080D8218: .4byte 0xFFFFF800
_080D821C:
	cmp r3, r0
	ble _080D8278
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
	ands r0, r1
	cmp r0, #0
	beq _080D8254
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D8250 @ =0xFFFFFEC0
	cmp r0, r2
	blt _080D824C
	movs r2, #0xa0
	lsls r2, r2, #1
_080D8248:
	cmp r0, r2
	ble _080D82A4
_080D824C:
	strh r2, [r1]
	b _080D82A4
	.align 2, 0
_080D8250: .4byte 0xFFFFFEC0
_080D8254:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080D824C
	ldr r2, _080D8274 @ =0xFFFFFEC0
_080D826C:
	cmp r0, r2
	bge _080D82A4
	b _080D824C
	.align 2, 0
_080D8274: .4byte 0xFFFFFEC0
_080D8278:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080D8294
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D82A4
	b _080D82A0
_080D8294:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D82A4
_080D82A0:
	movs r0, #0
	strh r0, [r1]
_080D82A4:
	mov r0, ip
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080D82C0
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	b _080D82CA
_080D82C0:
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
_080D82CA:
	movs r0, #0
	ldrsh r1, [r5, r0]
	mov r2, ip
	ldr r0, [r2, #0x40]
	asrs r0, r0, #8
	subs r2, r1, r0
	cmp r2, #0
	blt _080D82E0
	cmp r2, #9
	ble _080D82E6
	b _080D830A
_080D82E0:
	subs r0, r0, r1
	cmp r0, #9
	bgt _080D830A
_080D82E6:
	movs r3, #0
	ldrsh r1, [r6, r3]
	mov r5, ip
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	subs r2, r1, r0
	cmp r2, #0
	blt _080D82FC
	cmp r2, #9
	ble _080D8302
	b _080D830A
_080D82FC:
	subs r0, r0, r1
	cmp r0, #9
	bgt _080D830A
_080D8302:
	mov r0, ip
	bl sub_080DA050
	b _080D832C
_080D830A:
	ldr r2, _080D8334 @ =gUnk_08356380
	mov r1, ip
	ldrh r0, [r1, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	ldrh r2, [r4]
	adds r0, r0, r2
	strh r0, [r4]
	mov r3, ip
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
_080D832C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080D8334: .4byte gUnk_08356380

	thumb_func_start sub_080D8338
sub_080D8338: @ 0x080D8338
	push {r4, r5, lr}
	mov ip, r0
	movs r1, #4
	ldrsh r0, [r0, r1]
	cmp r0, #1
	bgt _080D834E
	mov r2, ip
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
_080D834E:
	mov r1, ip
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r5, #0
	strb r0, [r1]
	mov r0, ip
	ldr r3, [r0, #0x44]
	ldr r1, _080D838C @ =0xFFFFF800
	ands r3, r1
	adds r0, #0xa2
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r2, r0, #8
	ands r2, r1
	cmp r3, r2
	ble _080D8390
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r4, r1, #0
	cmp r0, r2
	ble _080D83E0
	strh r2, [r4]
	b _080D83E0
	.align 2, 0
_080D838C: .4byte 0xFFFFF800
_080D8390:
	cmp r3, r2
	bge _080D83B4
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D83B0 @ =0xFFFFFEC0
	adds r4, r1, #0
	cmp r0, r2
	bge _080D83E0
	strh r2, [r4]
	b _080D83E0
	.align 2, 0
_080D83B0: .4byte 0xFFFFFEC0
_080D83B4:
	mov r0, ip
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	cmp r1, #0
	bge _080D83D2
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D83E0
	b _080D83DE
_080D83D2:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D83E0
_080D83DE:
	strh r5, [r4]
_080D83E0:
	mov r0, ip
	ldr r3, [r0, #0x40]
	ldr r0, _080D8408 @ =0xFFFFF800
	ands r3, r0
	mov r1, ip
	adds r1, #0xa0
	movs r2, #0
	ldrsh r1, [r1, r2]
	lsls r2, r1, #8
	ands r2, r0
	cmp r3, r2
	bge _080D840C
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r3, #8]
	b _080D8448
	.align 2, 0
_080D8408: .4byte 0xFFFFF800
_080D840C:
	cmp r3, r2
	ble _080D846C
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #1
	orrs r0, r1
	mov r2, ip
	str r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _080D8448
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D8444 @ =0xFFFFFEC0
	cmp r0, r2
	blt _080D843E
	movs r2, #0xa0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080D8498
_080D843E:
	strh r2, [r1]
	b _080D8498
	.align 2, 0
_080D8444: .4byte 0xFFFFFEC0
_080D8448:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080D843E
	ldr r2, _080D8468 @ =0xFFFFFEC0
	cmp r0, r2
	bge _080D8498
	b _080D843E
	.align 2, 0
_080D8468: .4byte 0xFFFFFEC0
_080D846C:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080D8488
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D8498
	b _080D8494
_080D8488:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D8498
_080D8494:
	movs r0, #0
	strh r0, [r1]
_080D8498:
	mov r0, ip
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080D84B4
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	b _080D84BE
_080D84B4:
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
_080D84BE:
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080D84E2
	mov r2, ip
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	ble _080D84E2
	mov r0, ip
	bl sub_080D850C
	b _080D8502
_080D84E2:
	ldr r3, _080D8508 @ =gUnk_08356380
	mov r2, ip
	adds r2, #0x9f
	ldrb r0, [r2]
	lsrs r0, r0, #1
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	ldrh r3, [r4]
	adds r0, r0, r3
	strh r0, [r4]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
_080D8502:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D8508: .4byte gUnk_08356380

	thumb_func_start sub_080D850C
sub_080D850C: @ 0x080D850C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D85A0 @ =sub_080D85BC
	movs r1, #4
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _080D85A4 @ =gUnk_02020EE0
	ldr r0, _080D85A8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D8598
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D8558
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080D8598
_080D8558:
	ldr r1, _080D85AC @ =gUnk_08D60FA4
	ldr r4, _080D85B0 @ =gSongTable
	ldr r2, _080D85B4 @ =0x00000BD4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080D857E
	movs r1, #0xbd
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080D8598
_080D857E:
	cmp r3, #0
	beq _080D8590
	ldr r0, _080D85B8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D8598
_080D8590:
	movs r0, #0xbd
	lsls r0, r0, #1
	bl m4aSongNumStart
_080D8598:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D85A0: .4byte sub_080D85BC
_080D85A4: .4byte gUnk_02020EE0
_080D85A8: .4byte gUnk_0203AD3C
_080D85AC: .4byte gUnk_08D60FA4
_080D85B0: .4byte gSongTable
_080D85B4: .4byte 0x00000BD4
_080D85B8: .4byte gUnk_0203AD10

	thumb_func_start sub_080D85BC
sub_080D85BC: @ 0x080D85BC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D85DA
	b _080D8790
_080D85DA:
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r1, [r0]
	adds r7, r0, #0
	adds r3, r4, #0
	adds r3, #0x9f
	ldr r6, _080D86AC @ =gUnk_083562D8
	adds r5, r4, #0
	adds r5, #0x50
	movs r0, #0x52
	adds r0, r0, r4
	mov ip, r0
	cmp r1, #0
	bne _080D86DC
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _080D8610
	subs r0, r1, #1
	strb r0, [r3]
_080D8610:
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	strb r0, [r7]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r1, [r0, #9]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _080D8636
	adds r0, r4, #0
	adds r0, #0x83
	strb r1, [r0]
_080D8636:
	ldrb r0, [r3]
	cmp r0, #0
	beq _080D86B0
	adds r2, r0, #0
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	mov ip, r0
	ldrh r2, [r1]
	mov sb, r2
	movs r2, #0
	ldrsh r0, [r1, r2]
	mov r8, r0
	mov r0, ip
	movs r1, #0
	ldrsh r0, [r0, r1]
	mov ip, r0
	cmp r8, ip
	beq _080D867C
	mov r2, sb
	strh r2, [r5]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D867C
	mov r1, sb
	rsbs r0, r1, #0
	strh r0, [r5]
_080D867C:
	ldrb r2, [r3]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r2, [r1, #2]
	mov r8, r2
	movs r2, #2
	ldrsh r1, [r1, r2]
	movs r2, #2
	ldrsh r0, [r0, r2]
	movs r2, #0x52
	adds r2, r2, r4
	mov ip, r2
	cmp r1, r0
	beq _080D86DC
	mov r0, r8
	strh r0, [r2]
	b _080D86DC
	.align 2, 0
_080D86AC: .4byte gUnk_083562D8
_080D86B0:
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r0, [r0, #2]
	mov r1, ip
	strh r0, [r1]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r2, [r0]
	strh r2, [r5]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D86FA
	rsbs r0, r2, #0
	strh r0, [r5]
_080D86DC:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D86FA
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r1, [r5]
	ldrh r0, [r0, #4]
	subs r1, r1, r0
	strh r1, [r5]
	b _080D870C
_080D86FA:
	ldrb r0, [r3]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r6
	ldrh r0, [r1, #4]
	ldrh r2, [r5]
	adds r0, r0, r2
	strh r0, [r5]
_080D870C:
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r0, [r0, #6]
	mov r1, ip
	ldrh r1, [r1]
	adds r0, r0, r1
	mov r2, ip
	strh r0, [r2]
	ldrb r0, [r7]
	subs r2, r0, #1
	strb r2, [r7]
	ldrb r1, [r3]
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	cmp r0, #0
	beq _080D8740
	b _080D8944
_080D8740:
	lsls r0, r2, #0x18
	cmp r0, #0
	beq _080D8748
	b _080D8944
_080D8748:
	ldr r2, _080D8784 @ =sub_080D7D28
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D877E
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080D8788 @ =gUnk_08351530
	ldr r0, _080D878C @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x38
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	ble _080D877E
	b _080D8940
_080D877E:
	movs r0, #0x18
	b _080D8942
	.align 2, 0
_080D8784: .4byte sub_080D7D28
_080D8788: .4byte gUnk_08351530
_080D878C: .4byte gUnk_0203AD30
_080D8790:
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r1, [r0]
	adds r7, r0, #0
	adds r3, r4, #0
	adds r3, #0x9f
	adds r5, r4, #0
	adds r5, #0x50
	movs r0, #0x52
	adds r0, r0, r4
	mov ip, r0
	ldr r6, _080D8864 @ =gUnk_08356278
	cmp r1, #0
	bne _080D8894
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _080D87C6
	subs r0, r1, #1
	strb r0, [r3]
_080D87C6:
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	strb r0, [r7]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r1, [r0, #9]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _080D87EC
	adds r0, r4, #0
	adds r0, #0x83
	strb r1, [r0]
_080D87EC:
	ldrb r0, [r3]
	cmp r0, #0
	beq _080D8868
	adds r2, r0, #0
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	mov r8, r0
	ldrh r2, [r1]
	mov sb, r2
	movs r2, #0
	ldrsh r0, [r1, r2]
	mov ip, r0
	mov r0, r8
	movs r1, #0
	ldrsh r0, [r0, r1]
	mov r8, r0
	cmp ip, r8
	beq _080D8832
	mov r2, sb
	strh r2, [r5]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D8832
	mov r1, sb
	rsbs r0, r1, #0
	strh r0, [r5]
_080D8832:
	ldrb r2, [r3]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r2, [r1, #2]
	mov r8, r2
	movs r2, #2
	ldrsh r1, [r1, r2]
	movs r2, #2
	ldrsh r0, [r0, r2]
	movs r2, #0x52
	adds r2, r2, r4
	mov ip, r2
	cmp r1, r0
	beq _080D8894
	mov r0, r8
	strh r0, [r2]
	b _080D8894
	.align 2, 0
_080D8864: .4byte gUnk_08356278
_080D8868:
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r0, [r0, #2]
	mov r1, ip
	strh r0, [r1]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r2, [r0]
	strh r2, [r5]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D88B2
	rsbs r0, r2, #0
	strh r0, [r5]
_080D8894:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D88B2
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r1, [r5]
	ldrh r0, [r0, #4]
	subs r1, r1, r0
	strh r1, [r5]
	b _080D88C4
_080D88B2:
	ldrb r0, [r3]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r6
	ldrh r0, [r1, #4]
	ldrh r2, [r5]
	adds r0, r0, r2
	strh r0, [r5]
_080D88C4:
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r0, [r0, #6]
	mov r1, ip
	ldrh r1, [r1]
	adds r0, r0, r1
	mov r2, ip
	strh r0, [r2]
	ldrb r0, [r7]
	subs r2, r0, #1
	strb r2, [r7]
	ldrb r1, [r3]
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _080D8944
	lsls r0, r2, #0x18
	cmp r0, #0
	bne _080D8944
	ldr r2, _080D8934 @ =sub_080D7D28
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D8930
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080D8938 @ =gUnk_08351530
	ldr r0, _080D893C @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x38
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080D8940
_080D8930:
	movs r0, #0x18
	b _080D8942
	.align 2, 0
_080D8934: .4byte sub_080D7D28
_080D8938: .4byte gUnk_08351530
_080D893C: .4byte gUnk_0203AD30
_080D8940:
	movs r0, #0x30
_080D8942:
	strh r0, [r4, #4]
_080D8944:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080D8950
sub_080D8950: @ 0x080D8950
	push {r4, r5, r6, lr}
	mov ip, r0
	ldr r0, [r0, #8]
	movs r1, #4
	orrs r0, r1
	mov r1, ip
	str r0, [r1, #8]
	mov r0, ip
	adds r0, #0x87
	ldrb r5, [r0]
	cmp r5, #0
	bne _080D896A
	b _080D8ABC
_080D896A:
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r5, #0
	strb r0, [r1]
	mov r2, ip
	ldr r3, [r2, #0x44]
	ldr r2, _080D89A8 @ =0xFFFFF800
	ands r3, r2
	adds r1, #4
	movs r4, #0
	ldrsh r0, [r1, r4]
	lsls r0, r0, #8
	ands r0, r2
	adds r6, r1, #0
	cmp r3, r0
	ble _080D89AC
	subs r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	adds r4, r1, #0
	cmp r0, r2
	ble _080D89FC
	strh r2, [r4]
	b _080D89FC
	.align 2, 0
_080D89A8: .4byte 0xFFFFF800
_080D89AC:
	cmp r3, r0
	bge _080D89D0
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D89CC @ =0xFFFFFE40
	adds r4, r1, #0
	cmp r0, r2
	bge _080D89FC
	strh r2, [r4]
	b _080D89FC
	.align 2, 0
_080D89CC: .4byte 0xFFFFFE40
_080D89D0:
	mov r0, ip
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	cmp r1, #0
	bge _080D89EE
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D89FC
	b _080D89FA
_080D89EE:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D89FC
_080D89FA:
	strh r5, [r4]
_080D89FC:
	mov r5, ip
	ldr r3, [r5, #0x40]
	ldr r2, _080D8A40 @ =0xFFFFF800
	ands r3, r2
	mov r1, ip
	adds r1, #0xa0
	movs r5, #0
	ldrsh r0, [r1, r5]
	lsls r0, r0, #8
	ands r0, r2
	adds r5, r1, #0
	cmp r3, r0
	bge _080D8A48
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080D8A3C
	b _080D8BAC
_080D8A3C:
	ldr r2, _080D8A44 @ =0xFFFFFE40
	b _080D8BCC
	.align 2, 0
_080D8A40: .4byte 0xFFFFF800
_080D8A44: .4byte 0xFFFFFE40
_080D8A48:
	cmp r3, r0
	ble _080D8A9C
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
	ands r0, r1
	cmp r0, #0
	beq _080D8A7C
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D8A78 @ =0xFFFFFE40
	cmp r0, r2
	bge _080D8A72
	b _080D8BAC
_080D8A72:
	movs r2, #0xe0
	lsls r2, r2, #1
	b _080D8BA8
	.align 2, 0
_080D8A78: .4byte 0xFFFFFE40
_080D8A7C:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080D8A94
	b _080D8BAC
_080D8A94:
	ldr r2, _080D8A98 @ =0xFFFFFE40
	b _080D8BCC
	.align 2, 0
_080D8A98: .4byte 0xFFFFFE40
_080D8A9C:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	blt _080D8AAC
	b _080D8BF4
_080D8AAC:
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080D8ABA
	b _080D8C04
_080D8ABA:
	b _080D8C00
_080D8ABC:
	mov r1, ip
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	mov r4, ip
	ldr r3, [r4, #0x44]
	ldr r2, _080D8AF8 @ =0xFFFFF800
	ands r3, r2
	adds r1, #4
	movs r4, #0
	ldrsh r0, [r1, r4]
	lsls r0, r0, #8
	ands r0, r2
	adds r6, r1, #0
	cmp r3, r0
	ble _080D8AFC
	subs r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r4, r1, #0
	cmp r0, r2
	ble _080D8B4C
	strh r2, [r4]
	b _080D8B4C
	.align 2, 0
_080D8AF8: .4byte 0xFFFFF800
_080D8AFC:
	cmp r3, r0
	bge _080D8B20
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D8B1C @ =0xFFFFFEC0
	adds r4, r1, #0
	cmp r0, r2
	bge _080D8B4C
	strh r2, [r4]
	b _080D8B4C
	.align 2, 0
_080D8B1C: .4byte 0xFFFFFEC0
_080D8B20:
	mov r0, ip
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	cmp r1, #0
	bge _080D8B3E
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D8B4C
	b _080D8B4A
_080D8B3E:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D8B4C
_080D8B4A:
	strh r5, [r4]
_080D8B4C:
	mov r5, ip
	ldr r3, [r5, #0x40]
	ldr r2, _080D8B78 @ =0xFFFFF800
	ands r3, r2
	mov r1, ip
	adds r1, #0xa0
	movs r5, #0
	ldrsh r0, [r1, r5]
	lsls r0, r0, #8
	ands r0, r2
	adds r5, r1, #0
	cmp r3, r0
	bge _080D8B7C
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	b _080D8BB4
	.align 2, 0
_080D8B78: .4byte 0xFFFFF800
_080D8B7C:
	cmp r3, r0
	ble _080D8BD8
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
	ands r0, r1
	cmp r0, #0
	beq _080D8BB4
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D8BB0 @ =0xFFFFFEC0
	cmp r0, r2
	blt _080D8BAC
	movs r2, #0xa0
	lsls r2, r2, #1
_080D8BA8:
	cmp r0, r2
	ble _080D8C04
_080D8BAC:
	strh r2, [r1]
	b _080D8C04
	.align 2, 0
_080D8BB0: .4byte 0xFFFFFEC0
_080D8BB4:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080D8BAC
	ldr r2, _080D8BD4 @ =0xFFFFFEC0
_080D8BCC:
	cmp r0, r2
	bge _080D8C04
	b _080D8BAC
	.align 2, 0
_080D8BD4: .4byte 0xFFFFFEC0
_080D8BD8:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080D8BF4
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D8C04
	b _080D8C00
_080D8BF4:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D8C04
_080D8C00:
	movs r0, #0
	strh r0, [r1]
_080D8C04:
	mov r0, ip
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080D8C20
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	b _080D8C2A
_080D8C20:
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
_080D8C2A:
	movs r0, #0
	ldrsh r1, [r5, r0]
	mov r2, ip
	ldr r0, [r2, #0x40]
	asrs r0, r0, #8
	subs r2, r1, r0
	cmp r2, #0
	blt _080D8C40
	cmp r2, #0xf
	ble _080D8C46
	b _080D8C6A
_080D8C40:
	subs r0, r0, r1
	cmp r0, #0xf
	bgt _080D8C6A
_080D8C46:
	movs r3, #0
	ldrsh r1, [r6, r3]
	mov r5, ip
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	subs r2, r1, r0
	cmp r2, #0
	blt _080D8C5C
	cmp r2, #0xf
	ble _080D8C62
	b _080D8C6A
_080D8C5C:
	subs r0, r0, r1
	cmp r0, #0xf
	bgt _080D8C6A
_080D8C62:
	mov r0, ip
	bl sub_080DA09C
	b _080D8C8C
_080D8C6A:
	ldr r2, _080D8C94 @ =gUnk_08356380
	mov r1, ip
	ldrh r0, [r1, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	ldrh r2, [r4]
	adds r0, r0, r2
	strh r0, [r4]
	mov r3, ip
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
_080D8C8C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080D8C94: .4byte gUnk_08356380

	thumb_func_start sub_080D8C98
sub_080D8C98: @ 0x080D8C98
	push {r4, r5, lr}
	mov ip, r0
	movs r1, #4
	ldrsh r0, [r0, r1]
	cmp r0, #2
	bgt _080D8CAE
	mov r2, ip
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
_080D8CAE:
	mov r1, ip
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r5, #0
	strb r0, [r1]
	mov r0, ip
	ldr r3, [r0, #0x44]
	ldr r1, _080D8CEC @ =0xFFFFF800
	ands r3, r1
	adds r0, #0xa2
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r2, r0, #8
	ands r2, r1
	cmp r3, r2
	ble _080D8CF0
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r4, r1, #0
	cmp r0, r2
	ble _080D8D40
	strh r2, [r4]
	b _080D8D40
	.align 2, 0
_080D8CEC: .4byte 0xFFFFF800
_080D8CF0:
	cmp r3, r2
	bge _080D8D14
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D8D10 @ =0xFFFFFEC0
	adds r4, r1, #0
	cmp r0, r2
	bge _080D8D40
	strh r2, [r4]
	b _080D8D40
	.align 2, 0
_080D8D10: .4byte 0xFFFFFEC0
_080D8D14:
	mov r0, ip
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	cmp r1, #0
	bge _080D8D32
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D8D40
	b _080D8D3E
_080D8D32:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D8D40
_080D8D3E:
	strh r5, [r4]
_080D8D40:
	mov r0, ip
	ldr r3, [r0, #0x40]
	ldr r0, _080D8D68 @ =0xFFFFF800
	ands r3, r0
	mov r1, ip
	adds r1, #0xa0
	movs r2, #0
	ldrsh r1, [r1, r2]
	lsls r2, r1, #8
	ands r2, r0
	cmp r3, r2
	bge _080D8D6C
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r3, #8]
	b _080D8DA8
	.align 2, 0
_080D8D68: .4byte 0xFFFFF800
_080D8D6C:
	cmp r3, r2
	ble _080D8DCC
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #1
	orrs r0, r1
	mov r2, ip
	str r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _080D8DA8
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D8DA4 @ =0xFFFFFEC0
	cmp r0, r2
	blt _080D8D9E
	movs r2, #0xa0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080D8DF8
_080D8D9E:
	strh r2, [r1]
	b _080D8DF8
	.align 2, 0
_080D8DA4: .4byte 0xFFFFFEC0
_080D8DA8:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080D8D9E
	ldr r2, _080D8DC8 @ =0xFFFFFEC0
	cmp r0, r2
	bge _080D8DF8
	b _080D8D9E
	.align 2, 0
_080D8DC8: .4byte 0xFFFFFEC0
_080D8DCC:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080D8DE8
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D8DF8
	b _080D8DF4
_080D8DE8:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D8DF8
_080D8DF4:
	movs r0, #0
	strh r0, [r1]
_080D8DF8:
	mov r0, ip
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080D8E14
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	b _080D8E1E
_080D8E14:
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
_080D8E1E:
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080D8E42
	mov r2, ip
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #3
	ble _080D8E42
	mov r0, ip
	bl sub_080D8E6C
	b _080D8E62
_080D8E42:
	ldr r3, _080D8E68 @ =gUnk_08356380
	mov r2, ip
	adds r2, #0x9f
	ldrb r0, [r2]
	lsrs r0, r0, #1
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	ldrh r3, [r4]
	adds r0, r0, r3
	strh r0, [r4]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
_080D8E62:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080D8E68: .4byte gUnk_08356380

	thumb_func_start sub_080D8E6C
sub_080D8E6C: @ 0x080D8E6C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D8E8C @ =sub_080D8F34
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D8E90
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xa0
	lsls r0, r0, #2
	b _080D8E98
	.align 2, 0
_080D8E8C: .4byte sub_080D8F34
_080D8E90:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xc0
	lsls r0, r0, #1
_080D8E98:
	strh r0, [r1]
	adds r3, r1, #0
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	ldr r2, _080D8EE4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080D8EE8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080D8EEC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	movs r1, #1
	ands r2, r1
	movs r0, #0x9e
	adds r0, r0, r4
	mov ip, r0
	strb r2, [r0]
	ldr r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080D8EFC
	ldrh r0, [r3]
	rsbs r0, r0, #0
	strh r0, [r3]
	mov r1, ip
	ldrb r0, [r1]
	cmp r0, #0
	beq _080D8EF0
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	subs r0, #0x24
	b _080D8F16
	.align 2, 0
_080D8EE4: .4byte gRngVal
_080D8EE8: .4byte 0x00196225
_080D8EEC: .4byte 0x3C6EF35F
_080D8EF0:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	subs r0, #0x30
	b _080D8F16
_080D8EFC:
	cmp r2, #0
	beq _080D8F0C
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	adds r0, #0x24
	b _080D8F16
_080D8F0C:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	adds r0, #0x30
_080D8F16:
	adds r1, r4, #0
	adds r1, #0xa0
	strh r0, [r1]
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080D8F34
sub_080D8F34: @ 0x080D8F34
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D8FB8
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r1, [r0]
	adds r2, r0, #0
	cmp r1, #2
	bls _080D8F5E
	adds r0, #0x19
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D8F6C
_080D8F5E:
	cmp r1, #3
	bls _080D8FB8
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D8FB8
_080D8F6C:
	movs r0, #0
	strb r0, [r2]
	ldr r2, _080D8FA8 @ =sub_080D7D28
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D8FA4
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080D8FAC @ =gUnk_08351530
	ldr r0, _080D8FB0 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x38
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080D8FB4
_080D8FA4:
	movs r0, #0x18
	b _080D9230
	.align 2, 0
_080D8FA8: .4byte sub_080D7D28
_080D8FAC: .4byte gUnk_08351530
_080D8FB0: .4byte gUnk_0203AD30
_080D8FB4:
	movs r0, #0x30
	b _080D9230
_080D8FB8:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080D90B4
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0xa0
	movs r0, #0
	ldrsh r2, [r1, r0]
	ldr r0, [r4, #0x40]
	asrs r0, r0, #8
	adds r7, r4, #0
	adds r7, #0x83
	adds r5, r1, #0
	cmp r2, r0
	ble _080D8FE6
	b _080D91A0
_080D8FE6:
	subs r1, #0x1b
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_080D95A4
	ldr r1, _080D906C @ =gUnk_02020EE0
	ldr r0, _080D9070 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D905C
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D9020
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080D905C
_080D9020:
	ldr r1, _080D9074 @ =gUnk_08D60FA4
	ldr r6, _080D9078 @ =gSongTable
	ldr r2, _080D907C @ =0x00000CDC
	adds r0, r6, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080D9044
	ldr r1, _080D9080 @ =0x00000CD8
	adds r0, r6, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080D905C
_080D9044:
	cmp r3, #0
	beq _080D9056
	ldr r0, _080D9084 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D905C
_080D9056:
	ldr r0, _080D9088 @ =0x0000019B
	bl m4aSongNumStart
_080D905C:
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D908C
	ldrh r0, [r5]
	adds r0, #0x24
	b _080D9090
	.align 2, 0
_080D906C: .4byte gUnk_02020EE0
_080D9070: .4byte gUnk_0203AD3C
_080D9074: .4byte gUnk_08D60FA4
_080D9078: .4byte gSongTable
_080D907C: .4byte 0x00000CDC
_080D9080: .4byte 0x00000CD8
_080D9084: .4byte gUnk_0203AD10
_080D9088: .4byte 0x0000019B
_080D908C:
	ldrh r0, [r5]
	adds r0, #0x30
_080D9090:
	strh r0, [r5]
	adds r2, r4, #0
	adds r2, #0x83
	movs r0, #7
	strb r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	strh r0, [r1]
	adds r7, r2, #0
	b _080D91A0
_080D90B4:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0
	bne _080D91A0
	adds r0, #0x1d
	movs r3, #0
	ldrsh r2, [r0, r3]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #8
	adds r5, r0, #0
	cmp r2, r1
	blt _080D91A0
	adds r1, r4, #0
	adds r1, #0x85
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _080D9160 @ =gUnk_02020EE0
	ldr r0, _080D9164 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D914A
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D910E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080D914A
_080D910E:
	ldr r1, _080D9168 @ =gUnk_08D60FA4
	ldr r6, _080D916C @ =gSongTable
	ldr r2, _080D9170 @ =0x00000CDC
	adds r0, r6, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080D9132
	ldr r1, _080D9174 @ =0x00000CD8
	adds r0, r6, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080D914A
_080D9132:
	cmp r3, #0
	beq _080D9144
	ldr r0, _080D9178 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D914A
_080D9144:
	ldr r0, _080D917C @ =0x0000019B
	bl m4aSongNumStart
_080D914A:
	adds r0, r4, #0
	bl sub_080D95A4
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D9180
	ldrh r0, [r5]
	subs r0, #0x24
	b _080D9184
	.align 2, 0
_080D9160: .4byte gUnk_02020EE0
_080D9164: .4byte gUnk_0203AD3C
_080D9168: .4byte gUnk_08D60FA4
_080D916C: .4byte gSongTable
_080D9170: .4byte 0x00000CDC
_080D9174: .4byte 0x00000CD8
_080D9178: .4byte gUnk_0203AD10
_080D917C: .4byte 0x0000019B
_080D9180:
	ldrh r0, [r5]
	subs r0, #0x30
_080D9184:
	strh r0, [r5]
	movs r0, #7
	strb r0, [r7]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	strh r0, [r1]
_080D91A0:
	ldrb r0, [r7]
	cmp r0, #7
	bne _080D9210
	ldrb r0, [r4, #1]
	lsls r1, r0, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #7
	bhi _080D91CE
	ldr r2, _080D91F0 @ =gUnk_083563A0
	lsrs r0, r1, #0x19
	adds r0, r0, r2
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x54
	strb r1, [r0]
	ldrb r0, [r4, #1]
	lsrs r0, r0, #1
	adds r0, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x55
	strb r0, [r1]
_080D91CE:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080D9210
	movs r0, #0
	strb r0, [r7]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D91F4
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xa0
	lsls r0, r0, #2
	b _080D91FC
	.align 2, 0
_080D91F0: .4byte gUnk_083563A0
_080D91F4:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xc0
	lsls r0, r0, #1
_080D91FC:
	strh r0, [r1]
	adds r2, r1, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D9210
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080D9210:
	adds r3, r4, #0
	adds r3, #0x52
	ldr r2, _080D9238 @ =gUnk_08356380
	ldrh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	ldrh r2, [r3]
	adds r0, r0, r2
	strh r0, [r3]
	ldrh r0, [r4, #4]
	adds r0, #1
_080D9230:
	strh r0, [r4, #4]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D9238: .4byte gUnk_08356380

	thumb_func_start sub_080D923C
sub_080D923C: @ 0x080D923C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D92DC @ =sub_080D92F8
	movs r1, #3
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x50
	movs r3, #0xff
	lsls r3, r3, #8
	strh r3, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D926A
	rsbs r0, r3, #0
	strh r0, [r2]
_080D926A:
	ldr r1, _080D92E0 @ =gUnk_02020EE0
	ldr r0, _080D92E4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D92D6
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D9296
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080D92D6
_080D9296:
	ldr r1, _080D92E8 @ =gUnk_08D60FA4
	ldr r4, _080D92EC @ =gSongTable
	ldr r2, _080D92F0 @ =0x00000BC4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080D92BC
	movs r1, #0xbc
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080D92D6
_080D92BC:
	cmp r3, #0
	beq _080D92CE
	ldr r0, _080D92F4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D92D6
_080D92CE:
	movs r0, #0xbc
	lsls r0, r0, #1
	bl m4aSongNumStart
_080D92D6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D92DC: .4byte sub_080D92F8
_080D92E0: .4byte gUnk_02020EE0
_080D92E4: .4byte gUnk_0203AD3C
_080D92E8: .4byte gUnk_08D60FA4
_080D92EC: .4byte gSongTable
_080D92F0: .4byte 0x00000BC4
_080D92F4: .4byte gUnk_0203AD10

	thumb_func_start sub_080D92F8
sub_080D92F8: @ 0x080D92F8
	push {r4, lr}
	adds r2, r0, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080D9310
	ldr r0, [r2, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080D9316
_080D9310:
	ldr r0, [r2, #8]
	movs r1, #1
	orrs r0, r1
_080D9316:
	str r0, [r2, #8]
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r3, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080D9334
	adds r0, r3, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D9344
	b _080D9340
_080D9334:
	adds r0, r3, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D9344
_080D9340:
	movs r0, #0
	strh r0, [r1]
_080D9344:
	adds r1, r2, #0
	adds r1, #0x52
	ldrh r3, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080D9360
	adds r0, r3, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D9370
	b _080D936C
_080D9360:
	adds r0, r3, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D9370
_080D936C:
	movs r0, #0
	strh r0, [r1]
_080D9370:
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080D9380
	adds r0, r2, #0
	bl sub_080DA0BC
_080D9380:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D9388
sub_080D9388: @ 0x080D9388
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080D93A0
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080D93A6
_080D93A0:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_080D93A6:
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080D93C4
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D93D4
	b _080D93D0
_080D93C4:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D93D4
_080D93D0:
	movs r0, #0
	strh r0, [r1]
_080D93D4:
	adds r0, r4, #0
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r6, r0, #0
	cmp r1, #0
	bge _080D93F2
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r6]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D9402
	b _080D93FE
_080D93F2:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r6]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D9402
_080D93FE:
	movs r0, #0
	strh r0, [r6]
_080D9402:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #6
	beq _080D9410
	b _080D9556
_080D9410:
	ldrb r0, [r4, #1]
	cmp r0, #3
	bne _080D94B4
	ldr r2, _080D9438 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080D943C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080D9440 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D9444
	adds r0, r4, #0
	movs r1, #0
	bl sub_080D9764
	b _080D944C
	.align 2, 0
_080D9438: .4byte gRngVal
_080D943C: .4byte 0x00196225
_080D9440: .4byte 0x3C6EF35F
_080D9444:
	adds r0, r4, #0
	movs r1, #1
	bl sub_080D9764
_080D944C:
	ldr r1, _080D9520 @ =gUnk_02020EE0
	ldr r0, _080D9524 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080D94B4
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D9478
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080D94B4
_080D9478:
	ldr r1, _080D9528 @ =gUnk_08D60FA4
	ldr r5, _080D952C @ =gSongTable
	ldr r2, _080D9530 @ =0x00000BCC
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080D949C
	ldr r1, _080D9534 @ =0x00000BC8
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080D94B4
_080D949C:
	cmp r3, #0
	beq _080D94AE
	ldr r0, _080D9538 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080D94B4
_080D94AE:
	ldr r0, _080D953C @ =0x00000179
	bl m4aSongNumStart
_080D94B4:
	ldrb r0, [r4, #1]
	lsls r1, r0, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #7
	bhi _080D94DC
	ldr r2, _080D9540 @ =gUnk_083563A0
	lsrs r0, r1, #0x19
	adds r0, r0, r2
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x54
	strb r1, [r0]
	ldrb r0, [r4, #1]
	lsrs r0, r0, #1
	adds r0, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x55
	strb r0, [r1]
_080D94DC:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080D955E
	ldr r2, _080D9544 @ =sub_080D7D28
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D951A
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080D9548 @ =gUnk_08351530
	ldr r0, _080D954C @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x38
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080D9550
_080D951A:
	movs r0, #0x18
	strh r0, [r4, #4]
	b _080D9598
	.align 2, 0
_080D9520: .4byte gUnk_02020EE0
_080D9524: .4byte gUnk_0203AD3C
_080D9528: .4byte gUnk_08D60FA4
_080D952C: .4byte gSongTable
_080D9530: .4byte 0x00000BCC
_080D9534: .4byte 0x00000BC8
_080D9538: .4byte gUnk_0203AD10
_080D953C: .4byte 0x00000179
_080D9540: .4byte gUnk_083563A0
_080D9544: .4byte sub_080D7D28
_080D9548: .4byte gUnk_08351530
_080D954C: .4byte gUnk_0203AD30
_080D9550:
	movs r0, #0x30
	strh r0, [r4, #4]
	b _080D9598
_080D9556:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
_080D955E:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080D9578
	movs r0, #6
	strb r0, [r7]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
_080D9578:
	ldr r3, _080D95A0 @ =gUnk_08356380
	adds r2, r4, #0
	adds r2, #0x9f
	ldrb r0, [r2]
	lsrs r0, r0, #1
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	ldrh r1, [r6]
	adds r0, r0, r1
	strh r0, [r6]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
_080D9598:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080D95A0: .4byte gUnk_08356380

	thumb_func_start sub_080D95A4
sub_080D95A4: @ 0x080D95A4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov sb, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	adds r0, #8
	mov ip, r0
	movs r4, #0
	ldr r1, _080D95D8 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080D95DC @ =gUnk_020229E0
	movs r7, #0x56
	adds r7, r7, r5
	mov r8, r7
	b _080D95F4
	.align 2, 0
_080D95D8: .4byte gUnk_020229D4
_080D95DC: .4byte gUnk_020229E0
_080D95E0:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080D95FC
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080D95F4:
	cmp r0, #0
	bne _080D95E0
	orrs r2, r3
	str r2, [r1]
_080D95FC:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, sb
	strh r0, [r1, #6]
	mov r7, ip
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xb2
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	strb r3, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D965C
sub_080D965C: @ 0x080D965C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080D9690 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080D9694 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080D9698
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080D96A0
	.align 2, 0
_080D9690: .4byte ObjectMain
_080D9694: .4byte ObjectDestroy
_080D9698:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080D96A0:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #0xc]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0xc]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080D9704 @ =sub_0809F840
	str r0, [r4, #0x7c]
	movs r1, #5
	rsbs r1, r1, #0
	movs r2, #3
	rsbs r2, r2, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	movs r1, #6
	rsbs r1, r1, #0
	movs r2, #4
	rsbs r2, r2, #0
	movs r0, #0xa
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #6
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	movs r0, #0xd8
	lsls r0, r0, #3
	strh r0, [r4, #0x24]
	adds r0, r4, #0
	bl sub_080D9EE8
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080D9704: .4byte sub_0809F840

	thumb_func_start sub_080D9708
sub_080D9708: @ 0x080D9708
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r0, [r0]
	ands r1, r0
	cmp r1, #0
	beq _080D9730
	adds r0, r4, #0
	bl sub_0809DA30
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
_080D9730:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080D974C
	adds r0, r2, #0
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D975C
	b _080D9758
_080D974C:
	adds r0, r2, #0
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D975C
_080D9758:
	movs r0, #0
	strh r0, [r1]
_080D975C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D9764
sub_080D9764: @ 0x080D9764
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D978A
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	adds r6, r0, #0
	subs r6, #0xc
	b _080D9792
_080D978A:
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	adds r6, r0, #0
	adds r6, #0xc
_080D9792:
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	adds r0, #0xa
	mov sl, r0
	movs r4, #0
	ldr r1, _080D97B0 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	movs r7, #0x56
	adds r7, r7, r5
	mov r8, r7
	b _080D97C8
	.align 2, 0
_080D97B0: .4byte gUnk_020229D4
_080D97B4:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080D97D0
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080D97C8:
	cmp r0, #0
	bne _080D97B4
	orrs r2, r3
	str r2, [r1]
_080D97D0:
	ldr r0, _080D9840 @ =gUnk_020229E0
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r0
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	strh r6, [r1, #6]
	mov r0, sl
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xb3
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r7, sb
	strb r7, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	adds r1, r0, #0
	str r5, [r1, #0x70]
	movs r0, #0xd8
	lsls r0, r0, #3
	strh r0, [r1, #0x24]
	ldr r0, [r5, #8]
	ands r0, r4
	cmp r0, #0
	beq _080D9844
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	adds r6, r0, #0
	adds r6, #0x10
	b _080D984C
	.align 2, 0
_080D9840: .4byte gUnk_020229E0
_080D9844:
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	adds r6, r0, #0
	subs r6, #0x10
_080D984C:
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	adds r0, #0xa
	mov sl, r0
	movs r4, #0
	ldr r1, _080D9868 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _080D986C @ =gUnk_020229E0
	mov ip, r7
	b _080D9884
	.align 2, 0
_080D9868: .4byte gUnk_020229D4
_080D986C: .4byte gUnk_020229E0
_080D9870:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080D988C
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080D9884:
	cmp r0, #0
	bne _080D9870
	orrs r2, r3
	str r2, [r1]
_080D988C:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	add r1, ip
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	strh r6, [r1, #6]
	mov r0, sl
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xb3
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r7, sb
	strb r7, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	adds r1, r0, #0
	str r5, [r1, #0x70]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D98F0
sub_080D98F0: @ 0x080D98F0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080D9924 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080D9928 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080D992C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080D9934
	.align 2, 0
_080D9924: .4byte ObjectMain
_080D9928: .4byte ObjectDestroy
_080D992C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080D9934:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0xc]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0xc]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080D99A0 @ =sub_0809F840
	str r0, [r4, #0x7c]
	movs r1, #5
	rsbs r1, r1, #0
	movs r2, #3
	rsbs r2, r2, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	movs r1, #6
	rsbs r1, r1, #0
	movs r2, #4
	rsbs r2, r2, #0
	movs r0, #0xa
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #6
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	adds r0, r4, #0
	bl sub_080D99A4
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080D99A0: .4byte sub_0809F840

	thumb_func_start sub_080D99A4
sub_080D99A4: @ 0x080D99A4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D99FC @ =sub_080D9A04
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080D99C4
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080D99C4:
	adds r2, r4, #0
	adds r2, #0x50
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r2]
	adds r1, r4, #0
	adds r1, #0x52
	ldr r0, _080D9A00 @ =0x0000FE80
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080D99E6
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080D99E6:
	ldr r0, [r4, #8]
	movs r2, #0x80
	lsls r2, r2, #1
	orrs r0, r2
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	strh r2, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D99FC: .4byte sub_080D9A04
_080D9A00: .4byte 0x0000FE80

	thumb_func_start sub_080D9A04
sub_080D9A04: @ 0x080D9A04
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r0, #0x87
	ldrb r7, [r0]
	cmp r7, #0
	bne _080D9A16
	b _080D9B96
_080D9A16:
	adds r4, r5, #0
	adds r4, #0x9e
	ldrb r0, [r4]
	adds r0, #1
	movs r7, #0
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0xa0
	adds r1, r1, r5
	mov r8, r1
	adds r6, r5, #0
	adds r6, #0xa2
	cmp r0, #0xf
	bls _080D9A54
	adds r0, r5, #0
	bl sub_0803D368
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	strb r7, [r4]
	ldr r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	mov r2, r8
	strh r0, [r2]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	strh r0, [r6]
_080D9A54:
	ldr r2, [r5, #0x44]
	ldr r1, _080D9A84 @ =0xFFFFF700
	ands r2, r1
	movs r3, #0
	ldrsh r0, [r6, r3]
	lsls r0, r0, #8
	ands r0, r1
	cmp r2, r0
	ble _080D9A88
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	adds r6, r1, #0
	cmp r0, r2
	ble _080D9AD8
	strh r2, [r6]
	b _080D9AD8
	.align 2, 0
_080D9A84: .4byte 0xFFFFF700
_080D9A88:
	cmp r2, r0
	bge _080D9AAC
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D9AA8 @ =0xFFFFFE00
	adds r6, r1, #0
	cmp r0, r2
	bge _080D9AD8
	strh r2, [r6]
	b _080D9AD8
	.align 2, 0
_080D9AA8: .4byte 0xFFFFFE00
_080D9AAC:
	adds r0, r5, #0
	adds r0, #0x52
	ldrh r2, [r0]
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r6, r0, #0
	cmp r1, #0
	bge _080D9ACA
	adds r0, r2, #0
	subs r0, #8
	strh r0, [r6]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D9AD8
	b _080D9AD6
_080D9ACA:
	adds r0, r2, #0
	adds r0, #8
	strh r0, [r6]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D9AD8
_080D9AD6:
	strh r7, [r6]
_080D9AD8:
	ldr r2, [r5, #0x40]
	ldr r1, _080D9B14 @ =0xFFFFF700
	ands r2, r1
	mov r3, r8
	movs r4, #0
	ldrsh r0, [r3, r4]
	lsls r0, r0, #8
	ands r0, r1
	cmp r2, r0
	bge _080D9B1C
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	adds r4, r1, #0
	cmp r0, r2
	ble _080D9B10
	b _080D9CE0
_080D9B10:
	ldr r1, _080D9B18 @ =0xFFFFFE00
	b _080D9CE6
	.align 2, 0
_080D9B14: .4byte 0xFFFFF700
_080D9B18: .4byte 0xFFFFFE00
_080D9B1C:
	cmp r2, r0
	ble _080D9B74
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080D9B50
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D9B4C @ =0xFFFFFE00
	adds r4, r1, #0
	cmp r0, r2
	bge _080D9B46
	b _080D9CE0
_080D9B46:
	movs r1, #0x80
	lsls r1, r1, #2
	b _080D9CBC
	.align 2, 0
_080D9B4C: .4byte 0xFFFFFE00
_080D9B50:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	adds r4, r1, #0
	cmp r0, r2
	ble _080D9B6A
	b _080D9CE0
_080D9B6A:
	ldr r1, _080D9B70 @ =0xFFFFFE00
	b _080D9CE6
	.align 2, 0
_080D9B70: .4byte 0xFFFFFE00
_080D9B74:
	adds r0, r5, #0
	adds r0, #0x50
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	cmp r1, #0
	blt _080D9B86
	b _080D9D12
_080D9B86:
	adds r0, r2, #0
	subs r0, #8
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080D9B94
	b _080D9D22
_080D9B94:
	b _080D9D1E
_080D9B96:
	adds r4, r5, #0
	adds r4, #0x9e
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0xa0
	adds r1, r1, r5
	mov r8, r1
	adds r6, r5, #0
	adds r6, #0xa2
	cmp r0, #0xf
	bls _080D9BD2
	adds r0, r5, #0
	bl sub_0803D368
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	strb r7, [r4]
	ldr r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	mov r2, r8
	strh r0, [r2]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	strh r0, [r6]
_080D9BD2:
	ldr r2, [r5, #0x44]
	ldr r1, _080D9C00 @ =0xFFFFF700
	ands r2, r1
	movs r3, #0
	ldrsh r0, [r6, r3]
	lsls r0, r0, #8
	ands r0, r1
	cmp r2, r0
	ble _080D9C04
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xd0
	lsls r2, r2, #1
	adds r6, r1, #0
	cmp r0, r2
	ble _080D9C54
	strh r2, [r6]
	b _080D9C54
	.align 2, 0
_080D9C00: .4byte 0xFFFFF700
_080D9C04:
	cmp r2, r0
	bge _080D9C28
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D9C24 @ =0xFFFFFE60
	adds r6, r1, #0
	cmp r0, r2
	bge _080D9C54
	strh r2, [r6]
	b _080D9C54
	.align 2, 0
_080D9C24: .4byte 0xFFFFFE60
_080D9C28:
	adds r0, r5, #0
	adds r0, #0x52
	ldrh r2, [r0]
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r6, r0, #0
	cmp r1, #0
	bge _080D9C46
	adds r0, r2, #0
	subs r0, #8
	strh r0, [r6]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D9C54
	b _080D9C52
_080D9C46:
	adds r0, r2, #0
	adds r0, #8
	strh r0, [r6]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D9C54
_080D9C52:
	strh r7, [r6]
_080D9C54:
	ldr r2, [r5, #0x40]
	ldr r1, _080D9C8C @ =0xFFFFF700
	ands r2, r1
	mov r3, r8
	movs r4, #0
	ldrsh r0, [r3, r4]
	lsls r0, r0, #8
	ands r0, r1
	cmp r2, r0
	bge _080D9C90
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xd0
	lsls r2, r2, #1
	adds r4, r1, #0
	cmp r0, r2
	bgt _080D9CE0
	b _080D9CE4
	.align 2, 0
_080D9C8C: .4byte 0xFFFFF700
_080D9C90:
	cmp r2, r0
	ble _080D9CF4
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080D9CC8
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080D9CC4 @ =0xFFFFFE60
	adds r4, r1, #0
	cmp r0, r2
	blt _080D9CE0
	movs r1, #0xd0
	lsls r1, r1, #1
_080D9CBC:
	cmp r0, r1
	ble _080D9D22
	strh r1, [r4]
	b _080D9D22
	.align 2, 0
_080D9CC4: .4byte 0xFFFFFE60
_080D9CC8:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xd0
	lsls r2, r2, #1
	adds r4, r1, #0
	cmp r0, r2
	ble _080D9CE4
_080D9CE0:
	strh r2, [r4]
	b _080D9D22
_080D9CE4:
	ldr r1, _080D9CF0 @ =0xFFFFFE60
_080D9CE6:
	cmp r0, r1
	bge _080D9D22
	strh r1, [r4]
	b _080D9D22
	.align 2, 0
_080D9CF0: .4byte 0xFFFFFE60
_080D9CF4:
	adds r0, r5, #0
	adds r0, #0x50
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	cmp r1, #0
	bge _080D9D12
	adds r0, r2, #0
	subs r0, #8
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080D9D22
	b _080D9D1E
_080D9D12:
	adds r0, r2, #0
	adds r0, #8
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080D9D22
_080D9D1E:
	movs r0, #0
	strh r0, [r4]
_080D9D22:
	ldr r0, [r5, #8]
	movs r2, #1
	orrs r0, r2
	str r0, [r5, #8]
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0x80
	ble _080D9D5A
	movs r2, #0
	ldrsh r1, [r6, r2]
	cmp r1, #0x80
	ble _080D9D42
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #5
	b _080D9DA4
_080D9D42:
	movs r0, #0x80
	rsbs r0, r0, #0
	cmp r1, r0
	bge _080D9D52
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #3
	b _080D9DA4
_080D9D52:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #4
	b _080D9DA4
_080D9D5A:
	movs r1, #0x80
	rsbs r1, r1, #0
	cmp r0, r1
	bge _080D9D7E
	movs r3, #0
	ldrsh r0, [r6, r3]
	cmp r0, #0x80
	ble _080D9D72
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #7
	b _080D9DA4
_080D9D72:
	cmp r0, r1
	bge _080D9D9E
	adds r0, r5, #0
	adds r0, #0x83
	strb r2, [r0]
	b _080D9DA6
_080D9D7E:
	movs r0, #0
	ldrsh r1, [r6, r0]
	cmp r1, #0x10
	ble _080D9D8E
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #6
	b _080D9DA4
_080D9D8E:
	movs r0, #0x10
	rsbs r0, r0, #0
	cmp r1, r0
	bge _080D9D9E
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #2
	b _080D9DA4
_080D9D9E:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #0
_080D9DA4:
	strb r0, [r1]
_080D9DA6:
	ldrh r1, [r5, #4]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _080D9DF0
	movs r2, #0xa6
	lsls r2, r2, #2
	adds r0, r5, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	movs r1, #0
	ldrsh r2, [r4, r1]
	lsls r2, r2, #2
	ldr r1, [r0, #0x34]
	subs r1, r1, r2
	str r1, [r0, #0x34]
	movs r3, #0
	ldrsh r2, [r6, r3]
	lsls r2, r2, #2
	ldr r1, [r0, #0x38]
	adds r1, r1, r2
	str r1, [r0, #0x38]
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x11
	rsbs r1, r1, #0
	strh r1, [r0, #0x3c]
	ldrh r1, [r6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x11
	rsbs r1, r1, #0
	strh r1, [r0, #0x3e]
	movs r1, #0xe8
	lsls r1, r1, #3
	strh r1, [r0, #0x20]
_080D9DF0:
	ldrh r1, [r5, #4]
	movs r2, #4
	ldrsh r0, [r5, r2]
	cmp r0, #0
	bne _080D9E24
	movs r3, #0
	ldrsh r1, [r4, r3]
	cmp r1, #0
	bge _080D9E04
	rsbs r1, r1, #0
_080D9E04:
	movs r4, #0
	ldrsh r0, [r6, r4]
	cmp r0, #0
	bge _080D9E0E
	rsbs r0, r0, #0
_080D9E0E:
	adds r1, r1, r0
	ldr r0, _080D9E1C @ =0x0000017F
	cmp r1, r0
	ble _080D9E28
	ldr r0, _080D9E20 @ =sub_080D9E34
	str r0, [r5, #0x78]
	b _080D9E28
	.align 2, 0
_080D9E1C: .4byte 0x0000017F
_080D9E20: .4byte sub_080D9E34
_080D9E24:
	subs r0, r1, #1
	strh r0, [r5, #4]
_080D9E28:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D9E34
sub_080D9E34: @ 0x080D9E34
	push {r4, r5, lr}
	adds r5, r0, #0
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	bne _080D9E8E
	movs r2, #0xa6
	lsls r2, r2, #2
	adds r0, r5, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	adds r4, r5, #0
	adds r4, #0x50
	movs r1, #0
	ldrsh r2, [r4, r1]
	lsls r2, r2, #2
	ldr r1, [r0, #0x34]
	subs r1, r1, r2
	str r1, [r0, #0x34]
	adds r3, r5, #0
	adds r3, #0x52
	movs r1, #0
	ldrsh r2, [r3, r1]
	lsls r2, r2, #2
	ldr r1, [r0, #0x38]
	adds r1, r1, r2
	str r1, [r0, #0x38]
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x11
	rsbs r1, r1, #0
	strh r1, [r0, #0x3c]
	ldrh r1, [r3]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x11
	rsbs r1, r1, #0
	strh r1, [r0, #0x3e]
	movs r1, #0xe8
	lsls r1, r1, #3
	strh r1, [r0, #0x20]
_080D9E8E:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080D9E94
sub_080D9E94: @ 0x080D9E94
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D9ED0 @ =sub_080D7D28
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D9ECA
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080D9ED4 @ =gUnk_08351530
	ldr r0, _080D9ED8 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x38
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080D9EDC
_080D9ECA:
	movs r0, #0x18
	b _080D9EDE
	.align 2, 0
_080D9ED0: .4byte sub_080D7D28
_080D9ED4: .4byte gUnk_08351530
_080D9ED8: .4byte gUnk_0203AD30
_080D9EDC:
	movs r0, #0x30
_080D9EDE:
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080D9EE8
sub_080D9EE8: @ 0x080D9EE8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D9F4C @ =sub_080D9708
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080D9F08
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080D9F08:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, _080D9F50 @ =0xFFFFF000
	adds r1, r1, r0
	adds r2, r4, #0
	adds r2, #0xac
	ldr r0, [r2]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	bge _080D9F2C
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
_080D9F2C:
	ldr r0, [r4, #0x40]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r0, r1
	ldr r1, [r2]
	ldr r1, [r1, #0x40]
	cmp r0, r1
	ble _080D9F46
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1]
_080D9F46:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D9F4C: .4byte sub_080D9708
_080D9F50: .4byte 0xFFFFF000

	thumb_func_start sub_080D9F54
sub_080D9F54: @ 0x080D9F54
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D9F80 @ =sub_080D7A6C
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	adds r1, #0xc0
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080D9F80: .4byte sub_080D7A6C

	thumb_func_start sub_080D9F84
sub_080D9F84: @ 0x080D9F84
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D9FA4 @ =sub_080D7DCC
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r1, [r0]
	ldrb r0, [r1, #0xe]
	cmp r0, #0
	beq _080D9FA8
	ldrh r0, [r1, #6]
	subs r0, #8
	b _080D9FAC
	.align 2, 0
_080D9FA4: .4byte sub_080D7DCC
_080D9FA8:
	ldrh r0, [r1, #6]
	adds r0, #8
_080D9FAC:
	adds r1, r4, #0
	adds r1, #0xa0
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #8]
	adds r0, #0x40
	adds r1, r4, #0
	adds r1, #0xa2
	strh r0, [r1]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080D9FC8
sub_080D9FC8: @ 0x080D9FC8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080D9FE8 @ =sub_080D7DCC
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r1, [r0]
	ldrb r0, [r1, #0xe]
	cmp r0, #0
	beq _080D9FEC
	ldrh r0, [r1, #6]
	adds r0, #0x30
	b _080D9FF0
	.align 2, 0
_080D9FE8: .4byte sub_080D7DCC
_080D9FEC:
	ldrh r0, [r1, #6]
	subs r0, #0x30
_080D9FF0:
	adds r1, r4, #0
	adds r1, #0xa0
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #8]
	subs r0, #0x10
	adds r1, r4, #0
	adds r1, #0xa2
	strh r0, [r1]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080DA00C
sub_080DA00C: @ 0x080DA00C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DA02C @ =sub_080D7FF0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r1, [r0]
	ldrb r0, [r1, #0xe]
	cmp r0, #0
	beq _080DA030
	ldrh r0, [r1, #6]
	adds r0, #0x18
	b _080DA034
	.align 2, 0
_080DA02C: .4byte sub_080D7FF0
_080DA030:
	ldrh r0, [r1, #6]
	subs r0, #0x18
_080DA034:
	adds r1, r4, #0
	adds r1, #0xa0
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #8]
	adds r0, r4, #0
	adds r0, #0xa2
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DA050
sub_080DA050: @ 0x080DA050
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DA06C @ =sub_080D8338
	movs r1, #4
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DA06C: .4byte sub_080D8338

	thumb_func_start sub_080DA070
sub_080DA070: @ 0x080DA070
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DA098 @ =sub_080D8950
	movs r1, #0
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0xb0
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	adds r0, r4, #0
	adds r0, #0xa0
	strh r1, [r0]
	ldr r0, [r2]
	ldrh r0, [r0, #8]
	adds r4, #0xa2
	strh r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DA098: .4byte sub_080D8950

	thumb_func_start sub_080DA09C
sub_080DA09C: @ 0x080DA09C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DA0B8 @ =sub_080D8C98
	movs r1, #4
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DA0B8: .4byte sub_080D8C98

	thumb_func_start sub_080DA0BC
sub_080DA0BC: @ 0x080DA0BC
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DA0E0 @ =sub_080D9388
	movs r1, #5
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DA0E4
	movs r0, #0xc
	b _080DA0E6
	.align 2, 0
_080DA0E0: .4byte sub_080D9388
_080DA0E4:
	movs r0, #0x1c
_080DA0E6:
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DA0F0
sub_080DA0F0: @ 0x080DA0F0
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080DA124 @ =ObjectMain
	ldr r2, _080DA128 @ =0x00001001
	ldr r1, _080DA12C @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xc0
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DA130
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DA138
	.align 2, 0
_080DA124: .4byte ObjectMain
_080DA128: .4byte 0x00001001
_080DA12C: .4byte ObjectDestroy
_080DA130:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DA138:
	adds r4, r0, #0
	adds r7, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #0xc]
	movs r5, #1
	orrs r0, r5
	str r0, [r4, #0xc]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x12
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x85
	movs r1, #0
	strb r1, [r0]
	adds r0, #0x33
	str r1, [r0]
	adds r0, #4
	strb r1, [r0]
	adds r2, r4, #0
	adds r2, #0xbe
	movs r0, #0
	strh r1, [r2]
	adds r1, r4, #0
	adds r1, #0xbd
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	orrs r0, r5
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0xd
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x68]
	subs r1, #0x48
	ands r0, r1
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	ldr r1, _080DA29C @ =0x001080A0
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _080DA2A0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080DA1C2
	movs r0, #1
	bl sub_08019DA8
	cmp r0, #0
	beq _080DA1C8
_080DA1C2:
	adds r0, r4, #0
	adds r0, #0x87
	strb r5, [r0]
_080DA1C8:
	movs r0, #0xd4
	lsls r0, r0, #8
	str r0, [r4, #0x40]
	movs r0, #0xec
	lsls r0, r0, #8
	str r0, [r4, #0x44]
	movs r1, #0x20
	rsbs r1, r1, #0
	movs r2, #0x40
	rsbs r2, r2, #0
	movs r0, #0x40
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0x20
	bl sub_0803E2B0
	movs r1, #7
	rsbs r1, r1, #0
	movs r2, #0xe
	rsbs r2, r2, #0
	movs r0, #2
	rsbs r0, r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #7
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	movs r1, #0
	movs r0, #0xd8
	lsls r0, r0, #3
	strh r0, [r4, #0x24]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r1, [r0]
	ldr r0, _080DA2A4 @ =sub_080DB85C
	str r0, [r4, #0x7c]
	adds r0, r4, #0
	bl sub_080DA68C
	adds r1, r7, #0
	adds r1, #0xb4
	str r0, [r1]
	ldr r2, _080DA2A8 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080DA2AC @ =0x0000065E
	adds r0, r0, r1
	ldrb r5, [r0]
	adds r0, r5, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0
	bl sub_08002A44
	adds r0, r5, #0
	movs r1, #0
	bl sub_08002A1C
	ldr r2, _080DA2B0 @ =gUnk_02020EE0
	ldr r0, _080DA2B4 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DA28A
	ldr r0, _080DA2B8 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080DA28A
	adds r0, r5, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080DA28A:
	adds r0, r4, #0
	bl sub_080DB640
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080DA29C: .4byte 0x001080A0
_080DA2A0: .4byte gUnk_0203AD10
_080DA2A4: .4byte sub_080DB85C
_080DA2A8: .4byte gCurLevelInfo
_080DA2AC: .4byte 0x0000065E
_080DA2B0: .4byte gUnk_02020EE0
_080DA2B4: .4byte gUnk_0203AD3C
_080DA2B8: .4byte gUnk_0203AD20

	thumb_func_start sub_080DA2BC
sub_080DA2BC: @ 0x080DA2BC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r5, r0, #0
	ldr r0, [r5, #8]
	movs r1, #4
	mov sl, r1
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	bl sub_0803D368
	adds r6, r0, #0
	adds r7, r5, #0
	adds r7, #0xac
	str r6, [r7]
	ldr r0, [r6, #0xc]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	beq _080DA2F0
	b _080DA480
_080DA2F0:
	adds r0, r5, #0
	adds r0, #0x60
	adds r2, r6, #0
	adds r2, #0x60
	ldrh r1, [r0]
	mov sb, r0
	ldrh r2, [r2]
	cmp r1, r2
	beq _080DA304
	b _080DA480
_080DA304:
	ldr r1, [r5, #0x40]
	ldr r2, [r5, #0x44]
	movs r3, #0xb0
	adds r3, r3, r5
	mov r8, r3
	ldr r4, [r3]
	movs r3, #0x1a
	ldrsh r0, [r4, r3]
	mov ip, r0
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	adds r0, r6, #0
	mov r3, ip
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080DA334
	b _080DA480
_080DA334:
	ldr r4, _080DA490 @ =gCurLevelInfo
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	movs r6, #0xcd
	lsls r6, r6, #3
	muls r0, r6, r0
	adds r1, r4, #0
	adds r1, #0xa0
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa4
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r6, r0
	adds r1, r4, #0
	adds r1, #0xa4
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa6
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r6, r0
	adds r1, r4, #0
	adds r1, #0xa8
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r6, r0
	adds r1, r4, #0
	adds r1, #0xac
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xaa
	strh r0, [r1]
	adds r0, r5, #0
	bl sub_080DA4B0
	ldr r0, _080DA494 @ =sub_080DB664
	str r0, [r5, #0x78]
	ldr r0, [r5, #8]
	ldr r1, _080DA498 @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	bl sub_08034E14
	adds r1, r0, #0
	cmp r1, #0
	beq _080DA3BC
	movs r0, #0
	strb r0, [r1, #9]
_080DA3BC:
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r3, [r0]
	adds r1, r3, #0
	subs r1, #0x38
	subs r0, #0x2c
	ldrb r0, [r0]
	muls r0, r6, r0
	adds r0, r0, r4
	ldr r2, _080DA49C @ =0x0000065E
	adds r0, r0, r2
	ldrb r5, [r0]
	lsls r2, r1, #0x10
	asrs r1, r2, #0x10
	cmp r1, #0
	blt _080DA480
	ldr r0, _080DA4A0 @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080DA480
	mov r1, r8
	ldr r0, [r1]
	ldrh r1, [r0, #0x22]
	mov r0, sl
	ands r0, r1
	cmp r0, #0
	bne _080DA480
	adds r0, r3, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r6, r2, #0
	cmp r0, #0xf
	bls _080DA43E
	movs r4, #1
_080DA406:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r5, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _080DA406
	adds r0, r5, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0
	bl sub_08002A44
_080DA43E:
	ldr r1, _080DA4A0 @ =gUnk_08352D80
	asrs r0, r6, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r5, #0
	bl sub_08002A1C
	ldr r2, _080DA4A4 @ =gUnk_02020EE0
	ldr r0, _080DA4A8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, sb
	ldrh r2, [r2]
	cmp r0, r2
	bne _080DA480
	ldr r0, _080DA4AC @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080DA480
	adds r0, r5, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080DA480:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DA490: .4byte gCurLevelInfo
_080DA494: .4byte sub_080DB664
_080DA498: .4byte 0xFFFFFDFF
_080DA49C: .4byte 0x0000065E
_080DA4A0: .4byte gUnk_08352D80
_080DA4A4: .4byte gUnk_02020EE0
_080DA4A8: .4byte gUnk_0203AD3C
_080DA4AC: .4byte gUnk_0203AD20

	thumb_func_start sub_080DA4B0
sub_080DA4B0: @ 0x080DA4B0
	push {r4, r5, r6, lr}
	adds r2, r0, #0
	movs r0, #0
	movs r5, #0
	strh r5, [r2, #4]
	adds r1, r2, #0
	adds r1, #0x9f
	strb r0, [r1]
	subs r1, #1
	strb r0, [r1]
	adds r3, r2, #0
	adds r3, #0x83
	strb r0, [r3]
	ldr r1, [r2, #8]
	movs r0, #0x80
	lsls r0, r0, #1
	orrs r1, r0
	str r1, [r2, #8]
	adds r4, r2, #0
	adds r4, #0x80
	movs r6, #0
	ldrsh r0, [r4, r6]
	cmp r0, #0
	bgt _080DA4F8
	strh r5, [r2, #4]
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r1, r0
	str r1, [r2, #8]
	movs r0, #5
	strb r0, [r3]
	ldr r0, _080DA4F4 @ =sub_080DB694
	str r0, [r2, #0x78]
	b _080DA538
	.align 2, 0
_080DA4F4: .4byte sub_080DB694
_080DA4F8:
	ldr r0, _080DA528 @ =sub_080DA540
	str r0, [r2, #0x78]
	adds r0, r2, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DA522
	ldr r1, _080DA52C @ =gUnk_08351530
	ldr r0, _080DA530 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x70
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r4, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080DA534
_080DA522:
	movs r0, #0x10
	b _080DA536
	.align 2, 0
_080DA528: .4byte sub_080DA540
_080DA52C: .4byte gUnk_08351530
_080DA530: .4byte gUnk_0203AD30
_080DA534:
	movs r0, #0x30
_080DA536:
	strh r0, [r2, #4]
_080DA538:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DA540
sub_080DA540: @ 0x080DA540
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	adds r3, r5, #0
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	adds r2, r5, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #4
	bne _080DA578
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x2a
	bls _080DA580
	movs r0, #0
	strb r0, [r2]
	b _080DA580
_080DA578:
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
_080DA580:
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080DA672
	adds r0, r3, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	adds r1, r3, #0
	adds r1, #0x87
	ldrb r1, [r1]
	mov ip, r0
	cmp r1, #0
	bne _080DA5C2
	adds r2, r3, #0
	adds r2, #0x80
	ldr r1, _080DA5C8 @ =gUnk_08351530
	ldr r0, _080DA5CC @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x70
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r4, #0
	ldrsh r1, [r2, r4]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080DA5D0
_080DA5C2:
	movs r0, #0x10
	b _080DA5D2
	.align 2, 0
_080DA5C8: .4byte gUnk_08351530
_080DA5CC: .4byte gUnk_0203AD30
_080DA5D0:
	movs r0, #0x30
_080DA5D2:
	strh r0, [r3, #4]
	ldr r6, _080DA650 @ =gRngVal
	ldr r0, [r6]
	ldr r7, _080DA654 @ =0x00196225
	mov sb, r7
	mov r1, sb
	muls r1, r0, r1
	adds r0, r1, #0
	ldr r2, _080DA658 @ =0x3C6EF35F
	mov r8, r2
	adds r4, r0, r2
	str r4, [r6]
	lsrs r0, r4, #0x10
	movs r7, #1
	mov sl, r7
	mov r1, sl
	ands r0, r1
	cmp r0, #0
	beq _080DA600
	mov r2, ip
	ldrb r0, [r2]
	cmp r0, #3
	bls _080DA672
_080DA600:
	movs r7, #0x80
	ldr r1, _080DA65C @ =gUnk_08351530
	ldr r0, _080DA660 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x70
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	ldrsh r1, [r7, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080DA66C
	mov r0, sb
	muls r0, r4, r0
	add r0, r8
	str r0, [r6]
	lsrs r0, r0, #0x10
	mov r4, sl
	ands r0, r4
	adds r1, r3, #0
	adds r1, #0x85
	cmp r0, #0
	bne _080DA638
	ldrb r0, [r1]
	cmp r0, #0
	bne _080DA66C
_080DA638:
	mov r7, sl
	strb r7, [r1]
	adds r0, r5, #0
	adds r0, #0xb8
	ldr r0, [r0]
	cmp r0, #0
	bne _080DA664
	adds r0, r3, #0
	bl sub_080DB6BC
	b _080DA672
	.align 2, 0
_080DA650: .4byte gRngVal
_080DA654: .4byte 0x00196225
_080DA658: .4byte 0x3C6EF35F
_080DA65C: .4byte gUnk_08351530
_080DA660: .4byte gUnk_0203AD30
_080DA664:
	adds r0, r3, #0
	bl sub_080DB790
	b _080DA672
_080DA66C:
	adds r0, r3, #0
	bl sub_080DB790
_080DA672:
	adds r1, r5, #0
	adds r1, #0xbe
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DA68C
sub_080DA68C: @ 0x080DA68C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080DA6C0 @ =sub_080DA768
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080DA6C4 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DA6C8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DA6D0
	.align 2, 0
_080DA6C0: .4byte sub_080DA768
_080DA6C4: .4byte sub_0803DCCC
_080DA6C8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DA6D0:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r6, r4, #0
	adds r6, #0x42
	movs r1, #0
	mov r8, r1
	strh r0, [r6]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r7, _080DA748 @ =0x00000303
	movs r0, #7
	str r0, [sp]
	movs r0, #0x1b
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x1e
	adds r3, r7, #0
	bl sub_080709F8
	adds r5, r4, #0
	adds r5, #0x2b
	mov r0, r8
	strb r0, [r5]
	ldr r2, _080DA74C @ =gUnk_02020EE0
	ldr r0, _080DA750 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r6]
	cmp r0, r6
	bne _080DA754
	adds r0, r7, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DA758
	adds r0, r7, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080DA758
	.align 2, 0
_080DA748: .4byte 0x00000303
_080DA74C: .4byte gUnk_02020EE0
_080DA750: .4byte gUnk_0203AD3C
_080DA754:
	mov r1, r8
	strb r1, [r5]
_080DA758:
	adds r0, r4, #0
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080DA768
sub_080DA768: @ 0x080DA768
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	ldr r2, _080DA790 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DA794
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DA79C
	.align 2, 0
_080DA790: .4byte gCurTask
_080DA794:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DA79C:
	adds r5, r0, #0
	ldr r0, [r5, #0x44]
	mov sb, r0
	mov sl, sb
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080DA7BA
	ldr r0, [r2]
	bl TaskDestroy
	b _080DAAD6
_080DA7BA:
	mov r2, sb
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _080DA7CA
	adds r0, r1, #0
	orrs r0, r3
	b _080DAAD4
_080DA7CA:
	ldr r0, _080DA890 @ =gUnk_0203AD44
	ldrb r0, [r0]
	movs r4, #0x42
	adds r4, r4, r5
	mov r8, r4
	ldr r3, [r5, #0xc]
	adds r6, r5, #0
	adds r6, #0x2b
	cmp r0, #0
	beq _080DA81A
	ldr r7, _080DA894 @ =gCurLevelInfo
	mov ip, r7
	ldrh r4, [r4]
_080DA7E4:
	subs r2, r0, #1
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	mov r7, ip
	adds r1, r0, r7
	movs r7, #0xbf
	lsls r7, r7, #3
	adds r0, r1, r7
	ldrh r0, [r0]
	cmp r0, r4
	bne _080DA812
	adds r7, #0x66
	adds r0, r1, r7
	ldrb r0, [r0]
	lsls r0, r0, #1
	ldr r1, _080DA898 @ =gUnk_02026D50
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080DA82C
_080DA812:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080DA7E4
_080DA81A:
	movs r0, #1
	cmp r0, #0
	beq _080DA82C
	ldrh r1, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
_080DA82C:
	ldr r2, _080DA89C @ =gUnk_02020EE0
	ldr r0, _080DA8A0 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r4, r8
	ldrh r4, [r4]
	cmp r0, r4
	bne _080DA8E0
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r1
	cmp r0, #0
	beq _080DA8AC
	cmp r3, #0
	bne _080DA906
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x1e
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080DA8A4 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080DA8A8 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080DA906
	.align 2, 0
_080DA890: .4byte gUnk_0203AD44
_080DA894: .4byte gCurLevelInfo
_080DA898: .4byte gUnk_02026D50
_080DA89C: .4byte gUnk_02020EE0
_080DA8A0: .4byte gUnk_0203AD3C
_080DA8A4: .4byte 0xFFF7FFFF
_080DA8A8: .4byte 0x0400000A
_080DA8AC:
	cmp r3, #0
	bne _080DA906
	movs r0, #0x1e
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080DA8D8 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080DA8DC @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080DA906
	.align 2, 0
_080DA8D8: .4byte 0xFFF7FFFF
_080DA8DC: .4byte 0x0400000A
_080DA8E0:
	cmp r3, #0
	beq _080DA8FC
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080DA8FC
	adds r0, r3, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080DA8FC:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080DA906:
	ldr r2, _080DA944 @ =gUnk_02020EE0
	ldr r0, _080DA948 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r7, r8
	ldrh r7, [r7]
	cmp r0, r7
	bne _080DA950
	ldrb r0, [r6]
	cmp r0, #0
	bne _080DA954
	ldr r4, _080DA94C @ =0x00000303
	adds r0, r4, #0
	bl sub_0803DF24
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DA954
	adds r0, r4, #0
	movs r1, #0
	bl sub_0803DFAC
	b _080DA952
	.align 2, 0
_080DA944: .4byte gUnk_02020EE0
_080DA948: .4byte gUnk_0203AD3C
_080DA94C: .4byte 0x00000303
_080DA950:
	movs r0, #0
_080DA952:
	strb r0, [r6]
_080DA954:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080DA9A8
	ldrb r0, [r3]
	cmp r0, #0
	beq _080DA972
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080DA972
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080DA972:
	cmp r3, #0
	beq _080DA9A8
	ldr r0, _080DA9A4 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080DAA18
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080DAA18
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080DAAD6
	.align 2, 0
_080DA9A4: .4byte gUnk_03000510
_080DA9A8:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080DAA10 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	mov r6, r8
	ldrh r1, [r6]
	cmp r0, r1
	beq _080DA9E8
	movs r3, #1
	movs r7, #0x82
	lsls r7, r7, #2
	adds r0, r2, r7
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DA9E8
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DA9E8
	movs r3, #3
	movs r7, #0xab
	lsls r7, r7, #3
	adds r0, r2, r7
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DA9E8
	movs r3, #4
_080DA9E8:
	ldr r0, _080DAA14 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080DAA18
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080DAA18
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080DAAD6
	.align 2, 0
_080DAA10: .4byte gUnk_02020EE0
_080DAA14: .4byte gUnk_03000510
_080DAA18:
	mov r0, sb
	ldr r1, [r0, #0x78]
	ldr r0, _080DAA78 @ =sub_080DB7DC
	cmp r1, r0
	bne _080DAABE
	mov r1, sl
	adds r1, #0xbd
	movs r0, #0
	strb r0, [r1]
	subs r1, #1
	strb r0, [r1]
	movs r3, #1
	strh r3, [r5, #8]
	mov r0, sb
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DAA5C
	mov r2, sb
	adds r2, #0x80
	ldr r1, _080DAA7C @ =gUnk_08351530
	ldr r0, _080DAA80 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x70
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r4, #0
	ldrsh r1, [r2, r4]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080DAA90
_080DAA5C:
	ldr r2, _080DAA84 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DAA88 @ =0x00196225
	muls r0, r1, r0
	ldr r6, _080DAA8C @ =0x3C6EF35F
	adds r0, r0, r6
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080DAAAA
	b _080DAAA6
	.align 2, 0
_080DAA78: .4byte sub_080DB7DC
_080DAA7C: .4byte gUnk_08351530
_080DAA80: .4byte gUnk_0203AD30
_080DAA84: .4byte gRngVal
_080DAA88: .4byte 0x00196225
_080DAA8C: .4byte 0x3C6EF35F
_080DAA90:
	ldr r2, _080DAAE8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DAAEC @ =0x00196225
	muls r0, r1, r0
	ldr r7, _080DAAF0 @ =0x3C6EF35F
	adds r0, r0, r7
	str r0, [r2]
	lsrs r0, r0, #0x10
	ands r0, r3
	cmp r0, #0
	beq _080DAAAA
_080DAAA6:
	movs r0, #2
	strh r0, [r5, #8]
_080DAAAA:
	ldr r0, _080DAAF4 @ =0x00000303
	strh r0, [r5, #0x18]
	adds r1, r5, #0
	adds r1, #0x26
	movs r0, #8
	strb r0, [r1]
	ldr r0, _080DAAF8 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080DAAFC @ =sub_080DAB00
	str r0, [r1, #8]
_080DAABE:
	adds r0, r5, #0
	bl sub_0806FAC8
	mov r0, sb
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #6
	bne _080DAAD6
	ldrh r1, [r5, #6]
	movs r0, #4
	orrs r0, r1
_080DAAD4:
	strh r0, [r5, #6]
_080DAAD6:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DAAE8: .4byte gRngVal
_080DAAEC: .4byte 0x00196225
_080DAAF0: .4byte 0x3C6EF35F
_080DAAF4: .4byte 0x00000303
_080DAAF8: .4byte gCurTask
_080DAAFC: .4byte sub_080DAB00

	thumb_func_start sub_080DAB00
sub_080DAB00: @ 0x080DAB00
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	ldr r2, _080DAB28 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DAB2C
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DAB34
	.align 2, 0
_080DAB28: .4byte gCurTask
_080DAB2C:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DAB34:
	adds r5, r0, #0
	ldr r6, [r5, #0x44]
	mov sl, r6
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080DAB50
	ldr r0, [r2]
	bl TaskDestroy
	b _080DAFCC
_080DAB50:
	ldr r0, [r6, #8]
	ands r0, r1
	cmp r0, #0
	beq _080DAB60
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _080DAFCC
_080DAB60:
	ldr r0, _080DAC2C @ =gUnk_0203AD44
	ldrb r0, [r0]
	movs r1, #0x42
	adds r1, r1, r5
	mov r8, r1
	ldr r3, [r5, #0xc]
	adds r7, r5, #0
	adds r7, #0x2b
	cmp r0, #0
	beq _080DABB6
	ldr r2, _080DAC30 @ =gCurLevelInfo
	mov sb, r2
	ldrh r4, [r1]
	str r4, [sp, #0x28]
	ldr r1, _080DAC34 @ =gUnk_02026D50
	mov ip, r1
_080DAB80:
	subs r2, r0, #1
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	mov r4, sb
	adds r1, r0, r4
	movs r4, #0xbf
	lsls r4, r4, #3
	adds r0, r1, r4
	ldrh r0, [r0]
	ldr r4, [sp, #0x28]
	cmp r0, r4
	bne _080DABAE
	ldr r4, _080DAC38 @ =0x0000065E
	adds r0, r1, r4
	ldrb r0, [r0]
	lsls r0, r0, #1
	add r0, ip
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080DABC8
_080DABAE:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080DAB80
_080DABB6:
	movs r0, #1
	cmp r0, #0
	beq _080DABC8
	ldrh r1, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
_080DABC8:
	ldr r2, _080DAC3C @ =gUnk_02020EE0
	ldr r0, _080DAC40 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r4, r8
	ldrh r4, [r4]
	cmp r0, r4
	bne _080DAC80
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r1
	cmp r0, #0
	beq _080DAC4C
	cmp r3, #0
	bne _080DACA6
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x1e
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080DAC44 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080DAC48 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080DACA6
	.align 2, 0
_080DAC2C: .4byte gUnk_0203AD44
_080DAC30: .4byte gCurLevelInfo
_080DAC34: .4byte gUnk_02026D50
_080DAC38: .4byte 0x0000065E
_080DAC3C: .4byte gUnk_02020EE0
_080DAC40: .4byte gUnk_0203AD3C
_080DAC44: .4byte 0xFFF7FFFF
_080DAC48: .4byte 0x0400000A
_080DAC4C:
	cmp r3, #0
	bne _080DACA6
	movs r0, #0x1e
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080DAC78 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080DAC7C @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080DACA6
	.align 2, 0
_080DAC78: .4byte 0xFFF7FFFF
_080DAC7C: .4byte 0x0400000A
_080DAC80:
	cmp r3, #0
	beq _080DAC9C
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080DAC9C
	adds r0, r3, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080DAC9C:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080DACA6:
	ldr r2, _080DACE4 @ =gUnk_02020EE0
	ldr r0, _080DACE8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, r8
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DACF0
	ldrb r0, [r7]
	cmp r0, #0
	bne _080DACF4
	ldr r4, _080DACEC @ =0x00000303
	adds r0, r4, #0
	bl sub_0803DF24
	strb r0, [r7]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DACF4
	adds r0, r4, #0
	movs r1, #0
	bl sub_0803DFAC
	b _080DACF2
	.align 2, 0
_080DACE4: .4byte gUnk_02020EE0
_080DACE8: .4byte gUnk_0203AD3C
_080DACEC: .4byte 0x00000303
_080DACF0:
	movs r0, #0
_080DACF2:
	strb r0, [r7]
_080DACF4:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080DAD48
	ldrb r0, [r3]
	cmp r0, #0
	beq _080DAD12
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080DAD12
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080DAD12:
	cmp r3, #0
	beq _080DAD48
	ldr r0, _080DAD44 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080DADB8
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080DADB8
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080DAFCC
	.align 2, 0
_080DAD44: .4byte gUnk_03000510
_080DAD48:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080DADB0 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	mov r7, r8
	ldrh r1, [r7]
	cmp r0, r1
	beq _080DAD88
	movs r3, #1
	movs r7, #0x82
	lsls r7, r7, #2
	adds r0, r2, r7
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DAD88
	movs r3, #2
	movs r7, #0xec
	lsls r7, r7, #2
	adds r0, r2, r7
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DAD88
	movs r3, #3
	movs r7, #0xab
	lsls r7, r7, #3
	adds r0, r2, r7
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DAD88
	movs r3, #4
_080DAD88:
	ldr r0, _080DADB4 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080DADB8
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080DADB8
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080DAFCC
	.align 2, 0
_080DADB0: .4byte gUnk_02020EE0
_080DADB4: .4byte gUnk_03000510
_080DADB8:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0x12
	beq _080DADC2
	b _080DAF3C
_080DADC2:
	mov r0, sl
	adds r0, #0xbd
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DAEC4
	adds r0, r6, #0
	movs r1, #0
	bl sub_080DB1B8
	movs r2, #8
	ldrsh r0, [r5, r2]
	cmp r0, #1
	beq _080DADE0
	cmp r0, #2
	beq _080DADF4
_080DADE0:
	adds r0, r6, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DAE1E
	adds r0, r6, #0
	movs r1, #0
	bl sub_080DB1B8
	b _080DAE38
_080DADF4:
	adds r2, r6, #0
	adds r2, #0x80
	ldr r1, _080DAE28 @ =gUnk_08351530
	ldr r0, _080DAE2C @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x70
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080DAE38
	adds r0, r6, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DAE30
_080DAE1E:
	adds r0, r6, #0
	movs r1, #1
	bl sub_080DB1B8
	b _080DAE38
	.align 2, 0
_080DAE28: .4byte gUnk_08351530
_080DAE2C: .4byte gUnk_0203AD30
_080DAE30:
	adds r0, r6, #0
	movs r1, #0
	bl sub_080DB1B8
_080DAE38:
	ldr r1, _080DAEA4 @ =gUnk_02020EE0
	ldr r0, _080DAEA8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DAF34
	ldrb r0, [r6]
	cmp r0, #0
	bne _080DAE64
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080DAF34
_080DAE64:
	ldr r1, _080DAEAC @ =gUnk_08D60FA4
	ldr r4, _080DAEB0 @ =gSongTable
	ldr r7, _080DAEB4 @ =0x00000C0C
	adds r0, r4, r7
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080DAE88
	ldr r1, _080DAEB8 @ =0x00000C08
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080DAF34
_080DAE88:
	cmp r3, #0
	beq _080DAE9A
	ldr r0, _080DAEBC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080DAF34
_080DAE9A:
	ldr r0, _080DAEC0 @ =0x00000181
	bl m4aSongNumStart
	b _080DAF34
	.align 2, 0
_080DAEA4: .4byte gUnk_02020EE0
_080DAEA8: .4byte gUnk_0203AD3C
_080DAEAC: .4byte gUnk_08D60FA4
_080DAEB0: .4byte gSongTable
_080DAEB4: .4byte 0x00000C0C
_080DAEB8: .4byte 0x00000C08
_080DAEBC: .4byte gUnk_0203AD10
_080DAEC0: .4byte 0x00000181
_080DAEC4:
	adds r0, r6, #0
	movs r1, #0
	bl sub_080DB1B8
	ldr r1, _080DAFDC @ =gUnk_02020EE0
	ldr r0, _080DAFE0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DAF34
	ldrb r0, [r6]
	cmp r0, #0
	bne _080DAEF8
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080DAF34
_080DAEF8:
	ldr r1, _080DAFE4 @ =gUnk_08D60FA4
	ldr r4, _080DAFE8 @ =gSongTable
	ldr r2, _080DAFEC @ =0x00000C0C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080DAF1C
	ldr r7, _080DAFF0 @ =0x00000C08
	adds r0, r4, r7
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080DAF34
_080DAF1C:
	cmp r3, #0
	beq _080DAF2E
	ldr r0, _080DAFF4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080DAF34
_080DAF2E:
	ldr r0, _080DAFF8 @ =0x00000181
	bl m4aSongNumStart
_080DAF34:
	movs r0, #2
	adds r1, r6, #0
	bl sub_0806FE64
_080DAF3C:
	ldrh r1, [r5, #6]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080DAF8C
	mov r0, sl
	adds r0, #0xbd
	ldrb r1, [r0]
	movs r2, #8
	ldrsh r0, [r5, r2]
	cmp r1, r0
	blt _080DAF8C
	movs r3, #4
	ldrsh r0, [r5, r3]
	cmp r0, #0x64
	ble _080DAF8C
	adds r0, r6, #0
	adds r0, #0x80
	movs r4, #0
	ldrsh r0, [r0, r4]
	cmp r0, #0
	ble _080DAF6E
	adds r0, r6, #0
	bl sub_080DA4B0
_080DAF6E:
	mov r1, sl
	adds r1, #0xbc
	movs r0, #0
	strb r0, [r1]
	strh r0, [r5, #4]
	ldr r0, _080DAFFC @ =0x00000303
	strh r0, [r5, #0x18]
	adds r1, r5, #0
	adds r1, #0x26
	movs r0, #7
	strb r0, [r1]
	ldr r0, _080DB000 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080DB004 @ =sub_080DA768
	str r0, [r1, #8]
_080DAF8C:
	ldrb r0, [r5, #1]
	cmp r0, #0x20
	bne _080DAFC0
	mov r1, sl
	adds r1, #0xbd
	ldrb r2, [r1]
	movs r7, #8
	ldrsh r0, [r5, r7]
	cmp r2, r0
	bge _080DAFC0
	adds r0, r2, #1
	movs r2, #0
	strb r0, [r1]
	ldrh r1, [r5, #6]
	movs r0, #4
	orrs r0, r1
	strh r0, [r5, #6]
	strh r2, [r5, #4]
	ldr r0, [r6, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r6, #8]
	ldrh r1, [r5, #6]
	ldr r0, _080DB008 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r5, #6]
_080DAFC0:
	adds r0, r5, #0
	bl sub_0806FAC8
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
_080DAFCC:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DAFDC: .4byte gUnk_02020EE0
_080DAFE0: .4byte gUnk_0203AD3C
_080DAFE4: .4byte gUnk_08D60FA4
_080DAFE8: .4byte gSongTable
_080DAFEC: .4byte 0x00000C0C
_080DAFF0: .4byte 0x00000C08
_080DAFF4: .4byte gUnk_0203AD10
_080DAFF8: .4byte 0x00000181
_080DAFFC: .4byte 0x00000303
_080DB000: .4byte gCurTask
_080DB004: .4byte sub_080DA768
_080DB008: .4byte 0x0000FFFD

	thumb_func_start sub_080DB00C
sub_080DB00C: @ 0x080DB00C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080DB040 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080DB044 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DB048
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080DB050
	.align 2, 0
_080DB040: .4byte ObjectMain
_080DB044: .4byte ObjectDestroy
_080DB048:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080DB050:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r2, [r4, #8]
	movs r0, #0xa0
	lsls r0, r0, #1
	orrs r2, r0
	str r2, [r4, #8]
	ldr r0, [r4, #0xc]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0xc]
	adds r5, r4, #0
	adds r5, #0x82
	ldrb r0, [r5]
	cmp r0, #0x9c
	bne _080DB096
	movs r0, #0x80
	lsls r0, r0, #8
	orrs r2, r0
	movs r0, #0x80
	lsls r0, r0, #7
	orrs r2, r0
	str r2, [r4, #8]
	ldr r0, [r4, #0x5c]
	ldr r1, _080DB0F0 @ =0x00108020
	orrs r0, r1
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #6
	orrs r0, r1
	str r0, [r4, #0x5c]
_080DB096:
	movs r2, #4
	rsbs r2, r2, #0
	movs r0, #4
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r2, #0
	movs r3, #4
	bl sub_0803E2B0
	movs r1, #7
	rsbs r1, r1, #0
	movs r2, #5
	rsbs r2, r2, #0
	movs r0, #7
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #7
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	ldr r2, _080DB0F4 @ =gUnk_08351648
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080DB0F8 @ =sub_0809F840
	str r0, [r4, #0x7c]
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080DB0F0: .4byte 0x00108020
_080DB0F4: .4byte gUnk_08351648
_080DB0F8: .4byte sub_0809F840

	thumb_func_start sub_080DB0FC
sub_080DB0FC: @ 0x080DB0FC
	push {r4, lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080DB122
	adds r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080DB130
	b _080DB12C
_080DB122:
	subs r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080DB130
_080DB12C:
	movs r0, #0
	strh r0, [r1]
_080DB130:
	ldr r1, [r3, #0x44]
	movs r0, #0x94
	lsls r0, r0, #9
	cmp r1, r0
	ble _080DB1B2
	movs r0, #0x85
	adds r0, r0, r3
	mov ip, r0
	ldrb r0, [r0]
	cmp r0, #1
	bne _080DB17E
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DB1B2
	adds r0, r3, #0
	adds r0, #0x50
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	beq _080DB1B2
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r3, #8]
	movs r1, #0
	movs r0, #2
	mov r2, ip
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x62
	strb r1, [r0]
	adds r1, r3, #0
	adds r1, #0x52
	movs r0, #0xc0
	lsls r0, r0, #1
	b _080DB1B0
_080DB17E:
	cmp r0, #0
	bne _080DB1B2
	movs r2, #1
	mov r4, ip
	strb r2, [r4]
	adds r1, r3, #0
	adds r1, #0x52
	movs r0, #0xd0
	lsls r0, r0, #1
	strh r0, [r1]
	subs r1, #0x26
	movs r0, #0x20
	strb r0, [r1]
	ldr r0, [r3, #8]
	ands r0, r2
	cmp r0, #0
	beq _080DB1A8
	adds r1, #0x24
	movs r0, #0x80
	lsls r0, r0, #1
	b _080DB1B0
_080DB1A8:
	adds r1, r3, #0
	adds r1, #0x50
	movs r0, #0xff
	lsls r0, r0, #8
_080DB1B0:
	strh r0, [r1]
_080DB1B2:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080DB1B8
sub_080DB1B8: @ 0x080DB1B8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	lsls r1, r1, #0x18
	movs r0, #0x9b
	str r0, [sp]
	cmp r1, #0
	beq _080DB1D4
	movs r1, #0x9c
	str r1, [sp]
_080DB1D4:
	ldr r0, [r6, #0x40]
	asrs r7, r0, #8
	ldr r0, [r6, #0x44]
	asrs r5, r0, #8
	adds r0, r6, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DB206
	adds r2, r6, #0
	adds r2, #0x80
	ldr r1, _080DB2B8 @ =gUnk_08351530
	ldr r0, _080DB2BC @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x70
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080DB2D4
_080DB206:
	ldr r2, _080DB2C0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DB2C4 @ =0x00196225
	muls r0, r1, r0
	ldr r4, _080DB2C8 @ =0x3C6EF35F
	adds r0, r0, r4
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r1, #0
	ldr r0, _080DB2CC @ =0x00002AAA
	mov sl, r2
	adds r4, r6, #0
	adds r4, #0xbc
	subs r7, #0x32
	subs r5, #0x1c
	mov ip, r5
	ldr r2, _080DB2D0 @ =gUnk_020229D4
	mov r8, r2
	adds r2, r6, #0
	adds r2, #0xb0
	str r2, [sp, #4]
	subs r2, #0x5a
	str r2, [sp, #8]
	cmp r3, r0
	blt _080DB24C
	adds r5, r0, #0
_080DB23A:
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #4
	bhi _080DB24C
	adds r0, r1, #1
	muls r0, r5, r0
	cmp r3, r0
	bge _080DB23A
_080DB24C:
	adds r3, r1, #0
	ldrb r0, [r4]
	asrs r0, r3
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DB294
	ldr r5, _080DB2C0 @ =gRngVal
_080DB25C:
	ldr r1, [r5]
	ldr r0, _080DB2C4 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080DB2C8 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r5]
	lsrs r3, r0, #0x10
	movs r1, #0
	ldr r0, _080DB2CC @ =0x00002AAA
	cmp r3, r0
	blt _080DB286
	adds r2, r0, #0
_080DB274:
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #4
	bhi _080DB286
	adds r0, r1, #1
	muls r0, r2, r0
	cmp r3, r0
	bge _080DB274
_080DB286:
	adds r3, r1, #0
	ldrb r0, [r4]
	asrs r0, r3
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080DB25C
_080DB294:
	movs r0, #0x1a
	muls r0, r3, r0
	subs r7, r7, r0
	mov r0, sl
	ldr r1, [r0]
	ldr r0, _080DB2C4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080DB2C8 @ =0x3C6EF35F
	adds r0, r0, r1
	mov r2, sl
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0x18
	ands r0, r1
	mov r1, ip
	subs r5, r1, r0
	b _080DB384
	.align 2, 0
_080DB2B8: .4byte gUnk_08351530
_080DB2BC: .4byte gUnk_0203AD30
_080DB2C0: .4byte gRngVal
_080DB2C4: .4byte 0x00196225
_080DB2C8: .4byte 0x3C6EF35F
_080DB2CC: .4byte 0x00002AAA
_080DB2D0: .4byte gUnk_020229D4
_080DB2D4:
	ldr r2, _080DB3A4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DB3A8 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080DB3AC @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r1, #0
	movs r0, #0x80
	lsls r0, r0, #7
	mov sl, r2
	adds r4, r6, #0
	adds r4, #0xbc
	subs r5, #0x1c
	mov ip, r5
	subs r7, #0x3a
	mov sb, r7
	ldr r2, _080DB3B0 @ =gUnk_020229D4
	mov r8, r2
	adds r2, r6, #0
	adds r2, #0xb0
	str r2, [sp, #4]
	subs r2, #0x5a
	str r2, [sp, #8]
	cmp r3, r0
	blt _080DB31C
_080DB30A:
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #2
	bhi _080DB31C
	adds r0, r1, #1
	lsls r0, r0, #0xe
	cmp r3, r0
	bge _080DB30A
_080DB31C:
	adds r3, r1, #0
	ldrb r0, [r4]
	asrs r0, r3
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DB364
	ldr r2, _080DB3A4 @ =gRngVal
	movs r7, #1
	movs r5, #0x80
	lsls r5, r5, #7
_080DB332:
	ldr r1, [r2]
	ldr r0, _080DB3A8 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080DB3AC @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r1, #0
	cmp r3, r5
	blt _080DB358
_080DB346:
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #2
	bhi _080DB358
	adds r0, r1, #1
	lsls r0, r0, #0xe
	cmp r3, r0
	bge _080DB346
_080DB358:
	adds r3, r1, #0
	ldrb r0, [r4]
	asrs r0, r3
	ands r0, r7
	cmp r0, #0
	bne _080DB332
_080DB364:
	movs r0, #0x2a
	muls r0, r3, r0
	mov r1, sb
	subs r7, r1, r0
	mov r2, sl
	ldr r1, [r2]
	ldr r0, _080DB3A8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080DB3AC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0x18
	ands r0, r1
	mov r2, ip
	subs r5, r2, r0
_080DB384:
	movs r2, #1
	adds r0, r2, #0
	lsls r0, r3
	ldrb r1, [r4]
	orrs r0, r1
	strb r0, [r4]
	movs r3, #0
	mov r4, r8
	ldr r1, [r4]
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _080DB3B4
	orrs r1, r2
	str r1, [r4]
	b _080DB3D4
	.align 2, 0
_080DB3A4: .4byte gRngVal
_080DB3A8: .4byte 0x00196225
_080DB3AC: .4byte 0x3C6EF35F
_080DB3B0: .4byte gUnk_020229D4
_080DB3B4:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x1f
	bhi _080DB3D4
	movs r2, #1
	lsls r2, r3
	mov r0, r8
	ldr r1, [r0]
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _080DB3B4
	orrs r1, r2
	mov r2, r8
	str r1, [r2]
_080DB3D4:
	lsls r1, r3, #3
	adds r1, r1, r3
	lsls r1, r1, #2
	ldr r3, _080DB438 @ =gUnk_020229E0
	adds r1, r1, r3
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	strh r7, [r1, #6]
	strh r5, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	mov r4, sp
	ldrb r4, [r4]
	strb r4, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	ldr r4, [sp, #4]
	ldr r0, [r4]
	ldrb r0, [r0, #0x10]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldr r2, [sp, #8]
	ldrb r0, [r2]
	bl CreateObject
	str r6, [r0, #0x70]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DB438: .4byte gUnk_020229E0

	thumb_func_start sub_080DB43C
sub_080DB43C: @ 0x080DB43C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	str r4, [sp]
	ldr r3, _080DB4C0 @ =gRngVal
	ldr r0, [r3]
	ldr r7, _080DB4C4 @ =0x00196225
	muls r0, r7, r0
	ldr r6, _080DB4C8 @ =0x3C6EF35F
	adds r2, r0, r6
	str r2, [r3]
	lsrs r1, r2, #0x10
	movs r0, #3
	ands r1, r0
	ldr r5, _080DB4CC @ =gUnk_020229D4
	cmp r1, #3
	bne _080DB47C
	mov ip, r3
	movs r3, #3
	adds r0, r2, #0
_080DB46C:
	muls r0, r7, r0
	adds r0, r0, r6
	lsrs r1, r0, #0x10
	ands r1, r3
	cmp r1, #3
	beq _080DB46C
	mov r2, ip
	str r0, [r2]
_080DB47C:
	ldr r0, [r4, #0x40]
	asrs r0, r0, #8
	subs r0, #0x10
	mov r8, r0
	ldr r0, [r4, #0x44]
	asrs r0, r0, #8
	adds r0, #0x28
	mov ip, r0
	ldr r3, [sp]
	adds r3, #0xb8
	mov sl, r3
	movs r3, #0
	movs r6, #1
	ldr r2, [r5]
	adds r0, r2, #0
	ands r0, r6
	mov r7, sl
	str r7, [sp, #4]
	adds r7, r1, #0
	adds r7, #0x1f
	movs r1, #0xb0
	adds r1, r1, r4
	mov sb, r1
	adds r1, r4, #0
	adds r1, #0x56
	str r1, [sp, #0xc]
	adds r1, #0xa
	str r1, [sp, #8]
	cmp r0, #0
	bne _080DB4D0
	orrs r2, r6
	str r2, [r5]
	b _080DB4EC
	.align 2, 0
_080DB4C0: .4byte gRngVal
_080DB4C4: .4byte 0x00196225
_080DB4C8: .4byte 0x3C6EF35F
_080DB4CC: .4byte gUnk_020229D4
_080DB4D0:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x1f
	bhi _080DB4EC
	movs r2, #1
	lsls r2, r3
	ldr r1, [r5]
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _080DB4D0
	orrs r1, r2
	str r1, [r5]
_080DB4EC:
	lsls r1, r3, #3
	adds r1, r1, r3
	lsls r1, r1, #2
	ldr r2, _080DB5C4 @ =gUnk_020229E0
	adds r1, r1, r2
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r5, r8
	strh r5, [r1, #6]
	mov r0, ip
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	strb r7, [r1, #0xc]
	movs r0, #0x80
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r5, sb
	ldr r0, [r5]
	ldrb r0, [r0, #0x10]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldr r7, [sp, #0xc]
	ldrb r0, [r7]
	bl CreateObject
	mov r1, sl
	str r0, [r1]
	ldr r2, [sp, #4]
	ldr r0, [r2]
	ldr r3, [sp]
	str r3, [r0, #0x70]
	ldr r1, _080DB5C8 @ =gUnk_02020EE0
	ldr r0, _080DB5CC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r5, [sp, #8]
	ldrh r5, [r5]
	cmp r0, r5
	bne _080DB5B2
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DB572
	ldrb r0, [r7]
	cmp r0, r2
	bne _080DB5B2
_080DB572:
	ldr r1, _080DB5D0 @ =gUnk_08D60FA4
	ldr r4, _080DB5D4 @ =gSongTable
	ldr r7, _080DB5D8 @ =0x00000C14
	adds r0, r4, r7
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080DB598
	movs r1, #0xc1
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080DB5B2
_080DB598:
	cmp r3, #0
	beq _080DB5AA
	ldr r0, _080DB5DC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080DB5B2
_080DB5AA:
	movs r0, #0xc1
	lsls r0, r0, #1
	bl m4aSongNumStart
_080DB5B2:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DB5C4: .4byte gUnk_020229E0
_080DB5C8: .4byte gUnk_02020EE0
_080DB5CC: .4byte gUnk_0203AD3C
_080DB5D0: .4byte gUnk_08D60FA4
_080DB5D4: .4byte gSongTable
_080DB5D8: .4byte 0x00000C14
_080DB5DC: .4byte gUnk_0203AD10

	thumb_func_start sub_080DB5E0
sub_080DB5E0: @ 0x080DB5E0
	push {r4, lr}
	adds r3, r0, #0
	movs r4, #0
	movs r0, #0
	strh r0, [r3, #4]
	adds r0, r3, #0
	adds r0, #0x83
	strb r4, [r0]
	ldr r2, _080DB630 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DB634 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080DB638 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DB60E
	ldr r0, [r3, #8]
	orrs r0, r1
	str r0, [r3, #8]
_080DB60E:
	ldr r0, [r3, #8]
	movs r1, #8
	orrs r0, r1
	adds r1, #0xf8
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r3, #8]
	adds r0, r3, #0
	adds r0, #0x85
	strb r4, [r0]
	ldr r0, _080DB63C @ =sub_080DB7FC
	str r0, [r3, #0x78]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DB630: .4byte gRngVal
_080DB634: .4byte 0x00196225
_080DB638: .4byte 0x3C6EF35F
_080DB63C: .4byte sub_080DB7FC

	thumb_func_start sub_080DB640
sub_080DB640: @ 0x080DB640
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DB660 @ =sub_080DA2BC
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r4, #0x52
	strh r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DB660: .4byte sub_080DA2BC

	thumb_func_start sub_080DB664
sub_080DB664: @ 0x080DB664
	push {lr}
	adds r2, r0, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #4
	beq _080DB678
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
_080DB678:
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x3c
	ble _080DB690
	movs r0, #0
	strh r0, [r2, #4]
	adds r0, r2, #0
	bl sub_080DA4B0
_080DB690:
	pop {r0}
	bx r0

	thumb_func_start sub_080DB694
sub_080DB694: @ 0x080DB694
	push {lr}
	adds r2, r0, #0
	movs r1, #4
	ldrsh r0, [r2, r1]
	cmp r0, #0x23
	ble _080DB6B0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	adds r1, r2, #0
	adds r1, #0x83
	movs r0, #6
	strb r0, [r1]
_080DB6B0:
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DB6BC
sub_080DB6BC: @ 0x080DB6BC
	movs r1, #0
	strh r1, [r0, #4]
	adds r2, r0, #0
	adds r2, #0x83
	movs r1, #1
	strb r1, [r2]
	ldr r1, [r0, #8]
	movs r2, #0x80
	lsls r2, r2, #1
	orrs r1, r2
	str r1, [r0, #8]
	ldr r1, _080DB6D8 @ =sub_080DB6DC
	str r1, [r0, #0x78]
	bx lr
	.align 2, 0
_080DB6D8: .4byte sub_080DB6DC

	thumb_func_start sub_080DB6DC
sub_080DB6DC: @ 0x080DB6DC
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #8
	bne _080DB6FC
	movs r0, #2
	adds r1, r4, #0
	bl sub_0806FE64
	adds r0, r4, #0
	bl sub_080DB43C
_080DB6FC:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DB726
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080DB738 @ =gUnk_08351530
	ldr r0, _080DB73C @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x70
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080DB740
_080DB726:
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0x38
	ble _080DB74E
	adds r0, r4, #0
	bl sub_080DB754
	b _080DB74E
	.align 2, 0
_080DB738: .4byte gUnk_08351530
_080DB73C: .4byte gUnk_0203AD30
_080DB740:
	movs r3, #4
	ldrsh r0, [r4, r3]
	cmp r0, #0x52
	ble _080DB74E
	adds r0, r4, #0
	bl sub_080DB754
_080DB74E:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080DB754
sub_080DB754: @ 0x080DB754
	movs r1, #0
	strh r1, [r0, #4]
	adds r2, r0, #0
	adds r2, #0x83
	movs r1, #2
	strb r1, [r2]
	ldr r1, [r0, #8]
	movs r2, #0x80
	lsls r2, r2, #1
	orrs r1, r2
	str r1, [r0, #8]
	ldr r1, _080DB770 @ =sub_080DB774
	str r1, [r0, #0x78]
	bx lr
	.align 2, 0
_080DB770: .4byte sub_080DB774

	thumb_func_start sub_080DB774
sub_080DB774: @ 0x080DB774
	push {lr}
	adds r1, r0, #0
	ldrh r0, [r1, #4]
	adds r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	ble _080DB78C
	adds r0, r1, #0
	bl sub_080DA4B0
_080DB78C:
	pop {r0}
	bx r0

	thumb_func_start sub_080DB790
sub_080DB790: @ 0x080DB790
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DB7AA
	adds r0, r2, #0
	adds r0, #0xbe
	ldrh r0, [r0]
	cmp r0, #0x37
	bls _080DB7D2
	b _080DB7B4
_080DB7AA:
	adds r0, r2, #0
	adds r0, #0xbe
	ldrh r0, [r0]
	cmp r0, #0x57
	bls _080DB7D2
_080DB7B4:
	adds r1, #0xbe
	movs r0, #0
	strh r0, [r1]
	strh r0, [r2, #4]
	adds r1, r2, #0
	adds r1, #0x83
	movs r0, #3
	strb r0, [r1]
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r2, #8]
	ldr r0, _080DB7D8 @ =sub_080DB7DC
	str r0, [r2, #0x78]
_080DB7D2:
	pop {r0}
	bx r0
	.align 2, 0
_080DB7D8: .4byte sub_080DB7DC

	thumb_func_start sub_080DB7DC
sub_080DB7DC: @ 0x080DB7DC
	push {lr}
	adds r2, r0, #0
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	ldr r1, _080DB7F8 @ =0x03E70000
	cmp r0, r1
	ble _080DB7F4
	adds r0, r2, #0
	bl sub_080DA4B0
_080DB7F4:
	pop {r0}
	bx r0
	.align 2, 0
_080DB7F8: .4byte 0x03E70000

	thumb_func_start sub_080DB7FC
sub_080DB7FC: @ 0x080DB7FC
	push {lr}
	adds r2, r0, #0
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080DB818
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	eors r0, r1
	str r0, [r2, #8]
_080DB818:
	movs r0, #4
	ldrsh r1, [r2, r0]
	cmp r1, #0x24
	bne _080DB82A
	adds r0, r2, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DB838
_080DB82A:
	cmp r1, #0x3c
	bne _080DB84C
	adds r0, r2, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DB84C
_080DB838:
	movs r0, #0
	strh r0, [r2, #4]
	ldr r0, [r2, #8]
	ldr r1, _080DB850 @ =0xFFFFFBFF
	ands r0, r1
	ldr r1, _080DB854 @ =0xFFFFF5B7
	ands r0, r1
	str r0, [r2, #8]
	ldr r0, _080DB858 @ =sub_080DB0FC
	str r0, [r2, #0x78]
_080DB84C:
	pop {r0}
	bx r0
	.align 2, 0
_080DB850: .4byte 0xFFFFFBFF
_080DB854: .4byte 0xFFFFF5B7
_080DB858: .4byte sub_080DB0FC

	thumb_func_start sub_080DB85C
sub_080DB85C: @ 0x080DB85C
	push {lr}
	adds r3, r0, #0
	ldr r0, _080DB8A0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	bne _080DB89A
	ldr r0, [r3, #0xc]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080DB89A
	ldr r2, _080DB8A4 @ =gUnk_08351648
	adds r0, r3, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrb r1, [r0]
	adds r0, r3, #0
	adds r0, #0x83
	strb r1, [r0]
_080DB89A:
	pop {r0}
	bx r0
	.align 2, 0
_080DB8A0: .4byte gUnk_03000510
_080DB8A4: .4byte gUnk_08351648

	thumb_func_start sub_080DB8A8
sub_080DB8A8: @ 0x080DB8A8
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r7, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _080DB8DC @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080DB8E0 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xc4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DB8E4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DB8EC
	.align 2, 0
_080DB8DC: .4byte ObjectMain
_080DB8E0: .4byte ObjectDestroy
_080DB8E4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DB8EC:
	adds r5, r0, #0
	adds r6, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r5, #0xc]
	movs r2, #1
	orrs r0, r2
	str r0, [r5, #0xc]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #0x12
	orrs r0, r1
	ldr r1, _080DB9FC @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	movs r1, #0xb0
	lsls r1, r1, #8
	str r1, [r5, #0x40]
	orrs r0, r2
	str r0, [r5, #8]
	ldr r0, [r5, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	ldr r1, _080DBA00 @ =0x001080A0
	orrs r0, r1
	str r0, [r5, #0x5c]
	ldr r0, [r5, #0x68]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r5, #0x68]
	movs r1, #0x1a
	rsbs r1, r1, #0
	subs r2, #0x15
	movs r0, #0xe
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #0x1a
	bl sub_0803E2B0
	adds r0, r5, #0
	bl ObjectInitSprite
	ldr r2, _080DBA04 @ =gCurLevelInfo
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080DBA08 @ =0x0000065E
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r4, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	movs r2, #0
	bl sub_08002A44
	adds r0, r4, #0
	movs r1, #0
	bl sub_08002A1C
	ldr r2, _080DBA0C @ =gUnk_02020EE0
	ldr r0, _080DBA10 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DB9C8
	ldr r0, _080DBA14 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080DB9C8
	adds r0, r4, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080DB9C8:
	adds r0, r5, #0
	adds r0, #0x9e
	movs r4, #0
	strb r4, [r0]
	ldr r0, _080DBA18 @ =sub_080DEF64
	str r0, [r5, #0x7c]
	adds r0, r5, #0
	bl sub_080DF000
	adds r0, r6, #0
	adds r0, #0xbc
	str r4, [r0]
	adds r0, #4
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080DB9FC: .4byte 0xFFFFFBFF
_080DBA00: .4byte 0x001080A0
_080DBA04: .4byte gCurLevelInfo
_080DBA08: .4byte 0x0000065E
_080DBA0C: .4byte gUnk_02020EE0
_080DBA10: .4byte gUnk_0203AD3C
_080DBA14: .4byte gUnk_0203AD20
_080DBA18: .4byte sub_080DEF64

	thumb_func_start sub_080DBA1C
sub_080DBA1C: @ 0x080DBA1C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	bl sub_0803D368
	adds r6, r0, #0
	adds r7, r5, #0
	adds r7, #0xac
	str r6, [r7]
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r6, #0xc]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _080DBAEA
	adds r0, r5, #0
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DBAEA
	ldr r1, [r5, #0x40]
	ldr r2, [r5, #0x44]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r4, [r0]
	movs r3, #0x1a
	ldrsh r0, [r4, r3]
	mov ip, r0
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	adds r0, r6, #0
	mov r3, ip
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080DBAEA
	ldr r3, _080DBAF4 @ =gCurLevelInfo
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	movs r2, #0xcd
	lsls r2, r2, #3
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa0
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa4
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa4
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa6
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa8
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xac
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r2, r5, #0
	adds r2, #0xaa
	strh r0, [r2]
	adds r0, r5, #0
	bl sub_080DF2BC
_080DBAEA:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DBAF4: .4byte gCurLevelInfo

	thumb_func_start sub_080DBAF8
sub_080DBAF8: @ 0x080DBAF8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	mov sb, r5
	adds r3, r5, #0
	adds r3, #0x9e
	ldrb r2, [r3]
	cmp r2, #0
	bne _080DBB30
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #8
	beq _080DBB20
	b _080DBC74
_080DBB20:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #2
	strb r0, [r1]
	strh r2, [r5, #4]
	movs r0, #1
	strb r0, [r3]
	b _080DBC74
_080DBB30:
	adds r2, r5, #0
	adds r2, #0x52
	movs r0, #0
	ldrsh r1, [r2, r0]
	ldr r0, [r5, #0x44]
	adds r0, r0, r1
	movs r1, #0xc0
	lsls r1, r1, #6
	mov sl, r2
	cmp r0, r1
	ble _080DBB50
	str r1, [r5, #0x44]
	adds r0, r5, #0
	bl sub_080DBE3C
	b _080DBC74
_080DBB50:
	ldrh r0, [r5, #4]
	adds r0, #1
	movs r4, #0
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x6f
	bne _080DBB66
	adds r0, r5, #0
	adds r0, #0x83
	strb r4, [r0]
_080DBB66:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0x20
	bne _080DBC4C
	adds r0, r5, #0
	bl sub_08034E14
	cmp r0, #0
	beq _080DBB7A
	strb r4, [r0, #9]
_080DBB7A:
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r4, [r0]
	adds r3, r4, #0
	subs r3, #0x38
	ldr r2, _080DBC84 @ =gCurLevelInfo
	subs r0, #0x2c
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r2, _080DBC88 @ =0x0000065E
	adds r0, r0, r2
	ldrb r6, [r0]
	lsls r3, r3, #0x10
	asrs r1, r3, #0x10
	cmp r1, #0
	blt _080DBC4C
	ldr r0, _080DBC8C @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080DBC4C
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080DBC4C
	adds r0, r4, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r7, r3, #0
	movs r3, #0x60
	adds r3, r3, r5
	mov r8, r3
	cmp r0, #0xf
	bls _080DBC0A
	movs r4, #1
_080DBBD2:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _080DBBD2
	adds r0, r6, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	movs r2, #0
	bl sub_08002A44
_080DBC0A:
	ldr r1, _080DBC8C @ =gUnk_08352D80
	asrs r0, r7, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r6, #0
	bl sub_08002A1C
	ldr r2, _080DBC90 @ =gUnk_02020EE0
	ldr r0, _080DBC94 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, r8
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DBC4C
	ldr r0, _080DBC98 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080DBC4C
	adds r0, r6, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080DBC4C:
	movs r2, #4
	ldrsh r0, [r5, r2]
	cmp r0, #0x4c
	bne _080DBC74
	mov r4, sb
	adds r4, #0xb4
	ldr r2, [r4]
	ldrh r1, [r2, #6]
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2, #6]
	adds r0, r5, #0
	bl sub_080DCF18
	str r0, [r4]
	ldr r0, _080DBC9C @ =0x0000FF80
	mov r1, sl
	strh r0, [r1]
_080DBC74:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DBC84: .4byte gCurLevelInfo
_080DBC88: .4byte 0x0000065E
_080DBC8C: .4byte gUnk_08352D80
_080DBC90: .4byte gUnk_02020EE0
_080DBC94: .4byte gUnk_0203AD3C
_080DBC98: .4byte gUnk_0203AD20
_080DBC9C: .4byte 0x0000FF80

	thumb_func_start sub_080DBCA0
sub_080DBCA0: @ 0x080DBCA0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	movs r6, #0
	movs r0, #3
	mov sb, r0
	movs r1, #2
	mov r8, r1
	mov sl, r1
	adds r7, r5, #0
	adds r4, r5, #0
	adds r4, #0xc0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DBD08
	adds r3, r5, #0
	adds r3, #0x85
	ldrb r0, [r3]
	cmp r0, #4
	bls _080DBCD6
	strb r6, [r3]
	movs r0, #1
	strb r0, [r4]
	b _080DBCF2
_080DBCD6:
	ldr r2, _080DBCFC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DBD00 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080DBD04 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DBD08
	strb r6, [r3]
	strb r1, [r4]
_080DBCF2:
	adds r0, r5, #0
	bl sub_080DF158
	b _080DBE2E
	.align 2, 0
_080DBCFC: .4byte gRngVal
_080DBD00: .4byte 0x00196225
_080DBD04: .4byte 0x3C6EF35F
_080DBD08:
	adds r1, r7, #0
	adds r1, #0xc0
	movs r0, #0
	strb r0, [r1]
	adds r1, r5, #0
	adds r1, #0x85
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_0803D368
	adds r4, r0, #0
	adds r3, r5, #0
	adds r3, #0xac
	str r4, [r3]
	ldr r2, _080DBD80 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DBD84 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080DBD88 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r6, r0, #0x10
	movs r0, #7
	ands r6, r0
	ldr r0, [r4, #0x40]
	ldr r1, _080DBD8C @ =0xFFFFD000
	adds r0, r0, r1
	movs r1, #0xa0
	lsls r1, r1, #8
	cmp r0, r1
	bls _080DBD4E
	movs r0, #1
	mov sb, r0
_080DBD4E:
	ldr r1, [r4, #0x44]
	movs r0, #0x90
	lsls r0, r0, #7
	adds r4, r7, #0
	adds r4, #0xc1
	cmp r1, r0
	ble _080DBD62
	ldrb r0, [r4]
	cmp r0, #0
	beq _080DBD66
_080DBD62:
	movs r1, #0
	mov r8, r1
_080DBD66:
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DBD94
	ldr r0, [r3]
	ldr r1, [r0, #0x40]
	ldr r0, _080DBD90 @ =0x00004FFF
	adds r2, r7, #0
	adds r2, #0xc2
	cmp r1, r0
	ble _080DBDB0
	b _080DBDA4
	.align 2, 0
_080DBD80: .4byte gRngVal
_080DBD84: .4byte 0x00196225
_080DBD88: .4byte 0x3C6EF35F
_080DBD8C: .4byte 0xFFFFD000
_080DBD90: .4byte 0x00004FFF
_080DBD94:
	ldr r0, [r3]
	ldr r1, [r0, #0x40]
	movs r0, #0xb0
	lsls r0, r0, #8
	adds r2, r7, #0
	adds r2, #0xc2
	cmp r1, r0
	bgt _080DBDB0
_080DBDA4:
	adds r1, r7, #0
	adds r1, #0xc2
	ldrb r0, [r1]
	adds r2, r1, #0
	cmp r0, #0
	beq _080DBDB4
_080DBDB0:
	movs r0, #0
	mov sl, r0
_080DBDB4:
	cmp r6, r8
	bhs _080DBDC8
	movs r1, #0
	movs r0, #1
	strb r0, [r4]
	strb r1, [r2]
	adds r0, r5, #0
	bl sub_080DF02C
	b _080DBE2E
_080DBDC8:
	mov r0, r8
	add r0, sb
	cmp r6, r0
	bge _080DBDDE
	movs r0, #0
	strb r0, [r4]
	strb r0, [r2]
	adds r0, r5, #0
	bl sub_080DBF40
	b _080DBE2E
_080DBDDE:
	add r0, sl
	cmp r6, r0
	bge _080DBDF4
	movs r1, #0
	movs r0, #1
	strb r0, [r2]
	strb r1, [r4]
	adds r0, r5, #0
	bl sub_080DCB38
	b _080DBE2E
_080DBDF4:
	movs r0, #0
	strb r0, [r4]
	strb r0, [r2]
	ldr r2, _080DBE1C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DBE20 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080DBE24 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DBE28
	adds r0, r5, #0
	bl sub_080DF118
	b _080DBE2E
	.align 2, 0
_080DBE1C: .4byte gRngVal
_080DBE20: .4byte 0x00196225
_080DBE24: .4byte 0x3C6EF35F
_080DBE28:
	adds r0, r5, #0
	bl sub_080DCDC0
_080DBE2E:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080DBE3C
sub_080DBE3C: @ 0x080DBE3C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DBE60 @ =sub_080DBEE0
	movs r1, #0
	bl ObjectSetFunc
	ldr r1, [r4, #0x40]
	ldr r0, _080DBE64 @ =0x00007FFF
	cmp r1, r0
	bgt _080DBE68
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0xa0
	lsls r0, r0, #7
	b _080DBE74
	.align 2, 0
_080DBE60: .4byte sub_080DBEE0
_080DBE64: .4byte 0x00007FFF
_080DBE68:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0xb0
	lsls r0, r0, #8
_080DBE74:
	str r0, [r4, #0x40]
	movs r0, #0xc0
	lsls r0, r0, #6
	str r0, [r4, #0x44]
	adds r0, r4, #0
	adds r0, #0x50
	movs r2, #0
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	ldr r0, [r4, #8]
	ldr r1, _080DBED4 @ =0xFFFFFDFF
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	strh r2, [r4, #4]
	adds r3, r4, #0
	adds r3, #0x9f
	movs r0, #2
	strb r0, [r3]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DBEC8
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080DBED8 @ =gUnk_08351530
	ldr r0, _080DBEDC @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x68
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r4, #0
	ldrsh r1, [r2, r4]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080DBECC
_080DBEC8:
	movs r0, #1
	strb r0, [r3]
_080DBECC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DBED4: .4byte 0xFFFFFDFF
_080DBED8: .4byte gUnk_08351530
_080DBEDC: .4byte gUnk_0203AD30

	thumb_func_start sub_080DBEE0
sub_080DBEE0: @ 0x080DBEE0
	push {lr}
	adds r3, r0, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	cmp r1, #0
	bne _080DBEF8
	subs r0, #0x4d
	strh r1, [r0]
	adds r0, r3, #0
	bl sub_080DBCA0
	b _080DBF3C
_080DBEF8:
	ldrh r0, [r3, #4]
	lsls r1, r0, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0x2f
	bgt _080DBF18
	ldr r0, _080DBF14 @ =gUnk_083567D4
	asrs r1, r1, #0x13
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r2, r3, #0
	adds r2, #0x52
	strh r0, [r2]
	b _080DBF20
	.align 2, 0
_080DBF14: .4byte gUnk_083567D4
_080DBF18:
	adds r1, r3, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
_080DBF20:
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2f
	ble _080DBF3C
	movs r0, #0
	strh r0, [r3, #4]
	adds r1, r3, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
_080DBF3C:
	pop {r0}
	bx r0

	thumb_func_start sub_080DBF40
sub_080DBF40: @ 0x080DBF40
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _080DC01C @ =sub_080DC050
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r0, #0x5a
	strh r0, [r4, #4]
	ldr r1, _080DC020 @ =gUnk_02020EE0
	ldr r0, _080DC024 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DBFC8
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DBF88
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080DBFC8
_080DBF88:
	ldr r1, _080DC028 @ =gUnk_08D60FA4
	ldr r5, _080DC02C @ =gSongTable
	ldr r2, _080DC030 @ =0x00000C04
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080DBFAE
	movs r1, #0xc0
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080DBFC8
_080DBFAE:
	cmp r3, #0
	beq _080DBFC0
	ldr r0, _080DC034 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080DBFC8
_080DBFC0:
	movs r0, #0xc0
	lsls r0, r0, #1
	bl m4aSongNumStart
_080DBFC8:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DBFF2
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080DC038 @ =gUnk_08351530
	ldr r0, _080DC03C @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x68
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080DC016
_080DBFF2:
	ldr r2, _080DC040 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DC044 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080DC048 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DC016
	ldr r0, _080DC04C @ =sub_080DC1CC
	str r0, [r4, #0x78]
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0
	strb r0, [r1]
_080DC016:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DC01C: .4byte sub_080DC050
_080DC020: .4byte gUnk_02020EE0
_080DC024: .4byte gUnk_0203AD3C
_080DC028: .4byte gUnk_08D60FA4
_080DC02C: .4byte gSongTable
_080DC030: .4byte 0x00000C04
_080DC034: .4byte gUnk_0203AD10
_080DC038: .4byte gUnk_08351530
_080DC03C: .4byte gUnk_0203AD30
_080DC040: .4byte gRngVal
_080DC044: .4byte 0x00196225
_080DC048: .4byte 0x3C6EF35F
_080DC04C: .4byte sub_080DC1CC

	thumb_func_start sub_080DC050
sub_080DC050: @ 0x080DC050
	push {r4, r5, r6, lr}
	mov ip, r0
	mov r3, ip
	adds r3, #0x9e
	ldrb r0, [r3]
	ldr r6, _080DC114 @ =gUnk_08356418
	cmp r0, #0
	bne _080DC14C
	mov r1, ip
	adds r1, #0x9f
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrb r2, [r1]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	adds r4, r1, #0
	cmp r0, #0
	bne _080DC080
	subs r0, r2, #1
	strb r0, [r4]
_080DC080:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	strb r0, [r3]
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r1, [r0, #9]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _080DC0A6
	mov r0, ip
	adds r0, #0x83
	strb r1, [r0]
_080DC0A6:
	ldrb r0, [r4]
	cmp r0, #0
	beq _080DC118
	adds r2, r0, #0
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r3, [r1]
	movs r2, #0
	ldrsh r1, [r1, r2]
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r1, r0
	beq _080DC0E4
	mov r2, ip
	adds r2, #0x50
	strh r3, [r2]
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DC0E4
	rsbs r0, r3, #0
	strh r0, [r2]
_080DC0E4:
	mov r0, ip
	adds r0, #0x9f
	ldrb r2, [r0]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r2, [r1, #2]
	movs r3, #2
	ldrsh r1, [r1, r3]
	movs r3, #2
	ldrsh r0, [r0, r3]
	cmp r1, r0
	beq _080DC14C
	mov r0, ip
	adds r0, #0x52
	strh r2, [r0]
	b _080DC14C
	.align 2, 0
_080DC114: .4byte gUnk_08356418
_080DC118:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r0, [r0, #2]
	mov r3, ip
	adds r3, #0x52
	strh r0, [r3]
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r5, [r0]
	mov r2, ip
	adds r2, #0x50
	strh r5, [r2]
	mov r0, ip
	ldr r1, [r0, #8]
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080DC176
	rsbs r0, r5, #0
	strh r0, [r2]
_080DC14C:
	mov r2, ip
	ldr r1, [r2, #8]
	movs r0, #1
	ands r1, r0
	mov r4, ip
	adds r4, #0x9f
	adds r2, #0x50
	mov r3, ip
	adds r3, #0x52
	cmp r1, #0
	beq _080DC176
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r1, [r2]
	ldrh r0, [r0, #4]
	subs r1, r1, r0
	strh r1, [r2]
	b _080DC188
_080DC176:
	ldrb r0, [r4]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r6
	ldrh r0, [r1, #4]
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2]
_080DC188:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r0, [r0, #6]
	ldrh r2, [r3]
	adds r0, r0, r2
	strh r0, [r3]
	mov r1, ip
	adds r1, #0x9e
	ldrb r0, [r1]
	subs r2, r0, #1
	strb r2, [r1]
	ldrb r1, [r4]
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _080DC1C6
	lsls r0, r2, #0x18
	cmp r0, #0
	bne _080DC1C6
	mov r0, ip
	bl sub_080DBE3C
_080DC1C6:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080DC1CC
sub_080DC1CC: @ 0x080DC1CC
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r3, r5, #0
	adds r3, #0x9e
	ldrb r0, [r3]
	ldr r7, _080DC28C @ =gUnk_0835658C
	cmp r0, #0
	bne _080DC2C2
	adds r1, r5, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrb r2, [r1]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrb r0, [r0, #8]
	adds r4, r1, #0
	cmp r0, #0
	bne _080DC1FC
	subs r0, r2, #1
	strb r0, [r4]
_080DC1FC:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrb r0, [r0, #8]
	strb r0, [r3]
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrb r1, [r0, #9]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _080DC222
	adds r0, r5, #0
	adds r0, #0x83
	strb r1, [r0]
_080DC222:
	ldrb r0, [r4]
	cmp r0, #0
	beq _080DC290
	adds r2, r0, #0
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r7
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrh r3, [r1]
	movs r2, #0
	ldrsh r1, [r1, r2]
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r1, r0
	beq _080DC25E
	adds r2, r5, #0
	adds r2, #0x50
	strh r3, [r2]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DC25E
	rsbs r0, r3, #0
	strh r0, [r2]
_080DC25E:
	adds r0, r5, #0
	adds r0, #0x9f
	ldrb r2, [r0]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r7
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrh r2, [r1, #2]
	movs r3, #2
	ldrsh r1, [r1, r3]
	movs r3, #2
	ldrsh r0, [r0, r3]
	cmp r1, r0
	beq _080DC2C2
	adds r0, r5, #0
	adds r0, #0x52
	strh r2, [r0]
	b _080DC2C2
	.align 2, 0
_080DC28C: .4byte gUnk_0835658C
_080DC290:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrh r0, [r0, #2]
	adds r3, r5, #0
	adds r3, #0x52
	strh r0, [r3]
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrh r6, [r0]
	adds r2, r5, #0
	adds r2, #0x50
	strh r6, [r2]
	ldr r1, [r5, #8]
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080DC2EC
	rsbs r0, r6, #0
	strh r0, [r2]
_080DC2C2:
	ldr r1, [r5, #8]
	movs r0, #1
	ands r1, r0
	adds r4, r5, #0
	adds r4, #0x9f
	adds r2, r5, #0
	adds r2, #0x50
	adds r3, r5, #0
	adds r3, #0x52
	cmp r1, #0
	beq _080DC2EC
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrh r1, [r2]
	ldrh r0, [r0, #4]
	subs r1, r1, r0
	strh r1, [r2]
	b _080DC2FE
_080DC2EC:
	ldrb r0, [r4]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r7
	ldrh r0, [r1, #4]
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2]
_080DC2FE:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrh r0, [r0, #6]
	ldrh r2, [r3]
	adds r0, r0, r2
	strh r0, [r3]
	adds r2, r5, #0
	adds r2, #0x9e
	ldrb r0, [r2]
	subs r3, r0, #1
	strb r3, [r2]
	ldrb r1, [r4]
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrb r0, [r0, #8]
	adds r4, r2, #0
	cmp r0, #0
	bne _080DC33E
	lsls r0, r3, #0x18
	cmp r0, #0
	bne _080DC33E
	adds r0, r5, #0
	bl sub_080DBE3C
_080DC33E:
	ldrh r1, [r4]
	movs r0, #0x80
	lsls r0, r0, #4
	cmp r1, r0
	bne _080DC3B4
	ldr r1, _080DC3BC @ =gUnk_02020EE0
	ldr r0, _080DC3C0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DC3B4
	ldrb r0, [r5]
	cmp r0, #0
	bne _080DC374
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080DC3B4
_080DC374:
	ldr r1, _080DC3C4 @ =gUnk_08D60FA4
	ldr r4, _080DC3C8 @ =gSongTable
	ldr r3, _080DC3CC @ =0x00000C04
	adds r0, r4, r3
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080DC39A
	movs r1, #0xc0
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080DC3B4
_080DC39A:
	cmp r3, #0
	beq _080DC3AC
	ldr r0, _080DC3D0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080DC3B4
_080DC3AC:
	movs r0, #0xc0
	lsls r0, r0, #1
	bl m4aSongNumStart
_080DC3B4:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DC3BC: .4byte gUnk_02020EE0
_080DC3C0: .4byte gUnk_0203AD3C
_080DC3C4: .4byte gUnk_08D60FA4
_080DC3C8: .4byte gSongTable
_080DC3CC: .4byte 0x00000C04
_080DC3D0: .4byte gUnk_0203AD10

	thumb_func_start sub_080DC3D4
sub_080DC3D4: @ 0x080DC3D4
	push {r4, r5, r6, lr}
	mov ip, r0
	mov r3, ip
	adds r3, #0x9e
	ldrb r0, [r3]
	ldr r6, _080DC498 @ =gUnk_0835670C
	cmp r0, #0
	bne _080DC4D0
	mov r1, ip
	adds r1, #0x9f
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrb r2, [r1]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	adds r4, r1, #0
	cmp r0, #0
	bne _080DC404
	subs r0, r2, #1
	strb r0, [r4]
_080DC404:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	strb r0, [r3]
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r1, [r0, #9]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _080DC42A
	mov r0, ip
	adds r0, #0x83
	strb r1, [r0]
_080DC42A:
	ldrb r0, [r4]
	cmp r0, #0
	beq _080DC49C
	adds r2, r0, #0
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r3, [r1]
	movs r2, #0
	ldrsh r1, [r1, r2]
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r1, r0
	beq _080DC468
	mov r2, ip
	adds r2, #0x50
	strh r3, [r2]
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DC468
	rsbs r0, r3, #0
	strh r0, [r2]
_080DC468:
	mov r0, ip
	adds r0, #0x9f
	ldrb r2, [r0]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r2, [r1, #2]
	movs r3, #2
	ldrsh r1, [r1, r3]
	movs r3, #2
	ldrsh r0, [r0, r3]
	cmp r1, r0
	beq _080DC4D0
	mov r0, ip
	adds r0, #0x52
	strh r2, [r0]
	b _080DC4D0
	.align 2, 0
_080DC498: .4byte gUnk_0835670C
_080DC49C:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r0, [r0, #2]
	mov r3, ip
	adds r3, #0x52
	strh r0, [r3]
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r5, [r0]
	mov r2, ip
	adds r2, #0x50
	strh r5, [r2]
	mov r0, ip
	ldr r1, [r0, #8]
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080DC4FA
	rsbs r0, r5, #0
	strh r0, [r2]
_080DC4D0:
	mov r2, ip
	ldr r1, [r2, #8]
	movs r0, #1
	ands r1, r0
	mov r4, ip
	adds r4, #0x9f
	adds r2, #0x50
	mov r3, ip
	adds r3, #0x52
	cmp r1, #0
	beq _080DC4FA
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r1, [r2]
	ldrh r0, [r0, #4]
	subs r1, r1, r0
	strh r1, [r2]
	b _080DC50C
_080DC4FA:
	ldrb r0, [r4]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r6
	ldrh r0, [r1, #4]
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2]
_080DC50C:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r0, [r0, #6]
	ldrh r2, [r3]
	adds r0, r0, r2
	strh r0, [r3]
	mov r1, ip
	adds r1, #0x9e
	ldrb r0, [r1]
	subs r2, r0, #1
	strb r2, [r1]
	ldrb r1, [r4]
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _080DC54A
	lsls r0, r2, #0x18
	cmp r0, #0
	bne _080DC54A
	mov r0, ip
	bl sub_080DF088
_080DC54A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080DC550
sub_080DC550: @ 0x080DC550
	push {r4, r5, r6, lr}
	mov ip, r0
	mov r3, ip
	adds r3, #0x9e
	ldrb r0, [r3]
	ldr r6, _080DC614 @ =gUnk_08356784
	cmp r0, #0
	bne _080DC64C
	mov r1, ip
	adds r1, #0x9f
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrb r2, [r1]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	adds r4, r1, #0
	cmp r0, #0
	bne _080DC580
	subs r0, r2, #1
	strb r0, [r4]
_080DC580:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	strb r0, [r3]
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r1, [r0, #9]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _080DC5A6
	mov r0, ip
	adds r0, #0x83
	strb r1, [r0]
_080DC5A6:
	ldrb r0, [r4]
	cmp r0, #0
	beq _080DC618
	adds r2, r0, #0
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r3, [r1]
	movs r2, #0
	ldrsh r1, [r1, r2]
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r1, r0
	beq _080DC5E4
	mov r2, ip
	adds r2, #0x50
	strh r3, [r2]
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DC5E4
	rsbs r0, r3, #0
	strh r0, [r2]
_080DC5E4:
	mov r0, ip
	adds r0, #0x9f
	ldrb r2, [r0]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r2, [r1, #2]
	movs r3, #2
	ldrsh r1, [r1, r3]
	movs r3, #2
	ldrsh r0, [r0, r3]
	cmp r1, r0
	beq _080DC64C
	mov r0, ip
	adds r0, #0x52
	strh r2, [r0]
	b _080DC64C
	.align 2, 0
_080DC614: .4byte gUnk_08356784
_080DC618:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r0, [r0, #2]
	mov r3, ip
	adds r3, #0x52
	strh r0, [r3]
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r5, [r0]
	mov r2, ip
	adds r2, #0x50
	strh r5, [r2]
	mov r0, ip
	ldr r1, [r0, #8]
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080DC676
	rsbs r0, r5, #0
	strh r0, [r2]
_080DC64C:
	mov r2, ip
	ldr r1, [r2, #8]
	movs r0, #1
	ands r1, r0
	mov r4, ip
	adds r4, #0x9f
	adds r2, #0x50
	mov r3, ip
	adds r3, #0x52
	cmp r1, #0
	beq _080DC676
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r1, [r2]
	ldrh r0, [r0, #4]
	subs r1, r1, r0
	strh r1, [r2]
	b _080DC688
_080DC676:
	ldrb r0, [r4]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r6
	ldrh r0, [r1, #4]
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2]
_080DC688:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r0, [r0, #6]
	ldrh r2, [r3]
	adds r0, r0, r2
	strh r0, [r3]
	mov r1, ip
	adds r1, #0x9e
	ldrb r0, [r1]
	subs r2, r0, #1
	strb r2, [r1]
	ldrb r1, [r4]
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _080DC6D0
	lsls r0, r2, #0x18
	cmp r0, #0
	bne _080DC6D0
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	eors r0, r1
	str r0, [r3, #8]
	mov r0, ip
	bl sub_080DF088
_080DC6D0:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DC6D8
sub_080DC6D8: @ 0x080DC6D8
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r1, [r4, #4]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	bne _080DC6EC
	adds r0, r4, #0
	bl sub_080DE188
_080DC6EC:
	ldrh r1, [r4, #4]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _080DC75E
	ldr r1, _080DC77C @ =gUnk_02020EE0
	ldr r0, _080DC780 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DC75E
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DC722
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080DC75E
_080DC722:
	ldr r1, _080DC784 @ =gUnk_08D60FA4
	ldr r5, _080DC788 @ =gSongTable
	ldr r2, _080DC78C @ =0x00000BFC
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080DC746
	ldr r1, _080DC790 @ =0x00000BF8
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080DC75E
_080DC746:
	cmp r3, #0
	beq _080DC758
	ldr r0, _080DC794 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080DC75E
_080DC758:
	ldr r0, _080DC798 @ =0x0000017F
	bl m4aSongNumStart
_080DC75E:
	ldrh r0, [r4, #4]
	lsls r1, r0, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0x8f
	bgt _080DC7A0
	ldr r2, _080DC79C @ =gUnk_083567CC
	asrs r0, r1, #0x12
	movs r1, #3
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	b _080DC7A6
	.align 2, 0
_080DC77C: .4byte gUnk_02020EE0
_080DC780: .4byte gUnk_0203AD3C
_080DC784: .4byte gUnk_08D60FA4
_080DC788: .4byte gSongTable
_080DC78C: .4byte 0x00000BFC
_080DC790: .4byte 0x00000BF8
_080DC794: .4byte gUnk_0203AD10
_080DC798: .4byte 0x0000017F
_080DC79C: .4byte gUnk_083567CC
_080DC7A0:
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0
_080DC7A6:
	strh r0, [r1]
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DC7DC
	adds r0, r4, #0
	adds r0, #0x50
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	ldr r1, _080DC7D8 @ =0x00001F7F
	cmp r0, r1
	bgt _080DC7F6
	movs r0, #0xfc
	lsls r0, r0, #5
	str r0, [r4, #0x40]
	adds r0, r4, #0
	bl sub_080DF0C0
	b _080DC7F6
	.align 2, 0
_080DC7D8: .4byte 0x00001F7F
_080DC7DC:
	adds r0, r4, #0
	adds r0, #0x50
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	ldr r1, _080DC7FC @ =0x0000E080
	cmp r0, r1
	ble _080DC7F6
	str r1, [r4, #0x40]
	adds r0, r4, #0
	bl sub_080DF0C0
_080DC7F6:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DC7FC: .4byte 0x0000E080

	thumb_func_start sub_080DC800
sub_080DC800: @ 0x080DC800
	push {r4, r5, r6, lr}
	mov ip, r0
	mov r3, ip
	adds r3, #0x9e
	ldrb r0, [r3]
	ldr r6, _080DC8C4 @ =gUnk_08356748
	cmp r0, #0
	bne _080DC8FC
	mov r1, ip
	adds r1, #0x9f
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrb r2, [r1]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	adds r4, r1, #0
	cmp r0, #0
	bne _080DC830
	subs r0, r2, #1
	strb r0, [r4]
_080DC830:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	strb r0, [r3]
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r1, [r0, #9]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _080DC856
	mov r0, ip
	adds r0, #0x83
	strb r1, [r0]
_080DC856:
	ldrb r0, [r4]
	cmp r0, #0
	beq _080DC8C8
	adds r2, r0, #0
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r3, [r1]
	movs r2, #0
	ldrsh r1, [r1, r2]
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r1, r0
	beq _080DC894
	mov r2, ip
	adds r2, #0x50
	strh r3, [r2]
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DC894
	rsbs r0, r3, #0
	strh r0, [r2]
_080DC894:
	mov r0, ip
	adds r0, #0x9f
	ldrb r2, [r0]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r2, [r1, #2]
	movs r3, #2
	ldrsh r1, [r1, r3]
	movs r3, #2
	ldrsh r0, [r0, r3]
	cmp r1, r0
	beq _080DC8FC
	mov r0, ip
	adds r0, #0x52
	strh r2, [r0]
	b _080DC8FC
	.align 2, 0
_080DC8C4: .4byte gUnk_08356748
_080DC8C8:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r0, [r0, #2]
	mov r3, ip
	adds r3, #0x52
	strh r0, [r3]
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r5, [r0]
	mov r2, ip
	adds r2, #0x50
	strh r5, [r2]
	mov r0, ip
	ldr r1, [r0, #8]
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080DC926
	rsbs r0, r5, #0
	strh r0, [r2]
_080DC8FC:
	mov r2, ip
	ldr r1, [r2, #8]
	movs r0, #1
	ands r1, r0
	mov r4, ip
	adds r4, #0x9f
	adds r2, #0x50
	mov r3, ip
	adds r3, #0x52
	cmp r1, #0
	beq _080DC926
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r1, [r2]
	ldrh r0, [r0, #4]
	subs r1, r1, r0
	strh r1, [r2]
	b _080DC938
_080DC926:
	ldrb r0, [r4]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r6
	ldrh r0, [r1, #4]
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2]
_080DC938:
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r0, [r0, #6]
	ldrh r2, [r3]
	adds r0, r0, r2
	strh r0, [r3]
	mov r1, ip
	adds r1, #0x9e
	ldrb r0, [r1]
	subs r2, r0, #1
	strb r2, [r1]
	ldrb r1, [r4]
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _080DC976
	lsls r0, r2, #0x18
	cmp r0, #0
	bne _080DC976
	mov r0, ip
	bl sub_080DBE3C
_080DC976:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080DC97C
sub_080DC97C: @ 0x080DC97C
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #4]
	lsls r1, r0, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0x2f
	bgt _080DC99A
	ldr r0, _080DC9C0 @ =gUnk_083567D4
	asrs r1, r1, #0x13
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r2, r4, #0
	adds r2, #0x52
	strh r0, [r2]
_080DC99A:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2f
	ble _080DC9C6
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r1, [r1]
	cmp r1, #0
	beq _080DC9C4
	cmp r0, #0x30
	ble _080DC9C6
	adds r0, r4, #0
	bl sub_080DBE3C
	b _080DCA3E
	.align 2, 0
_080DC9C0: .4byte gUnk_083567D4
_080DC9C4:
	strh r1, [r4, #4]
_080DC9C6:
	ldrh r1, [r4, #4]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _080DC9EA
	movs r1, #0x30
	rsbs r1, r1, #0
	ldr r3, _080DCA10 @ =gRngVal
	ldr r2, [r3]
	ldr r0, _080DCA14 @ =0x00196225
	muls r0, r2, r0
	ldr r2, _080DCA18 @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r3]
	movs r2, #8
	adds r0, r4, #0
	bl sub_080DDC44
_080DC9EA:
	ldr r2, [r4, #8]
	movs r5, #1
	ands r2, r5
	cmp r2, #0
	beq _080DCA20
	adds r2, r4, #0
	adds r2, #0x50
	movs r1, #0
	ldrsh r0, [r2, r1]
	ldr r1, [r4, #0x40]
	adds r1, r1, r0
	ldr r0, _080DCA1C @ =0x00004FFF
	cmp r1, r0
	bgt _080DCA3E
	adds r0, #1
	str r0, [r4, #0x40]
	movs r0, #0
	strh r0, [r2]
	b _080DCA38
	.align 2, 0
_080DCA10: .4byte gRngVal
_080DCA14: .4byte 0x00196225
_080DCA18: .4byte 0x3C6EF35F
_080DCA1C: .4byte 0x00004FFF
_080DCA20:
	adds r3, r4, #0
	adds r3, #0x50
	movs r0, #0
	ldrsh r1, [r3, r0]
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	movs r1, #0xb0
	lsls r1, r1, #8
	cmp r0, r1
	ble _080DCA3E
	str r1, [r4, #0x40]
	strh r2, [r3]
_080DCA38:
	adds r0, r4, #0
	adds r0, #0x9e
	strb r5, [r0]
_080DCA3E:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080DCA44
sub_080DCA44: @ 0x080DCA44
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080DCACA
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #1
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_080DE064
	ldr r1, _080DCB14 @ =gUnk_02020EE0
	ldr r0, _080DCB18 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DCACA
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DCA8E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080DCACA
_080DCA8E:
	ldr r1, _080DCB1C @ =gUnk_08D60FA4
	ldr r5, _080DCB20 @ =gSongTable
	ldr r2, _080DCB24 @ =0x00000B3C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080DCAB2
	ldr r1, _080DCB28 @ =0x00000B38
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080DCACA
_080DCAB2:
	cmp r3, #0
	beq _080DCAC4
	ldr r0, _080DCB2C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080DCACA
_080DCAC4:
	ldr r0, _080DCB30 @ =0x00000167
	bl m4aSongNumStart
_080DCACA:
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DCB0C
	ldr r2, _080DCB34 @ =gUnk_0835681B
	adds r3, r4, #0
	adds r3, #0x9f
	ldrb r0, [r3]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x54
	strb r1, [r0]
	ldrb r0, [r3]
	lsls r0, r0, #1
	adds r0, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x55
	strb r0, [r1]
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	bls _080DCB0C
	adds r0, r4, #0
	bl sub_080DBE3C
_080DCB0C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DCB14: .4byte gUnk_02020EE0
_080DCB18: .4byte gUnk_0203AD3C
_080DCB1C: .4byte gUnk_08D60FA4
_080DCB20: .4byte gSongTable
_080DCB24: .4byte 0x00000B3C
_080DCB28: .4byte 0x00000B38
_080DCB2C: .4byte gUnk_0203AD10
_080DCB30: .4byte 0x00000167
_080DCB34: .4byte gUnk_0835681B

	thumb_func_start sub_080DCB38
sub_080DCB38: @ 0x080DCB38
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DCB7C @ =sub_080DF18C
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DCB78
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080DCB80 @ =gUnk_08351530
	ldr r0, _080DCB84 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x68
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080DCB88
_080DCB78:
	movs r0, #0x10
	b _080DCB8A
	.align 2, 0
_080DCB7C: .4byte sub_080DF18C
_080DCB80: .4byte gUnk_08351530
_080DCB84: .4byte gUnk_0203AD30
_080DCB88:
	movs r0, #0x24
_080DCB8A:
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DCBA0
sub_080DCBA0: @ 0x080DCBA0
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldrh r1, [r5, #4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080DCC7C
	movs r6, #0
	adds r2, r5, #0
	adds r2, #0x9e
	ldrb r0, [r2]
	adds r0, #6
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xb
	bls _080DCBC8
	adds r0, r4, #0
	subs r0, #0xc
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_080DCBC8:
	adds r0, r5, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0
	beq _080DCBD6
	movs r6, #1
_080DCBD6:
	ldrb r1, [r2]
	adds r0, r5, #0
	adds r2, r6, #0
	bl sub_080DE658
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_080DE658
	ldrb r0, [r7]
	cmp r0, #0
	bne _080DCC5C
	ldr r1, _080DCC98 @ =gUnk_02020EE0
	ldr r0, _080DCC9C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DCC5C
	ldrb r0, [r5]
	cmp r0, #0
	bne _080DCC1C
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080DCC5C
_080DCC1C:
	ldr r1, _080DCCA0 @ =gUnk_08D60FA4
	ldr r4, _080DCCA4 @ =gSongTable
	ldr r2, _080DCCA8 @ =0x000009D4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080DCC42
	movs r1, #0x9d
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080DCC5C
_080DCC42:
	cmp r3, #0
	beq _080DCC54
	ldr r0, _080DCCAC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080DCC5C
_080DCC54:
	movs r0, #0x9d
	lsls r0, r0, #1
	bl m4aSongNumStart
_080DCC5C:
	ldrb r0, [r7]
	adds r0, #1
	strb r0, [r7]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _080DCC7C
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r1, #0
	movs r0, #0
	strh r0, [r5, #4]
	strb r1, [r7]
_080DCC7C:
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #6
	bne _080DCC92
	adds r0, r5, #0
	bl sub_080DBE3C
_080DCC92:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DCC98: .4byte gUnk_02020EE0
_080DCC9C: .4byte gUnk_0203AD3C
_080DCCA0: .4byte gUnk_08D60FA4
_080DCCA4: .4byte gSongTable
_080DCCA8: .4byte 0x000009D4
_080DCCAC: .4byte gUnk_0203AD10

	thumb_func_start sub_080DCCB0
sub_080DCCB0: @ 0x080DCCB0
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldrh r1, [r5, #4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080DCD8C
	movs r6, #0
	adds r2, r5, #0
	adds r2, #0x9e
	ldrb r0, [r2]
	adds r0, #6
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xb
	bls _080DCCD8
	adds r0, r4, #0
	subs r0, #0xc
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_080DCCD8:
	adds r0, r5, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0
	beq _080DCCE6
	movs r6, #1
_080DCCE6:
	ldrb r1, [r2]
	adds r0, r5, #0
	adds r2, r6, #0
	bl sub_080DE658
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_080DE658
	ldrb r0, [r7]
	cmp r0, #0
	bne _080DCD6C
	ldr r1, _080DCDA8 @ =gUnk_02020EE0
	ldr r0, _080DCDAC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DCD6C
	ldrb r0, [r5]
	cmp r0, #0
	bne _080DCD2C
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080DCD6C
_080DCD2C:
	ldr r1, _080DCDB0 @ =gUnk_08D60FA4
	ldr r4, _080DCDB4 @ =gSongTable
	ldr r2, _080DCDB8 @ =0x000009D4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080DCD52
	movs r1, #0x9d
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080DCD6C
_080DCD52:
	cmp r3, #0
	beq _080DCD64
	ldr r0, _080DCDBC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080DCD6C
_080DCD64:
	movs r0, #0x9d
	lsls r0, r0, #1
	bl m4aSongNumStart
_080DCD6C:
	ldrb r0, [r7]
	adds r0, #1
	strb r0, [r7]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _080DCD8C
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r1, #0
	movs r0, #0
	strh r0, [r5, #4]
	strb r1, [r7]
_080DCD8C:
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #0xc
	bne _080DCDA2
	adds r0, r5, #0
	bl sub_080DBE3C
_080DCDA2:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DCDA8: .4byte gUnk_02020EE0
_080DCDAC: .4byte gUnk_0203AD3C
_080DCDB0: .4byte gUnk_08D60FA4
_080DCDB4: .4byte gSongTable
_080DCDB8: .4byte 0x000009D4
_080DCDBC: .4byte gUnk_0203AD10

	thumb_func_start sub_080DCDC0
sub_080DCDC0: @ 0x080DCDC0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DCE04 @ =sub_080DF1E4
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	subs r1, r1, r0
	lsrs r1, r1, #5
	adds r2, r4, #0
	adds r2, #0x50
	movs r0, #0
	strh r1, [r2]
	adds r1, r4, #0
	adds r1, #0x52
	strh r0, [r1]
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DCE08
	movs r0, #0xc
	b _080DCE0A
	.align 2, 0
_080DCE04: .4byte sub_080DF1E4
_080DCE08:
	movs r0, #0x18
_080DCE0A:
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080DCE28
sub_080DCE28: @ 0x080DCE28
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	ldr r1, _080DCE44 @ =0xFFFFF7FF
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #4
	ldrsh r1, [r4, r0]
	cmp r1, #0x1f
	ble _080DCE48
	adds r0, r4, #0
	bl sub_080DF21C
	b _080DCE9C
	.align 2, 0
_080DCE44: .4byte 0xFFFFF7FF
_080DCE48:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DCE82
	cmp r1, #7
	ble _080DCE82
	adds r5, r4, #0
	adds r5, #0x9f
	ldrb r0, [r5]
	cmp r0, #0
	beq _080DCE6C
	adds r0, r4, #0
	movs r1, #1
	bl sub_080DEA94
	movs r0, #0
	strb r0, [r5]
_080DCE6C:
	ldrh r1, [r4, #4]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	bne _080DCE82
	adds r0, r4, #0
	movs r1, #0
	bl sub_080DEA94
	movs r0, #1
	strb r0, [r5]
_080DCE82:
	ldr r1, _080DCEA4 @ =gUnk_083567E0
	ldrh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	strh r0, [r1]
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
_080DCE9C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DCEA4: .4byte gUnk_083567E0

	thumb_func_start sub_080DCEA8
sub_080DCEA8: @ 0x080DCEA8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	movs r0, #4
	ldrsh r2, [r4, r0]
	cmp r2, #0x63
	ble _080DCEBC
	adds r0, r4, #0
	bl sub_080DF258
	b _080DCF0E
_080DCEBC:
	movs r1, #4
	ldrsh r0, [r4, r1]
	adds r5, r4, #0
	adds r5, #0x9f
	ldrb r1, [r5]
	cmp r0, r1
	blt _080DCF08
	cmp r2, #0x54
	bgt _080DCF08
	cmp r1, #0
	beq _080DCEDE
	adds r0, r4, #0
	movs r1, #1
	bl sub_080DEA94
	movs r0, #0
	strb r0, [r5]
_080DCEDE:
	ldrh r1, [r4, #4]
	movs r6, #3
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	bne _080DCEF6
	adds r0, r4, #0
	movs r1, #0
	bl sub_080DEA94
	movs r0, #1
	strb r0, [r5]
_080DCEF6:
	ldr r2, _080DCF14 @ =gUnk_0835681B
	ldrh r1, [r4, #4]
	adds r0, r6, #0
	ands r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x55
	strb r0, [r1]
_080DCF08:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
_080DCF0E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080DCF14: .4byte gUnk_0835681B

	thumb_func_start sub_080DCF18
sub_080DCF18: @ 0x080DCF18
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r0, #0
	ldr r0, _080DCF48 @ =sub_080DD044
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080DCF4C @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DCF50
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DCF58
	.align 2, 0
_080DCF48: .4byte sub_080DD044
_080DCF4C: .4byte sub_0803DCCC
_080DCF50:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DCF58:
	adds r5, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r5]
	ldr r0, [r4, #0x40]
	str r0, [r5, #0x34]
	ldr r0, [r4, #0x44]
	str r0, [r5, #0x38]
	str r4, [r5, #0x44]
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r6, r5, #0
	adds r6, #0x42
	movs r7, #0
	strh r0, [r6]
	adds r1, r5, #0
	adds r1, #0xc
	ldr r3, _080DCFCC @ =0x00000339
	movs r0, #9
	str r0, [sp]
	movs r0, #0x19
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r2, #0x30
	bl sub_080709F8
	adds r4, r5, #0
	adds r4, #0x2b
	strb r7, [r4]
	ldr r2, _080DCFD0 @ =gUnk_02020EE0
	ldr r0, _080DCFD4 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r6]
	cmp r0, r6
	bne _080DCFDC
	ldr r6, _080DCFD8 @ =0x0000033B
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DCFDE
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080DCFDE
	.align 2, 0
_080DCFCC: .4byte 0x00000339
_080DCFD0: .4byte gUnk_02020EE0
_080DCFD4: .4byte gUnk_0203AD3C
_080DCFD8: .4byte 0x0000033B
_080DCFDC:
	strb r7, [r4]
_080DCFDE:
	adds r2, r5, #0
	adds r2, #0x2b
	ldrb r0, [r2]
	movs r6, #0
	strh r0, [r5, #8]
	strb r6, [r2]
	ldr r3, _080DD028 @ =gUnk_02020EE0
	ldr r0, _080DD02C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r3
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r4, r2, #0
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DD034
	ldr r6, _080DD030 @ =0x0000033A
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DD036
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080DD036
	.align 2, 0
_080DD028: .4byte gUnk_02020EE0
_080DD02C: .4byte gUnk_0203AD3C
_080DD030: .4byte 0x0000033A
_080DD034:
	strb r6, [r4]
_080DD036:
	ldrb r0, [r4]
	strh r0, [r5, #4]
	adds r0, r5, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080DD044
sub_080DD044: @ 0x080DD044
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	movs r0, #0
	mov r8, r0
	ldr r2, _080DD070 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DD074
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DD07C
	.align 2, 0
_080DD070: .4byte gCurTask
_080DD074:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DD07C:
	adds r5, r0, #0
	ldr r7, [r5, #0x44]
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080DD096
	ldr r0, [r2]
	bl TaskDestroy
	b _080DD54A
_080DD096:
	ldr r0, [r7, #8]
	ands r0, r1
	cmp r0, #0
	beq _080DD0A6
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _080DD54A
_080DD0A6:
	ldr r2, _080DD110 @ =gUnk_02020EE0
	ldr r0, _080DD114 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	mov sl, r1
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DD158
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080DD120
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080DD17E
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x30
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080DD118 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080DD11C @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080DD17E
	.align 2, 0
_080DD110: .4byte gUnk_02020EE0
_080DD114: .4byte gUnk_0203AD3C
_080DD118: .4byte 0xFFF7FFFF
_080DD11C: .4byte 0x0400000A
_080DD120:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080DD17E
	movs r0, #0x30
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080DD150 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080DD154 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080DD17E
	.align 2, 0
_080DD150: .4byte 0xFFF7FFFF
_080DD154: .4byte 0x0400000A
_080DD158:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _080DD174
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080DD174
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080DD174:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080DD17E:
	adds r0, r5, #0
	adds r0, #0x2b
	ldrb r3, [r0]
	adds r6, r0, #0
	cmp r3, #0
	bne _080DD18E
	movs r2, #1
	mov r8, r2
_080DD18E:
	ldr r2, _080DD1C8 @ =gUnk_02020EE0
	ldr r0, _080DD1CC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sl
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DD1D4
	cmp r3, #0
	bne _080DD1D8
	ldr r4, _080DD1D0 @ =0x0000033B
	adds r0, r4, #0
	bl sub_0803DF24
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DD1D8
	adds r0, r4, #0
	movs r1, #0
	bl sub_0803DFAC
	b _080DD1D6
	.align 2, 0
_080DD1C8: .4byte gUnk_02020EE0
_080DD1CC: .4byte gUnk_0203AD3C
_080DD1D0: .4byte 0x0000033B
_080DD1D4:
	movs r0, #0
_080DD1D6:
	strb r0, [r6]
_080DD1D8:
	mov r2, r8
	cmp r2, #0
	beq _080DD236
	ldrb r0, [r6]
	movs r3, #0
	strh r0, [r5, #8]
	strb r3, [r6]
	ldr r2, _080DD220 @ =gUnk_02020EE0
	ldr r0, _080DD224 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sl
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DD22C
	ldr r4, _080DD228 @ =0x0000033A
	adds r0, r4, #0
	bl sub_0803DF24
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DD22E
	adds r0, r4, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r6]
	b _080DD22E
	.align 2, 0
_080DD220: .4byte gUnk_02020EE0
_080DD224: .4byte gUnk_0203AD3C
_080DD228: .4byte 0x0000033A
_080DD22C:
	strb r3, [r6]
_080DD22E:
	ldrb r0, [r6]
	strh r0, [r5, #4]
	ldrh r0, [r5, #8]
	strb r0, [r6]
_080DD236:
	ldrb r0, [r6]
	cmp r0, #0
	bne _080DD240
	strh r0, [r5, #8]
	strh r0, [r5, #4]
_080DD240:
	ldr r0, _080DD28C @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r7, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080DD294
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	bne _080DD294
	ldrh r0, [r5, #8]
	strb r0, [r6]
	ldr r0, [r5, #0x14]
	ldr r1, _080DD290 @ =0xFFFFF7FF
	ands r0, r1
	str r0, [r5, #0x14]
	adds r0, r5, #0
	bl sub_0803DBC8
	ldrh r0, [r5, #4]
	strb r0, [r6]
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r5, #0x14]
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080DD54A
	.align 2, 0
_080DD28C: .4byte gUnk_03000510
_080DD290: .4byte 0xFFFFF7FF
_080DD294:
	ldr r0, [r7, #0x40]
	str r0, [r5, #0x34]
	ldr r0, [r7, #0x44]
	str r0, [r5, #0x38]
	adds r4, r7, #0
	adds r4, #0x54
	ldrb r0, [r4]
	adds r3, r5, #0
	adds r3, #0x40
	strb r0, [r3]
	adds r2, r7, #0
	adds r2, #0x55
	ldrb r0, [r2]
	adds r1, r5, #0
	adds r1, #0x41
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x83
	ldrb r0, [r0]
	str r4, [sp, #0x30]
	str r3, [sp, #0x28]
	str r2, [sp, #0x34]
	str r1, [sp, #0x2c]
	cmp r0, #1
	beq _080DD2EE
	cmp r0, #1
	bgt _080DD2D0
	cmp r0, #0
	beq _080DD2D6
	b _080DD2EE
_080DD2D0:
	cmp r0, #2
	beq _080DD2E6
	b _080DD2EE
_080DD2D6:
	ldrh r1, [r5, #6]
	movs r0, #4
	orrs r0, r1
	strh r0, [r5, #6]
	adds r1, r5, #0
	adds r1, #0x26
	movs r0, #0xa
	b _080DD2FC
_080DD2E6:
	adds r1, r5, #0
	adds r1, #0x26
	movs r0, #0x12
	b _080DD2FC
_080DD2EE:
	ldrh r1, [r5, #6]
	movs r0, #4
	orrs r0, r1
	strh r0, [r5, #6]
	adds r1, r5, #0
	adds r1, #0x26
	movs r0, #9
_080DD2FC:
	strb r0, [r1]
	adds r3, r1, #0
	ldrh r1, [r5, #6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080DD318
	adds r0, r5, #0
	adds r0, #0xc
	ldr r1, [r5, #0x14]
	movs r2, #0x80
	lsls r2, r2, #3
	orrs r1, r2
	b _080DD322
_080DD318:
	adds r0, r5, #0
	adds r0, #0xc
	ldr r1, [r5, #0x14]
	ldr r2, _080DD3A8 @ =0xFFFFFBFF
	ands r1, r2
_080DD322:
	str r1, [r0, #8]
	adds r7, r0, #0
	ldrh r4, [r5, #6]
	movs r0, #8
	ands r0, r4
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	movs r0, #0x28
	adds r0, r0, r5
	mov r8, r0
	cmp r2, #0
	bne _080DD3C6
	adds r0, r5, #0
	adds r0, #0x27
	ldrb r1, [r0]
	mov sb, r0
	ldrb r3, [r3]
	cmp r1, r3
	bne _080DD350
	ldrh r0, [r5, #0x24]
	ldrh r1, [r5, #0x18]
	cmp r0, r1
	beq _080DD366
_080DD350:
	adds r0, r5, #0
	adds r0, #0x28
	ldrb r1, [r0]
	mov r8, r0
	cmp r1, #0
	beq _080DD366
	strb r2, [r5, #1]
	strh r2, [r5, #2]
	ldr r0, _080DD3AC @ =0x0000FFFB
	ands r0, r4
	strh r0, [r5, #6]
_080DD366:
	adds r0, r7, #0
	bl sub_08155128
	adds r2, r0, #0
	cmp r2, #0
	bne _080DD3B0
	ldrh r0, [r5, #6]
	movs r1, #2
	movs r3, #0
	orrs r1, r0
	strh r1, [r5, #6]
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _080DD3C6
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #0
	beq _080DD3C6
	movs r0, #0xff
	mov r1, sb
	strb r0, [r1]
	ldrh r1, [r5, #6]
	ldr r0, _080DD3AC @ =0x0000FFFB
	ands r0, r1
	strh r0, [r5, #6]
	strb r3, [r5, #1]
	strh r2, [r5, #2]
	adds r0, r7, #0
	bl sub_08155128
	b _080DD3C6
	.align 2, 0
_080DD3A8: .4byte 0xFFFFFBFF
_080DD3AC: .4byte 0x0000FFFB
_080DD3B0:
	mov r2, r8
	ldrb r1, [r2]
	ldrh r0, [r5, #2]
	adds r0, r0, r1
	strh r0, [r5, #2]
	lsrs r0, r0, #4
	strb r0, [r5, #1]
	ldrh r1, [r5, #6]
	ldr r0, _080DD478 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r5, #6]
_080DD3C6:
	ldr r2, [r5, #0x34]
	asrs r2, r2, #8
	ldr r3, _080DD47C @ =gCurLevelInfo
	ldr r0, _080DD480 @ =gUnk_0203AD3C
	mov ip, r0
	ldrb r0, [r0]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	ldr r1, [sp, #0x28]
	movs r0, #0
	ldrsb r0, [r1, r0]
	adds r0, r0, r2
	movs r2, #0
	strh r0, [r5, #0x1c]
	ldr r1, [r5, #0x38]
	asrs r1, r1, #8
	mov sb, r1
	mov r1, ip
	ldrb r0, [r1]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	mov r3, sb
	subs r1, r3, r0
	ldr r3, [sp, #0x2c]
	movs r0, #0
	ldrsb r0, [r3, r0]
	adds r0, r0, r1
	strh r0, [r5, #0x1e]
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #0
	beq _080DD422
	ldr r3, [sp, #0x28]
	strb r2, [r3]
	ldr r0, [sp, #0x2c]
	strb r2, [r0]
_080DD422:
	ldr r0, [r5, #0x14]
	ldr r1, _080DD484 @ =0xFFFFF7FF
	ands r0, r1
	str r0, [r5, #0x14]
	ldrh r0, [r5, #8]
	strb r0, [r6]
	ldrh r3, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r3
	cmp r0, #0
	bne _080DD496
	ldr r2, _080DD488 @ =gUnk_02020EE0
	mov r0, ip
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sl
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DD496
	ldr r1, _080DD48C @ =gUnk_0203AD18
	ldrh r0, [r1]
	ldrh r2, [r5, #0x1c]
	adds r0, r0, r2
	strh r0, [r5, #0x1c]
	ldrh r0, [r1, #2]
	ldrh r1, [r5, #0x1e]
	adds r0, r0, r1
	strh r0, [r5, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080DD490
	adds r0, r7, #0
	bl sub_081564D8
	b _080DD496
	.align 2, 0
_080DD478: .4byte 0x0000FFFD
_080DD47C: .4byte gCurLevelInfo
_080DD480: .4byte gUnk_0203AD3C
_080DD484: .4byte 0xFFFFF7FF
_080DD488: .4byte gUnk_02020EE0
_080DD48C: .4byte gUnk_0203AD18
_080DD490:
	adds r0, r7, #0
	bl sub_0815604C
_080DD496:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r5, #0x14]
	ldrh r0, [r5, #4]
	strb r0, [r6]
	ldr r2, [sp, #0x30]
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
	ldr r2, [r5, #0x34]
	adds r2, r2, r0
	asrs r2, r2, #8
	ldr r3, _080DD534 @ =gCurLevelInfo
	ldr r6, _080DD538 @ =gUnk_0203AD3C
	ldrb r0, [r6]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	mov r8, r2
	mov r0, r8
	strh r0, [r5, #0x1c]
	ldr r1, [sp, #0x34]
	movs r0, #0
	ldrsb r0, [r1, r0]
	lsls r0, r0, #8
	ldr r1, [r5, #0x38]
	adds r1, r1, r0
	asrs r1, r1, #8
	ldrb r0, [r6]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r5, #0x1e]
	ldrh r4, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	bne _080DD54A
	ldr r2, _080DD53C @ =gUnk_02020EE0
	ldrb r1, [r6]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, sl
	ldrh r2, [r2]
	cmp r0, r2
	bne _080DD54A
	ldr r1, _080DD540 @ =gUnk_0203AD18
	ldrh r0, [r1]
	add r0, r8
	strh r0, [r5, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r5, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r4
	cmp r0, #0
	beq _080DD544
	adds r0, r7, #0
	bl sub_081564D8
	b _080DD54A
	.align 2, 0
_080DD534: .4byte gCurLevelInfo
_080DD538: .4byte gUnk_0203AD3C
_080DD53C: .4byte gUnk_02020EE0
_080DD540: .4byte gUnk_0203AD18
_080DD544:
	adds r0, r7, #0
	bl sub_0815604C
_080DD54A:
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DD55C
sub_080DD55C: @ 0x080DD55C
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080DD58C @ =sub_080DD62C
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080DD590 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DD594
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DD59C
	.align 2, 0
_080DD58C: .4byte sub_080DD62C
_080DD590: .4byte sub_0803DCCC
_080DD594:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DD59C:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r6, r4, #0
	adds r6, #0x42
	movs r7, #0
	strh r0, [r6]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r3, _080DD610 @ =0x00000339
	movs r0, #0xc
	str r0, [sp]
	movs r0, #0x19
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x40
	bl sub_080709F8
	adds r5, r4, #0
	adds r5, #0x2b
	strb r7, [r5]
	ldr r2, _080DD614 @ =gUnk_02020EE0
	ldr r0, _080DD618 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r6]
	cmp r0, r6
	bne _080DD620
	ldr r6, _080DD61C @ =0x0000033B
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DD622
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080DD622
	.align 2, 0
_080DD610: .4byte 0x00000339
_080DD614: .4byte gUnk_02020EE0
_080DD618: .4byte gUnk_0203AD3C
_080DD61C: .4byte 0x0000033B
_080DD620:
	strb r7, [r5]
_080DD622:
	adds r0, r4, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080DD62C
sub_080DD62C: @ 0x080DD62C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r2, _080DD650 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DD654
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DD65C
	.align 2, 0
_080DD650: .4byte gCurTask
_080DD654:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DD65C:
	adds r5, r0, #0
	ldr r0, [r5, #0x44]
	mov r8, r0
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080DD678
	ldr r0, [r2]
	bl TaskDestroy
	b _080DD8CA
_080DD678:
	mov r2, r8
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _080DD68A
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _080DD8CA
_080DD68A:
	ldr r2, _080DD6F4 @ =gUnk_02020EE0
	ldr r0, _080DD6F8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r6, [r7]
	cmp r0, r6
	bne _080DD73C
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080DD704
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080DD762
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x40
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080DD6FC @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080DD700 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080DD762
	.align 2, 0
_080DD6F4: .4byte gUnk_02020EE0
_080DD6F8: .4byte gUnk_0203AD3C
_080DD6FC: .4byte 0xFFF7FFFF
_080DD700: .4byte 0x0400000A
_080DD704:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080DD762
	movs r0, #0x40
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080DD734 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080DD738 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080DD762
	.align 2, 0
_080DD734: .4byte 0xFFF7FFFF
_080DD738: .4byte 0x0400000A
_080DD73C:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _080DD758
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080DD758
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080DD758:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080DD762:
	ldr r2, _080DD7A4 @ =gUnk_02020EE0
	ldr r0, _080DD7A8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	bne _080DD7B0
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DD7B8
	ldr r6, _080DD7AC @ =0x0000033B
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DD7B8
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080DD7B8
	.align 2, 0
_080DD7A4: .4byte gUnk_02020EE0
_080DD7A8: .4byte gUnk_0203AD3C
_080DD7AC: .4byte 0x0000033B
_080DD7B0:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_080DD7B8:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080DD80C
	ldrb r0, [r3]
	cmp r0, #0
	beq _080DD7D6
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080DD7D6
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080DD7D6:
	cmp r3, #0
	beq _080DD80C
	ldr r0, _080DD808 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080DD878
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080DD878
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080DD8CA
	.align 2, 0
_080DD808: .4byte gUnk_03000510
_080DD80C:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080DD870 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _080DD84A
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DD84A
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DD84A
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DD84A
	movs r3, #4
_080DD84A:
	ldr r0, _080DD874 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080DD878
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080DD878
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080DD8CA
	.align 2, 0
_080DD870: .4byte gUnk_02020EE0
_080DD874: .4byte gUnk_03000510
_080DD878:
	mov r0, r8
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #1
	beq _080DD8AA
	cmp r0, #1
	bgt _080DD88C
	cmp r0, #0
	beq _080DD892
	b _080DD8AA
_080DD88C:
	cmp r0, #2
	beq _080DD8A2
	b _080DD8AA
_080DD892:
	ldrh r0, [r5, #6]
	movs r1, #4
	orrs r1, r0
	strh r1, [r5, #6]
	adds r1, r5, #0
	adds r1, #0x26
	movs r0, #0xd
	b _080DD8B8
_080DD8A2:
	adds r1, r5, #0
	adds r1, #0x26
	movs r0, #0x11
	b _080DD8B8
_080DD8AA:
	ldrh r0, [r5, #6]
	movs r1, #4
	orrs r1, r0
	strh r1, [r5, #6]
	adds r1, r5, #0
	adds r1, #0x26
	movs r0, #0xc
_080DD8B8:
	strb r0, [r1]
	mov r1, r8
	ldr r0, [r1, #0x40]
	str r0, [r5, #0x34]
	ldr r0, [r1, #0x44]
	str r0, [r5, #0x38]
	adds r0, r5, #0
	bl sub_0806FAC8
_080DD8CA:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DD8D8
sub_080DD8D8: @ 0x080DD8D8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080DD90C @ =sub_080DD9B4
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080DD910 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DD914
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DD91C
	.align 2, 0
_080DD90C: .4byte sub_080DD9B4
_080DD910: .4byte sub_0803DCCC
_080DD914:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DD91C:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r2, #0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r6, r4, #0
	adds r6, #0x42
	movs r1, #0
	mov r8, r1
	strh r0, [r6]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r7, _080DD994 @ =0x00000339
	str r2, [sp]
	movs r0, #0x18
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #9
	adds r3, r7, #0
	bl sub_080709F8
	adds r5, r4, #0
	adds r5, #0x2b
	mov r0, r8
	strb r0, [r5]
	ldr r2, _080DD998 @ =gUnk_02020EE0
	ldr r0, _080DD99C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r6]
	cmp r0, r6
	bne _080DD9A0
	adds r0, r7, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DD9A4
	adds r0, r7, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080DD9A4
	.align 2, 0
_080DD994: .4byte 0x00000339
_080DD998: .4byte gUnk_02020EE0
_080DD99C: .4byte gUnk_0203AD3C
_080DD9A0:
	mov r1, r8
	strb r1, [r5]
_080DD9A4:
	adds r0, r4, #0
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080DD9B4
sub_080DD9B4: @ 0x080DD9B4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r2, _080DD9D8 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DD9DC
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DD9E4
	.align 2, 0
_080DD9D8: .4byte gCurTask
_080DD9DC:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DD9E4:
	adds r5, r0, #0
	ldr r0, [r5, #0x44]
	mov r8, r0
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080DDA00
	ldr r0, [r2]
	bl TaskDestroy
	b _080DDC38
_080DDA00:
	mov r2, r8
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _080DDA12
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _080DDC38
_080DDA12:
	ldr r2, _080DDA7C @ =gUnk_02020EE0
	ldr r0, _080DDA80 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r6, [r7]
	cmp r0, r6
	bne _080DDAC4
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080DDA8C
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080DDAEA
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #9
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080DDA84 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080DDA88 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080DDAEA
	.align 2, 0
_080DDA7C: .4byte gUnk_02020EE0
_080DDA80: .4byte gUnk_0203AD3C
_080DDA84: .4byte 0xFFF7FFFF
_080DDA88: .4byte 0x0400000A
_080DDA8C:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080DDAEA
	movs r0, #9
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080DDABC @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080DDAC0 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080DDAEA
	.align 2, 0
_080DDABC: .4byte 0xFFF7FFFF
_080DDAC0: .4byte 0x0400000A
_080DDAC4:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _080DDAE0
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080DDAE0
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080DDAE0:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080DDAEA:
	ldr r2, _080DDB2C @ =gUnk_02020EE0
	ldr r0, _080DDB30 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	bne _080DDB38
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DDB40
	ldr r6, _080DDB34 @ =0x00000339
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DDB40
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080DDB40
	.align 2, 0
_080DDB2C: .4byte gUnk_02020EE0
_080DDB30: .4byte gUnk_0203AD3C
_080DDB34: .4byte 0x00000339
_080DDB38:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_080DDB40:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080DDB94
	ldrb r0, [r3]
	cmp r0, #0
	beq _080DDB5E
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080DDB5E
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080DDB5E:
	cmp r3, #0
	beq _080DDB94
	ldr r0, _080DDB90 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080DDC00
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080DDC00
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080DDC38
	.align 2, 0
_080DDB90: .4byte gUnk_03000510
_080DDB94:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080DDBF8 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _080DDBD2
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DDBD2
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DDBD2
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DDBD2
	movs r3, #4
_080DDBD2:
	ldr r0, _080DDBFC @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080DDC00
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080DDC00
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080DDC38
	.align 2, 0
_080DDBF8: .4byte gUnk_02020EE0
_080DDBFC: .4byte gUnk_03000510
_080DDC00:
	ldrh r1, [r5, #6]
	movs r0, #4
	orrs r0, r1
	strh r0, [r5, #6]
	mov r1, r8
	ldr r0, [r1, #0x40]
	str r0, [r5, #0x34]
	ldr r0, [r1, #0x44]
	str r0, [r5, #0x38]
	mov r0, r8
	adds r0, #0x54
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x40
	strb r1, [r0]
	mov r0, r8
	adds r0, #0x55
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r1, #0x41
	strb r0, [r1]
	adds r0, r5, #0
	mov r1, r8
	bl sub_080DDFB4
	adds r0, r5, #0
	bl sub_0806FAC8
_080DDC38:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080DDC44
sub_080DDC44: @ 0x080DDC44
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r7, r2, #0x18
	ldr r0, _080DDC7C @ =sub_080DDD60
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080DDC80 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DDC84
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DDC8C
	.align 2, 0
_080DDC7C: .4byte sub_080DDD60
_080DDC80: .4byte sub_0803DCCC
_080DDC84:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DDC8C:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x42
	movs r3, #0
	strh r0, [r1]
	ldrh r1, [r4, #6]
	movs r2, #0x80
	lsls r2, r2, #7
	adds r0, r2, #0
	adds r2, r1, #0
	orrs r2, r0
	orrs r2, r3
	strh r2, [r4, #6]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DDCDA
	lsls r0, r6, #0x18
	asrs r0, r0, #0x10
	ldr r1, [r4, #0x34]
	subs r1, r1, r0
	str r1, [r4, #0x34]
	movs r0, #1
	orrs r2, r0
	strh r2, [r4, #6]
	b _080DDCE4
_080DDCDA:
	lsls r1, r6, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r4, #0x34]
	adds r0, r0, r1
	str r0, [r4, #0x34]
_080DDCE4:
	lsls r1, r7, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r4, #0x38]
	adds r0, r0, r1
	str r0, [r4, #0x38]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r6, _080DDD48 @ =0x0000033B
	movs r0, #0xe
	str r0, [sp]
	movs r0, #0x1a
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x20
	adds r3, r6, #0
	bl sub_080709F8
	adds r5, r4, #0
	adds r5, #0x2b
	movs r3, #0
	strb r3, [r5]
	ldr r2, _080DDD4C @ =gUnk_02020EE0
	ldr r0, _080DDD50 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DDD54
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DDD56
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080DDD56
	.align 2, 0
_080DDD48: .4byte 0x0000033B
_080DDD4C: .4byte gUnk_02020EE0
_080DDD50: .4byte gUnk_0203AD3C
_080DDD54:
	strb r3, [r5]
_080DDD56:
	adds r0, r4, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080DDD60
sub_080DDD60: @ 0x080DDD60
	push {r4, r5, r6, r7, lr}
	sub sp, #0x28
	ldr r2, _080DDD80 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DDD84
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DDD8C
	.align 2, 0
_080DDD80: .4byte gCurTask
_080DDD84:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DDD8C:
	adds r5, r0, #0
	ldrh r3, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r3
	cmp r0, #0
	beq _080DDDA2
	ldr r0, [r2]
	bl TaskDestroy
	b _080DDFAC
_080DDDA2:
	ldr r2, _080DDE08 @ =gUnk_02020EE0
	ldr r0, _080DDE0C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DDE50
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080DDE18
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080DDE76
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #9
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080DDE10 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080DDE14 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080DDE76
	.align 2, 0
_080DDE08: .4byte gUnk_02020EE0
_080DDE0C: .4byte gUnk_0203AD3C
_080DDE10: .4byte 0xFFF7FFFF
_080DDE14: .4byte 0x0400000A
_080DDE18:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080DDE76
	movs r0, #9
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080DDE48 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080DDE4C @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080DDE76
	.align 2, 0
_080DDE48: .4byte 0xFFF7FFFF
_080DDE4C: .4byte 0x0400000A
_080DDE50:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _080DDE6C
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080DDE6C
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080DDE6C:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080DDE76:
	ldr r2, _080DDEBC @ =gUnk_02020EE0
	ldr r0, _080DDEC0 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r1, [r7]
	cmp r0, r1
	bne _080DDEC8
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DDED0
	ldr r6, _080DDEC4 @ =0x00000339
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DDED0
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080DDED0
	.align 2, 0
_080DDEBC: .4byte gUnk_02020EE0
_080DDEC0: .4byte gUnk_0203AD3C
_080DDEC4: .4byte 0x00000339
_080DDEC8:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_080DDED0:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080DDF24
	ldrb r0, [r3]
	cmp r0, #0
	beq _080DDEEE
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080DDEEE
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080DDEEE:
	cmp r3, #0
	beq _080DDF24
	ldr r0, _080DDF20 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080DDF90
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080DDF90
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080DDFAC
	.align 2, 0
_080DDF20: .4byte gUnk_03000510
_080DDF24:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080DDF88 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _080DDF62
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DDF62
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DDF62
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080DDF62
	movs r3, #4
_080DDF62:
	ldr r0, _080DDF8C @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080DDF90
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080DDF90
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080DDFAC
	.align 2, 0
_080DDF88: .4byte gUnk_02020EE0
_080DDF8C: .4byte gUnk_03000510
_080DDF90:
	ldrh r1, [r5, #6]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080DDFA6
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
	b _080DDFAC
_080DDFA6:
	adds r0, r5, #0
	bl sub_0806FAC8
_080DDFAC:
	add sp, #0x28
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080DDFB4
sub_080DDFB4: @ 0x080DDFB4
	push {r4, lr}
	adds r4, r0, #0
	adds r2, r1, #0
	adds r0, r2, #0
	adds r0, #0xac
	ldr r3, [r0]
	ldr r0, [r3, #0x40]
	ldr r1, [r2, #0x40]
	subs r0, r0, r1
	lsls r0, r0, #8
	ldr r1, [r3, #0x44]
	ldr r2, [r2, #0x44]
	subs r1, r1, r2
	lsls r1, r1, #8
	asrs r0, r0, #0x10
	asrs r1, r1, #0x10
	bl ArcTan2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r0, r1
	asrs r1, r0, #0xd
	movs r0, #7
	ands r1, r0
	cmp r1, #7
	bhi _080DE05C
	lsls r0, r1, #2
	ldr r1, _080DDFF8 @ =_080DDFFC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080DDFF8: .4byte _080DDFFC
_080DDFFC: @ jump table
	.4byte _080DE01C @ case 0
	.4byte _080DE024 @ case 1
	.4byte _080DE02C @ case 2
	.4byte _080DE034 @ case 3
	.4byte _080DE03C @ case 4
	.4byte _080DE044 @ case 5
	.4byte _080DE04C @ case 6
	.4byte _080DE054 @ case 7
_080DE01C:
	adds r1, r4, #0
	adds r1, #0x26
	movs r0, #0
	b _080DE05A
_080DE024:
	adds r1, r4, #0
	adds r1, #0x26
	movs r0, #7
	b _080DE05A
_080DE02C:
	adds r1, r4, #0
	adds r1, #0x26
	movs r0, #6
	b _080DE05A
_080DE034:
	adds r1, r4, #0
	adds r1, #0x26
	movs r0, #5
	b _080DE05A
_080DE03C:
	adds r1, r4, #0
	adds r1, #0x26
	movs r0, #4
	b _080DE05A
_080DE044:
	adds r1, r4, #0
	adds r1, #0x26
	movs r0, #3
	b _080DE05A
_080DE04C:
	adds r1, r4, #0
	adds r1, #0x26
	movs r0, #2
	b _080DE05A
_080DE054:
	adds r1, r4, #0
	adds r1, #0x26
	movs r0, #1
_080DE05A:
	strb r0, [r1]
_080DE05C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DE064
sub_080DE064: @ 0x080DE064
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov ip, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	adds r0, #0x18
	mov sl, r0
	ldr r3, _080DE0A8 @ =gRngVal
	ldr r0, [r3]
	ldr r4, _080DE0AC @ =0x00196225
	muls r0, r4, r0
	ldr r1, _080DE0B0 @ =0x3C6EF35F
	adds r2, r0, r1
	str r2, [r3]
	lsrs r0, r2, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DE0B4
	movs r2, #0x12
	str r2, [sp]
	mov sb, r1
	b _080DE0E0
	.align 2, 0
_080DE0A8: .4byte gRngVal
_080DE0AC: .4byte 0x00196225
_080DE0B0: .4byte 0x3C6EF35F
_080DE0B4:
	adds r0, r2, #0
	muls r0, r4, r0
	ldr r4, _080DE0D4 @ =0x3C6EF35F
	adds r0, r0, r4
	str r0, [r3]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	beq _080DE0D8
	movs r7, #0x13
	str r7, [sp]
	movs r0, #1
	mov sb, r0
	b _080DE0E0
	.align 2, 0
_080DE0D4: .4byte 0x3C6EF35F
_080DE0D8:
	movs r1, #0x1c
	str r1, [sp]
	movs r2, #0
	mov sb, r2
_080DE0E0:
	movs r4, #0
	ldr r1, _080DE0F8 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080DE0FC @ =gUnk_020229E0
	movs r7, #0x56
	adds r7, r7, r5
	mov r8, r7
	b _080DE114
	.align 2, 0
_080DE0F8: .4byte gUnk_020229D4
_080DE0FC: .4byte gUnk_020229E0
_080DE100:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080DE11C
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080DE114:
	cmp r0, #0
	bne _080DE100
	orrs r2, r3
	str r2, [r1]
_080DE11C:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, ip
	strh r0, [r1, #6]
	mov r4, sl
	strh r4, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	mov r7, sp
	ldrb r7, [r7]
	strb r7, [r1, #0xc]
	movs r0, #0
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r4, sb
	strb r4, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r7, r8
	ldrb r0, [r7]
	bl CreateObject
	str r5, [r0, #0x70]
	ldr r1, _080DE184 @ =sub_0809F840
	str r1, [r0, #0x7c]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DE184: .4byte sub_0809F840

	thumb_func_start sub_080DE188
sub_080DE188: @ 0x080DE188
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sl, r0
	movs r3, #0
	ldr r2, _080DE29C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DE2A0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080DE2A4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r5, r0, #0x10
	movs r1, #0
	ldr r0, _080DE2A8 @ =0x00001555
	mov sb, r2
	cmp r5, r0
	blt _080DE1C4
	adds r2, r0, #0
_080DE1B2:
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0xa
	bhi _080DE1C4
	adds r0, r1, #1
	muls r0, r2, r0
	cmp r5, r0
	bge _080DE1B2
_080DE1C4:
	lsls r0, r1, #0x18
	lsrs r7, r0, #0x18
	mov r1, sb
	ldr r0, [r1]
	ldr r1, _080DE2A0 @ =0x00196225
	mov r8, r1
	mov r1, r8
	muls r1, r0, r1
	adds r0, r1, #0
	ldr r6, _080DE2A4 @ =0x3C6EF35F
	adds r0, r0, r6
	mov r1, sb
	str r0, [r1]
	lsls r4, r3, #0x18
	asrs r4, r4, #0x18
	adds r4, #8
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	subs r4, r4, r0
	ldr r0, _080DE2AC @ =gUnk_08356800
	adds r0, r7, r0
	lsls r4, r4, #0x18
	asrs r4, r4, #0x18
	ldrb r0, [r0]
	adds r4, r4, r0
	lsls r4, r4, #0x18
	asrs r4, r4, #0x18
	movs r5, #0x20
	lsls r5, r5, #0x18
	asrs r2, r5, #0x18
	mov r0, sl
	adds r1, r4, #0
	adds r3, r7, #0
	bl sub_080DE2B4
	ldr r0, _080DE2B0 @ =gUnk_0835680C
	adds r0, r7, r0
	ldrb r0, [r0]
	adds r4, r4, r0
	lsls r4, r4, #0x18
	lsrs r3, r4, #0x18
	mov r1, sb
	ldr r0, [r1]
	mov r1, r8
	muls r1, r0, r1
	adds r0, r1, #0
	adds r0, r0, r6
	mov r1, sb
	str r0, [r1]
	lsrs r2, r0, #0x10
	movs r1, #0
	ldr r0, _080DE2A8 @ =0x00001555
	cmp r2, r0
	blt _080DE246
	adds r6, r0, #0
_080DE234:
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0xa
	bhi _080DE246
	adds r0, r1, #1
	muls r0, r6, r0
	cmp r2, r0
	bge _080DE234
_080DE246:
	lsls r0, r1, #0x18
	lsrs r7, r0, #0x18
	ldr r0, _080DE2AC @ =gUnk_08356800
	adds r0, r7, r0
	lsls r4, r3, #0x18
	asrs r4, r4, #0x18
	ldrb r0, [r0]
	adds r4, r4, r0
	lsls r4, r4, #0x18
	asrs r4, r4, #0x18
	movs r0, #0x80
	lsls r0, r0, #0x15
	adds r5, r5, r0
	asrs r5, r5, #0x18
	mov r0, sl
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r7, #0
	bl sub_080DE2B4
	ldr r0, _080DE2B0 @ =gUnk_0835680C
	adds r0, r7, r0
	ldrb r0, [r0]
	adds r4, r4, r0
	adds r5, #0x10
	lsls r4, r4, #0x18
	asrs r4, r4, #0x18
	lsls r5, r5, #0x18
	asrs r5, r5, #0x18
	mov r0, sl
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #0xc
	bl sub_080DE2B4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DE29C: .4byte gRngVal
_080DE2A0: .4byte 0x00196225
_080DE2A4: .4byte 0x3C6EF35F
_080DE2A8: .4byte 0x00001555
_080DE2AC: .4byte gUnk_08356800
_080DE2B0: .4byte gUnk_0835680C

	thumb_func_start sub_080DE2B4
sub_080DE2B4: @ 0x080DE2B4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov sb, r2
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov sl, r3
	ldr r0, _080DE300 @ =sub_080DE42C
	movs r2, #0xd4
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DE304
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r5, r0, r1
	b _080DE30C
	.align 2, 0
_080DE300: .4byte sub_080DE42C
_080DE304:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
_080DE30C:
	adds r4, r5, #0
	adds r0, r4, #0
	bl sub_0803E380
	movs r1, #0
	movs r0, #2
	strb r0, [r4]
	ldr r0, [r6, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r6, #0x44]
	str r0, [r4, #0x44]
	str r6, [r4, #0x70]
	strh r1, [r4, #4]
	adds r0, r6, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r7, r4, #0
	adds r7, #0x60
	strh r0, [r7]
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _080DE404 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r3, #1
	adds r0, r3, #0
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080DE35E
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
_080DE35E:
	adds r0, r5, #0
	adds r0, #0x63
	strb r3, [r0]
	mov r0, r8
	lsls r1, r0, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	str r0, [r5, #0x40]
	mov r0, sb
	lsls r1, r0, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r5, #0x44]
	adds r0, r0, r1
	str r0, [r5, #0x44]
	ldr r2, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #7
	orrs r2, r0
	movs r0, #0x80
	lsls r0, r0, #0x15
	orrs r2, r0
	ldr r0, _080DE408 @ =0x20000403
	str r0, [r5, #0x68]
	ldr r0, [r5, #0x5c]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x5c]
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r2, r0
	str r2, [r5, #8]
	movs r2, #8
	rsbs r2, r2, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r2, #0
	movs r3, #8
	bl sub_0803E2B0
	adds r1, r5, #0
	adds r1, #0x10
	ldr r6, _080DE40C @ =0x0000033B
	mov r0, sl
	str r0, [sp]
	movs r0, #0xa
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r2, #0x20
	adds r3, r6, #0
	bl sub_080708DC
	adds r4, r5, #0
	adds r4, #0x2f
	movs r0, #0
	strb r0, [r4]
	ldr r2, _080DE410 @ =gUnk_02020EE0
	ldr r0, _080DE414 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _080DE418
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DE41C
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	b _080DE41A
	.align 2, 0
_080DE404: .4byte gUnk_03000510
_080DE408: .4byte 0x20000403
_080DE40C: .4byte 0x0000033B
_080DE410: .4byte gUnk_02020EE0
_080DE414: .4byte gUnk_0203AD3C
_080DE418:
	movs r0, #0
_080DE41A:
	strb r0, [r4]
_080DE41C:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080DE42C
sub_080DE42C: @ 0x080DE42C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x28
	ldr r0, _080DE44C @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DE450
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DE458
	.align 2, 0
_080DE44C: .4byte gCurTask
_080DE450:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DE458:
	adds r5, r0, #0
	ldr r7, [r5, #0x70]
	ldr r2, _080DE4C4 @ =gUnk_02020EE0
	ldr r0, _080DE4C8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DE50C
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _080DE4D4
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080DE530
	ldrh r1, [r5, #0x1c]
	adds r0, r5, #0
	adds r0, #0x2a
	ldrb r2, [r0]
	movs r0, #0x20
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080DE4CC @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080DE4D0 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080DE530
	.align 2, 0
_080DE4C4: .4byte gUnk_02020EE0
_080DE4C8: .4byte gUnk_0203AD3C
_080DE4CC: .4byte 0xFFF7FFFF
_080DE4D0: .4byte 0x0400000A
_080DE4D4:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080DE530
	movs r0, #0x20
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080DE504 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080DE508 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080DE530
	.align 2, 0
_080DE504: .4byte 0xFFF7FFFF
_080DE508: .4byte 0x0400000A
_080DE50C:
	ldr r1, [r5, #0x10]
	cmp r1, #0
	beq _080DE526
	ldr r4, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r4, r0
	cmp r4, #0
	bne _080DE526
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0x10]
_080DE526:
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x18]
_080DE530:
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r2, [r0]
	ldr r4, _080DE590 @ =0x0000FFFF
	adds r3, r0, #0
	cmp r2, r4
	beq _080DE550
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080DE550
	adds r0, r4, #0
	orrs r0, r2
	strh r0, [r3]
_080DE550:
	ldr r2, _080DE594 @ =gUnk_02020EE0
	ldr r0, _080DE598 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r3, [r3]
	cmp r0, r3
	bne _080DE5A0
	adds r4, r5, #0
	adds r4, #0x2f
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DE5A8
	ldr r6, _080DE59C @ =0x0000033B
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DE5A8
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080DE5A8
	.align 2, 0
_080DE590: .4byte 0x0000FFFF
_080DE594: .4byte gUnk_02020EE0
_080DE598: .4byte gUnk_0203AD3C
_080DE59C: .4byte 0x0000033B
_080DE5A0:
	adds r1, r5, #0
	adds r1, #0x2f
	movs r0, #0
	strb r0, [r1]
_080DE5A8:
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r4, r5, #0
	adds r4, #0x56
	strb r0, [r4]
	adds r0, r5, #0
	bl sub_0806F780
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080DE648
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	ble _080DE5DA
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r5, #8]
	b _080DE648
_080DE5DA:
	ldr r0, [r5, #8]
	movs r1, #0x90
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	bne _080DE642
	ldrb r0, [r4]
	cmp r0, #0xff
	beq _080DE608
	ldr r2, _080DE600 @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080DE604 @ =0x0000065E
	adds r0, r0, r1
	ldrb r1, [r0]
	b _080DE60A
	.align 2, 0
_080DE600: .4byte gCurLevelInfo
_080DE604: .4byte 0x0000065E
_080DE608:
	movs r1, #0xff
_080DE60A:
	cmp r1, #0xff
	beq _080DE642
	lsls r3, r1, #6
	ldrb r0, [r5]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _080DE650 @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r2, [r5]
	adds r1, r1, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080DE654 @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r5, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_080DE642:
	adds r0, r5, #0
	bl sub_0806F8BC
_080DE648:
	add sp, #0x28
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DE650: .4byte gUnk_02022EB0
_080DE654: .4byte gUnk_02022F50

	thumb_func_start sub_080DE658
sub_080DE658: @ 0x080DE658
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	lsls r2, r2, #0x18
	lsrs r7, r2, #0x18
	ldr r0, _080DE69C @ =sub_080DE80C
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080DE6A0 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DE6A4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r5, r0, r1
	b _080DE6AC
	.align 2, 0
_080DE69C: .4byte sub_080DE80C
_080DE6A0: .4byte sub_0803DCCC
_080DE6A4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
_080DE6AC:
	adds r4, r5, #0
	adds r0, r4, #0
	bl sub_0803E380
	movs r0, #0
	mov sl, r0
	movs r0, #2
	strb r0, [r4]
	ldr r0, [r6, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r6, #0x44]
	str r0, [r4, #0x44]
	str r6, [r4, #0x70]
	mov r1, sl
	strh r1, [r4, #4]
	adds r0, r6, #0
	adds r0, #0x60
	ldrh r0, [r0]
	movs r2, #0x60
	adds r2, r2, r4
	mov sb, r2
	strh r0, [r2]
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _080DE7E0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r3, #1
	adds r0, r3, #0
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080DE704
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
_080DE704:
	adds r0, r4, #0
	adds r0, #0x63
	strb r3, [r0]
	ldr r2, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #7
	orrs r2, r0
	movs r0, #0x80
	lsls r0, r0, #0x15
	orrs r2, r0
	movs r0, #0xa0
	lsls r0, r0, #1
	orrs r2, r0
	ldr r0, _080DE7E4 @ =0x20000043
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #0x5c]
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r2, r0
	str r2, [r4, #8]
	cmp r7, #0
	beq _080DE740
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r2, r0
	str r2, [r4, #8]
_080DE740:
	adds r0, r5, #0
	adds r0, #0x62
	strb r7, [r0]
	ldr r3, _080DE7E8 @ =gUnk_08356838
	mov r0, r8
	lsls r1, r0, #1
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrh r2, [r0]
	adds r0, r5, #0
	adds r0, #0x50
	strh r2, [r0]
	adds r1, #1
	lsls r1, r1, #1
	adds r1, r1, r3
	ldrh r0, [r1]
	adds r1, r5, #0
	adds r1, #0x52
	strh r0, [r1]
	movs r2, #6
	rsbs r2, r2, #0
	movs r0, #6
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r2, #0
	movs r3, #6
	bl sub_0803E2B0
	mov r1, sl
	str r1, [sp]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_0803E308
	adds r1, r5, #0
	adds r1, #0x10
	ldr r6, _080DE7EC @ =0x0000033B
	movs r0, #0xd
	str r0, [sp]
	movs r0, #0x1b
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r2, #0x20
	adds r3, r6, #0
	bl sub_080708DC
	adds r4, r5, #0
	adds r4, #0x2f
	movs r2, #0
	strb r2, [r4]
	ldr r2, _080DE7F0 @ =gUnk_02020EE0
	ldr r0, _080DE7F4 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sb
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DE7F8
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DE7FC
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080DE7FC
	.align 2, 0
_080DE7E0: .4byte gUnk_03000510
_080DE7E4: .4byte 0x20000043
_080DE7E8: .4byte gUnk_08356838
_080DE7EC: .4byte 0x0000033B
_080DE7F0: .4byte gUnk_02020EE0
_080DE7F4: .4byte gUnk_0203AD3C
_080DE7F8:
	movs r2, #0
	strb r2, [r4]
_080DE7FC:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080DE80C
sub_080DE80C: @ 0x080DE80C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x28
	ldr r0, _080DE82C @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DE830
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DE838
	.align 2, 0
_080DE82C: .4byte gCurTask
_080DE830:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DE838:
	adds r5, r0, #0
	ldr r2, _080DE8A4 @ =gUnk_02020EE0
	ldr r0, _080DE8A8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DE8EC
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _080DE8B4
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080DE910
	ldrh r1, [r5, #0x1c]
	adds r0, r5, #0
	adds r0, #0x2a
	ldrb r2, [r0]
	movs r0, #0x20
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080DE8AC @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080DE8B0 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080DE910
	.align 2, 0
_080DE8A4: .4byte gUnk_02020EE0
_080DE8A8: .4byte gUnk_0203AD3C
_080DE8AC: .4byte 0xFFF7FFFF
_080DE8B0: .4byte 0x0400000A
_080DE8B4:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080DE910
	movs r0, #0x20
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080DE8E4 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080DE8E8 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080DE910
	.align 2, 0
_080DE8E4: .4byte 0xFFF7FFFF
_080DE8E8: .4byte 0x0400000A
_080DE8EC:
	ldr r1, [r5, #0x10]
	cmp r1, #0
	beq _080DE906
	ldr r4, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r4, r0
	cmp r4, #0
	bne _080DE906
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0x10]
_080DE906:
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x18]
_080DE910:
	ldr r2, _080DE958 @ =gUnk_02020EE0
	ldr r0, _080DE95C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	adds r6, r1, #0
	ldrh r1, [r6]
	cmp r0, r1
	bne _080DE964
	adds r4, r5, #0
	adds r4, #0x2f
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DE96C
	ldr r7, _080DE960 @ =0x0000033B
	adds r0, r7, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DE96C
	adds r0, r7, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080DE96C
	.align 2, 0
_080DE958: .4byte gUnk_02020EE0
_080DE95C: .4byte gUnk_0203AD3C
_080DE960: .4byte 0x0000033B
_080DE964:
	adds r1, r5, #0
	adds r1, #0x2f
	movs r0, #0
	strb r0, [r1]
_080DE96C:
	ldr r0, [r5, #0x70]
	ldrh r2, [r6]
	ldr r3, _080DE9BC @ =0x0000FFFF
	cmp r2, r3
	beq _080DE988
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080DE988
	adds r0, r3, #0
	orrs r0, r2
	strh r0, [r6]
_080DE988:
	adds r0, r5, #0
	bl sub_0806F780
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080DEA84
	ldr r1, [r5, #8]
	movs r0, #4
	orrs r1, r0
	str r1, [r5, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080DE9C0
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	ble _080DE9C0
	movs r0, #0x80
	lsls r0, r0, #5
	orrs r1, r0
	str r1, [r5, #8]
	b _080DEA84
	.align 2, 0
_080DE9BC: .4byte 0x0000FFFF
_080DE9C0:
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080DE9E8
	adds r0, r5, #0
	adds r0, #0x50
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	str r0, [r5, #0x40]
	adds r0, r5, #0
	adds r0, #0x52
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r5, #0x44]
	subs r0, r0, r1
	str r0, [r5, #0x44]
_080DE9E8:
	adds r0, r5, #0
	adds r0, #0x62
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DEA0E
	ldrb r1, [r5, #1]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080DEA06
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	b _080DEA0C
_080DEA06:
	ldr r0, [r5, #8]
	ldr r1, _080DEA38 @ =0xFFFFFDFF
	ands r0, r1
_080DEA0C:
	str r0, [r5, #8]
_080DEA0E:
	ldr r0, [r5, #8]
	movs r1, #0x90
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	bne _080DEA7E
	adds r1, r5, #0
	adds r1, #0x56
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _080DEA44
	ldr r2, _080DEA3C @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080DEA40 @ =0x0000065E
	adds r0, r0, r1
	ldrb r1, [r0]
	b _080DEA46
	.align 2, 0
_080DEA38: .4byte 0xFFFFFDFF
_080DEA3C: .4byte gCurLevelInfo
_080DEA40: .4byte 0x0000065E
_080DEA44:
	movs r1, #0xff
_080DEA46:
	cmp r1, #0xff
	beq _080DEA7E
	lsls r3, r1, #6
	ldrb r0, [r5]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _080DEA8C @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r2, [r5]
	adds r1, r1, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080DEA90 @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r5, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_080DEA7E:
	adds r0, r5, #0
	bl sub_0806F8BC
_080DEA84:
	add sp, #0x28
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DEA8C: .4byte gUnk_02022EB0
_080DEA90: .4byte gUnk_02022F50

	thumb_func_start sub_080DEA94
sub_080DEA94: @ 0x080DEA94
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
	ldr r0, _080DEAD0 @ =sub_080DECE4
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080DEAD4 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DEAD8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DEAE0
	.align 2, 0
_080DEAD0: .4byte sub_080DECE4
_080DEAD4: .4byte sub_0803DCCC
_080DEAD8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DEAE0:
	adds r4, r0, #0
	bl sub_0803E380
	movs r6, #0
	movs r0, #2
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	str r5, [r4, #0x70]
	movs r0, #0
	mov sb, r0
	strh r6, [r4, #4]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	movs r1, #0x60
	adds r1, r1, r4
	mov r8, r1
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r2, r4, #0
	adds r2, #0x56
	strb r0, [r2]
	ldr r0, _080DEC28 @ =gUnk_03000510
	ldrb r1, [r0, #4]
	movs r3, #1
	adds r0, r3, #0
	ldrb r2, [r2]
	lsls r0, r2
	movs r5, #0x10
	orrs r0, r5
	ands r1, r0
	cmp r1, #0
	beq _080DEB36
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
_080DEB36:
	adds r0, r4, #0
	adds r0, #0x63
	strb r3, [r0]
	ldr r2, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #7
	orrs r2, r0
	movs r0, #0x80
	lsls r0, r0, #0x15
	orrs r2, r0
	movs r0, #0xa0
	lsls r0, r0, #1
	orrs r2, r0
	ldr r0, _080DEC2C @ =0x20000043
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #0x5c]
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r2, r0
	str r2, [r4, #8]
	cmp r7, #0
	beq _080DEB72
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r2, r0
	str r2, [r4, #8]
_080DEB72:
	adds r0, r4, #0
	adds r0, #0x62
	strb r7, [r0]
	subs r0, #0x12
	strh r6, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xf8
	lsls r0, r0, #8
	strh r0, [r1]
	ldr r2, _080DEC30 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DEC34 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080DEC38 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0x1f
	ands r0, r1
	subs r0, r5, r0
	lsls r0, r0, #8
	ldr r1, [r4, #0x40]
	adds r1, r1, r0
	str r1, [r4, #0x40]
	ldr r0, [r4, #0x44]
	movs r2, #0xc0
	lsls r2, r2, #5
	adds r0, r0, r2
	str r0, [r4, #0x44]
	movs r1, #2
	rsbs r1, r1, #0
	movs r2, #4
	rsbs r2, r2, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #2
	bl sub_0803E2B0
	str r6, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_0803E308
	adds r1, r4, #0
	adds r1, #0x10
	ldr r6, _080DEC3C @ =0x0000033B
	movs r0, #0xf
	str r0, [sp]
	movs r0, #0x1b
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x20
	adds r3, r6, #0
	bl sub_080708DC
	adds r5, r4, #0
	adds r5, #0x2f
	mov r0, sb
	strb r0, [r5]
	ldr r2, _080DEC40 @ =gUnk_02020EE0
	ldr r0, _080DEC44 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, r8
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DEC48
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DEC4C
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080DEC4C
	.align 2, 0
_080DEC28: .4byte gUnk_03000510
_080DEC2C: .4byte 0x20000043
_080DEC30: .4byte gRngVal
_080DEC34: .4byte 0x00196225
_080DEC38: .4byte 0x3C6EF35F
_080DEC3C: .4byte 0x0000033B
_080DEC40: .4byte gUnk_02020EE0
_080DEC44: .4byte gUnk_0203AD3C
_080DEC48:
	mov r2, sb
	strb r2, [r5]
_080DEC4C:
	ldr r1, _080DECC4 @ =gUnk_02020EE0
	ldr r0, _080DECC8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DECB4
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DEC78
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080DECB4
_080DEC78:
	ldr r1, _080DECCC @ =gUnk_08D60FA4
	ldr r4, _080DECD0 @ =gSongTable
	ldr r2, _080DECD4 @ =0x00000A2C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080DEC9C
	ldr r1, _080DECD8 @ =0x00000A28
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080DECB4
_080DEC9C:
	cmp r3, #0
	beq _080DECAE
	ldr r0, _080DECDC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080DECB4
_080DECAE:
	ldr r0, _080DECE0 @ =0x00000145
	bl m4aSongNumStart
_080DECB4:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DECC4: .4byte gUnk_02020EE0
_080DECC8: .4byte gUnk_0203AD3C
_080DECCC: .4byte gUnk_08D60FA4
_080DECD0: .4byte gSongTable
_080DECD4: .4byte 0x00000A2C
_080DECD8: .4byte 0x00000A28
_080DECDC: .4byte gUnk_0203AD10
_080DECE0: .4byte 0x00000145

	thumb_func_start sub_080DECE4
sub_080DECE4: @ 0x080DECE4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x28
	ldr r0, _080DED04 @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DED08
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DED10
	.align 2, 0
_080DED04: .4byte gCurTask
_080DED08:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DED10:
	adds r5, r0, #0
	ldr r2, _080DED7C @ =gUnk_02020EE0
	ldr r0, _080DED80 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DEDC4
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _080DED8C
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080DEDE8
	ldrh r1, [r5, #0x1c]
	adds r0, r5, #0
	adds r0, #0x2a
	ldrb r2, [r0]
	movs r0, #0x20
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080DED84 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080DED88 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080DEDE8
	.align 2, 0
_080DED7C: .4byte gUnk_02020EE0
_080DED80: .4byte gUnk_0203AD3C
_080DED84: .4byte 0xFFF7FFFF
_080DED88: .4byte 0x0400000A
_080DED8C:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080DEDE8
	movs r0, #0x20
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080DEDBC @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080DEDC0 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080DEDE8
	.align 2, 0
_080DEDBC: .4byte 0xFFF7FFFF
_080DEDC0: .4byte 0x0400000A
_080DEDC4:
	ldr r1, [r5, #0x10]
	cmp r1, #0
	beq _080DEDDE
	ldr r4, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r4, r0
	cmp r4, #0
	bne _080DEDDE
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0x10]
_080DEDDE:
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x18]
_080DEDE8:
	ldr r2, _080DEE30 @ =gUnk_02020EE0
	ldr r0, _080DEE34 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	adds r6, r1, #0
	ldrh r1, [r6]
	cmp r0, r1
	bne _080DEE3C
	adds r4, r5, #0
	adds r4, #0x2f
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DEE44
	ldr r7, _080DEE38 @ =0x0000033B
	adds r0, r7, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080DEE44
	adds r0, r7, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080DEE44
	.align 2, 0
_080DEE30: .4byte gUnk_02020EE0
_080DEE34: .4byte gUnk_0203AD3C
_080DEE38: .4byte 0x0000033B
_080DEE3C:
	adds r1, r5, #0
	adds r1, #0x2f
	movs r0, #0
	strb r0, [r1]
_080DEE44:
	ldr r4, [r5, #0x70]
	ldrh r2, [r6]
	ldr r3, _080DEEA4 @ =0x0000FFFF
	cmp r2, r3
	beq _080DEE60
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080DEE60
	adds r0, r3, #0
	orrs r0, r2
	strh r0, [r6]
_080DEE60:
	adds r0, r5, #0
	bl sub_0806F780
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080DEF54
	ldr r0, [r4, #8]
	movs r4, #0x80
	lsls r4, r4, #5
	ands r0, r4
	cmp r0, #0
	bne _080DEE9A
	ldr r1, [r5, #8]
	movs r0, #4
	orrs r1, r0
	str r1, [r5, #8]
	ldr r2, [r5, #0x44]
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r2, r0
	ble _080DEEA8
	movs r0, #0x8a
	lsls r0, r0, #8
	str r0, [r5, #0x44]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0
	bl sub_080DDC44
_080DEE9A:
	ldr r0, [r5, #8]
	orrs r0, r4
	str r0, [r5, #8]
	b _080DEF54
	.align 2, 0
_080DEEA4: .4byte 0x0000FFFF
_080DEEA8:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r1, r0
	cmp r1, #0
	bne _080DEECC
	adds r0, r5, #0
	adds r0, #0x50
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	str r0, [r5, #0x40]
	adds r0, r5, #0
	adds r0, #0x52
	movs r1, #0
	ldrsh r0, [r0, r1]
	subs r0, r2, r0
	str r0, [r5, #0x44]
_080DEECC:
	adds r0, r5, #0
	adds r0, #0x62
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DEEDE
	ldr r0, [r5, #8]
	ldr r1, _080DEF08 @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r5, #8]
_080DEEDE:
	ldr r0, [r5, #8]
	movs r1, #0x90
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	bne _080DEF4E
	adds r1, r5, #0
	adds r1, #0x56
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _080DEF14
	ldr r2, _080DEF0C @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r2, _080DEF10 @ =0x0000065E
	adds r0, r0, r2
	ldrb r1, [r0]
	b _080DEF16
	.align 2, 0
_080DEF08: .4byte 0xFFFFFDFF
_080DEF0C: .4byte gCurLevelInfo
_080DEF10: .4byte 0x0000065E
_080DEF14:
	movs r1, #0xff
_080DEF16:
	cmp r1, #0xff
	beq _080DEF4E
	lsls r3, r1, #6
	ldrb r0, [r5]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _080DEF5C @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r2, [r5]
	adds r1, r1, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080DEF60 @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r5, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_080DEF4E:
	adds r0, r5, #0
	bl sub_0806F8BC
_080DEF54:
	add sp, #0x28
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DEF5C: .4byte gUnk_02022EB0
_080DEF60: .4byte gUnk_02022F50

	thumb_func_start sub_080DEF64
sub_080DEF64: @ 0x080DEF64
	push {r4, r5, r6, lr}
	sub sp, #0x78
	adds r3, r0, #0
	adds r5, r3, #0
	ldr r0, _080DEFF0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	bne _080DEFE6
	adds r6, r3, #0
	adds r6, #0xc3
	ldrb r0, [r6]
	cmp r0, #0
	beq _080DEF92
	subs r0, #1
	strb r0, [r6]
_080DEF92:
	ldr r0, [r5, #0xc]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080DEFE6
	ldrb r0, [r6]
	cmp r0, #0
	bne _080DEFE6
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r1, [r0]
	add r0, sp, #0x60
	strh r1, [r0]
	adds r0, r5, #0
	adds r0, #0xb8
	ldr r0, [r0]
	adds r0, #0x2b
	ldrb r0, [r0]
	mov r4, sp
	adds r4, #0x2f
	strb r0, [r4]
	ldr r1, _080DEFF4 @ =gUnk_08356868
	mov r0, sp
	bl sub_08085CE8
	adds r5, #0xb4
	ldr r0, [r5]
	ldrh r0, [r0, #8]
	strb r0, [r4]
	ldr r1, _080DEFF8 @ =gUnk_083568A0
	mov r0, sp
	bl sub_08085CE8
	ldr r0, [r5]
	ldrh r0, [r0, #4]
	strb r0, [r4]
	ldr r1, _080DEFFC @ =gUnk_083568D8
	mov r0, sp
	bl sub_08085CE8
	movs r0, #0x1e
	strb r0, [r6]
_080DEFE6:
	add sp, #0x78
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080DEFF0: .4byte gUnk_03000510
_080DEFF4: .4byte gUnk_08356868
_080DEFF8: .4byte gUnk_083568A0
_080DEFFC: .4byte gUnk_083568D8

	thumb_func_start sub_080DF000
sub_080DF000: @ 0x080DF000
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DF028 @ =sub_080DBA1C
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DF028: .4byte sub_080DBA1C

	thumb_func_start sub_080DF02C
sub_080DF02C: @ 0x080DF02C
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r2, _080DF050 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DF054 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080DF058 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r4, r0, #0x10
	movs r0, #1
	ands r4, r0
	cmp r4, #0
	beq _080DF05C
	adds r0, r5, #0
	bl sub_080DF0EC
	b _080DF07C
	.align 2, 0
_080DF050: .4byte gRngVal
_080DF054: .4byte 0x00196225
_080DF058: .4byte 0x3C6EF35F
_080DF05C:
	ldr r2, _080DF084 @ =sub_080DC3D4
	adds r0, r5, #0
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, r5, #0
	bl sub_0808671C
	adds r1, r5, #0
	adds r1, #0xbc
	str r0, [r1]
_080DF07C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080DF084: .4byte sub_080DC3D4

	thumb_func_start sub_080DF088
sub_080DF088: @ 0x080DF088
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DF0BC @ =sub_080DC6D8
	movs r1, #1
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x50
	movs r1, #0
	movs r0, #0xa0
	lsls r0, r0, #1
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x52
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DF0B6
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080DF0B6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DF0BC: .4byte sub_080DC6D8

	thumb_func_start sub_080DF0C0
sub_080DF0C0: @ 0x080DF0C0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DF0E8 @ =sub_080DC800
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r4, #0xbc
	ldr r0, [r4]
	bl sub_080867A0
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DF0E8: .4byte sub_080DC800

	thumb_func_start sub_080DF0EC
sub_080DF0EC: @ 0x080DF0EC
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DF114 @ =sub_080DC550
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, r4, #0
	bl sub_0808671C
	adds r4, #0xbc
	str r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DF114: .4byte sub_080DC550

	thumb_func_start sub_080DF118
sub_080DF118: @ 0x080DF118
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DF154 @ =sub_080DC97C
	movs r1, #0
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x50
	movs r1, #0
	movs r0, #0xa0
	lsls r0, r0, #1
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x52
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DF146
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080DF146:
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DF154: .4byte sub_080DC97C

	thumb_func_start sub_080DF158
sub_080DF158: @ 0x080DF158
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DF188 @ =sub_080DCA44
	movs r1, #1
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	movs r0, #0x1c
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DF188: .4byte sub_080DCA44

	thumb_func_start sub_080DF18C
sub_080DF18C: @ 0x080DF18C
	push {lr}
	adds r3, r0, #0
	ldrh r0, [r3, #4]
	subs r0, #1
	movs r1, #0
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _080DF1DC
	strh r0, [r3, #4]
	adds r0, r3, #0
	adds r0, #0x9e
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	ldr r2, _080DF1C8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DF1CC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080DF1D0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DF1D8
	ldr r0, _080DF1D4 @ =sub_080DCBA0
	b _080DF1DA
	.align 2, 0
_080DF1C8: .4byte gRngVal
_080DF1CC: .4byte 0x00196225
_080DF1D0: .4byte 0x3C6EF35F
_080DF1D4: .4byte sub_080DCBA0
_080DF1D8:
	ldr r0, _080DF1E0 @ =sub_080DCCB0
_080DF1DA:
	str r0, [r3, #0x78]
_080DF1DC:
	pop {r0}
	bx r0
	.align 2, 0
_080DF1E0: .4byte sub_080DCCB0

	thumb_func_start sub_080DF1E4
sub_080DF1E4: @ 0x080DF1E4
	push {lr}
	adds r1, r0, #0
	ldrh r0, [r1, #4]
	subs r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080DF1FA
	adds r0, r1, #0
	bl sub_080DF200
_080DF1FA:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DF200
sub_080DF200: @ 0x080DF200
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DF218 @ =sub_080DCE28
	movs r1, #1
	bl ObjectSetFunc
	adds r4, #0x9f
	movs r0, #0
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DF218: .4byte sub_080DCE28

	thumb_func_start sub_080DF21C
sub_080DF21C: @ 0x080DF21C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DF244 @ =sub_080DCEA8
	movs r1, #1
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DF248
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	b _080DF24E
	.align 2, 0
_080DF244: .4byte sub_080DCEA8
_080DF248:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0x10
_080DF24E:
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DF258
sub_080DF258: @ 0x080DF258
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DF274 @ =sub_080DF278
	movs r1, #1
	bl ObjectSetFunc
	adds r4, #0x50
	ldrh r0, [r4]
	rsbs r0, r0, #0
	strh r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DF274: .4byte sub_080DF278

	thumb_func_start sub_080DF278
sub_080DF278: @ 0x080DF278
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	ldr r1, _080DF298 @ =0xFFFFF7FF
	ands r0, r1
	str r0, [r2, #8]
	ldrh r0, [r2, #4]
	lsls r3, r0, #0x10
	asrs r0, r3, #0x10
	cmp r0, #0x1f
	ble _080DF29C
	adds r0, r2, #0
	bl sub_080DBE3C
	b _080DF2B2
	.align 2, 0
_080DF298: .4byte 0xFFFFF7FF
_080DF29C:
	ldr r1, _080DF2B8 @ =gUnk_083567F0
	asrs r0, r3, #0x12
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	adds r1, r2, #0
	adds r1, #0x52
	strh r0, [r1]
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
_080DF2B2:
	pop {r0}
	bx r0
	.align 2, 0
_080DF2B8: .4byte gUnk_083567F0

	thumb_func_start sub_080DF2BC
sub_080DF2BC: @ 0x080DF2BC
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DF310 @ =sub_080DBAF8
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r2, #0
	movs r1, #0
	strh r1, [r0]
	adds r3, r4, #0
	adds r3, #0x52
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r3]
	movs r0, #0xb0
	lsls r0, r0, #8
	str r0, [r4, #0x40]
	ldr r0, _080DF314 @ =0xFFFFC000
	str r0, [r4, #0x44]
	strh r1, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x85
	strb r2, [r0]
	adds r0, #0x19
	strb r2, [r0]
	adds r0, r4, #0
	bl sub_080DD8D8
	adds r1, r4, #0
	adds r1, #0xb8
	str r0, [r1]
	adds r0, r4, #0
	bl sub_080DD55C
	adds r1, r4, #0
	adds r1, #0xb4
	str r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DF310: .4byte sub_080DBAF8
_080DF314: .4byte 0xFFFFC000

	thumb_func_start CreateCrazyHand
CreateCrazyHand: @ 0x080DF318
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	movs r2, #0x80
	lsls r2, r2, #5
	ldrb r0, [r5, #0xc]
	cmp r0, #0x47
	bne _080DF32E
	adds r2, #0x10
_080DF32E:
	ldr r0, _080DF354 @ =ObjectMain
	ldr r1, _080DF358 @ =sub_080E3E30
	str r1, [sp]
	movs r1, #0xbc
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080DF35C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080DF364
	.align 2, 0
_080DF354: .4byte ObjectMain
_080DF358: .4byte sub_080E3E30
_080DF35C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080DF364:
	adds r4, r0, #0
	adds r0, #0xb4
	movs r1, #0
	str r1, [r0]
	adds r0, #4
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl InitObject
	ldr r1, [r4, #0xc]
	movs r3, #1
	orrs r1, r3
	ldr r2, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r2, r0
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r2, r0
	movs r0, #0x40
	orrs r2, r0
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r2, r0
	movs r0, #4
	orrs r1, r0
	orrs r1, r3
	str r1, [r4, #0xc]
	movs r0, #0x80
	lsls r0, r0, #0xe
	orrs r2, r0
	str r2, [r4, #8]
	ldr r0, [r4, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	ldr r1, _080DF3DC @ =0x001080A0
	orrs r0, r1
	str r0, [r4, #0x5c]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080DF3E0
	movs r0, #2
	rsbs r0, r0, #0
	ands r2, r0
	b _080DF3E2
	.align 2, 0
_080DF3DC: .4byte 0x001080A0
_080DF3E0:
	orrs r2, r3
_080DF3E2:
	str r2, [r4, #8]
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r2, #0x13
	rsbs r2, r2, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0x10
	bl sub_0803E2B0
	movs r1, #0xa
	rsbs r1, r1, #0
	movs r2, #4
	rsbs r2, r2, #0
	movs r6, #4
	str r6, [sp]
	adds r0, r4, #0
	movs r3, #0xa
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0x4d
	bne _080DF424
	adds r0, r4, #0
	bl sub_080DF5A4
	b _080DF490
_080DF424:
	ldr r2, _080DF4AC @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080DF4B0 @ =0x0000065E
	adds r0, r0, r1
	ldrb r5, [r0]
	adds r0, r5, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0
	bl sub_08002A44
	adds r0, r5, #0
	movs r1, #0
	bl sub_08002A1C
	ldr r2, _080DF4B4 @ =gUnk_02020EE0
	ldr r0, _080DF4B8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DF48A
	ldr r0, _080DF4BC @ =gUnk_0203AD20
	ldr r0, [r0]
	ands r0, r6
	cmp r0, #0
	bne _080DF48A
	adds r0, r5, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080DF48A:
	adds r0, r4, #0
	bl sub_080E37C4
_080DF490:
	adds r0, r4, #0
	bl sub_080E33E4
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	str r0, [r4, #0x7c]
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080DF4AC: .4byte gCurLevelInfo
_080DF4B0: .4byte 0x0000065E
_080DF4B4: .4byte gUnk_02020EE0
_080DF4B8: .4byte gUnk_0203AD3C
_080DF4BC: .4byte gUnk_0203AD20

	thumb_func_start sub_080DF4C0
sub_080DF4C0: @ 0x080DF4C0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	bl sub_0803D368
	adds r6, r0, #0
	adds r7, r5, #0
	adds r7, #0xac
	str r6, [r7]
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r6, #0xc]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _080DF596
	adds r0, r5, #0
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DF596
	ldr r1, [r5, #0x40]
	ldr r2, [r5, #0x44]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r4, [r0]
	movs r3, #0x1a
	ldrsh r0, [r4, r3]
	mov ip, r0
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	adds r0, r6, #0
	mov r3, ip
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080DF596
	ldr r4, _080DF5A0 @ =gCurLevelInfo
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	movs r2, #0xcd
	lsls r2, r2, #3
	muls r0, r2, r0
	adds r1, r4, #0
	adds r1, #0xa0
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa4
	movs r3, #0
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r4, #0
	adds r1, #0xa4
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa6
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r4, #0
	adds r1, #0xa8
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r4, #0
	adds r1, #0xac
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r2, r5, #0
	adds r2, #0xaa
	strh r0, [r2]
	adds r0, r5, #0
	adds r0, #0x85
	strb r3, [r0]
	adds r0, r5, #0
	bl sub_080DF5A4
_080DF596:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DF5A0: .4byte gCurLevelInfo

	thumb_func_start sub_080DF5A4
sub_080DF5A4: @ 0x080DF5A4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	ldr r2, _080DF5E8 @ =sub_080E36C4
	movs r1, #0
	bl ObjectSetFunc
	adds r4, r5, #0
	adds r4, #0x82
	ldrb r0, [r4]
	cmp r0, #0x47
	bne _080DF5F0
	movs r0, #0x8c
	lsls r0, r0, #9
	str r0, [r5, #0x40]
	adds r1, r5, #0
	adds r1, #0x50
	ldr r0, _080DF5EC @ =0x0000FF40
	strh r0, [r1]
	adds r0, r5, #0
	bl sub_08034E14
	adds r1, r0, #0
	movs r0, #0x85
	adds r0, r0, r5
	mov sb, r0
	cmp r1, #0
	bne _080DF5E2
	b _080DF6E4
_080DF5E2:
	movs r0, #0
	strb r0, [r1, #9]
	b _080DF6E4
	.align 2, 0
_080DF5E8: .4byte sub_080E36C4
_080DF5EC: .4byte 0x0000FF40
_080DF5F0:
	ldr r0, _080DF700 @ =0xFFFFE800
	str r0, [r5, #0x40]
	adds r1, r5, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	adds r0, r5, #0
	bl sub_08034E14
	adds r1, r0, #0
	cmp r1, #0
	beq _080DF60E
	movs r0, #0
	strb r0, [r1, #9]
_080DF60E:
	ldrb r4, [r4]
	adds r3, r4, #0
	subs r3, #0x38
	ldr r2, _080DF704 @ =gCurLevelInfo
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080DF708 @ =0x0000065E
	adds r0, r0, r1
	ldrb r6, [r0]
	lsls r3, r3, #0x10
	asrs r1, r3, #0x10
	movs r2, #0x85
	adds r2, r2, r5
	mov sb, r2
	cmp r1, #0
	blt _080DF6E4
	ldr r0, _080DF70C @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080DF6E4
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080DF6E4
	adds r0, r4, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r7, r3, #0
	movs r1, #0x60
	adds r1, r1, r5
	mov r8, r1
	cmp r0, #0xf
	bls _080DF6A2
	movs r4, #1
_080DF66A:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _080DF66A
	adds r0, r6, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	movs r2, #0
	bl sub_08002A44
_080DF6A2:
	ldr r1, _080DF70C @ =gUnk_08352D80
	asrs r0, r7, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r6, #0
	bl sub_08002A1C
	ldr r2, _080DF710 @ =gUnk_02020EE0
	ldr r0, _080DF714 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, r8
	ldrh r2, [r2]
	cmp r0, r2
	bne _080DF6E4
	ldr r0, _080DF718 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080DF6E4
	adds r0, r6, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080DF6E4:
	movs r0, #0
	mov r1, sb
	strb r0, [r1]
	ldr r0, [r5, #8]
	ldr r1, _080DF71C @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r5, #8]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DF700: .4byte 0xFFFFE800
_080DF704: .4byte gCurLevelInfo
_080DF708: .4byte 0x0000065E
_080DF70C: .4byte gUnk_08352D80
_080DF710: .4byte gUnk_02020EE0
_080DF714: .4byte gUnk_0203AD3C
_080DF718: .4byte gUnk_0203AD20
_080DF71C: .4byte 0xFFFFFBFF

	thumb_func_start sub_080DF720
sub_080DF720: @ 0x080DF720
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	movs r0, #2
	mov sl, r0
	mov sb, r0
	movs r3, #2
	adds r5, r4, #0
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r2, [r0]
	ldr r0, [r4, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x68]
	cmp r2, #0
	beq _080DF76C
	movs r1, #1
	mov sb, r1
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0x4d
	bne _080DF75A
	movs r3, #3
_080DF75A:
	adds r0, r2, #0
	adds r0, #0xb8
	ldrb r0, [r0]
	cmp r0, #1
	bne _080DF76C
	adds r0, r4, #0
	bl sub_080E3D10
	b _080DF884
_080DF76C:
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r1, [r0]
	mov r8, r0
	cmp r1, r3
	blo _080DF7B8
	ldr r2, _080DF798 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DF79C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080DF7A0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DF7A4
	adds r0, r4, #0
	bl sub_080DF9D0
	b _080DF7AA
	.align 2, 0
_080DF798: .4byte gRngVal
_080DF79C: .4byte 0x00196225
_080DF7A0: .4byte 0x3C6EF35F
_080DF7A4:
	adds r0, r4, #0
	bl sub_080E003C
_080DF7AA:
	adds r1, r5, #0
	adds r1, #0xb9
	movs r0, #0
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	b _080DF880
_080DF7B8:
	adds r0, r1, #1
	mov r1, r8
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0xba
	ldrb r1, [r0]
	mov ip, r0
	cmp r1, #0
	bne _080DF7CE
	cmp r2, #0
	bne _080DF7D2
_080DF7CE:
	movs r0, #0
	mov sl, r0
_080DF7D2:
	adds r3, r5, #0
	adds r3, #0xb9
	ldrb r0, [r3]
	cmp r0, #0
	beq _080DF7E0
	movs r1, #0
	mov sb, r1
_080DF7E0:
	ldr r5, _080DF810 @ =gRngVal
	ldr r0, [r5]
	ldr r7, _080DF814 @ =0x00196225
	muls r0, r7, r0
	ldr r6, _080DF818 @ =0x3C6EF35F
	adds r2, r0, r6
	str r2, [r5]
	lsrs r1, r2, #0x10
	movs r0, #7
	ands r1, r0
	cmp r1, sl
	bhs _080DF822
	movs r5, #0
	strb r5, [r3]
	adds r0, r4, #0
	bl sub_080E3D10
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0x47
	bne _080DF81C
	movs r0, #4
	b _080DF880
	.align 2, 0
_080DF810: .4byte gRngVal
_080DF814: .4byte 0x00196225
_080DF818: .4byte 0x3C6EF35F
_080DF81C:
	mov r0, r8
	strb r5, [r0]
	b _080DF884
_080DF822:
	mov r0, sl
	add r0, sb
	cmp r1, r0
	bge _080DF83C
	movs r1, #0
	movs r0, #1
	strb r0, [r3]
	mov r0, ip
	strb r1, [r0]
	adds r0, r4, #0
	bl sub_080E1800
	b _080DF884
_080DF83C:
	movs r0, #0
	strb r0, [r3]
	mov r1, ip
	strb r0, [r1]
	adds r0, r2, #0
	muls r0, r7, r0
	adds r2, r0, r6
	str r2, [r5]
	lsrs r0, r2, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	beq _080DF85E
	adds r0, r4, #0
	bl sub_080E396C
	b _080DF884
_080DF85E:
	adds r0, r2, #0
	muls r0, r7, r0
	adds r0, r0, r6
	str r0, [r5]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080DF878
	adds r0, r4, #0
	bl sub_080DF9D0
	b _080DF87E
_080DF878:
	adds r0, r4, #0
	bl sub_080E003C
_080DF87E:
	movs r0, #0
_080DF880:
	mov r1, r8
	strb r0, [r1]
_080DF884:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DF894
sub_080DF894: @ 0x080DF894
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	adds r0, #0xb4
	ldr r7, [r0]
	ldr r2, _080DF8CC @ =sub_080DF954
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DF8DC
	ldr r2, _080DF8D0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080DF8D4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080DF8D8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	adds r0, #0x2a
	b _080DF926
	.align 2, 0
_080DF8CC: .4byte sub_080DF954
_080DF8D0: .4byte gRngVal
_080DF8D4: .4byte 0x00196225
_080DF8D8: .4byte 0x3C6EF35F
_080DF8DC:
	ldr r5, _080DF908 @ =gRngVal
	ldr r0, [r5]
	ldr r3, _080DF90C @ =0x00196225
	muls r0, r3, r0
	ldr r1, _080DF910 @ =0x3C6EF35F
	adds r2, r0, r1
	str r2, [r5]
	lsrs r0, r2, #0x10
	movs r1, #0x3f
	ands r0, r1
	cmp r0, #0
	beq _080DF914
	adds r0, r2, #0
	muls r0, r3, r0
	ldr r1, _080DF910 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r5]
	lsrs r0, r0, #0x10
	movs r1, #0x1f
	ands r0, r1
	adds r0, #0x40
	b _080DF926
	.align 2, 0
_080DF908: .4byte gRngVal
_080DF90C: .4byte 0x00196225
_080DF910: .4byte 0x3C6EF35F
_080DF914:
	adds r0, r2, #0
	muls r0, r3, r0
	ldr r1, _080DF950 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r5]
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	adds r0, #0x48
_080DF926:
	strh r0, [r4, #4]
	adds r0, r6, #0
	adds r0, #0xb4
	ldr r0, [r0]
	cmp r0, #0
	beq _080DF940
	adds r0, r7, #0
	adds r0, #0xb8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DF940
	movs r0, #0x18
	strh r0, [r4, #4]
_080DF940:
	ldr r0, [r4, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x68]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080DF950: .4byte 0x3C6EF35F

	thumb_func_start sub_080DF954
sub_080DF954: @ 0x080DF954
	push {r4, lr}
	adds r3, r0, #0
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080DF974
	adds r0, r2, #0
	adds r0, #0x4c
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080DF984
	b _080DF980
_080DF974:
	adds r0, r2, #0
	subs r0, #0x4c
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080DF984
_080DF980:
	movs r0, #0
	strh r0, [r1]
_080DF984:
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080DF9A0
	adds r0, r2, #0
	adds r0, #0x4c
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080DF9B0
	b _080DF9AC
_080DF9A0:
	adds r0, r2, #0
	subs r0, #0x4c
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080DF9B0
_080DF9AC:
	movs r0, #0
	strh r0, [r1]
_080DF9B0:
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080DF9CA
	adds r0, r3, #0
	bl sub_080DF720
_080DF9CA:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080DF9D0
sub_080DF9D0: @ 0x080DF9D0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080DFA20 @ =sub_080DFA24
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r3, r4, #0
	adds r3, #0xac
	str r0, [r3]
	ldr r1, [r4, #8]
	movs r2, #0x80
	lsls r2, r2, #1
	orrs r1, r2
	str r1, [r4, #8]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa0
	movs r2, #0
	strh r0, [r1]
	ldr r0, [r3]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r1, #2
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r2, [r0]
	movs r0, #0xc
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x85
	strb r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080DFA20: .4byte sub_080DFA24

	thumb_func_start sub_080DFA24
sub_080DFA24: @ 0x080DFA24
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0x9e
	ldrb r0, [r5]
	adds r0, #1
	movs r6, #0
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _080DFA60
	adds r0, r4, #0
	bl sub_0803D368
	adds r2, r4, #0
	adds r2, #0xac
	str r0, [r2]
	strb r6, [r5]
	ldr r0, [r2]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa0
	strh r0, [r1]
	ldr r0, [r2]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r1, #2
	strh r0, [r1]
_080DFA60:
	ldr r3, [r4, #0x44]
	ldr r1, _080DFA94 @ =0xFFFFF000
	ands r3, r1
	adds r0, r4, #0
	adds r0, #0xa2
	movs r2, #0
	ldrsh r0, [r0, r2]
	subs r0, #0x40
	lsls r2, r0, #8
	ands r2, r1
	cmp r3, r2
	ble _080DFA98
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	adds r5, r1, #0
	cmp r0, r2
	ble _080DFAE4
	strh r2, [r5]
	b _080DFAE4
	.align 2, 0
_080DFA94: .4byte 0xFFFFF000
_080DFA98:
	cmp r3, r2
	bge _080DFABC
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080DFAB8 @ =0xFFFFFE80
	adds r5, r1, #0
	cmp r0, r2
	bge _080DFAE4
	strh r2, [r5]
	b _080DFAE4
	.align 2, 0
_080DFAB8: .4byte 0xFFFFFE80
_080DFABC:
	adds r0, r4, #0
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r5, r0, #0
	cmp r1, #0
	bge _080DFAD8
	adds r0, r2, #4
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080DFAE4
	b _080DFAE2
_080DFAD8:
	subs r0, r2, #4
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080DFAE4
_080DFAE2:
	strh r6, [r5]
_080DFAE4:
	ldr r3, [r4, #0x40]
	ldr r0, _080DFB10 @ =0xFFFFF000
	ands r3, r0
	adds r1, r4, #0
	adds r1, #0xa0
	movs r2, #0
	ldrsh r1, [r1, r2]
	lsls r2, r1, #8
	ands r2, r0
	cmp r3, r2
	bge _080DFB14
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r4, #4]
	ldrh r3, [r1]
	adds r0, r0, r3
	b _080DFB56
	.align 2, 0
_080DFB10: .4byte 0xFFFFF000
_080DFB14:
	cmp r3, r2
	ble _080DFB74
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080DFB4C
	adds r2, r4, #0
	adds r2, #0x50
	ldrh r0, [r2]
	ldrh r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _080DFB48 @ =0xFFFFFE80
	cmp r0, r1
	blt _080DFB44
	movs r1, #0xc0
	lsls r1, r1, #1
	cmp r0, r1
	ble _080DFB9C
_080DFB44:
	strh r1, [r2]
	b _080DFB9C
	.align 2, 0
_080DFB48: .4byte 0xFFFFFE80
_080DFB4C:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r4, #4]
	ldrh r2, [r1]
	adds r0, r0, r2
_080DFB56:
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080DFB6A
	ldr r2, _080DFB70 @ =0xFFFFFE80
	cmp r0, r2
	bge _080DFB9C
_080DFB6A:
	strh r2, [r1]
	b _080DFB9C
	.align 2, 0
_080DFB70: .4byte 0xFFFFFE80
_080DFB74:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080DFB8E
	adds r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080DFB9C
	b _080DFB98
_080DFB8E:
	subs r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080DFB9C
_080DFB98:
	movs r0, #0
	strh r0, [r1]
_080DFB9C:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080DFBB2
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080DFBB8
_080DFBB2:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_080DFBB8:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xa6
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r0, #0xc
	lsls r0, r0, #8
	ldr r1, [r4, #0x44]
	cmp r1, r0
	bge _080DFBD0
	movs r0, #0
	strh r0, [r5]
_080DFBD0:
	movs r2, #0
	ldrsh r0, [r5, r2]
	adds r1, r4, #0
	adds r1, #0x9f
	cmp r0, #0
	bgt _080DFBE0
	movs r0, #1
	strb r0, [r1]
_080DFBE0:
	ldrb r0, [r1]
	cmp r0, #0
	beq _080DFC34
	movs r2, #0x10
	movs r0, #0
	strh r0, [r5]
	adds r1, r4, #0
	adds r1, #0x85
	ldrb r0, [r1]
	cmp r0, #0x60
	bls _080DFC0C
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x60
	ble _080DFC10
	movs r0, #0x60
	strh r0, [r4, #4]
	movs r2, #0x20
	b _080DFC10
_080DFC0C:
	adds r0, #1
	strb r0, [r1]
_080DFC10:
	lsls r3, r2, #8
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r2, [r0, #0x40]
	ldr r0, [r4, #0x40]
	subs r1, r2, r0
	cmp r1, #0
	blt _080DFC28
	cmp r1, r3
	blt _080DFC2E
	b _080DFC34
_080DFC28:
	subs r0, r0, r2
	cmp r0, r3
	bge _080DFC34
_080DFC2E:
	adds r0, r4, #0
	bl sub_080E37F0
_080DFC34:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080DFC3C
sub_080DFC3C: @ 0x080DFC3C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080DFC56
	ldr r0, [r6, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080DFC5C
_080DFC56:
	ldr r0, [r6, #8]
	movs r1, #1
	orrs r0, r1
_080DFC5C:
	str r0, [r6, #8]
	adds r0, r6, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #3
	beq _080DFC6C
	b _080DFD7C
_080DFC6C:
	adds r2, r6, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x7a
	strh r0, [r2]
	lsls r0, r0, #0x10
	ldr r1, _080DFD5C @ =0xF9800000
	cmp r0, r1
	bge _080DFC82
	ldr r0, _080DFD60 @ =0x0000F980
	strh r0, [r2]
_080DFC82:
	adds r0, r6, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080DFC92
	b _080DFDAE
_080DFC92:
	movs r0, #1
	adds r1, r6, #0
	bl sub_0806FE64
	movs r1, #8
	rsbs r1, r1, #0
	ldr r0, [r6, #8]
	movs r4, #1
	adds r3, r4, #0
	bics r3, r0
	adds r0, r6, #0
	movs r2, #0xc
	bl sub_08089864
	movs r1, #0x14
	rsbs r1, r1, #0
	ldr r3, [r6, #8]
	ands r3, r4
	adds r0, r6, #0
	movs r2, #0xc
	bl sub_08089864
	movs r5, #8
	str r5, [sp]
	adds r0, r6, #0
	movs r1, #0x1e
	movs r2, #8
	movs r3, #0
	bl sub_080A8D18
	ldr r0, [r6, #8]
	eors r0, r4
	str r0, [r6, #8]
	str r5, [sp]
	adds r0, r6, #0
	movs r1, #0x1e
	movs r2, #8
	movs r3, #0
	bl sub_080A8D18
	ldr r0, [r6, #8]
	eors r0, r4
	str r0, [r6, #8]
	ldr r1, _080DFD64 @ =gUnk_02020EE0
	ldr r0, _080DFD68 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080DFD54
	ldrb r0, [r6]
	cmp r0, #0
	bne _080DFD14
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080DFD54
_080DFD14:
	ldr r1, _080DFD6C @ =gUnk_08D60FA4
	ldr r4, _080DFD70 @ =gSongTable
	ldr r2, _080DFD74 @ =0x00000BB4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080DFD3A
	movs r1, #0xbb
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080DFD54
_080DFD3A:
	cmp r3, #0
	beq _080DFD4C
	ldr r0, _080DFD78 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080DFD54
_080DFD4C:
	movs r0, #0xbb
	lsls r0, r0, #1
	bl m4aSongNumStart
_080DFD54:
	adds r0, r6, #0
	bl sub_080E3844
	b _080DFDD0
	.align 2, 0
_080DFD5C: .4byte 0xF9800000
_080DFD60: .4byte 0x0000F980
_080DFD64: .4byte gUnk_02020EE0
_080DFD68: .4byte gUnk_0203AD3C
_080DFD6C: .4byte gUnk_08D60FA4
_080DFD70: .4byte gSongTable
_080DFD74: .4byte 0x00000BB4
_080DFD78: .4byte gUnk_0203AD10
_080DFD7C:
	adds r3, r6, #0
	adds r3, #0x85
	ldrb r0, [r3]
	lsls r1, r0, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #7
	bhi _080DFDAE
	ldr r2, _080DFDD8 @ =gUnk_08356A04
	lsrs r0, r1, #0x19
	adds r0, r0, r2
	ldrb r1, [r0]
	adds r0, r6, #0
	adds r0, #0x54
	strb r1, [r0]
	ldrb r0, [r3]
	lsrs r0, r0, #1
	adds r0, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r1, r6, #0
	adds r1, #0x55
	strb r0, [r1]
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
_080DFDAE:
	ldrh r0, [r6, #4]
	subs r0, #1
	strh r0, [r6, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080DFDD0
	ldr r0, [r6, #8]
	ldr r1, _080DFDDC @ =0xFFFFFEFF
	ands r0, r1
	str r0, [r6, #8]
	adds r1, r6, #0
	adds r1, #0x52
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1]
	movs r0, #3
	strb r0, [r4]
_080DFDD0:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080DFDD8: .4byte gUnk_08356A04
_080DFDDC: .4byte 0xFFFFFEFF

	thumb_func_start sub_080DFDE0
sub_080DFDE0: @ 0x080DFDE0
	push {lr}
	adds r2, r0, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080DFDF8
	ldr r0, [r2, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080DFDFE
_080DFDF8:
	ldr r0, [r2, #8]
	movs r1, #1
	orrs r0, r1
_080DFDFE:
	str r0, [r2, #8]
	movs r0, #0x85
	adds r0, r0, r2
	mov ip, r0
	ldrb r0, [r0]
	lsls r3, r0, #0x18
	lsrs r0, r3, #0x18
	cmp r0, #7
	bhi _080DFE26
	ldr r1, _080DFE3C @ =gUnk_08356A04
	lsrs r0, r3, #0x19
	adds r0, r0, r1
	ldrb r1, [r0]
	adds r0, r2, #0
	adds r0, #0x54
	strb r1, [r0]
	mov r1, ip
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080DFE26:
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080DFE38
	adds r0, r2, #0
	bl sub_080E388C
_080DFE38:
	pop {r0}
	bx r0
	.align 2, 0
_080DFE3C: .4byte gUnk_08356A04

	thumb_func_start sub_080DFE40
sub_080DFE40: @ 0x080DFE40
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r5, #0
	strb r0, [r1]
	ldr r3, [r4, #0x44]
	ldr r1, _080DFE80 @ =0xFFFFFC00
	ands r3, r1
	adds r0, r4, #0
	adds r0, #0xa2
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	ble _080DFE84
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080DFECE
	strh r2, [r1]
	b _080DFECE
	.align 2, 0
_080DFE80: .4byte 0xFFFFFC00
_080DFE84:
	cmp r3, r0
	bge _080DFEA4
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080DFEA0 @ =0xFFFFFE00
	cmp r0, r2
	bge _080DFECE
	strh r2, [r1]
	b _080DFECE
	.align 2, 0
_080DFEA0: .4byte 0xFFFFFE00
_080DFEA4:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080DFEC0
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080DFECE
	b _080DFECC
_080DFEC0:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080DFECE
_080DFECC:
	strh r5, [r1]
_080DFECE:
	ldr r3, [r4, #0x40]
	ldr r2, _080DFEF4 @ =0xFFFFFC00
	ands r3, r2
	adds r1, r4, #0
	adds r1, #0xa0
	movs r5, #0
	ldrsh r0, [r1, r5]
	lsls r0, r0, #8
	ands r0, r2
	adds r6, r1, #0
	cmp r3, r0
	bge _080DFEF8
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	b _080DFF30
	.align 2, 0
_080DFEF4: .4byte 0xFFFFFC00
_080DFEF8:
	cmp r3, r0
	ble _080DFF54
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080DFF30
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080DFF2C @ =0xFFFFFE00
	cmp r0, r2
	blt _080DFF26
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080DFF80
_080DFF26:
	strh r2, [r1]
	b _080DFF80
	.align 2, 0
_080DFF2C: .4byte 0xFFFFFE00
_080DFF30:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080DFF26
	ldr r2, _080DFF50 @ =0xFFFFFE00
	cmp r0, r2
	bge _080DFF80
	b _080DFF26
	.align 2, 0
_080DFF50: .4byte 0xFFFFFE00
_080DFF54:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080DFF70
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080DFF80
	b _080DFF7C
_080DFF70:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080DFF80
_080DFF7C:
	movs r0, #0
	strh r0, [r1]
_080DFF80:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080DFF96
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080DFF9C
_080DFF96:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_080DFF9C:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	bne _080DFFF0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0
	ldrsh r1, [r6, r0]
	ldr r0, [r4, #0x40]
	asrs r0, r0, #8
	subs r2, r1, r0
	cmp r2, #0
	blt _080DFFC6
	cmp r2, #0xf
	ble _080DFFCC
	b _080DFFF0
_080DFFC6:
	subs r0, r0, r1
	cmp r0, #0xf
	bgt _080DFFF0
_080DFFCC:
	adds r0, r4, #0
	adds r0, #0xa2
	movs r1, #0
	ldrsh r2, [r0, r1]
	ldr r0, [r4, #0x44]
	asrs r0, r0, #8
	subs r1, r2, r0
	cmp r1, #0
	blt _080DFFE4
	cmp r1, #0xf
	ble _080DFFEA
	b _080DFFF0
_080DFFE4:
	subs r0, r0, r2
	cmp r0, #0xf
	bgt _080DFFF0
_080DFFEA:
	adds r0, r4, #0
	bl sub_080DF894
_080DFFF0:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E0028
	movs r0, #0
	strb r0, [r5]
	movs r1, #0
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E001E
	ldr r2, _080E0030 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E0034 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080E0038 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
_080E001E:
	cmp r1, #0
	beq _080E0028
	adds r0, r4, #0
	bl sub_080DF720
_080E0028:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E0030: .4byte gRngVal
_080E0034: .4byte 0x00196225
_080E0038: .4byte 0x3C6EF35F

	thumb_func_start sub_080E003C
sub_080E003C: @ 0x080E003C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E0094 @ =sub_080E0098
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r3, r4, #0
	adds r3, #0xac
	str r0, [r3]
	ldr r1, [r4, #8]
	movs r2, #0x80
	lsls r2, r2, #1
	orrs r1, r2
	str r1, [r4, #8]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa0
	movs r2, #0
	strh r0, [r1]
	ldr r0, [r3]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r1, #2
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r2, [r0]
	movs r0, #8
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x85
	strb r2, [r0]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E0094: .4byte sub_080E0098

	thumb_func_start sub_080E0098
sub_080E0098: @ 0x080E0098
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	movs r1, #0x60
	mov sb, r1
	cmp r0, #0
	beq _080E00B4
	movs r2, #0xa0
	mov sb, r2
_080E00B4:
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #0
	bne _080E00CC
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E00CC
	movs r0, #5
	strb r0, [r2]
_080E00CC:
	adds r5, r4, #0
	adds r5, #0x9e
	ldrb r0, [r5]
	adds r0, #1
	movs r7, #0
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r3, #0xa0
	adds r3, r3, r4
	mov r8, r3
	adds r6, r4, #0
	adds r6, #0xa2
	cmp r0, #7
	bls _080E010A
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	strb r7, [r5]
	ldr r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	mov r5, r8
	strh r0, [r5]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	strh r0, [r6]
_080E010A:
	ldr r3, [r4, #0x44]
	ldr r1, _080E0144 @ =0xFFFFF000
	ands r3, r1
	movs r2, #0
	ldrsh r0, [r6, r2]
	adds r0, #0x10
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	ble _080E0164
	ldrh r2, [r4, #4]
	movs r3, #4
	ldrsh r0, [r4, r3]
	cmp r0, #0
	ble _080E0148
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r5, [r1]
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080E01D2
	strh r2, [r1]
	b _080E01D2
	.align 2, 0
_080E0144: .4byte 0xFFFFF000
_080E0148:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r3, [r1]
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E0160 @ =0xFFFFFE80
	cmp r0, r2
	bge _080E01D2
	strh r2, [r1]
	b _080E01D2
	.align 2, 0
_080E0160: .4byte 0xFFFFFE80
_080E0164:
	cmp r3, r0
	bge _080E01AC
	movs r5, #4
	ldrsh r0, [r4, r5]
	cmp r0, #0
	bge _080E018C
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	ldrh r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xc0
	lsls r1, r1, #1
	cmp r0, r1
	ble _080E01D2
	strh r1, [r2]
	b _080E01D2
_080E018C:
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	ldrh r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _080E01A8 @ =0xFFFFFE80
	cmp r0, r1
	bge _080E01D2
	strh r1, [r2]
	b _080E01D2
	.align 2, 0
_080E01A8: .4byte 0xFFFFFE80
_080E01AC:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E01C6
	adds r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E01D2
	b _080E01D0
_080E01C6:
	subs r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E01D2
_080E01D0:
	strh r7, [r1]
_080E01D2:
	ldr r3, [r4, #0x40]
	ldr r2, _080E0214 @ =0xFFFFF000
	ands r3, r2
	mov r5, r8
	movs r0, #0
	ldrsh r1, [r5, r0]
	mov r5, sb
	lsls r0, r5, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r1, #8
	ands r0, r2
	cmp r3, r0
	bge _080E0218
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r2, r1, #0
	cmp r0, r3
	bgt _080E0268
	b _080E026C
	.align 2, 0
_080E0214: .4byte 0xFFFFF000
_080E0218:
	cmp r3, r0
	ble _080E027C
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E0250
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _080E024C @ =0xFFFFFE80
	adds r2, r1, #0
	cmp r0, r3
	blt _080E0268
	movs r1, #0xc0
	lsls r1, r1, #1
	cmp r0, r1
	ble _080E02A6
	strh r1, [r2]
	b _080E02A6
	.align 2, 0
_080E024C: .4byte 0xFFFFFE80
_080E0250:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r2, r1, #0
	cmp r0, r3
	ble _080E026C
_080E0268:
	strh r3, [r2]
	b _080E02A6
_080E026C:
	ldr r1, _080E0278 @ =0xFFFFFE80
	cmp r0, r1
	bge _080E02A6
	strh r1, [r2]
	b _080E02A6
	.align 2, 0
_080E0278: .4byte 0xFFFFFE80
_080E027C:
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r3, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #0
	bge _080E0298
	adds r0, r3, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E02A6
	b _080E02A2
_080E0298:
	subs r0, r3, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E02A6
_080E02A2:
	movs r0, #0
	strh r0, [r2]
_080E02A6:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r3, [r0, #0xe]
	cmp r3, #0
	beq _080E02E2
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xa4
	movs r3, #0
	ldrsh r0, [r0, r3]
	adds r0, #0xc
	lsls r0, r0, #8
	ldr r1, [r4, #0x40]
	cmp r1, r0
	bge _080E02D2
	movs r0, #0
	strh r0, [r2]
_080E02D2:
	movs r5, #0
	ldrsh r0, [r2, r5]
	cmp r0, #0
	blt _080E030C
	adds r0, r4, #0
	bl sub_080E38E0
	b _080E030C
_080E02E2:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xa8
	movs r1, #0
	ldrsh r0, [r0, r1]
	subs r0, #0xc
	lsls r0, r0, #8
	ldr r1, [r4, #0x40]
	cmp r1, r0
	ble _080E02FE
	strh r3, [r2]
_080E02FE:
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0
	bgt _080E030C
	adds r0, r4, #0
	bl sub_080E38E0
_080E030C:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080E0318
sub_080E0318: @ 0x080E0318
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r4, r0, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	movs r1, #0x60
	mov sl, r1
	cmp r0, #0
	beq _080E0338
	movs r2, #0xa0
	mov sl, r2
_080E0338:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	str r0, [sp]
	cmp r1, #0
	bne _080E0354
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E0354
	movs r0, #5
	ldr r3, [sp]
	strb r0, [r3]
_080E0354:
	adds r5, r4, #0
	adds r5, #0x9e
	ldrb r0, [r5]
	adds r0, #1
	movs r7, #0
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0xac
	adds r1, r1, r4
	mov r8, r1
	movs r2, #0xa0
	adds r2, r2, r4
	mov sb, r2
	adds r6, r4, #0
	adds r6, #0xa2
	cmp r0, #7
	bls _080E0396
	adds r0, r4, #0
	bl sub_0803D368
	mov r3, r8
	str r0, [r3]
	strb r7, [r5]
	ldr r0, [r3]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	mov r5, sb
	strh r0, [r5]
	ldr r0, [r3]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	strh r0, [r6]
_080E0396:
	ldr r3, [r4, #0x44]
	ldr r1, _080E03D0 @ =0xFFFFF000
	ands r3, r1
	movs r2, #0
	ldrsh r0, [r6, r2]
	adds r0, #0x10
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	ble _080E03F0
	ldrh r2, [r4, #4]
	movs r3, #4
	ldrsh r0, [r4, r3]
	cmp r0, #0
	ble _080E03D4
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r5, [r1]
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080E045E
	strh r2, [r1]
	b _080E045E
	.align 2, 0
_080E03D0: .4byte 0xFFFFF000
_080E03D4:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r3, [r1]
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E03EC @ =0xFFFFFE80
	cmp r0, r2
	bge _080E045E
	strh r2, [r1]
	b _080E045E
	.align 2, 0
_080E03EC: .4byte 0xFFFFFE80
_080E03F0:
	cmp r3, r0
	bge _080E0438
	movs r5, #4
	ldrsh r0, [r4, r5]
	cmp r0, #0
	bge _080E0418
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	ldrh r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xc0
	lsls r1, r1, #1
	cmp r0, r1
	ble _080E045E
	strh r1, [r2]
	b _080E045E
_080E0418:
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	ldrh r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _080E0434 @ =0xFFFFFE80
	cmp r0, r1
	bge _080E045E
	strh r1, [r2]
	b _080E045E
	.align 2, 0
_080E0434: .4byte 0xFFFFFE80
_080E0438:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E0452
	adds r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E045E
	b _080E045C
_080E0452:
	subs r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E045E
_080E045C:
	strh r7, [r1]
_080E045E:
	ldr r3, [r4, #0x40]
	ldr r2, _080E04A0 @ =0xFFFFF000
	ands r3, r2
	mov r5, sb
	movs r0, #0
	ldrsh r1, [r5, r0]
	mov r5, sl
	lsls r0, r5, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r1, #8
	ands r0, r2
	cmp r3, r0
	bge _080E04A4
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r1, #0
	cmp r0, r3
	bgt _080E04F4
	b _080E04F8
	.align 2, 0
_080E04A0: .4byte 0xFFFFF000
_080E04A4:
	cmp r3, r0
	ble _080E0508
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E04DC
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _080E04D8 @ =0xFFFFFF00
	adds r2, r1, #0
	cmp r0, r3
	blt _080E04F4
	movs r1, #0x80
	lsls r1, r1, #1
	cmp r0, r1
	ble _080E0532
	strh r1, [r2]
	b _080E0532
	.align 2, 0
_080E04D8: .4byte 0xFFFFFF00
_080E04DC:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r1, #0
	cmp r0, r3
	ble _080E04F8
_080E04F4:
	strh r3, [r2]
	b _080E0532
_080E04F8:
	ldr r1, _080E0504 @ =0xFFFFFF00
	cmp r0, r1
	bge _080E0532
	strh r1, [r2]
	b _080E0532
	.align 2, 0
_080E0504: .4byte 0xFFFFFF00
_080E0508:
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r3, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #0
	bge _080E0524
	adds r0, r3, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E0532
	b _080E052E
_080E0524:
	subs r0, r3, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E0532
_080E052E:
	movs r0, #0
	strh r0, [r2]
_080E0532:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r3, [r0, #0xe]
	cmp r3, #0
	beq _080E0556
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0
	ble _080E0568
	movs r0, #0
	strh r0, [r2]
	b _080E0568
_080E0556:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	movs r5, #0
	ldrsh r0, [r2, r5]
	cmp r0, #0
	bge _080E0568
	strh r3, [r2]
_080E0568:
	adds r0, r4, #0
	adds r0, #0xa8
	movs r1, #0
	ldrsh r0, [r0, r1]
	subs r0, #0xc
	lsls r0, r0, #8
	ldr r1, [r4, #0x40]
	cmp r1, r0
	bgt _080E058A
	adds r0, r4, #0
	adds r0, #0xa4
	movs r3, #0
	ldrsh r0, [r0, r3]
	adds r0, #0xc
	lsls r0, r0, #8
	cmp r1, r0
	bge _080E058E
_080E058A:
	movs r0, #0
	strh r0, [r2]
_080E058E:
	movs r2, #0xc
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0x60
	bls _080E05B2
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x60
	ble _080E05B6
	movs r0, #0x60
	strh r0, [r4, #4]
	movs r2, #0x30
	b _080E05B6
_080E05B2:
	adds r0, r1, #1
	strb r0, [r5]
_080E05B6:
	lsls r3, r2, #8
	mov r1, r8
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r2, r0, r1
	ldr r0, [r4, #0x44]
	subs r1, r2, r0
	cmp r1, #0
	blt _080E05D2
	cmp r1, r3
	blt _080E05D8
	b _080E0614
_080E05D2:
	subs r0, r0, r2
	cmp r0, r3
	bge _080E0614
_080E05D8:
	movs r0, #5
	ldr r2, [sp]
	strb r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E05FC
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0x47
	bne _080E0604
_080E05FC:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0x2c
	b _080E060A
_080E0604:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0x30
_080E060A:
	strb r0, [r1]
	movs r0, #0
	strb r0, [r5]
	ldr r0, _080E0624 @ =sub_080E0628
	str r0, [r4, #0x78]
_080E0614:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E0624: .4byte sub_080E0628

	thumb_func_start sub_080E0628
sub_080E0628: @ 0x080E0628
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	movs r1, #0x60
	mov sb, r1
	cmp r0, #0
	beq _080E0644
	movs r2, #0xa0
	mov sb, r2
_080E0644:
	adds r5, r4, #0
	adds r5, #0x9e
	ldrb r0, [r5]
	adds r0, #1
	movs r7, #0
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r3, #0xa0
	adds r3, r3, r4
	mov r8, r3
	adds r6, r4, #0
	adds r6, #0xa2
	cmp r0, #7
	bls _080E0682
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	strb r7, [r5]
	ldr r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	mov r5, r8
	strh r0, [r5]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	strh r0, [r6]
_080E0682:
	ldr r3, [r4, #0x44]
	ldr r1, _080E06BC @ =0xFFFFF000
	ands r3, r1
	movs r2, #0
	ldrsh r0, [r6, r2]
	adds r0, #0x10
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	ble _080E06DC
	ldrh r2, [r4, #4]
	movs r3, #4
	ldrsh r0, [r4, r3]
	cmp r0, #0
	ble _080E06C0
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r5, [r1]
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080E074A
	strh r2, [r1]
	b _080E074A
	.align 2, 0
_080E06BC: .4byte 0xFFFFF000
_080E06C0:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r3, [r1]
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E06D8 @ =0xFFFFFE80
	cmp r0, r2
	bge _080E074A
	strh r2, [r1]
	b _080E074A
	.align 2, 0
_080E06D8: .4byte 0xFFFFFE80
_080E06DC:
	cmp r3, r0
	bge _080E0724
	movs r5, #4
	ldrsh r0, [r4, r5]
	cmp r0, #0
	bge _080E0704
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	ldrh r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xc0
	lsls r1, r1, #1
	cmp r0, r1
	ble _080E074A
	strh r1, [r2]
	b _080E074A
_080E0704:
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	ldrh r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _080E0720 @ =0xFFFFFE80
	cmp r0, r1
	bge _080E074A
	strh r1, [r2]
	b _080E074A
	.align 2, 0
_080E0720: .4byte 0xFFFFFE80
_080E0724:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E073E
	adds r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E074A
	b _080E0748
_080E073E:
	subs r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E074A
_080E0748:
	strh r7, [r1]
_080E074A:
	ldr r3, [r4, #0x40]
	ldr r2, _080E078C @ =0xFFFFF000
	ands r3, r2
	mov r5, r8
	movs r0, #0
	ldrsh r1, [r5, r0]
	mov r5, sb
	lsls r0, r5, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r1, #8
	ands r0, r2
	cmp r3, r0
	bge _080E0790
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r1, #0
	cmp r0, r3
	bgt _080E07E0
	b _080E07E4
	.align 2, 0
_080E078C: .4byte 0xFFFFF000
_080E0790:
	cmp r3, r0
	ble _080E07F4
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E07C8
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _080E07C4 @ =0xFFFFFF00
	adds r2, r1, #0
	cmp r0, r3
	blt _080E07E0
	movs r1, #0x80
	lsls r1, r1, #1
	cmp r0, r1
	ble _080E081E
	strh r1, [r2]
	b _080E081E
	.align 2, 0
_080E07C4: .4byte 0xFFFFFF00
_080E07C8:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r1, #0
	cmp r0, r3
	ble _080E07E4
_080E07E0:
	strh r3, [r2]
	b _080E081E
_080E07E4:
	ldr r1, _080E07F0 @ =0xFFFFFF00
	cmp r0, r1
	bge _080E081E
	strh r1, [r2]
	b _080E081E
	.align 2, 0
_080E07F0: .4byte 0xFFFFFF00
_080E07F4:
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r3, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #0
	bge _080E0810
	adds r0, r3, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E081E
	b _080E081A
_080E0810:
	subs r0, r3, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E081E
_080E081A:
	movs r0, #0
	strh r0, [r2]
_080E081E:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r3, [r0, #0xe]
	cmp r3, #0
	beq _080E0842
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0
	ble _080E0854
	movs r0, #0
	strh r0, [r2]
	b _080E0854
_080E0842:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	movs r5, #0
	ldrsh r0, [r2, r5]
	cmp r0, #0
	bge _080E0854
	strh r3, [r2]
_080E0854:
	adds r0, r4, #0
	adds r0, #0xa8
	movs r1, #0
	ldrsh r0, [r0, r1]
	subs r0, #0xc
	lsls r0, r0, #8
	ldr r1, [r4, #0x40]
	cmp r1, r0
	bgt _080E0876
	adds r0, r4, #0
	adds r0, #0xa4
	movs r3, #0
	ldrsh r0, [r0, r3]
	adds r0, #0xc
	lsls r0, r0, #8
	cmp r1, r0
	bge _080E087A
_080E0876:
	movs r0, #0
	strh r0, [r2]
_080E087A:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x60
	ble _080E088C
	movs r0, #0x60
	strh r0, [r4, #4]
_080E088C:
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080E08A2
	adds r0, r4, #0
	bl sub_080E08B0
_080E08A2:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E08B0
sub_080E08B0: @ 0x080E08B0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E08F8 @ =sub_080E0920
	movs r1, #6
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r2, [r0]
	subs r0, #1
	strb r2, [r0]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E08F2
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0x47
	bne _080E08FC
_080E08F2:
	movs r0, #0xc
	b _080E08FE
	.align 2, 0
_080E08F8: .4byte sub_080E0920
_080E08FC:
	movs r0, #0x10
_080E08FE:
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x85
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r0, [r4, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x68]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E0920
sub_080E0920: @ 0x080E0920
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0x83
	ldrb r0, [r5]
	cmp r0, #7
	beq _080E0930
	b _080E0AE6
_080E0930:
	ldrb r0, [r4, #1]
	cmp r0, #1
	bne _080E09AC
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #0x10]
	adds r0, r4, #0
	bl sub_080E31D4
	ldr r1, _080E0A00 @ =gUnk_02020EE0
	ldr r0, _080E0A04 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E09AC
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E0970
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E09AC
_080E0970:
	ldr r1, _080E0A08 @ =gUnk_08D60FA4
	ldr r5, _080E0A0C @ =gSongTable
	ldr r2, _080E0A10 @ =0x00000BBC
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E0994
	ldr r1, _080E0A14 @ =0x00000BB8
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E09AC
_080E0994:
	cmp r3, #0
	beq _080E09A6
	ldr r0, _080E0A18 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E09AC
_080E09A6:
	ldr r0, _080E0A1C @ =0x00000177
	bl m4aSongNumStart
_080E09AC:
	ldrb r0, [r4, #1]
	subs r0, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bhi _080E09C8
	ldr r1, _080E0A20 @ =gUnk_08356A14
	ldrb r0, [r4, #1]
	subs r0, #8
	adds r0, r0, r1
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x54
	strb r1, [r0]
_080E09C8:
	ldrb r0, [r4, #1]
	cmp r0, #0x18
	beq _080E09D0
	b _080E0AD4
_080E09D0:
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	cmp r0, #2
	bls _080E09DC
	b _080E0AD4
_080E09DC:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	beq _080E0A30
	ldr r2, _080E0A24 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E0A28 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E0A2C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r0, #1
	ands r3, r0
	b _080E0A5C
	.align 2, 0
_080E0A00: .4byte gUnk_02020EE0
_080E0A04: .4byte gUnk_0203AD3C
_080E0A08: .4byte gUnk_08D60FA4
_080E0A0C: .4byte gSongTable
_080E0A10: .4byte 0x00000BBC
_080E0A14: .4byte 0x00000BB8
_080E0A18: .4byte gUnk_0203AD10
_080E0A1C: .4byte 0x00000177
_080E0A20: .4byte gUnk_08356A14
_080E0A24: .4byte gRngVal
_080E0A28: .4byte 0x00196225
_080E0A2C: .4byte 0x3C6EF35F
_080E0A30:
	movs r5, #0
	ldr r1, _080E0AAC @ =gRngVal
	ldr r2, [r1]
	ldr r0, _080E0AB0 @ =0x00196225
	muls r0, r2, r0
	ldr r2, _080E0AB4 @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r1]
	lsrs r3, r0, #0x10
	ldr r0, _080E0AB8 @ =0x00005554
	adds r2, r1, #0
	cmp r3, r0
	bls _080E0A58
	ldr r0, _080E0ABC @ =0x0000AAA9
	movs r1, #2
	cmp r3, r0
	bhi _080E0A54
	movs r1, #1
_080E0A54:
	cmp r1, #0
	bne _080E0A5A
_080E0A58:
	movs r5, #1
_080E0A5A:
	adds r3, r5, #0
_080E0A5C:
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0x47
	bne _080E0A7E
	cmp r3, #0
	bne _080E0A82
	ldr r1, [r2]
	ldr r0, _080E0AB0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E0AB4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r0, #1
	ands r3, r0
_080E0A7E:
	cmp r3, #0
	beq _080E0AD4
_080E0A82:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #6
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x60
	strh r0, [r4, #4]
	ldrb r0, [r6]
	cmp r0, #0
	bne _080E0AA4
	ldrb r0, [r5]
	cmp r0, #0x47
	bne _080E0AC0
_080E0AA4:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0xc
	b _080E0AC6
	.align 2, 0
_080E0AAC: .4byte gRngVal
_080E0AB0: .4byte 0x00196225
_080E0AB4: .4byte 0x3C6EF35F
_080E0AB8: .4byte 0x00005554
_080E0ABC: .4byte 0x0000AAA9
_080E0AC0:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0x18
_080E0AC6:
	strb r0, [r1]
	ldr r0, _080E0AD0 @ =sub_080E0628
	str r0, [r4, #0x78]
	b _080E0B3A
	.align 2, 0
_080E0AD0: .4byte sub_080E0628
_080E0AD4:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E0B3A
	adds r0, r4, #0
	bl sub_080E3918
	b _080E0B3A
_080E0AE6:
	adds r3, r4, #0
	adds r3, #0x9e
	ldrb r0, [r3]
	lsls r1, r0, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #7
	bhi _080E0B18
	ldr r2, _080E0B40 @ =gUnk_08356A04
	lsrs r0, r1, #0x19
	adds r0, r0, r2
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x54
	strb r1, [r0]
	ldrb r0, [r3]
	lsrs r0, r0, #1
	adds r0, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x55
	strb r0, [r1]
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
_080E0B18:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E0B3A
	movs r0, #7
	strb r0, [r5]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x68]
	subs r1, #5
	ands r0, r1
	str r0, [r4, #0x68]
_080E0B3A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E0B40: .4byte gUnk_08356A04

	thumb_func_start sub_080E0B44
sub_080E0B44: @ 0x080E0B44
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r5, #0
	strb r0, [r1]
	ldr r3, [r4, #0x44]
	ldr r1, _080E0B84 @ =0xFFFFFC00
	ands r3, r1
	adds r0, r4, #0
	adds r0, #0xa2
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	ble _080E0B88
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E0BD2
	strh r2, [r1]
	b _080E0BD2
	.align 2, 0
_080E0B84: .4byte 0xFFFFFC00
_080E0B88:
	cmp r3, r0
	bge _080E0BA8
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E0BA4 @ =0xFFFFFE00
	cmp r0, r2
	bge _080E0BD2
	strh r2, [r1]
	b _080E0BD2
	.align 2, 0
_080E0BA4: .4byte 0xFFFFFE00
_080E0BA8:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E0BC4
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E0BD2
	b _080E0BD0
_080E0BC4:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E0BD2
_080E0BD0:
	strh r5, [r1]
_080E0BD2:
	ldr r3, [r4, #0x40]
	ldr r2, _080E0BF8 @ =0xFFFFFC00
	ands r3, r2
	adds r1, r4, #0
	adds r1, #0xa0
	movs r5, #0
	ldrsh r0, [r1, r5]
	lsls r0, r0, #8
	ands r0, r2
	adds r6, r1, #0
	cmp r3, r0
	bge _080E0BFC
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	b _080E0C34
	.align 2, 0
_080E0BF8: .4byte 0xFFFFFC00
_080E0BFC:
	cmp r3, r0
	ble _080E0C58
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E0C34
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E0C30 @ =0xFFFFFE00
	cmp r0, r2
	blt _080E0C2A
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E0C84
_080E0C2A:
	strh r2, [r1]
	b _080E0C84
	.align 2, 0
_080E0C30: .4byte 0xFFFFFE00
_080E0C34:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E0C2A
	ldr r2, _080E0C54 @ =0xFFFFFE00
	cmp r0, r2
	bge _080E0C84
	b _080E0C2A
	.align 2, 0
_080E0C54: .4byte 0xFFFFFE00
_080E0C58:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E0C74
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E0C84
	b _080E0C80
_080E0C74:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E0C84
_080E0C80:
	movs r0, #0
	strh r0, [r1]
_080E0C84:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E0C9A
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080E0CA0
_080E0C9A:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_080E0CA0:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	bne _080E0CF4
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0
	ldrsh r1, [r6, r0]
	ldr r0, [r4, #0x40]
	asrs r0, r0, #8
	subs r2, r1, r0
	cmp r2, #0
	blt _080E0CCA
	cmp r2, #0xf
	ble _080E0CD0
	b _080E0CF4
_080E0CCA:
	subs r0, r0, r1
	cmp r0, #0xf
	bgt _080E0CF4
_080E0CD0:
	adds r0, r4, #0
	adds r0, #0xa2
	movs r1, #0
	ldrsh r2, [r0, r1]
	ldr r0, [r4, #0x44]
	asrs r0, r0, #8
	subs r1, r2, r0
	cmp r1, #0
	blt _080E0CE8
	cmp r1, #0xf
	ble _080E0CEE
	b _080E0CF4
_080E0CE8:
	subs r0, r0, r2
	cmp r0, #0xf
	bgt _080E0CF4
_080E0CEE:
	adds r0, r4, #0
	bl sub_080DF894
_080E0CF4:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E0D2C
	movs r0, #0
	strb r0, [r5]
	movs r1, #0
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E0D22
	ldr r2, _080E0D34 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E0D38 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080E0D3C @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
_080E0D22:
	cmp r1, #0
	beq _080E0D2C
	adds r0, r4, #0
	bl sub_080DF720
_080E0D2C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E0D34: .4byte gRngVal
_080E0D38: .4byte 0x00196225
_080E0D3C: .4byte 0x3C6EF35F

	thumb_func_start sub_080E0D40
sub_080E0D40: @ 0x080E0D40
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #0
	bne _080E0D64
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E0D64
	movs r0, #9
	strb r0, [r2]
_080E0D64:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r1, [r0]
	ldrb r1, [r1, #0xe]
	movs r2, #0x60
	mov sb, r2
	mov sl, r0
	cmp r1, #0
	beq _080E0D7A
	movs r3, #0xa0
	mov sb, r3
_080E0D7A:
	adds r5, r4, #0
	adds r5, #0x9e
	ldrb r0, [r5]
	adds r0, #1
	movs r7, #0
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0xa0
	adds r1, r1, r4
	mov r8, r1
	adds r6, r4, #0
	adds r6, #0xa2
	cmp r0, #7
	bls _080E0DB8
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	strb r7, [r5]
	ldr r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	mov r2, r8
	strh r0, [r2]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	strh r0, [r6]
_080E0DB8:
	ldr r3, [r4, #0x44]
	ldr r1, _080E0DF0 @ =0xFFFFF000
	ands r3, r1
	movs r5, #0
	ldrsh r0, [r6, r5]
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	ble _080E0E10
	ldrh r2, [r4, #4]
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _080E0DF4
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r3, [r1]
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080E0E7E
	strh r2, [r1]
	b _080E0E7E
	.align 2, 0
_080E0DF0: .4byte 0xFFFFF000
_080E0DF4:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r5, [r1]
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E0E0C @ =0xFFFFFE80
	cmp r0, r2
	bge _080E0E7E
	strh r2, [r1]
	b _080E0E7E
	.align 2, 0
_080E0E0C: .4byte 0xFFFFFE80
_080E0E10:
	cmp r3, r0
	bge _080E0E58
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _080E0E38
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	ldrh r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xc0
	lsls r1, r1, #1
	cmp r0, r1
	ble _080E0E7E
	strh r1, [r2]
	b _080E0E7E
_080E0E38:
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	ldrh r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _080E0E54 @ =0xFFFFFE80
	cmp r0, r1
	bge _080E0E7E
	strh r1, [r2]
	b _080E0E7E
	.align 2, 0
_080E0E54: .4byte 0xFFFFFE80
_080E0E58:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E0E72
	adds r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E0E7E
	b _080E0E7C
_080E0E72:
	subs r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E0E7E
_080E0E7C:
	strh r7, [r1]
_080E0E7E:
	ldr r3, [r4, #0x40]
	ldr r2, _080E0EC0 @ =0xFFFFF000
	ands r3, r2
	mov r5, r8
	movs r0, #0
	ldrsh r1, [r5, r0]
	mov r5, sb
	lsls r0, r5, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r1, #8
	ands r0, r2
	cmp r3, r0
	bge _080E0EC4
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r2, r1, #0
	cmp r0, r3
	bgt _080E0F14
	b _080E0F18
	.align 2, 0
_080E0EC0: .4byte 0xFFFFF000
_080E0EC4:
	cmp r3, r0
	ble _080E0F28
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E0EFC
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _080E0EF8 @ =0xFFFFFE80
	adds r2, r1, #0
	cmp r0, r3
	blt _080E0F14
	movs r1, #0xc0
	lsls r1, r1, #1
	cmp r0, r1
	ble _080E0F52
	strh r1, [r2]
	b _080E0F52
	.align 2, 0
_080E0EF8: .4byte 0xFFFFFE80
_080E0EFC:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r2, r1, #0
	cmp r0, r3
	ble _080E0F18
_080E0F14:
	strh r3, [r2]
	b _080E0F52
_080E0F18:
	ldr r1, _080E0F24 @ =0xFFFFFE80
	cmp r0, r1
	bge _080E0F52
	strh r1, [r2]
	b _080E0F52
	.align 2, 0
_080E0F24: .4byte 0xFFFFFE80
_080E0F28:
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r3, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #0
	bge _080E0F44
	adds r0, r3, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E0F52
	b _080E0F4E
_080E0F44:
	subs r0, r3, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E0F52
_080E0F4E:
	movs r0, #0
	strh r0, [r2]
_080E0F52:
	mov r3, sl
	ldr r0, [r3]
	ldrb r3, [r0, #0xe]
	cmp r3, #0
	beq _080E0F8C
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xa4
	movs r5, #0
	ldrsh r0, [r0, r5]
	adds r0, #0xc
	lsls r0, r0, #8
	ldr r1, [r4, #0x40]
	cmp r1, r0
	bge _080E0F7C
	movs r0, #0
	strh r0, [r2]
_080E0F7C:
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	blt _080E0FB6
	adds r0, r4, #0
	bl sub_080E39C4
	b _080E0FB6
_080E0F8C:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xa8
	movs r5, #0
	ldrsh r0, [r0, r5]
	subs r0, #0xc
	lsls r0, r0, #8
	ldr r1, [r4, #0x40]
	cmp r1, r0
	ble _080E0FA8
	strh r3, [r2]
_080E0FA8:
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	bgt _080E0FB6
	adds r0, r4, #0
	bl sub_080E39C4
_080E0FB6:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080E0FC4
sub_080E0FC4: @ 0x080E0FC4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r4, r0, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E0FE8
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
_080E0FE8:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r1, [r0]
	ldrb r1, [r1, #0xe]
	movs r2, #0x60
	mov sb, r2
	mov sl, r0
	cmp r1, #0
	beq _080E0FFE
	movs r3, #0xa0
	mov sb, r3
_080E0FFE:
	adds r5, r4, #0
	adds r5, #0x9e
	ldrb r0, [r5]
	adds r0, #1
	movs r7, #0
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0xa0
	adds r1, r1, r4
	mov r8, r1
	adds r6, r4, #0
	adds r6, #0xa2
	cmp r0, #7
	bls _080E103C
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	strb r7, [r5]
	ldr r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	mov r2, r8
	strh r0, [r2]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	strh r0, [r6]
_080E103C:
	ldr r3, [r4, #0x44]
	ldr r1, _080E1074 @ =0xFFFFF000
	ands r3, r1
	movs r5, #0
	ldrsh r0, [r6, r5]
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	ble _080E1094
	ldrh r2, [r4, #4]
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _080E1078
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r3, [r1]
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080E1102
	strh r2, [r1]
	b _080E1102
	.align 2, 0
_080E1074: .4byte 0xFFFFF000
_080E1078:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r5, [r1]
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E1090 @ =0xFFFFFE80
	cmp r0, r2
	bge _080E1102
	strh r2, [r1]
	b _080E1102
	.align 2, 0
_080E1090: .4byte 0xFFFFFE80
_080E1094:
	cmp r3, r0
	bge _080E10DC
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _080E10BC
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	ldrh r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xc0
	lsls r1, r1, #1
	cmp r0, r1
	ble _080E1102
	strh r1, [r2]
	b _080E1102
_080E10BC:
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	ldrh r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _080E10D8 @ =0xFFFFFE80
	cmp r0, r1
	bge _080E1102
	strh r1, [r2]
	b _080E1102
	.align 2, 0
_080E10D8: .4byte 0xFFFFFE80
_080E10DC:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E10F6
	adds r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E1102
	b _080E1100
_080E10F6:
	subs r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E1102
_080E1100:
	strh r7, [r1]
_080E1102:
	ldr r3, [r4, #0x40]
	ldr r2, _080E1144 @ =0xFFFFF000
	ands r3, r2
	mov r5, r8
	movs r0, #0
	ldrsh r1, [r5, r0]
	mov r5, sb
	lsls r0, r5, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r1, #8
	ands r0, r2
	cmp r3, r0
	bge _080E1148
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r1, #0
	cmp r0, r3
	bgt _080E1198
	b _080E119C
	.align 2, 0
_080E1144: .4byte 0xFFFFF000
_080E1148:
	cmp r3, r0
	ble _080E11AC
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E1180
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _080E117C @ =0xFFFFFF00
	adds r2, r1, #0
	cmp r0, r3
	blt _080E1198
	movs r1, #0x80
	lsls r1, r1, #1
	cmp r0, r1
	ble _080E11D6
	strh r1, [r2]
	b _080E11D6
	.align 2, 0
_080E117C: .4byte 0xFFFFFF00
_080E1180:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r1, #0
	cmp r0, r3
	ble _080E119C
_080E1198:
	strh r3, [r2]
	b _080E11D6
_080E119C:
	ldr r1, _080E11A8 @ =0xFFFFFF00
	cmp r0, r1
	bge _080E11D6
	strh r1, [r2]
	b _080E11D6
	.align 2, 0
_080E11A8: .4byte 0xFFFFFF00
_080E11AC:
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r3, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #0
	bge _080E11C8
	adds r0, r3, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E11D6
	b _080E11D2
_080E11C8:
	subs r0, r3, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E11D6
_080E11D2:
	movs r0, #0
	strh r0, [r2]
_080E11D6:
	mov r3, sl
	ldr r0, [r3]
	ldrb r3, [r0, #0xe]
	cmp r3, #0
	beq _080E11F8
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r5, #0
	ldrsh r0, [r2, r5]
	cmp r0, #0
	ble _080E120A
	movs r0, #0
	strh r0, [r2]
	b _080E120A
_080E11F8:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	bge _080E120A
	strh r3, [r2]
_080E120A:
	adds r0, r4, #0
	adds r0, #0xa8
	movs r3, #0
	ldrsh r0, [r0, r3]
	subs r0, #0xc
	lsls r0, r0, #8
	ldr r1, [r4, #0x40]
	cmp r1, r0
	bgt _080E122C
	adds r0, r4, #0
	adds r0, #0xa4
	movs r5, #0
	ldrsh r0, [r0, r5]
	adds r0, #0xc
	lsls r0, r0, #8
	cmp r1, r0
	bge _080E1230
_080E122C:
	movs r0, #0
	strh r0, [r2]
_080E1230:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0xa
	bne _080E1266
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x60
	ble _080E124E
	movs r0, #0x60
	strh r0, [r4, #4]
_080E124E:
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080E12B6
	adds r0, r4, #0
	bl sub_080E12C8
	b _080E12B6
_080E1266:
	adds r0, r4, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0x40
	bls _080E128A
	movs r0, #0x30
	str r0, [sp]
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x60
	ble _080E128E
	movs r0, #0x60
	strh r0, [r4, #4]
	b _080E128E
_080E128A:
	adds r0, r1, #1
	strb r0, [r5]
_080E128E:
	ldr r1, [sp]
	lsls r3, r1, #8
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r0, #0x44]
	ldr r0, [r4, #0x44]
	subs r2, r1, r0
	cmp r2, #0
	blt _080E12A8
	cmp r2, r3
	blt _080E12AE
	b _080E12B6
_080E12A8:
	subs r0, r0, r1
	cmp r0, r3
	bge _080E12B6
_080E12AE:
	movs r0, #0xa
	strb r0, [r6]
	movs r0, #0x18
	strb r0, [r5]
_080E12B6:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E12C8
sub_080E12C8: @ 0x080E12C8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E1304 @ =sub_080E133C
	movs r1, #0xa
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r2, [r0]
	subs r0, #1
	strb r2, [r0]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E1308
	movs r0, #0x14
	b _080E130A
	.align 2, 0
_080E1304: .4byte sub_080E133C
_080E1308:
	movs r0, #0x1c
_080E130A:
	strh r0, [r4, #4]
	adds r2, r4, #0
	adds r2, #0xac
	ldr r0, [r2]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa0
	strh r0, [r1]
	ldr r0, [r2]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x68]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E133C
sub_080E133C: @ 0x080E133C
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, #0xb4
	ldr r5, [r0]
	adds r3, r4, #0
	adds r3, #0x9e
	ldrb r0, [r3]
	lsls r1, r0, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #7
	bhi _080E1378
	ldr r2, _080E13AC @ =gUnk_08356A04
	lsrs r0, r1, #0x19
	adds r0, r0, r2
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x54
	strb r1, [r0]
	ldrb r0, [r3]
	lsrs r0, r0, #1
	adds r0, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x55
	strb r0, [r1]
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
_080E1378:
	ldrh r1, [r4, #4]
	movs r2, #4
	ldrsh r0, [r4, r2]
	cmp r0, #0
	beq _080E1384
	b _080E1568
_080E1384:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E13B4
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x90
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E13B0 @ =0xFFFFF880
	cmp r0, r2
	blt _080E13D0
	movs r2, #0xf0
	lsls r2, r2, #3
	cmp r0, r2
	ble _080E13D2
	b _080E13D0
	.align 2, 0
_080E13AC: .4byte gUnk_08356A04
_080E13B0: .4byte 0xFFFFF880
_080E13B4:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x90
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xf0
	lsls r2, r2, #3
	cmp r0, r2
	bgt _080E13D0
	ldr r2, _080E1418 @ =0xFFFFF880
	cmp r0, r2
	bge _080E13D2
_080E13D0:
	strh r2, [r1]
_080E13D2:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E1440
	adds r0, r4, #0
	adds r0, #0xa0
	movs r1, #0
	ldrsh r0, [r0, r1]
	subs r0, #0x20
	lsls r0, r0, #8
	ldr r3, [r4, #0x40]
	cmp r3, r0
	bge _080E13F0
	b _080E1540
_080E13F0:
	cmp r5, #0
	bne _080E13F6
	b _080E15DA
_080E13F6:
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #0xa
	beq _080E1406
	cmp r0, #3
	beq _080E1406
	b _080E15DA
_080E1406:
	ldr r0, [r5, #0x44]
	ldr r1, [r4, #0x44]
	subs r2, r0, r1
	cmp r2, #0
	blt _080E1420
	ldr r0, _080E141C @ =0x000017FF
	cmp r2, r0
	ble _080E142A
	b _080E15DA
	.align 2, 0
_080E1418: .4byte 0xFFFFF880
_080E141C: .4byte 0x000017FF
_080E1420:
	subs r1, r1, r0
	ldr r0, _080E1438 @ =0x000017FF
	cmp r1, r0
	ble _080E142A
	b _080E15DA
_080E142A:
	ldr r2, _080E143C @ =0xFFFFE000
	adds r0, r3, r2
	ldr r1, [r5, #0x40]
	subs r2, r1, r0
	cmp r2, #0
	bge _080E1498
	b _080E14A8
	.align 2, 0
_080E1438: .4byte 0x000017FF
_080E143C: .4byte 0xFFFFE000
_080E1440:
	adds r0, r4, #0
	adds r0, #0xa0
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, #0x20
	lsls r0, r0, #8
	ldr r3, [r4, #0x40]
	cmp r3, r0
	bgt _080E1540
	cmp r5, #0
	bne _080E1458
	b _080E15DA
_080E1458:
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #0xa
	beq _080E1468
	cmp r0, #3
	beq _080E1468
	b _080E15DA
_080E1468:
	ldr r0, [r5, #0x44]
	ldr r1, [r4, #0x44]
	subs r2, r0, r1
	cmp r2, #0
	blt _080E1480
	ldr r0, _080E147C @ =0x000013FF
	cmp r2, r0
	ble _080E148A
	b _080E15DA
	.align 2, 0
_080E147C: .4byte 0x000013FF
_080E1480:
	subs r1, r1, r0
	ldr r0, _080E14A0 @ =0x000013FF
	cmp r1, r0
	ble _080E148A
	b _080E15DA
_080E148A:
	movs r1, #0x80
	lsls r1, r1, #6
	adds r0, r3, r1
	ldr r1, [r5, #0x40]
	subs r2, r1, r0
	cmp r2, #0
	blt _080E14A8
_080E1498:
	ldr r0, _080E14A4 @ =0x000007FF
	cmp r2, r0
	ble _080E14B2
	b _080E15DA
	.align 2, 0
_080E14A0: .4byte 0x000013FF
_080E14A4: .4byte 0x000007FF
_080E14A8:
	subs r1, r0, r1
	ldr r0, _080E1548 @ =0x000007FF
	cmp r1, r0
	ble _080E14B2
	b _080E15DA
_080E14B2:
	ldr r1, [r5, #0x78]
	ldr r0, _080E154C @ =sub_080E133C
	cmp r1, r0
	beq _080E14CC
	movs r2, #0x14
	rsbs r2, r2, #0
	movs r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r3, #2
	bl sub_080A8D18
_080E14CC:
	movs r0, #3
	adds r1, r4, #0
	bl sub_0806FE64
	ldr r1, _080E1550 @ =gUnk_02020EE0
	ldr r0, _080E1554 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E1540
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E1500
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E1540
_080E1500:
	ldr r1, _080E1558 @ =gUnk_08D60FA4
	ldr r5, _080E155C @ =gSongTable
	ldr r2, _080E1560 @ =0x00000CA4
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E1526
	movs r1, #0xca
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E1540
_080E1526:
	cmp r3, #0
	beq _080E1538
	ldr r0, _080E1564 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E1540
_080E1538:
	movs r0, #0xca
	lsls r0, r0, #1
	bl m4aSongNumStart
_080E1540:
	adds r0, r4, #0
	bl sub_080E39F8
	b _080E15DA
	.align 2, 0
_080E1548: .4byte 0x000007FF
_080E154C: .4byte sub_080E133C
_080E1550: .4byte gUnk_02020EE0
_080E1554: .4byte gUnk_0203AD3C
_080E1558: .4byte gUnk_08D60FA4
_080E155C: .4byte gSongTable
_080E1560: .4byte 0x00000CA4
_080E1564: .4byte gUnk_0203AD10
_080E1568:
	subs r0, r1, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E15DA
	ldr r1, _080E15E4 @ =gUnk_02020EE0
	ldr r0, _080E15E8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E15DA
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E159E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E15DA
_080E159E:
	ldr r1, _080E15EC @ =gUnk_08D60FA4
	ldr r4, _080E15F0 @ =gSongTable
	ldr r2, _080E15F4 @ =0x00000CCC
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E15C2
	ldr r1, _080E15F8 @ =0x00000CC8
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E15DA
_080E15C2:
	cmp r3, #0
	beq _080E15D4
	ldr r0, _080E15FC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E15DA
_080E15D4:
	ldr r0, _080E1600 @ =0x00000199
	bl m4aSongNumStart
_080E15DA:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E15E4: .4byte gUnk_02020EE0
_080E15E8: .4byte gUnk_0203AD3C
_080E15EC: .4byte gUnk_08D60FA4
_080E15F0: .4byte gSongTable
_080E15F4: .4byte 0x00000CCC
_080E15F8: .4byte 0x00000CC8
_080E15FC: .4byte gUnk_0203AD10
_080E1600: .4byte 0x00000199

	thumb_func_start sub_080E1604
sub_080E1604: @ 0x080E1604
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r5, #0
	strb r0, [r1]
	ldr r3, [r4, #0x44]
	ldr r1, _080E1644 @ =0xFFFFFC00
	ands r3, r1
	adds r0, r4, #0
	adds r0, #0xa2
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	ble _080E1648
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E1692
	strh r2, [r1]
	b _080E1692
	.align 2, 0
_080E1644: .4byte 0xFFFFFC00
_080E1648:
	cmp r3, r0
	bge _080E1668
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E1664 @ =0xFFFFFE00
	cmp r0, r2
	bge _080E1692
	strh r2, [r1]
	b _080E1692
	.align 2, 0
_080E1664: .4byte 0xFFFFFE00
_080E1668:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E1684
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E1692
	b _080E1690
_080E1684:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E1692
_080E1690:
	strh r5, [r1]
_080E1692:
	ldr r3, [r4, #0x40]
	ldr r2, _080E16B8 @ =0xFFFFFC00
	ands r3, r2
	adds r1, r4, #0
	adds r1, #0xa0
	movs r5, #0
	ldrsh r0, [r1, r5]
	lsls r0, r0, #8
	ands r0, r2
	adds r6, r1, #0
	cmp r3, r0
	bge _080E16BC
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	b _080E16F4
	.align 2, 0
_080E16B8: .4byte 0xFFFFFC00
_080E16BC:
	cmp r3, r0
	ble _080E1718
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E16F4
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E16F0 @ =0xFFFFFE00
	cmp r0, r2
	blt _080E16EA
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E1744
_080E16EA:
	strh r2, [r1]
	b _080E1744
	.align 2, 0
_080E16F0: .4byte 0xFFFFFE00
_080E16F4:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E16EA
	ldr r2, _080E1714 @ =0xFFFFFE00
	cmp r0, r2
	bge _080E1744
	b _080E16EA
	.align 2, 0
_080E1714: .4byte 0xFFFFFE00
_080E1718:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E1734
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E1744
	b _080E1740
_080E1734:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E1744
_080E1740:
	movs r0, #0
	strh r0, [r1]
_080E1744:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E175A
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080E1760
_080E175A:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_080E1760:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	bne _080E17B4
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0
	ldrsh r1, [r6, r0]
	ldr r0, [r4, #0x40]
	asrs r0, r0, #8
	subs r2, r1, r0
	cmp r2, #0
	blt _080E178A
	cmp r2, #0xf
	ble _080E1790
	b _080E17B4
_080E178A:
	subs r0, r0, r1
	cmp r0, #0xf
	bgt _080E17B4
_080E1790:
	adds r0, r4, #0
	adds r0, #0xa2
	movs r1, #0
	ldrsh r2, [r0, r1]
	ldr r0, [r4, #0x44]
	asrs r0, r0, #8
	subs r1, r2, r0
	cmp r1, #0
	blt _080E17A8
	cmp r1, #0xf
	ble _080E17AE
	b _080E17B4
_080E17A8:
	subs r0, r0, r2
	cmp r0, #0xf
	bgt _080E17B4
_080E17AE:
	adds r0, r4, #0
	bl sub_080DF894
_080E17B4:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E17EC
	movs r0, #0
	strb r0, [r5]
	movs r1, #0
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E17E2
	ldr r2, _080E17F4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E17F8 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080E17FC @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
_080E17E2:
	cmp r1, #0
	beq _080E17EC
	adds r0, r4, #0
	bl sub_080DF720
_080E17EC:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E17F4: .4byte gRngVal
_080E17F8: .4byte 0x00196225
_080E17FC: .4byte 0x3C6EF35F

	thumb_func_start sub_080E1800
sub_080E1800: @ 0x080E1800
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E1858 @ =sub_080E1868
	movs r1, #0xc
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r3, r4, #0
	adds r3, #0xac
	str r0, [r3]
	ldr r1, [r4, #8]
	movs r2, #0x80
	lsls r2, r2, #1
	orrs r1, r2
	movs r2, #3
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r4, #8]
	ldr r1, [r4, #0xc]
	subs r2, #0x3e
	ands r1, r2
	str r1, [r4, #0xc]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa0
	movs r2, #0
	strh r0, [r1]
	ldr r0, [r3]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r1, #2
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r2, [r0]
	subs r0, #0x18
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E185C
	movs r0, #0x48
	b _080E185E
	.align 2, 0
_080E1858: .4byte sub_080E1868
_080E185C:
	movs r0, #0x30
_080E185E:
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E1868
sub_080E1868: @ 0x080E1868
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	adds r0, #0x87
	ldrb r7, [r0]
	cmp r7, #0
	bne _080E187A
	b _080E19E2
_080E187A:
	adds r5, r4, #0
	adds r5, #0x9e
	ldrb r0, [r5]
	adds r0, #1
	movs r7, #0
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0xa0
	adds r1, r1, r4
	mov r8, r1
	adds r6, r4, #0
	adds r6, #0xa2
	cmp r0, #7
	bls _080E18B8
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	strb r7, [r5]
	ldr r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	mov r2, r8
	strh r0, [r2]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	strh r0, [r6]
_080E18B8:
	ldr r2, [r4, #0x44]
	ldr r1, _080E18E4 @ =0xFFFFF000
	ands r2, r1
	movs r3, #0
	ldrsh r0, [r6, r3]
	lsls r0, r0, #8
	ands r0, r1
	cmp r2, r0
	ble _080E18E8
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E192E
	strh r2, [r1]
	b _080E192E
	.align 2, 0
_080E18E4: .4byte 0xFFFFF000
_080E18E8:
	cmp r2, r0
	bge _080E1908
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E1904 @ =0xFFFFFE00
	cmp r0, r2
	bge _080E192E
	strh r2, [r1]
	b _080E192E
	.align 2, 0
_080E1904: .4byte 0xFFFFFE00
_080E1908:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _080E1922
	adds r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E192E
	b _080E192C
_080E1922:
	subs r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E192E
_080E192C:
	strh r7, [r1]
_080E192E:
	ldr r2, [r4, #0x40]
	ldr r1, _080E1968 @ =0xFFFFF000
	ands r2, r1
	mov r3, r8
	movs r5, #0
	ldrsh r0, [r3, r5]
	lsls r0, r0, #8
	ands r0, r1
	cmp r2, r0
	bge _080E1970
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E1964
	b _080E1AEA
_080E1964:
	ldr r2, _080E196C @ =0xFFFFFE00
	b _080E1B0C
	.align 2, 0
_080E1968: .4byte 0xFFFFF000
_080E196C: .4byte 0xFFFFFE00
_080E1970:
	cmp r2, r0
	ble _080E19C4
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E19A4
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E19A0 @ =0xFFFFFE00
	cmp r0, r2
	bge _080E1998
	b _080E1AEA
_080E1998:
	movs r2, #0x80
	lsls r2, r2, #2
	b _080E1AE6
	.align 2, 0
_080E19A0: .4byte 0xFFFFFE00
_080E19A4:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E19BC
	b _080E1AEA
_080E19BC:
	ldr r2, _080E19C0 @ =0xFFFFFE00
	b _080E1B0C
	.align 2, 0
_080E19C0: .4byte 0xFFFFFE00
_080E19C4:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	blt _080E19D4
	b _080E1B32
_080E19D4:
	adds r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080E19E0
	b _080E1B40
_080E19E0:
	b _080E1B3C
_080E19E2:
	adds r5, r4, #0
	adds r5, #0x9e
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0xa0
	adds r1, r1, r4
	mov r8, r1
	adds r6, r4, #0
	adds r6, #0xa2
	cmp r0, #7
	bls _080E1A1E
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	strb r7, [r5]
	ldr r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	mov r2, r8
	strh r0, [r2]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	strh r0, [r6]
_080E1A1E:
	ldr r2, [r4, #0x44]
	ldr r1, _080E1A4C @ =0xFFFFF000
	ands r2, r1
	movs r3, #0
	ldrsh r0, [r6, r3]
	lsls r0, r0, #8
	ands r0, r1
	cmp r2, r0
	ble _080E1A50
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080E1A96
	strh r2, [r1]
	b _080E1A96
	.align 2, 0
_080E1A4C: .4byte 0xFFFFF000
_080E1A50:
	cmp r2, r0
	bge _080E1A70
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E1A6C @ =0xFFFFFE80
	cmp r0, r2
	bge _080E1A96
	strh r2, [r1]
	b _080E1A96
	.align 2, 0
_080E1A6C: .4byte 0xFFFFFE80
_080E1A70:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _080E1A8A
	adds r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E1A96
	b _080E1A94
_080E1A8A:
	subs r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E1A96
_080E1A94:
	strh r7, [r1]
_080E1A96:
	ldr r2, [r4, #0x40]
	ldr r1, _080E1AB8 @ =0xFFFFF000
	ands r2, r1
	mov r3, r8
	movs r5, #0
	ldrsh r0, [r3, r5]
	lsls r0, r0, #8
	ands r0, r1
	cmp r2, r0
	bge _080E1ABC
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	b _080E1AF4
	.align 2, 0
_080E1AB8: .4byte 0xFFFFF000
_080E1ABC:
	cmp r2, r0
	ble _080E1B18
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E1AF4
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E1AF0 @ =0xFFFFFE80
	cmp r0, r2
	blt _080E1AEA
	movs r2, #0xc0
	lsls r2, r2, #1
_080E1AE6:
	cmp r0, r2
	ble _080E1B40
_080E1AEA:
	strh r2, [r1]
	b _080E1B40
	.align 2, 0
_080E1AF0: .4byte 0xFFFFFE80
_080E1AF4:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080E1AEA
	ldr r2, _080E1B14 @ =0xFFFFFE80
_080E1B0C:
	cmp r0, r2
	bge _080E1B40
	b _080E1AEA
	.align 2, 0
_080E1B14: .4byte 0xFFFFFE80
_080E1B18:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E1B32
	adds r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E1B40
	b _080E1B3C
_080E1B32:
	subs r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E1B40
_080E1B3C:
	movs r0, #0
	strh r0, [r1]
_080E1B40:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E1B56
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080E1B5C
_080E1B56:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_080E1B5C:
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E1B70
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xd
	strb r0, [r1]
_080E1B70:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E1B82
	adds r0, r4, #0
	bl sub_080E3C6C
_080E1B82:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080E1B8C
sub_080E1B8C: @ 0x080E1B8C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r4, r0, #0
	adds r6, r1, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #0xd
	bne _080E1BDC
	ldrb r0, [r6]
	cmp r0, #0
	bne _080E1BDC
	movs r0, #0x80
	lsls r0, r0, #1
	mov r8, r0
	adds r0, r6, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080E1BDC
	adds r0, r6, #0
	adds r0, #0xd4
	ldrh r0, [r0]
	cmp r0, #0x27
	beq _080E1BDC
	cmp r0, #0x7a
	bhi _080E1BDC
	movs r1, #0x88
	lsls r1, r1, #1
	adds r7, r6, r1
	ldr r0, [r7]
	cmp r0, #0
	bne _080E1BDC
	ldr r5, [r6, #8]
	ldr r0, _080E1BE0 @ =0x03800B00
	ands r5, r0
	cmp r5, #0
	beq _080E1BE4
_080E1BDC:
	movs r0, #0
	b _080E1C9E
	.align 2, 0
_080E1BE0: .4byte 0x03800B00
_080E1BE4:
	ldr r2, _080E1CAC @ =sub_080E3AE0
	adds r0, r4, #0
	movs r1, #0xe
	bl ObjectSetFunc
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r2, #0xc
	rsbs r2, r2, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #8
	bl sub_0803E2B0
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #0x4d
	strb r1, [r0]
	subs r0, #1
	strb r1, [r0]
	ldr r0, _080E1CB0 @ =gUnk_083569BC
	str r0, [r7]
	adds r0, r4, #0
	adds r0, #0xac
	str r6, [r0]
	subs r0, #0x2c
	ldrh r0, [r0]
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	str r6, [r4, #0x6c]
	ldr r1, _080E1CB4 @ =gUnk_02020EE0
	ldr r0, _080E1CB8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E1C9C
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E1C5E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E1C9C
_080E1C5E:
	ldr r1, _080E1CBC @ =gUnk_08D60FA4
	ldr r4, _080E1CC0 @ =gSongTable
	ldr r2, _080E1CC4 @ =0x00000CD4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E1C84
	movs r1, #0xcd
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E1C9C
_080E1C84:
	cmp r3, #0
	beq _080E1C94
	ldr r0, _080E1CC8 @ =gUnk_0203AD10
	ldr r0, [r0]
	mov r2, r8
	ands r0, r2
	cmp r0, #0
	bne _080E1C9C
_080E1C94:
	movs r0, #0xcd
	lsls r0, r0, #1
	bl m4aSongNumStart
_080E1C9C:
	movs r0, #1
_080E1C9E:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080E1CAC: .4byte sub_080E3AE0
_080E1CB0: .4byte gUnk_083569BC
_080E1CB4: .4byte gUnk_02020EE0
_080E1CB8: .4byte gUnk_0203AD3C
_080E1CBC: .4byte gUnk_08D60FA4
_080E1CC0: .4byte gSongTable
_080E1CC4: .4byte 0x00000CD4
_080E1CC8: .4byte gUnk_0203AD10

	thumb_func_start sub_080E1CCC
sub_080E1CCC: @ 0x080E1CCC
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r5, #0xc]
	movs r6, #0x80
	ands r6, r1
	cmp r6, #0
	bne _080E1CEC
	movs r2, #0x88
	lsls r2, r2, #1
	adds r0, r0, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _080E1CFC
_080E1CEC:
	movs r0, #0x81
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r5, #0xc]
	adds r0, r5, #0
	bl sub_080E25B4
	b _080E1EB4
_080E1CFC:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r4, [r5, #0x44]
	ldr r2, _080E1D34 @ =0xFFFFFC00
	ands r4, r2
	adds r1, #4
	movs r3, #0
	ldrsh r0, [r1, r3]
	lsls r3, r0, #8
	ands r3, r2
	adds r7, r1, #0
	cmp r4, r3
	ble _080E1D38
	subs r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E1D82
	strh r2, [r1]
	b _080E1D82
	.align 2, 0
_080E1D34: .4byte 0xFFFFFC00
_080E1D38:
	cmp r4, r3
	bge _080E1D58
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E1D54 @ =0xFFFFFE00
	cmp r0, r2
	bge _080E1D82
	strh r2, [r1]
	b _080E1D82
	.align 2, 0
_080E1D54: .4byte 0xFFFFFE00
_080E1D58:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E1D74
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E1D82
	b _080E1D80
_080E1D74:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E1D82
_080E1D80:
	strh r6, [r1]
_080E1D82:
	ldr r4, [r5, #0x40]
	ldr r0, _080E1DA4 @ =0xFFFFFC00
	ands r4, r0
	adds r1, r5, #0
	adds r1, #0xa0
	movs r2, #0
	ldrsh r1, [r1, r2]
	lsls r3, r1, #8
	ands r3, r0
	cmp r4, r3
	bge _080E1DA8
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	b _080E1DE0
	.align 2, 0
_080E1DA4: .4byte 0xFFFFFC00
_080E1DA8:
	cmp r4, r3
	ble _080E1E04
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E1DE0
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E1DDC @ =0xFFFFFE00
	cmp r0, r2
	blt _080E1DD6
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E1E30
_080E1DD6:
	strh r2, [r1]
	b _080E1E30
	.align 2, 0
_080E1DDC: .4byte 0xFFFFFE00
_080E1DE0:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E1DD6
	ldr r2, _080E1E00 @ =0xFFFFFE00
	cmp r0, r2
	bge _080E1E30
	b _080E1DD6
	.align 2, 0
_080E1E00: .4byte 0xFFFFFE00
_080E1E04:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E1E20
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E1E30
	b _080E1E2C
_080E1E20:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E1E30
_080E1E2C:
	movs r0, #0
	strh r0, [r1]
_080E1E30:
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E1E46
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080E1E4C
_080E1E46:
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
_080E1E4C:
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	movs r1, #2
	ands r0, r1
	adds r4, r5, #0
	adds r4, #0x83
	cmp r0, #0
	beq _080E1E72
	movs r0, #0x10
	strb r0, [r4]
	subs r1, #0x12
	movs r2, #0x13
	rsbs r2, r2, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #0x10
	bl sub_0803E2B0
_080E1E72:
	ldrb r0, [r4]
	cmp r0, #0x10
	bne _080E1EB4
	movs r0, #0
	ldrsh r1, [r7, r0]
	adds r1, #0x10
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	cmp r1, r0
	blt _080E1EB4
	adds r0, r5, #0
	adds r0, #0xa8
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r0, r2
	ldr r1, [r5, #0x40]
	cmp r1, r0
	bge _080E1EB4
	adds r0, r5, #0
	adds r0, #0xa4
	movs r3, #0
	ldrsh r0, [r0, r3]
	lsls r0, r0, #8
	ldr r2, _080E1EBC @ =0xFFFFFC00
	adds r0, r0, r2
	cmp r1, r0
	ble _080E1EB4
	adds r0, r5, #0
	bl sub_080E3B9C
_080E1EB4:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E1EBC: .4byte 0xFFFFFC00

	thumb_func_start sub_080E1EC0
sub_080E1EC0: @ 0x080E1EC0
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r0, #0xac
	ldr r2, [r0]
	ldr r1, [r5, #0xc]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _080E1EDE
	movs r3, #0x88
	lsls r3, r3, #1
	adds r0, r2, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _080E1EEE
_080E1EDE:
	movs r0, #0x81
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r5, #0xc]
	adds r0, r5, #0
	bl sub_080E25B4
	b _080E2018
_080E1EEE:
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E1F04
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080E1F0A
_080E1F04:
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
_080E1F0A:
	str r0, [r5, #8]
	ldrh r1, [r5, #4]
	movs r2, #4
	ldrsh r0, [r5, r2]
	cmp r0, #0
	bne _080E1FFC
	adds r2, r5, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x7a
	strh r0, [r2]
	lsls r0, r0, #0x10
	ldr r1, _080E1FDC @ =0xF9800000
	cmp r0, r1
	bge _080E1F2C
	ldr r0, _080E1FE0 @ =0x0000F980
	strh r0, [r2]
_080E1F2C:
	adds r0, r5, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080E2018
	movs r0, #1
	adds r1, r5, #0
	bl sub_0806FE64
	movs r1, #8
	rsbs r1, r1, #0
	ldr r0, [r5, #8]
	movs r4, #1
	adds r3, r4, #0
	bics r3, r0
	adds r0, r5, #0
	movs r2, #0xc
	bl sub_08089864
	movs r1, #0x14
	rsbs r1, r1, #0
	ldr r3, [r5, #8]
	ands r3, r4
	adds r0, r5, #0
	movs r2, #0xc
	bl sub_08089864
	ldr r1, _080E1FE4 @ =gUnk_02020EE0
	ldr r0, _080E1FE8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E1FD2
	ldrb r0, [r5]
	cmp r0, #0
	bne _080E1F92
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E1FD2
_080E1F92:
	ldr r1, _080E1FEC @ =gUnk_08D60FA4
	ldr r4, _080E1FF0 @ =gSongTable
	ldr r3, _080E1FF4 @ =0x00000BB4
	adds r0, r4, r3
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E1FB8
	movs r1, #0xbb
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E1FD2
_080E1FB8:
	cmp r3, #0
	beq _080E1FCA
	ldr r0, _080E1FF8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E1FD2
_080E1FCA:
	movs r0, #0xbb
	lsls r0, r0, #1
	bl m4aSongNumStart
_080E1FD2:
	adds r0, r5, #0
	bl sub_080E3BD0
	b _080E2018
	.align 2, 0
_080E1FDC: .4byte 0xF9800000
_080E1FE0: .4byte 0x0000F980
_080E1FE4: .4byte gUnk_02020EE0
_080E1FE8: .4byte gUnk_0203AD3C
_080E1FEC: .4byte gUnk_08D60FA4
_080E1FF0: .4byte gSongTable
_080E1FF4: .4byte 0x00000BB4
_080E1FF8: .4byte gUnk_0203AD10
_080E1FFC:
	subs r0, r1, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E2018
	ldr r0, [r5, #8]
	ldr r1, _080E2020 @ =0xFFFFFEFF
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x52
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1]
_080E2018:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E2020: .4byte 0xFFFFFEFF

	thumb_func_start sub_080E2024
sub_080E2024: @ 0x080E2024
	push {r4, lr}
	adds r2, r0, #0
	adds r0, #0xac
	ldr r3, [r0]
	ldr r1, [r2, #0xc]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _080E2042
	movs r4, #0x88
	lsls r4, r4, #1
	adds r0, r3, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080E2052
_080E2042:
	movs r0, #0x81
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r2, #0xc]
	adds r0, r2, #0
	bl sub_080E25B4
	b _080E20A8
_080E2052:
	adds r0, r2, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E2068
	ldr r0, [r2, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080E206E
_080E2068:
	ldr r0, [r2, #8]
	movs r1, #1
	orrs r0, r1
_080E206E:
	str r0, [r2, #8]
	movs r0, #0x9e
	adds r0, r0, r2
	mov ip, r0
	ldrb r0, [r0]
	lsls r3, r0, #0x18
	lsrs r0, r3, #0x18
	cmp r0, #7
	bhi _080E2096
	ldr r1, _080E20B0 @ =gUnk_08356A04
	lsrs r0, r3, #0x19
	adds r0, r0, r1
	ldrb r1, [r0]
	adds r0, r2, #0
	adds r0, #0x54
	strb r1, [r0]
	mov r1, ip
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080E2096:
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E20A8
	adds r0, r2, #0
	bl sub_080E3C0C
_080E20A8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E20B0: .4byte gUnk_08356A04

	thumb_func_start sub_080E20B4
sub_080E20B4: @ 0x080E20B4
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r6, #0
	strb r0, [r1]
	ldr r3, [r4, #0x44]
	ldr r1, _080E20F8 @ =0xFFFFFC00
	ands r3, r1
	adds r0, r4, #0
	adds r0, #0xa2
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	ble _080E20FC
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	adds r5, r1, #0
	cmp r0, r2
	ble _080E214C
	strh r2, [r5]
	b _080E214C
	.align 2, 0
_080E20F8: .4byte 0xFFFFFC00
_080E20FC:
	cmp r3, r0
	bge _080E2120
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E211C @ =0xFFFFFE00
	adds r5, r1, #0
	cmp r0, r2
	bge _080E214C
	strh r2, [r5]
	b _080E214C
	.align 2, 0
_080E211C: .4byte 0xFFFFFE00
_080E2120:
	adds r0, r4, #0
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r5, r0, #0
	cmp r1, #0
	bge _080E213E
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E214C
	b _080E214A
_080E213E:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E214C
_080E214A:
	strh r6, [r5]
_080E214C:
	ldr r3, [r4, #0x40]
	ldr r2, _080E2188 @ =0xFFFFFC00
	ands r3, r2
	adds r1, r4, #0
	adds r1, #0xa0
	movs r6, #0
	ldrsh r0, [r1, r6]
	lsls r0, r0, #8
	ands r0, r2
	adds r7, r1, #0
	cmp r3, r0
	bge _080E218C
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #2
	adds r2, r1, #0
	cmp r0, r3
	bgt _080E21DC
	b _080E21E0
	.align 2, 0
_080E2188: .4byte 0xFFFFFC00
_080E218C:
	cmp r3, r0
	ble _080E21F0
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E21C4
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _080E21C0 @ =0xFFFFFE00
	adds r2, r1, #0
	cmp r0, r3
	blt _080E21DC
	movs r1, #0x80
	lsls r1, r1, #2
	cmp r0, r1
	ble _080E221E
	strh r1, [r2]
	b _080E221E
	.align 2, 0
_080E21C0: .4byte 0xFFFFFE00
_080E21C4:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #2
	adds r2, r1, #0
	cmp r0, r3
	ble _080E21E0
_080E21DC:
	strh r3, [r2]
	b _080E221E
_080E21E0:
	ldr r1, _080E21EC @ =0xFFFFFE00
	cmp r0, r1
	bge _080E221E
	strh r1, [r2]
	b _080E221E
	.align 2, 0
_080E21EC: .4byte 0xFFFFFE00
_080E21F0:
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r3, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #0
	bge _080E220E
	adds r0, r3, #0
	adds r0, #0x20
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E221E
	b _080E221A
_080E220E:
	adds r0, r3, #0
	subs r0, #0x20
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E221E
_080E221A:
	movs r0, #0
	strh r0, [r2]
_080E221E:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E2234
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080E223A
_080E2234:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_080E223A:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	bne _080E2290
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r3, #0
	ldrsh r1, [r7, r3]
	ldr r0, [r4, #0x40]
	asrs r0, r0, #8
	subs r2, r1, r0
	cmp r2, #0
	blt _080E2264
	cmp r2, #0xf
	ble _080E226A
	b _080E22A0
_080E2264:
	subs r0, r0, r1
	cmp r0, #0xf
	bgt _080E22A0
_080E226A:
	adds r0, r4, #0
	adds r0, #0xa2
	movs r1, #0
	ldrsh r2, [r0, r1]
	ldr r0, [r4, #0x44]
	asrs r0, r0, #8
	subs r1, r2, r0
	cmp r1, #0
	blt _080E2282
	cmp r1, #0xf
	ble _080E2288
	b _080E22A0
_080E2282:
	subs r0, r0, r2
	cmp r0, #0xf
	bgt _080E22A0
_080E2288:
	adds r0, r4, #0
	bl sub_080DF894
	b _080E22A0
_080E2290:
	ldrb r0, [r4, #1]
	cmp r0, #0x17
	bhi _080E22A0
	movs r0, #0
	strh r0, [r2]
	movs r0, #0xd0
	lsls r0, r0, #1
	strh r0, [r5]
_080E22A0:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E22D8
	movs r0, #0
	strb r0, [r6]
	movs r1, #0
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E22CE
	ldr r2, _080E22E0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E22E4 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080E22E8 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
_080E22CE:
	cmp r1, #0
	beq _080E22D8
	adds r0, r4, #0
	bl sub_080DF720
_080E22D8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E22E0: .4byte gRngVal
_080E22E4: .4byte 0x00196225
_080E22E8: .4byte 0x3C6EF35F

	thumb_func_start sub_080E22EC
sub_080E22EC: @ 0x080E22EC
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E230E
	adds r0, r2, #0
	adds r0, #0x4c
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E231E
	b _080E231A
_080E230E:
	adds r0, r2, #0
	subs r0, #0x4c
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E231E
_080E231A:
	movs r0, #0
	strh r0, [r1]
_080E231E:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E233A
	adds r0, r2, #0
	adds r0, #0x4c
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E234A
	b _080E2346
_080E233A:
	adds r0, r2, #0
	subs r0, #0x4c
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E234A
_080E2346:
	movs r0, #0
	strh r0, [r1]
_080E234A:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E2360
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080E2366
_080E2360:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_080E2366:
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #0xe
	bne _080E238A
	ldr r1, [r4, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080E23B0
	movs r0, #3
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r4, #8]
	movs r0, #0xf
	strb r0, [r2]
	b _080E23B0
_080E238A:
	cmp r0, #0xf
	bne _080E23B0
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E23B0
	subs r1, #0x12
	movs r2, #0x13
	rsbs r2, r2, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0x10
	bl sub_0803E2B0
	adds r0, r4, #0
	bl sub_080E3CC4
_080E23B0:
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080E23B8
sub_080E23B8: @ 0x080E23B8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r5, #0
	strb r0, [r1]
	ldr r3, [r4, #0x44]
	ldr r1, _080E23F8 @ =0xFFFFFC00
	ands r3, r1
	adds r0, r4, #0
	adds r0, #0xa2
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	ble _080E23FC
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E2446
	strh r2, [r1]
	b _080E2446
	.align 2, 0
_080E23F8: .4byte 0xFFFFFC00
_080E23FC:
	cmp r3, r0
	bge _080E241C
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E2418 @ =0xFFFFFE00
	cmp r0, r2
	bge _080E2446
	strh r2, [r1]
	b _080E2446
	.align 2, 0
_080E2418: .4byte 0xFFFFFE00
_080E241C:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E2438
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E2446
	b _080E2444
_080E2438:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E2446
_080E2444:
	strh r5, [r1]
_080E2446:
	ldr r3, [r4, #0x40]
	ldr r2, _080E246C @ =0xFFFFFC00
	ands r3, r2
	adds r1, r4, #0
	adds r1, #0xa0
	movs r5, #0
	ldrsh r0, [r1, r5]
	lsls r0, r0, #8
	ands r0, r2
	adds r6, r1, #0
	cmp r3, r0
	bge _080E2470
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	b _080E24A8
	.align 2, 0
_080E246C: .4byte 0xFFFFFC00
_080E2470:
	cmp r3, r0
	ble _080E24CC
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E24A8
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E24A4 @ =0xFFFFFE00
	cmp r0, r2
	blt _080E249E
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E24F8
_080E249E:
	strh r2, [r1]
	b _080E24F8
	.align 2, 0
_080E24A4: .4byte 0xFFFFFE00
_080E24A8:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E249E
	ldr r2, _080E24C8 @ =0xFFFFFE00
	cmp r0, r2
	bge _080E24F8
	b _080E249E
	.align 2, 0
_080E24C8: .4byte 0xFFFFFE00
_080E24CC:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E24E8
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E24F8
	b _080E24F4
_080E24E8:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E24F8
_080E24F4:
	movs r0, #0
	strh r0, [r1]
_080E24F8:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E250E
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080E2514
_080E250E:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_080E2514:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	bne _080E2568
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0
	ldrsh r1, [r6, r0]
	ldr r0, [r4, #0x40]
	asrs r0, r0, #8
	subs r2, r1, r0
	cmp r2, #0
	blt _080E253E
	cmp r2, #0xf
	ble _080E2544
	b _080E2568
_080E253E:
	subs r0, r0, r1
	cmp r0, #0xf
	bgt _080E2568
_080E2544:
	adds r0, r4, #0
	adds r0, #0xa2
	movs r1, #0
	ldrsh r2, [r0, r1]
	ldr r0, [r4, #0x44]
	asrs r0, r0, #8
	subs r1, r2, r0
	cmp r1, #0
	blt _080E255C
	cmp r1, #0xf
	ble _080E2562
	b _080E2568
_080E255C:
	subs r0, r0, r2
	cmp r0, #0xf
	bgt _080E2568
_080E2562:
	adds r0, r4, #0
	bl sub_080DF894
_080E2568:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E25A0
	movs r0, #0
	strb r0, [r5]
	movs r1, #0
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E2596
	ldr r2, _080E25A8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E25AC @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080E25B0 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
_080E2596:
	cmp r1, #0
	beq _080E25A0
	adds r0, r4, #0
	bl sub_080DF720
_080E25A0:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E25A8: .4byte gRngVal
_080E25AC: .4byte 0x00196225
_080E25B0: .4byte 0x3C6EF35F

	thumb_func_start sub_080E25B4
sub_080E25B4: @ 0x080E25B4
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r2, _080E2618 @ =sub_080E261C
	movs r1, #0x16
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0xb0
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	adds r0, r4, #0
	adds r0, #0xa0
	strh r1, [r0]
	ldr r0, [r2]
	ldrh r0, [r0, #8]
	adds r1, r4, #0
	adds r1, #0xa2
	strh r0, [r1]
	movs r0, #0x10
	strh r0, [r4, #4]
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r2, #0x13
	rsbs r2, r2, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0x10
	bl sub_0803E2B0
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E2618: .4byte sub_080E261C

	thumb_func_start sub_080E261C
sub_080E261C: @ 0x080E261C
	push {r4, r5, lr}
	mov ip, r0
	ldrh r0, [r0, #4]
	mov r1, ip
	movs r2, #4
	ldrsh r4, [r1, r2]
	cmp r4, #0
	beq _080E262E
	b _080E27E6
_080E262E:
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	mov r5, ip
	ldr r3, [r5, #0x44]
	ldr r2, _080E2668 @ =0xFFFFFC00
	ands r3, r2
	adds r1, #4
	movs r5, #0
	ldrsh r0, [r1, r5]
	lsls r0, r0, #8
	ands r0, r2
	adds r5, r1, #0
	cmp r3, r0
	ble _080E266C
	subs r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E26B6
	strh r2, [r1]
	b _080E26B6
	.align 2, 0
_080E2668: .4byte 0xFFFFFC00
_080E266C:
	cmp r3, r0
	bge _080E268C
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E2688 @ =0xFFFFFE00
	cmp r0, r2
	bge _080E26B6
	strh r2, [r1]
	b _080E26B6
	.align 2, 0
_080E2688: .4byte 0xFFFFFE00
_080E268C:
	mov r1, ip
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E26A8
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E26B6
	b _080E26B4
_080E26A8:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E26B6
_080E26B4:
	strh r4, [r1]
_080E26B6:
	mov r4, ip
	ldr r3, [r4, #0x40]
	ldr r2, _080E26E0 @ =0xFFFFFC00
	ands r3, r2
	mov r1, ip
	adds r1, #0xa0
	movs r4, #0
	ldrsh r0, [r1, r4]
	lsls r0, r0, #8
	ands r0, r2
	adds r4, r1, #0
	cmp r3, r0
	bge _080E26E4
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	b _080E271C
	.align 2, 0
_080E26E0: .4byte 0xFFFFFC00
_080E26E4:
	cmp r3, r0
	ble _080E2740
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E271C
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E2718 @ =0xFFFFFE00
	cmp r0, r2
	blt _080E2714
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E276C
_080E2714:
	strh r2, [r1]
	b _080E276C
	.align 2, 0
_080E2718: .4byte 0xFFFFFE00
_080E271C:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E2714
	ldr r2, _080E273C @ =0xFFFFFE00
	cmp r0, r2
	bge _080E276C
	b _080E2714
	.align 2, 0
_080E273C: .4byte 0xFFFFFE00
_080E2740:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E275C
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E276C
	b _080E2768
_080E275C:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E276C
_080E2768:
	movs r0, #0
	strh r0, [r1]
_080E276C:
	mov r0, ip
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E2788
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	b _080E2792
_080E2788:
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
_080E2792:
	mov r0, ip
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E2822
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #4
	orrs r0, r1
	mov r2, ip
	str r0, [r2, #8]
	movs r3, #0
	ldrsh r1, [r4, r3]
	ldr r0, [r2, #0x40]
	asrs r0, r0, #8
	subs r2, r1, r0
	cmp r2, #0
	blt _080E27BC
	cmp r2, #0xf
	ble _080E27C2
	b _080E2822
_080E27BC:
	subs r0, r0, r1
	cmp r0, #0xf
	bgt _080E2822
_080E27C2:
	movs r4, #0
	ldrsh r1, [r5, r4]
	mov r5, ip
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	subs r2, r1, r0
	cmp r2, #0
	blt _080E27D8
	cmp r2, #0xf
	ble _080E27DE
	b _080E2822
_080E27D8:
	subs r0, r0, r1
	cmp r0, #0xf
	bgt _080E2822
_080E27DE:
	mov r0, ip
	bl sub_080DF894
	b _080E2822
_080E27E6:
	subs r0, #1
	mov r1, ip
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E2822
	adds r1, #0x83
	movs r0, #0
	strb r0, [r1]
	movs r1, #0
	mov r0, ip
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E2818
	ldr r2, _080E2828 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E282C @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080E2830 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
_080E2818:
	cmp r1, #0
	beq _080E2822
	mov r0, ip
	bl sub_080DF720
_080E2822:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E2828: .4byte gRngVal
_080E282C: .4byte 0x00196225
_080E2830: .4byte 0x3C6EF35F

	thumb_func_start sub_080E2834
sub_080E2834: @ 0x080E2834
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	adds r4, r3, #0
	adds r0, #0xb4
	ldr r5, [r0]
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r6, #0
	ldrsh r0, [r1, r6]
	cmp r0, #0
	bge _080E285A
	adds r0, r2, #0
	adds r0, #0x4c
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E286A
	b _080E2866
_080E285A:
	adds r0, r2, #0
	subs r0, #0x4c
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E286A
_080E2866:
	movs r0, #0
	strh r0, [r1]
_080E286A:
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r6, #0
	ldrsh r0, [r1, r6]
	cmp r0, #0
	bge _080E2886
	adds r0, r2, #0
	adds r0, #0x4c
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E2896
	b _080E2892
_080E2886:
	adds r0, r2, #0
	subs r0, #0x4c
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E2896
_080E2892:
	movs r0, #0
	strh r0, [r1]
_080E2896:
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r1, [r0]
	cmp r1, #0
	bne _080E28B4
	adds r0, #4
	strb r1, [r0]
	adds r0, r3, #0
	bl sub_080DF894
	b _080E28C4
_080E28B4:
	adds r0, r5, #0
	adds r0, #0xb8
	ldrb r0, [r0]
	cmp r0, #1
	bne _080E28C4
	adds r0, r3, #0
	bl sub_080E3D34
_080E28C4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E28CC
sub_080E28CC: @ 0x080E28CC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov ip, r0
	adds r0, #0xb4
	ldr r6, [r0]
	cmp r6, #0
	bne _080E28EA
	mov r0, ip
	bl sub_080E3D90
	b _080E2BD8
_080E28EA:
	mov r1, ip
	adds r1, #0xac
	ldr r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	mov r2, ip
	adds r2, #0xa0
	movs r7, #0
	strh r0, [r2]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	mov r4, ip
	adds r4, #0xa2
	strh r0, [r4]
	mov r0, ip
	adds r0, #0x83
	ldrb r1, [r0]
	mov r8, r2
	mov sl, r0
	mov r5, ip
	adds r5, #0x9f
	cmp r1, #0x12
	beq _080E2922
	ldrb r0, [r5]
	cmp r0, #0
	bne _080E2922
	b _080E2BBA
_080E2922:
	mov r0, ip
	adds r0, #0xb0
	ldr r1, [r0]
	ldrb r1, [r1, #0xe]
	movs r2, #0x60
	mov sb, r2
	str r0, [sp]
	cmp r1, #0
	beq _080E2938
	movs r3, #0xa0
	mov sb, r3
_080E2938:
	mov r1, ip
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	mov r0, ip
	ldr r3, [r0, #0x44]
	ldr r1, _080E2980 @ =0xFFFFFC00
	ands r3, r1
	movs r2, #0
	ldrsh r0, [r4, r2]
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	ble _080E29A4
	mov r3, ip
	ldrh r2, [r3, #4]
	movs r7, #4
	ldrsh r0, [r3, r7]
	cmp r0, #0
	ble _080E2984
	mov r1, ip
	adds r1, #0x52
	ldrh r3, [r1]
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	adds r4, r1, #0
	cmp r0, r2
	ble _080E2A20
	strh r2, [r4]
	b _080E2A20
	.align 2, 0
_080E2980: .4byte 0xFFFFFC00
_080E2984:
	mov r1, ip
	adds r1, #0x52
	ldrh r7, [r1]
	adds r0, r2, r7
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E29A0 @ =0xFFFFFE80
	adds r4, r1, #0
	cmp r0, r2
	bge _080E2A20
	strh r2, [r4]
	b _080E2A20
	.align 2, 0
_080E29A0: .4byte 0xFFFFFE80
_080E29A4:
	cmp r3, r0
	bge _080E29F4
	mov r1, ip
	movs r2, #4
	ldrsh r0, [r1, r2]
	cmp r0, #0
	bge _080E29D2
	mov r0, ip
	adds r0, #0x52
	ldrh r1, [r0]
	mov r3, ip
	ldrh r2, [r3, #4]
	subs r1, r1, r2
	strh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	adds r4, r0, #0
	cmp r1, r2
	ble _080E2A20
	strh r2, [r4]
	b _080E2A20
_080E29D2:
	mov r0, ip
	adds r0, #0x52
	ldrh r1, [r0]
	mov r7, ip
	ldrh r2, [r7, #4]
	subs r1, r1, r2
	strh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r2, _080E29F0 @ =0xFFFFFE80
	adds r4, r0, #0
	cmp r1, r2
	bge _080E2A20
	strh r2, [r4]
	b _080E2A20
	.align 2, 0
_080E29F0: .4byte 0xFFFFFE80
_080E29F4:
	mov r0, ip
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	cmp r1, #0
	bge _080E2A12
	adds r0, r2, #0
	adds r0, #0x10
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E2A20
	b _080E2A1E
_080E2A12:
	adds r0, r2, #0
	subs r0, #0x10
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E2A20
_080E2A1E:
	strh r7, [r4]
_080E2A20:
	mov r7, ip
	ldr r3, [r7, #0x40]
	ldr r2, _080E2A68 @ =0xFFFFFC00
	ands r3, r2
	mov r0, r8
	movs r7, #0
	ldrsh r1, [r0, r7]
	mov r7, sb
	lsls r0, r7, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r1, #8
	ands r0, r2
	cmp r3, r0
	bge _080E2A6C
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	adds r3, r1, #0
	cmp r0, r2
	bgt _080E2AC0
	b _080E2AC4
	.align 2, 0
_080E2A68: .4byte 0xFFFFFC00
_080E2A6C:
	cmp r3, r0
	ble _080E2AD4
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E2AA8
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E2AA4 @ =0xFFFFFE80
	adds r3, r1, #0
	cmp r0, r2
	blt _080E2AC0
	movs r1, #0xc0
	lsls r1, r1, #1
	cmp r0, r1
	ble _080E2B02
	strh r1, [r3]
	b _080E2B02
	.align 2, 0
_080E2AA4: .4byte 0xFFFFFE80
_080E2AA8:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	adds r3, r1, #0
	cmp r0, r2
	ble _080E2AC4
_080E2AC0:
	strh r2, [r3]
	b _080E2B02
_080E2AC4:
	ldr r1, _080E2AD0 @ =0xFFFFFE80
	cmp r0, r1
	bge _080E2B02
	strh r1, [r3]
	b _080E2B02
	.align 2, 0
_080E2AD0: .4byte 0xFFFFFE80
_080E2AD4:
	mov r0, ip
	adds r0, #0x50
	ldrh r2, [r0]
	movs r7, #0
	ldrsh r1, [r0, r7]
	adds r3, r0, #0
	cmp r1, #0
	bge _080E2AF2
	adds r0, r2, #0
	adds r0, #0x18
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E2B02
	b _080E2AFE
_080E2AF2:
	adds r0, r2, #0
	subs r0, #0x18
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E2B02
_080E2AFE:
	movs r0, #0
	strh r0, [r3]
_080E2B02:
	ldr r1, [sp]
	ldr r0, [r1]
	ldrb r2, [r0, #0xe]
	cmp r2, #0
	beq _080E2B30
	mov r2, ip
	ldr r0, [r2, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2, #8]
	mov r0, ip
	adds r0, #0xa4
	movs r7, #0
	ldrsh r0, [r0, r7]
	adds r0, #0xc
	lsls r0, r0, #8
	ldr r1, [r2, #0x40]
	cmp r1, r0
	bge _080E2B50
	movs r0, #0
	strh r0, [r3]
	b _080E2B50
_080E2B30:
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #1
	orrs r0, r1
	mov r7, ip
	str r0, [r7, #8]
	mov r0, ip
	adds r0, #0xa8
	movs r1, #0
	ldrsh r0, [r0, r1]
	subs r0, #0xc
	lsls r0, r0, #8
	ldr r1, [r7, #0x40]
	cmp r1, r0
	ble _080E2B50
	strh r2, [r3]
_080E2B50:
	ldrb r0, [r5]
	cmp r0, #1
	bne _080E2BB0
	mov r2, ip
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x60
	ble _080E2B6A
	movs r0, #0x60
	strh r0, [r2, #4]
_080E2B6A:
	mov r7, ip
	ldr r0, [r7, #0x44]
	ldr r2, _080E2B90 @ =0xFFFFF800
	ands r0, r2
	ldr r1, [r6, #0x44]
	ands r1, r2
	cmp r0, r1
	bne _080E2BB4
	ldr r0, [r7, #0x40]
	ldr r1, [r6, #0x40]
	subs r2, r0, r1
	cmp r2, #0
	blt _080E2B94
	movs r0, #0xc0
	lsls r0, r0, #7
	cmp r2, r0
	bgt _080E2B9E
	b _080E2BB4
	.align 2, 0
_080E2B90: .4byte 0xFFFFF800
_080E2B94:
	subs r1, r1, r0
	movs r0, #0xc0
	lsls r0, r0, #7
	cmp r1, r0
	ble _080E2BB4
_080E2B9E:
	movs r1, #0
	movs r0, #0
	strh r0, [r3]
	strh r0, [r4]
	movs r0, #0x13
	mov r2, sl
	strb r0, [r2]
	strb r1, [r5]
	b _080E2BB4
_080E2BB0:
	subs r0, #1
	strb r0, [r5]
_080E2BB4:
	ldrb r0, [r5]
	cmp r0, #0
	bne _080E2BD8
_080E2BBA:
	mov r3, sl
	ldrb r0, [r3]
	cmp r0, #0x13
	bne _080E2BD8
	adds r0, r6, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #0x13
	bne _080E2BD8
	mov r0, ip
	bl sub_080E2BE8
	adds r0, r6, #0
	bl sub_080E2BE8
_080E2BD8:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080E2BE8
sub_080E2BE8: @ 0x080E2BE8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r0, #0xb4
	ldr r5, [r0]
	ldr r2, _080E2C28 @ =sub_080E2C78
	adds r0, r4, #0
	movs r1, #0x14
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x50
	movs r1, #0
	ldr r0, _080E2C2C @ =0x0000FF80
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x52
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E2C1A
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080E2C1A:
	ldr r2, [r4, #0x40]
	ldr r0, [r5, #0x40]
	subs r1, r2, r0
	cmp r1, #0
	blt _080E2C30
	lsrs r0, r1, #8
	b _080E2C34
	.align 2, 0
_080E2C28: .4byte sub_080E2C78
_080E2C2C: .4byte 0x0000FF80
_080E2C30:
	subs r0, r0, r2
	lsrs r0, r0, #8
_080E2C34:
	adds r2, r4, #0
	adds r2, #0xa0
	lsls r0, r0, #0x10
	asrs r1, r0, #0x11
	strh r1, [r2]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E2C52
	ldr r0, [r4, #0x40]
	asrs r0, r0, #8
	adds r0, r1, r0
	b _080E2C58
_080E2C52:
	ldr r0, [r4, #0x40]
	asrs r0, r0, #8
	subs r0, r0, r1
_080E2C58:
	strh r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x68]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080E2C78
sub_080E2C78: @ 0x080E2C78
	push {r4, r5, lr}
	mov ip, r0
	movs r1, #4
	ldrsh r0, [r0, r1]
	cmp r0, #0xf
	bgt _080E2CCC
	cmp r0, #7
	ble _080E2CBC
	ldr r2, _080E2CC8 @ =gUnk_08356A04
	mov r3, ip
	movs r4, #4
	ldrsh r0, [r3, r4]
	subs r0, #8
	asrs r0, r0, #1
	adds r0, r0, r2
	ldrb r1, [r0]
	mov r0, ip
	adds r0, #0x54
	movs r3, #0
	strb r1, [r0]
	mov r5, ip
	movs r1, #4
	ldrsh r0, [r5, r1]
	subs r0, #8
	asrs r0, r0, #1
	adds r0, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	mov r1, ip
	adds r1, #0x55
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x50
	strh r3, [r0]
_080E2CBC:
	mov r2, ip
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
	b _080E2D7C
	.align 2, 0
_080E2CC8: .4byte gUnk_08356A04
_080E2CCC:
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E2CFC
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x68
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _080E2CF8 @ =0xFFFFFB00
	adds r2, r1, #0
	cmp r0, r3
	blt _080E2D14
	movs r1, #0xa0
	lsls r1, r1, #3
	cmp r0, r1
	ble _080E2D20
	b _080E2D1E
	.align 2, 0
_080E2CF8: .4byte 0xFFFFFB00
_080E2CFC:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x68
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0xa0
	lsls r3, r3, #3
	adds r2, r1, #0
	cmp r0, r3
	ble _080E2D18
_080E2D14:
	strh r3, [r2]
	b _080E2D20
_080E2D18:
	ldr r1, _080E2D54 @ =0xFFFFFB00
	cmp r0, r1
	bge _080E2D20
_080E2D1E:
	strh r1, [r2]
_080E2D20:
	mov r0, ip
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r4, [r0, #0xe]
	cmp r4, #0
	beq _080E2D58
	mov r0, ip
	adds r0, #0xa0
	movs r4, #0
	ldrsh r3, [r0, r4]
	movs r5, #0
	ldrsh r1, [r2, r5]
	mov r4, ip
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	asrs r0, r0, #8
	cmp r3, r0
	bge _080E2D7C
	lsls r0, r3, #8
	str r0, [r4, #0x40]
	movs r0, #0
	strh r0, [r2]
	mov r0, ip
	bl sub_080E2D84
	b _080E2D7C
	.align 2, 0
_080E2D54: .4byte 0xFFFFFB00
_080E2D58:
	mov r0, ip
	adds r0, #0xa0
	movs r5, #0
	ldrsh r3, [r0, r5]
	movs r0, #0
	ldrsh r1, [r2, r0]
	mov r5, ip
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	asrs r0, r0, #8
	cmp r3, r0
	ble _080E2D7C
	lsls r0, r3, #8
	str r0, [r5, #0x40]
	strh r4, [r2]
	mov r0, ip
	bl sub_080E2D84
_080E2D7C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E2D84
sub_080E2D84: @ 0x080E2D84
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _080E2DB0 @ =sub_080E2E94
	movs r1, #0x14
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E2DB4
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0x14
	b _080E2DBA
	.align 2, 0
_080E2DB0: .4byte sub_080E2E94
_080E2DB4:
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0x20
_080E2DBA:
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0xb4
	ldr r0, [r0]
	cmp r0, #0
	beq _080E2E72
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E2DE4
	movs r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x10
	movs r3, #3
	bl sub_080A8D18
	b _080E2DF4
_080E2DE4:
	movs r2, #0x28
	rsbs r2, r2, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r3, #2
	bl sub_080A8D18
_080E2DF4:
	movs r0, #3
	adds r1, r4, #0
	bl sub_0806FE64
	ldr r1, _080E2E7C @ =gUnk_02020EE0
	ldr r0, _080E2E80 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E2E68
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E2E28
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E2E68
_080E2E28:
	ldr r1, _080E2E84 @ =gUnk_08D60FA4
	ldr r5, _080E2E88 @ =gSongTable
	ldr r2, _080E2E8C @ =0x00000CA4
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E2E4E
	movs r1, #0xca
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E2E68
_080E2E4E:
	cmp r3, #0
	beq _080E2E60
	ldr r0, _080E2E90 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E2E68
_080E2E60:
	movs r0, #0xca
	lsls r0, r0, #1
	bl m4aSongNumStart
_080E2E68:
	ldr r0, [r4, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x68]
_080E2E72:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E2E7C: .4byte gUnk_02020EE0
_080E2E80: .4byte gUnk_0203AD3C
_080E2E84: .4byte gUnk_08D60FA4
_080E2E88: .4byte gSongTable
_080E2E8C: .4byte 0x00000CA4
_080E2E90: .4byte gUnk_0203AD10

	thumb_func_start sub_080E2E94
sub_080E2E94: @ 0x080E2E94
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	adds r3, r7, #0
	adds r2, r7, #0
	adds r2, #0xb4
	ldr r0, [r2]
	mov sl, r0
	movs r1, #4
	ldrsh r0, [r7, r1]
	cmp r0, #7
	bgt _080E2ECC
	ldr r1, _080E2FC4 @ =gUnk_08356A14
	adds r0, r0, r1
	ldrb r1, [r0]
	adds r0, r7, #0
	adds r0, #0x54
	strb r1, [r0]
	ldr r0, [r2]
	cmp r0, #0
	beq _080E2ECC
	mov r0, sl
	adds r0, #0x54
	strb r1, [r0]
_080E2ECC:
	movs r1, #4
	ldrsh r0, [r7, r1]
	adds r1, r7, #0
	adds r1, #0x9e
	ldrb r1, [r1]
	cmp r0, r1
	bge _080E2EDC
	b _080E2FE0
_080E2EDC:
	adds r1, r3, #0
	adds r1, #0xba
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r3, #0
	adds r0, #0xb4
	ldr r0, [r0]
	cmp r0, #0
	beq _080E2FD8
	mov r0, sl
	adds r0, #0xba
	strb r2, [r0]
	ldrb r0, [r1]
	cmp r0, #2
	bhi _080E2FD8
	ldr r2, _080E2FC8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E2FCC @ =0x00196225
	muls r0, r1, r0
	ldr r4, _080E2FD0 @ =0x3C6EF35F
	adds r0, r0, r4
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E2FD8
	adds r0, r7, #0
	adds r0, #0xb4
	ldr r4, [r0]
	adds r0, r7, #0
	movs r1, #0x12
	ldr r2, _080E2FD4 @ =sub_080E28CC
	bl ObjectSetFunc
	adds r0, r7, #0
	bl sub_0803D368
	adds r1, r7, #0
	adds r1, #0xac
	str r0, [r1]
	adds r4, #0xac
	str r0, [r4]
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r7, #8]
	movs r4, #0x9f
	adds r4, r4, r7
	mov sb, r4
	movs r0, #0x5a
	mov r8, r0
	mov r1, r8
	strb r1, [r4]
	movs r6, #8
	strh r6, [r7, #4]
	movs r5, #4
	str r5, [sp]
	adds r0, r7, #0
	movs r1, #0xc
	rsbs r1, r1, #0
	movs r2, #0x20
	rsbs r2, r2, #0
	movs r3, #4
	bl sub_0803E2B0
	mov r0, sl
	adds r0, #0xb4
	ldr r4, [r0]
	mov r0, sl
	movs r1, #0x12
	ldr r2, _080E2FD4 @ =sub_080E28CC
	bl ObjectSetFunc
	mov r0, sl
	bl sub_0803D368
	mov r1, sl
	adds r1, #0xac
	str r0, [r1]
	adds r4, #0xac
	str r0, [r4]
	mov r4, sl
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	adds r4, #0x9f
	mov r0, r8
	strb r0, [r4]
	mov r1, sl
	strh r6, [r1, #4]
	str r5, [sp]
	mov r0, sl
	movs r1, #0xc
	rsbs r1, r1, #0
	movs r2, #0x20
	rsbs r2, r2, #0
	movs r3, #4
	bl sub_0803E2B0
	adds r0, r7, #0
	adds r0, #0x83
	movs r2, #0x13
	strb r2, [r0]
	movs r1, #0x2d
	mov r0, sb
	strb r1, [r0]
	mov r0, sl
	adds r0, #0x83
	strb r2, [r0]
	strb r1, [r4]
	b _080E2FE6
	.align 2, 0
_080E2FC4: .4byte gUnk_08356A14
_080E2FC8: .4byte gRngVal
_080E2FCC: .4byte 0x00196225
_080E2FD0: .4byte 0x3C6EF35F
_080E2FD4: .4byte sub_080E28CC
_080E2FD8:
	adds r0, r7, #0
	bl sub_080E3D90
	b _080E2FE6
_080E2FE0:
	ldrh r0, [r7, #4]
	adds r0, #1
	strh r0, [r7, #4]
_080E2FE6:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E2FF8
sub_080E2FF8: @ 0x080E2FF8
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r5, #0
	strb r0, [r1]
	ldr r3, [r4, #0x44]
	ldr r1, _080E303C @ =0xFFFFFC00
	ands r3, r1
	adds r0, r4, #0
	adds r0, #0xa2
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	ble _080E3040
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E308A
	strh r2, [r1]
	b _080E308A
	.align 2, 0
_080E303C: .4byte 0xFFFFFC00
_080E3040:
	cmp r3, r0
	bge _080E3060
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E305C @ =0xFFFFFE00
	cmp r0, r2
	bge _080E308A
	strh r2, [r1]
	b _080E308A
	.align 2, 0
_080E305C: .4byte 0xFFFFFE00
_080E3060:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E307C
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E308A
	b _080E3088
_080E307C:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E308A
_080E3088:
	strh r5, [r1]
_080E308A:
	ldr r3, [r4, #0x40]
	ldr r2, _080E30B0 @ =0xFFFFFC00
	ands r3, r2
	adds r1, r4, #0
	adds r1, #0xa0
	movs r5, #0
	ldrsh r0, [r1, r5]
	lsls r0, r0, #8
	ands r0, r2
	adds r6, r1, #0
	cmp r3, r0
	bge _080E30B4
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	b _080E30EC
	.align 2, 0
_080E30B0: .4byte 0xFFFFFC00
_080E30B4:
	cmp r3, r0
	ble _080E3110
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E30EC
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E30E8 @ =0xFFFFFE00
	cmp r0, r2
	blt _080E30E2
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E313C
_080E30E2:
	strh r2, [r1]
	b _080E313C
	.align 2, 0
_080E30E8: .4byte 0xFFFFFE00
_080E30EC:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E30E2
	ldr r2, _080E310C @ =0xFFFFFE00
	cmp r0, r2
	bge _080E313C
	b _080E30E2
	.align 2, 0
_080E310C: .4byte 0xFFFFFE00
_080E3110:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E312C
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E313C
	b _080E3138
_080E312C:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E313C
_080E3138:
	movs r0, #0
	strh r0, [r1]
_080E313C:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E3152
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _080E3158
_080E3152:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_080E3158:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	bne _080E31AC
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0
	ldrsh r1, [r6, r0]
	ldr r0, [r4, #0x40]
	asrs r0, r0, #8
	subs r2, r1, r0
	cmp r2, #0
	blt _080E3182
	cmp r2, #0xf
	ble _080E3188
	b _080E31AC
_080E3182:
	subs r0, r0, r1
	cmp r0, #0xf
	bgt _080E31AC
_080E3188:
	adds r0, r4, #0
	adds r0, #0xa2
	movs r1, #0
	ldrsh r2, [r0, r1]
	ldr r0, [r4, #0x44]
	asrs r0, r0, #8
	subs r1, r2, r0
	cmp r1, #0
	blt _080E31A0
	cmp r1, #0xf
	ble _080E31A6
	b _080E31AC
_080E31A0:
	subs r0, r0, r2
	cmp r0, #0xf
	bgt _080E31AC
_080E31A6:
	adds r0, r4, #0
	bl sub_080DF894
_080E31AC:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E31CC
	movs r0, #0
	strb r0, [r5]
	subs r1, #0x12
	movs r2, #0x13
	rsbs r2, r2, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0x10
	bl sub_0803E2B0
_080E31CC:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080E31D4
sub_080E31D4: @ 0x080E31D4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E31F8
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	subs r0, #0x20
	b _080E31FE
_080E31F8:
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	adds r0, #0x20
_080E31FE:
	mov sl, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	subs r0, #0x10
	mov ip, r0
	movs r4, #0
	ldr r1, _080E3220 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080E3224 @ =gUnk_020229E0
	movs r7, #0x56
	adds r7, r7, r5
	mov r8, r7
	b _080E323C
	.align 2, 0
_080E3220: .4byte gUnk_020229D4
_080E3224: .4byte gUnk_020229E0
_080E3228:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080E3244
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080E323C:
	cmp r0, #0
	bne _080E3228
	orrs r2, r3
	str r2, [r1]
_080E3244:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, sl
	strh r0, [r1, #6]
	mov r7, ip
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xc8
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sb
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E32A8
sub_080E32A8: @ 0x080E32A8
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080E32DC @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080E32E0 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E32E4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080E32EC
	.align 2, 0
_080E32DC: .4byte ObjectMain
_080E32E0: .4byte ObjectDestroy
_080E32E4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080E32EC:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #9
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	movs r2, #0x80
	lsls r2, r2, #1
	orrs r0, r2
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #7
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0xc]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r0, [r4, #0x68]
	orrs r0, r2
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #0x5c]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080E336C @ =sub_0809F840
	str r0, [r4, #0x7c]
	movs r1, #4
	rsbs r1, r1, #0
	movs r2, #6
	rsbs r2, r2, #0
	movs r0, #6
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #8
	bl sub_0803E2B0
	adds r0, r4, #0
	bl ObjectInitSprite
	movs r0, #0x90
	lsls r0, r0, #2
	strh r0, [r4, #0x24]
	adds r0, r4, #0
	bl sub_080E3370
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080E336C: .4byte sub_0809F840

	thumb_func_start sub_080E3370
sub_080E3370: @ 0x080E3370
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E33A0 @ =sub_080E3DE4
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E3390
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080E3390:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r2, [r0]
	cmp r2, #0
	beq _080E33A4
	cmp r2, #1
	beq _080E33B0
	b _080E33C0
	.align 2, 0
_080E33A0: .4byte sub_080E3DE4
_080E33A4:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xb0
	lsls r0, r0, #3
	strh r0, [r1]
	b _080E33C0
_080E33B0:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xd0
	lsls r0, r0, #3
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x83
	strb r2, [r0]
_080E33C0:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E33D4
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
_080E33D4:
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080E33E4
sub_080E33E4: @ 0x080E33E4
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, _080E3414 @ =sub_080E34C4
	movs r2, #0xd4
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E3418
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080E3420
	.align 2, 0
_080E3414: .4byte sub_080E34C4
_080E3418:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080E3420:
	adds r4, r0, #0
	bl sub_0803E380
	movs r1, #0
	movs r0, #2
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	str r5, [r4, #0x70]
	strh r1, [r4, #4]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x60
	strh r1, [r0]
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _080E34BC @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r3, #1
	adds r0, r3, #0
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080E3470
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
_080E3470:
	adds r0, r4, #0
	adds r0, #0x63
	strb r3, [r0]
	ldr r0, [r4, #0x68]
	movs r1, #0x20
	orrs r0, r1
	subs r1, #0x28
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r1, _080E34C0 @ =0x12010400
	str r1, [r4, #8]
	ldr r0, [r5, #8]
	ands r0, r3
	cmp r0, #0
	beq _080E349E
	orrs r1, r3
_080E349E:
	str r1, [r4, #8]
	movs r2, #0x18
	rsbs r2, r2, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0x24
	bl sub_0803E2B0
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E34BC: .4byte gUnk_03000510
_080E34C0: .4byte 0x12010400

	thumb_func_start sub_080E34C4
sub_080E34C4: @ 0x080E34C4
	push {r4, r5, lr}
	ldr r2, _080E34E0 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E34E4
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080E34EC
	.align 2, 0
_080E34E0: .4byte gCurTask
_080E34E4:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080E34EC:
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	ldr r1, [r4, #8]
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080E3506
	ldr r0, [r2]
	bl TaskDestroy
	b _080E3602
_080E3506:
	ldr r0, [r5, #8]
	ands r0, r3
	cmp r0, #0
	beq _080E3514
	orrs r1, r3
	str r1, [r4, #8]
	b _080E3602
_080E3514:
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r3, r4, #0
	adds r3, #0x56
	strb r0, [r3]
	ldr r0, _080E3550 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	ldrb r1, [r3]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080E3554
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	bne _080E3554
	adds r0, r4, #0
	bl sub_0803D9A8
	b _080E3602
	.align 2, 0
_080E3550: .4byte gUnk_03000510
_080E3554:
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E3564
	ldr r0, [r4, #8]
	orrs r0, r1
	b _080E356C
_080E3564:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080E356C:
	str r0, [r4, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #0xd
	bne _080E3602
	ldr r1, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #0xb
	ands r0, r1
	cmp r0, #0
	beq _080E3590
	ldr r0, _080E358C @ =0xFFFBFFFF
	ands r1, r0
	str r1, [r4, #8]
	b _080E3602
	.align 2, 0
_080E358C: .4byte 0xFFFBFFFF
_080E3590:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080E3602
	movs r0, #0x90
	lsls r0, r0, #5
	ands r1, r0
	cmp r1, #0
	bne _080E3602
	ldrb r0, [r3]
	cmp r0, #0xff
	beq _080E35C8
	ldr r2, _080E35C0 @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r2, _080E35C4 @ =0x0000065E
	adds r0, r0, r2
	ldrb r1, [r0]
	b _080E35CA
	.align 2, 0
_080E35C0: .4byte gCurLevelInfo
_080E35C4: .4byte 0x0000065E
_080E35C8:
	movs r1, #0xff
_080E35CA:
	cmp r1, #0xff
	beq _080E3602
	lsls r3, r1, #6
	ldrb r0, [r4]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _080E3608 @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r2, [r4]
	adds r1, r1, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080E360C @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r4, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_080E3602:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E3608: .4byte gUnk_02022EB0
_080E360C: .4byte gUnk_02022F50

	thumb_func_start sub_080E3610
sub_080E3610: @ 0x080E3610
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	adds r5, r6, #0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov ip, r0
	movs r4, #0
	ldr r1, _080E3638 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _080E363C @ =gUnk_020229E0
	b _080E3654
	.align 2, 0
_080E3638: .4byte gUnk_020229D4
_080E363C: .4byte gUnk_020229E0
_080E3640:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080E365C
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080E3654:
	cmp r0, #0
	bne _080E3640
	orrs r2, r3
	str r2, [r1]
_080E365C:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r7
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	movs r0, #0x40
	strh r0, [r1, #6]
	mov r0, ip
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0x4d
	strb r0, [r1, #0xc]
	strb r4, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, r8
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	bl CreateObject
	str r0, [r6, #0x70]
	str r5, [r0, #0x70]
	adds r1, r5, #0
	adds r1, #0xb4
	str r0, [r1]
	adds r0, #0xb4
	str r5, [r0]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080E36C4
sub_080E36C4: @ 0x080E36C4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0x47
	bne _080E370A
	adds r2, r4, #0
	adds r2, #0x50
	movs r0, #0
	ldrsh r1, [r2, r0]
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	movs r1, #0xc8
	lsls r1, r1, #8
	cmp r0, r1
	bgt _080E372A
	str r1, [r4, #0x40]
	movs r0, #0
	strh r0, [r2]
	adds r0, r4, #0
	bl sub_080E3734
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #0x10]
	adds r0, r4, #0
	bl sub_080E3610
	b _080E372A
_080E370A:
	adds r2, r4, #0
	adds r2, #0x50
	movs r1, #0
	ldrsh r0, [r2, r1]
	ldr r1, [r4, #0x40]
	adds r1, r1, r0
	ldr r0, _080E3730 @ =0x00003FFF
	cmp r1, r0
	ble _080E372A
	adds r0, #1
	str r0, [r4, #0x40]
	movs r0, #0
	strh r0, [r2]
	adds r0, r4, #0
	bl sub_080E3734
_080E372A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3730: .4byte 0x00003FFF

	thumb_func_start sub_080E3734
sub_080E3734: @ 0x080E3734
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E3754 @ =sub_080E3758
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	movs r0, #0x1e
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3754: .4byte sub_080E3758

	thumb_func_start sub_080E3758
sub_080E3758: @ 0x080E3758
	push {lr}
	adds r2, r0, #0
	ldr r3, [r2, #8]
	movs r0, #4
	orrs r3, r0
	str r3, [r2, #8]
	adds r0, r2, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0x47
	bne _080E379C
	adds r0, r2, #0
	adds r0, #0xb4
	ldr r0, [r0]
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080E37BC
	ldr r0, _080E3798 @ =0xFFFFFDFF
	ands r3, r0
	str r3, [r2, #8]
	adds r1, r2, #0
	adds r1, #0x85
	movs r0, #3
	strb r0, [r1]
	adds r0, r2, #0
	bl sub_080DF894
	b _080E37BC
	.align 2, 0
_080E3798: .4byte 0xFFFFFDFF
_080E379C:
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E37BC
	ldr r0, _080E37C0 @ =0xFFFFFDFF
	ands r3, r0
	str r3, [r2, #8]
	adds r1, r2, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	bl sub_080DF894
_080E37BC:
	pop {r0}
	bx r0
	.align 2, 0
_080E37C0: .4byte 0xFFFFFDFF

	thumb_func_start sub_080E37C4
sub_080E37C4: @ 0x080E37C4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E37EC @ =sub_080DF4C0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E37EC: .4byte sub_080DF4C0

	thumb_func_start sub_080E37F0
sub_080E37F0: @ 0x080E37F0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E3820 @ =sub_080DFC3C
	movs r1, #2
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E3824
	movs r0, #0x14
	b _080E3826
	.align 2, 0
_080E3820: .4byte sub_080DFC3C
_080E3824:
	movs r0, #0x18
_080E3826:
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	ldr r0, [r4, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x68]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080E3844
sub_080E3844: @ 0x080E3844
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E3888 @ =sub_080DFDE0
	movs r1, #3
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x26
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x85
	strb r2, [r0]
	ldr r0, [r4, #0x68]
	subs r1, #5
	ands r0, r1
	str r0, [r4, #0x68]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3888: .4byte sub_080DFDE0

	thumb_func_start sub_080E388C
sub_080E388C: @ 0x080E388C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E38DC @ =sub_080DFE40
	movs r1, #4
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x85
	strb r2, [r0]
	adds r2, r4, #0
	adds r2, #0xb0
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	adds r0, r4, #0
	adds r0, #0xa0
	strh r1, [r0]
	ldr r0, [r2]
	ldrh r1, [r0, #8]
	adds r0, r4, #0
	adds r0, #0xa2
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E38DC: .4byte sub_080DFE40

	thumb_func_start sub_080E38E0
sub_080E38E0: @ 0x080E38E0
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080E3914 @ =sub_080E0318
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	adds r1, #0x1a
	strb r0, [r1]
	movs r0, #8
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3914: .4byte sub_080E0318

	thumb_func_start sub_080E3918
sub_080E3918: @ 0x080E3918
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E3968 @ =sub_080E0B44
	movs r1, #8
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x85
	strb r2, [r0]
	adds r2, r4, #0
	adds r2, #0xb0
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	adds r0, r4, #0
	adds r0, #0xa0
	strh r1, [r0]
	ldr r0, [r2]
	ldrh r1, [r0, #8]
	adds r0, r4, #0
	adds r0, #0xa2
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3968: .4byte sub_080E0B44

	thumb_func_start sub_080E396C
sub_080E396C: @ 0x080E396C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E39C0 @ =sub_080E0D40
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r3, r4, #0
	adds r3, #0xac
	str r0, [r3]
	ldr r1, [r4, #8]
	movs r2, #0x80
	lsls r2, r2, #1
	orrs r1, r2
	str r1, [r4, #8]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa0
	movs r2, #0
	strh r0, [r1]
	ldr r0, [r3]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r1, #2
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r2, [r0]
	movs r0, #8
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E39C0: .4byte sub_080E0D40

	thumb_func_start sub_080E39C4
sub_080E39C4: @ 0x080E39C4
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080E39F4 @ =sub_080E0FC4
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	movs r0, #8
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E39F4: .4byte sub_080E0FC4

	thumb_func_start sub_080E39F8
sub_080E39F8: @ 0x080E39F8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E3A34 @ =sub_080E3A4C
	movs r1, #0xa
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r2, [r0]
	subs r0, #1
	strb r2, [r0]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E3A38
	movs r0, #0x18
	b _080E3A3A
	.align 2, 0
_080E3A34: .4byte sub_080E3A4C
_080E3A38:
	movs r0, #0x30
_080E3A3A:
	strh r0, [r4, #4]
	ldr r0, [r4, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x68]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080E3A4C
sub_080E3A4C: @ 0x080E3A4C
	push {lr}
	adds r3, r0, #0
	movs r0, #0x9e
	adds r0, r0, r3
	mov ip, r0
	ldrb r0, [r0]
	lsls r2, r0, #0x18
	lsrs r0, r2, #0x18
	cmp r0, #7
	bhi _080E3A78
	ldr r1, _080E3A90 @ =gUnk_08356A04
	lsrs r0, r2, #0x19
	adds r0, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	adds r1, r3, #0
	adds r1, #0x55
	strb r0, [r1]
	mov r1, ip
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080E3A78:
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E3A8A
	adds r0, r3, #0
	bl sub_080E3A94
_080E3A8A:
	pop {r0}
	bx r0
	.align 2, 0
_080E3A90: .4byte gUnk_08356A04

	thumb_func_start sub_080E3A94
sub_080E3A94: @ 0x080E3A94
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E3ADC @ =sub_080E1604
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0xb0
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	adds r0, r4, #0
	adds r0, #0xa0
	strh r1, [r0]
	ldr r0, [r2]
	ldrh r1, [r0, #8]
	adds r0, r4, #0
	adds r0, #0xa2
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3ADC: .4byte sub_080E1604

	thumb_func_start sub_080E3AE0
sub_080E3AE0: @ 0x080E3AE0
	push {r4, lr}
	adds r2, r0, #0
	adds r0, #0xac
	ldr r3, [r0]
	ldr r1, [r2, #0xc]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _080E3AFE
	movs r4, #0x88
	lsls r4, r4, #1
	adds r0, r3, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080E3B0E
_080E3AFE:
	movs r0, #0x81
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r2, #0xc]
	adds r0, r2, #0
	bl sub_080E25B4
	b _080E3B26
_080E3B0E:
	adds r0, r2, #0
	adds r0, #0x80
	ldrh r0, [r0]
	strh r0, [r2, #4]
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E3B26
	adds r0, r2, #0
	bl sub_080E3B2C
_080E3B26:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080E3B2C
sub_080E3B2C: @ 0x080E3B2C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xac
	ldr r0, [r0]
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r1, _080E3B90 @ =gUnk_083569DC
	str r1, [r0]
	ldr r2, _080E3B94 @ =sub_080E1CCC
	adds r0, r4, #0
	movs r1, #0xf
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _080E3B98 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0xf0
	lsls r1, r1, #7
	adds r0, r0, r1
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa0
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #8]
	adds r0, r4, #0
	adds r0, #0xa2
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3B90: .4byte gUnk_083569DC
_080E3B94: .4byte sub_080E1CCC
_080E3B98: .4byte gCurLevelInfo

	thumb_func_start sub_080E3B9C
sub_080E3B9C: @ 0x080E3B9C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E3BCC @ =sub_080E1EC0
	movs r1, #0x10
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #8
	strh r0, [r4, #4]
	adds r4, #0x9e
	strb r2, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3BCC: .4byte sub_080E1EC0

	thumb_func_start sub_080E3BD0
sub_080E3BD0: @ 0x080E3BD0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E3C08 @ =sub_080E2024
	movs r1, #0x10
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #8
	strh r0, [r4, #4]
	adds r4, #0x9e
	strb r2, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3C08: .4byte sub_080E2024

	thumb_func_start sub_080E3C0C
sub_080E3C0C: @ 0x080E3C0C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xac
	ldr r0, [r0]
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r1, _080E3C64 @ =gUnk_083569EC
	str r1, [r0]
	ldr r2, _080E3C68 @ =sub_080E20B4
	adds r0, r4, #0
	movs r1, #0x11
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0xb0
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	adds r0, r4, #0
	adds r0, #0xa0
	strh r1, [r0]
	ldr r0, [r2]
	ldrh r1, [r0, #8]
	adds r0, r4, #0
	adds r0, #0xa2
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3C64: .4byte gUnk_083569EC
_080E3C68: .4byte sub_080E20B4

	thumb_func_start sub_080E3C6C
sub_080E3C6C: @ 0x080E3C6C
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r2, _080E3CC0 @ =sub_080E22EC
	movs r1, #0xe
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0xb0
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	adds r0, r4, #0
	adds r0, #0xa0
	strh r1, [r0]
	ldr r0, [r2]
	ldrh r0, [r0, #8]
	adds r1, r4, #0
	adds r1, #0xa2
	strh r0, [r1]
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r2, #0xc
	rsbs r2, r2, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #8
	bl sub_0803E2B0
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3CC0: .4byte sub_080E22EC

	thumb_func_start sub_080E3CC4
sub_080E3CC4: @ 0x080E3CC4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E3D0C @ =sub_080E23B8
	movs r1, #0x11
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0xb0
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	adds r0, r4, #0
	adds r0, #0xa0
	strh r1, [r0]
	ldr r0, [r2]
	ldrh r1, [r0, #8]
	adds r0, r4, #0
	adds r0, #0xa2
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3D0C: .4byte sub_080E23B8

	thumb_func_start sub_080E3D10
sub_080E3D10: @ 0x080E3D10
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E3D30 @ =sub_080E2834
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0xb8
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	adds r4, #0xba
	strb r2, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3D30: .4byte sub_080E2834

	thumb_func_start sub_080E3D34
sub_080E3D34: @ 0x080E3D34
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, #0xb4
	ldr r5, [r0]
	ldr r2, _080E3D8C @ =sub_080E28CC
	adds r0, r4, #0
	movs r1, #0x12
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	adds r5, #0xac
	str r0, [r5]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0x5a
	strb r0, [r1]
	movs r0, #8
	strh r0, [r4, #4]
	movs r1, #0xc
	rsbs r1, r1, #0
	movs r2, #0x20
	rsbs r2, r2, #0
	movs r0, #4
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #4
	bl sub_0803E2B0
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E3D8C: .4byte sub_080E28CC

	thumb_func_start sub_080E3D90
sub_080E3D90: @ 0x080E3D90
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E3DE0 @ =sub_080E2FF8
	movs r1, #0x15
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0xb8
	strb r2, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0xb0
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	adds r0, r4, #0
	adds r0, #0xa0
	strh r1, [r0]
	ldr r0, [r2]
	ldrh r1, [r0, #8]
	adds r0, r4, #0
	adds r0, #0xa2
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3DE0: .4byte sub_080E2FF8

	thumb_func_start sub_080E3DE4
sub_080E3DE4: @ 0x080E3DE4
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #1]
	cmp r0, #8
	bne _080E3DF4
	adds r0, r1, #0
	bl sub_080E3DF8
_080E3DF4:
	pop {r0}
	bx r0

	thumb_func_start sub_080E3DF8
sub_080E3DF8: @ 0x080E3DF8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E3E18 @ =sub_080E3E24
	movs r1, #1
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	ldr r1, _080E3E1C @ =0xFFFFF7FF
	ands r0, r1
	ldr r1, _080E3E20 @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E3E18: .4byte sub_080E3E24
_080E3E1C: .4byte 0xFFFFF7FF
_080E3E20: .4byte 0xFFFFFDFF

	thumb_func_start sub_080E3E24
sub_080E3E24: @ 0x080E3E24
	ldr r1, [r0, #8]
	movs r2, #4
	orrs r1, r2
	str r1, [r0, #8]
	bx lr
	.align 2, 0

	thumb_func_start sub_080E3E30
sub_080E3E30: @ 0x080E3E30
	push {r4, lr}
	adds r4, r0, #0
	ldrh r1, [r4, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E3E4A
	ldrh r0, [r4, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080E3E52
_080E3E4A:
	ldrh r1, [r4, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080E3E52:
	adds r0, #0xb4
	ldr r2, [r0]
	cmp r2, #0
	beq _080E3E6C
	adds r3, r2, #0
	adds r3, #0x87
	movs r0, #0
	movs r1, #1
	strb r1, [r3]
	adds r1, r2, #0
	adds r1, #0xb4
	str r0, [r1]
	str r0, [r2, #0x70]
_080E3E6C:
	adds r0, r4, #0
	bl ObjectDestroy
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start CreateGobbler
CreateGobbler: @ 0x080E3E78
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080E3EAC @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080E3EB0 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xc4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E3EB4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080E3EBC
	.align 2, 0
_080E3EAC: .4byte ObjectMain
_080E3EB0: .4byte ObjectDestroy
_080E3EB4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080E3EBC:
	adds r4, r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #0xc]
	movs r2, #1
	orrs r0, r2
	movs r6, #4
	orrs r0, r6
	str r0, [r4, #0xc]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0x12
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	orrs r0, r2
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xb4
	movs r1, #0
	str r1, [r0]
	adds r0, #4
	str r1, [r0]
	adds r0, #4
	str r1, [r0]
	adds r0, #4
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x5c]
	subs r1, #0x48
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	ldr r1, _080E3FE0 @ =0x001080A0
	orrs r0, r1
	str r0, [r4, #0x5c]
	movs r1, #0x19
	rsbs r1, r1, #0
	subs r2, #0xb
	movs r0, #0xe
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0x17
	bl sub_0803E2B0
	movs r1, #0xf
	rsbs r1, r1, #0
	movs r2, #7
	rsbs r2, r2, #0
	movs r0, #0xa
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0xc
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	ldr r2, _080E3FE4 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080E3FE8 @ =0x0000065E
	adds r0, r0, r1
	ldrb r5, [r0]
	adds r0, r5, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0
	bl sub_08002A44
	adds r0, r5, #0
	movs r1, #0
	bl sub_08002A1C
	ldr r2, _080E3FEC @ =gUnk_02020EE0
	ldr r0, _080E3FF0 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E3FB6
	ldr r0, _080E3FF4 @ =gUnk_0203AD20
	ldr r0, [r0]
	ands r0, r6
	cmp r0, #0
	bne _080E3FB6
	adds r0, r5, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080E3FB6:
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080E3FF8 @ =sub_080E7C54
	str r0, [r4, #0x7c]
	adds r0, r4, #0
	bl sub_080E79D4
	adds r0, r4, #0
	bl sub_080E5E58
	adds r0, r4, #0
	bl sub_080E6470
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080E3FE0: .4byte 0x001080A0
_080E3FE4: .4byte gCurLevelInfo
_080E3FE8: .4byte 0x0000065E
_080E3FEC: .4byte gUnk_02020EE0
_080E3FF0: .4byte gUnk_0203AD3C
_080E3FF4: .4byte gUnk_0203AD20
_080E3FF8: .4byte sub_080E7C54

	thumb_func_start sub_080E3FFC
sub_080E3FFC: @ 0x080E3FFC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r5, r0, #0
	bl sub_0803D368
	adds r6, r0, #0
	adds r7, r5, #0
	adds r7, #0xac
	str r6, [r7]
	ldr r0, [r6, #0xc]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	beq _080E4022
	b _080E41AA
_080E4022:
	adds r0, r5, #0
	adds r0, #0x60
	adds r2, r6, #0
	adds r2, #0x60
	ldrh r1, [r0]
	mov sb, r0
	ldrh r2, [r2]
	cmp r1, r2
	beq _080E4036
	b _080E41AA
_080E4036:
	ldr r1, [r5, #0x40]
	ldr r2, [r5, #0x44]
	movs r0, #0xb0
	adds r0, r0, r5
	mov r8, r0
	ldr r4, [r0]
	movs r0, #0x1a
	ldrsh r3, [r4, r0]
	mov ip, r3
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	adds r0, r6, #0
	mov r3, ip
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080E4066
	b _080E41AA
_080E4066:
	ldr r4, _080E41B8 @ =gCurLevelInfo
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	movs r6, #0xcd
	lsls r6, r6, #3
	muls r0, r6, r0
	adds r1, r4, #0
	adds r1, #0xa0
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa4
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r6, r0
	adds r1, r4, #0
	adds r1, #0xa4
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa6
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r6, r0
	adds r1, r4, #0
	adds r1, #0xa8
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r6, r0
	adds r1, r4, #0
	adds r1, #0xac
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xaa
	strh r0, [r1]
	adds r0, r5, #0
	bl sub_080E43B4
	movs r0, #0x5a
	strh r0, [r5, #4]
	adds r0, r5, #0
	bl sub_08034E14
	adds r1, r0, #0
	cmp r1, #0
	beq _080E40E6
	movs r0, #0
	strb r0, [r1, #9]
_080E40E6:
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r3, [r0]
	adds r1, r3, #0
	subs r1, #0x38
	subs r0, #0x2c
	ldrb r0, [r0]
	muls r0, r6, r0
	adds r0, r0, r4
	ldr r2, _080E41BC @ =0x0000065E
	adds r0, r0, r2
	ldrb r5, [r0]
	lsls r2, r1, #0x10
	asrs r1, r2, #0x10
	cmp r1, #0
	blt _080E41AA
	ldr r0, _080E41C0 @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080E41AA
	mov r1, r8
	ldr r0, [r1]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080E41AA
	adds r0, r3, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r6, r2, #0
	cmp r0, #0xf
	bls _080E4168
	movs r4, #1
_080E4130:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r5, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _080E4130
	adds r0, r5, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0
	bl sub_08002A44
_080E4168:
	ldr r1, _080E41C0 @ =gUnk_08352D80
	asrs r0, r6, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r5, #0
	bl sub_08002A1C
	ldr r2, _080E41C4 @ =gUnk_02020EE0
	ldr r0, _080E41C8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, sb
	ldrh r2, [r2]
	cmp r0, r2
	bne _080E41AA
	ldr r0, _080E41CC @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080E41AA
	adds r0, r5, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080E41AA:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E41B8: .4byte gCurLevelInfo
_080E41BC: .4byte 0x0000065E
_080E41C0: .4byte gUnk_08352D80
_080E41C4: .4byte gUnk_02020EE0
_080E41C8: .4byte gUnk_0203AD3C
_080E41CC: .4byte gUnk_0203AD20

	thumb_func_start sub_080E41D0
sub_080E41D0: @ 0x080E41D0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	movs r0, #3
	mov r8, r0
	movs r7, #2
	movs r1, #2
	mov sb, r1
	movs r2, #4
	mov sl, r2
	adds r5, r4, #0
	adds r0, r4, #0
	bl sub_0803D5CC
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r0, #0x44]
	movs r0, #0xe0
	lsls r0, r0, #8
	cmp r1, r0
	bgt _080E4218
	movs r3, #4
	mov r8, r3
	movs r7, #4
	movs r0, #8
	mov sb, r0
	adds r0, r4, #0
	adds r0, #0xc0
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
_080E4218:
	adds r0, r4, #0
	adds r0, #0xc0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E4224
	b _080E4386
_080E4224:
	adds r0, r4, #0
	adds r0, #0xc1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E4230
	b _080E4396
_080E4230:
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r0, [r0]
	cmp r0, #0
	beq _080E426C
	adds r0, r4, #0
	adds r0, #0xb8
	ldr r0, [r0]
	cmp r0, #0
	beq _080E425A
	adds r0, r4, #0
	adds r0, #0xbc
	ldr r0, [r0]
	cmp r0, #0
	beq _080E425A
	mov r1, r8
	adds r0, r7, r1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	movs r2, #0
	mov r8, r2
_080E425A:
	adds r0, r5, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r6, r5, #0
	adds r6, #0xb8
	adds r2, r5, #0
	adds r2, #0xbc
	cmp r0, #0
	bne _080E428E
_080E426C:
	adds r0, r5, #0
	adds r0, #0xb8
	ldr r1, [r0]
	adds r6, r0, #0
	adds r2, r5, #0
	adds r2, #0xbc
	cmp r1, #0
	bne _080E428E
	ldr r0, [r2]
	cmp r0, #0
	bne _080E428E
	mov r3, r8
	adds r0, r3, r7
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	b _080E42C8
_080E428E:
	movs r3, #0
	adds r0, r5, #0
	adds r0, #0xb4
	ldr r0, [r0]
	cmp r0, #0
	beq _080E42A4
	ldr r1, [r0, #0x78]
	ldr r0, _080E4328 @ =sub_080E6784
	cmp r1, r0
	bne _080E42A4
	movs r3, #1
_080E42A4:
	ldr r0, [r6]
	cmp r0, #0
	beq _080E42B4
	ldr r1, [r0, #0x78]
	ldr r0, _080E4328 @ =sub_080E6784
	cmp r1, r0
	bne _080E42B4
	movs r3, #1
_080E42B4:
	ldr r0, [r2]
	cmp r0, #0
	beq _080E42C4
	ldr r1, [r0, #0x78]
	ldr r0, _080E4328 @ =sub_080E6784
	cmp r1, r0
	bne _080E42C4
	movs r3, #1
_080E42C4:
	cmp r3, #0
	bne _080E42CA
_080E42C8:
	movs r7, #0
_080E42CA:
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080E432C @ =gUnk_08351530
	ldr r0, _080E4330 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080E42FE
	adds r0, r5, #0
	adds r0, #0xc0
	ldrh r0, [r0]
	cmp r0, #0
	bne _080E42FE
	adds r1, r5, #0
	adds r1, #0xc2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080E42FE:
	ldr r2, _080E4334 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E4338 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E433C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	mov r2, r8
	subs r0, r0, r2
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080E4340
	adds r0, r4, #0
	bl sub_080E7B0C
	b _080E43A4
	.align 2, 0
_080E4328: .4byte sub_080E6784
_080E432C: .4byte gUnk_08351530
_080E4330: .4byte gUnk_0203AD30
_080E4334: .4byte gRngVal
_080E4338: .4byte 0x00196225
_080E433C: .4byte 0x3C6EF35F
_080E4340:
	subs r0, r1, r7
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080E4352
	adds r0, r4, #0
	bl sub_080E7B7C
	b _080E43A4
_080E4352:
	mov r3, sb
	subs r0, r1, r3
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080E4366
	adds r0, r4, #0
	bl sub_080E7BA4
	b _080E43A4
_080E4366:
	mov r2, sl
	subs r0, r1, r2
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080E437A
	adds r0, r4, #0
	bl sub_080E4BD0
	b _080E43A4
_080E437A:
	mov r3, sl
	subs r0, r1, r3
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080E438E
_080E4386:
	adds r0, r4, #0
	bl sub_080E4E6C
	b _080E43A4
_080E438E:
	subs r0, r1, #4
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _080E439E
_080E4396:
	adds r0, r4, #0
	bl sub_080E53E8
	b _080E43A4
_080E439E:
	adds r0, r4, #0
	bl sub_080E43B4
_080E43A4:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E43B4
sub_080E43B4: @ 0x080E43B4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0x80
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bgt _080E43CC
	adds r0, r4, #0
	bl sub_080E7C00
	b _080E4476
_080E43CC:
	ldr r2, _080E4428 @ =sub_080E4488
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	ldr r1, _080E442C @ =0xFFFFFDFF
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E4410
	ldr r1, _080E4430 @ =gUnk_08351530
	ldr r0, _080E4434 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r2, #0
	ldrsh r1, [r5, r2]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080E4444
_080E4410:
	ldr r2, _080E4438 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E443C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E4440 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	adds r0, #0x18
	b _080E445A
	.align 2, 0
_080E4428: .4byte sub_080E4488
_080E442C: .4byte 0xFFFFFDFF
_080E4430: .4byte gUnk_08351530
_080E4434: .4byte gUnk_0203AD30
_080E4438: .4byte gRngVal
_080E443C: .4byte 0x00196225
_080E4440: .4byte 0x3C6EF35F
_080E4444:
	ldr r2, _080E447C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E4480 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E4484 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	adds r0, #0x40
_080E445A:
	strh r0, [r4, #4]
	ldr r1, [r2]
	ldr r0, _080E4480 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E4484 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #4
	ldrsh r2, [r4, r1]
	lsrs r0, r0, #0x10
	movs r1, #0x1f
	ands r0, r1
	adds r2, r2, r0
	strh r2, [r4, #4]
_080E4476:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E447C: .4byte gRngVal
_080E4480: .4byte 0x00196225
_080E4484: .4byte 0x3C6EF35F

	thumb_func_start sub_080E4488
sub_080E4488: @ 0x080E4488
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	mov ip, r3
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080E44AA
	adds r0, r2, #0
	adds r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E44BA
	b _080E44B6
_080E44AA:
	adds r0, r2, #0
	subs r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E44BA
_080E44B6:
	movs r0, #0
	strh r0, [r1]
_080E44BA:
	adds r0, r3, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	bne _080E44E8
	ldr r2, _080E44E4 @ =gUnk_08356B48
	ldrh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	movs r1, #3
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r1, [r0]
	adds r0, r3, #0
	adds r0, #0x52
	strh r1, [r0]
	adds r5, r0, #0
	b _080E4534
	.align 2, 0
_080E44E4: .4byte gUnk_08356B48
_080E44E8:
	ldrb r4, [r3, #1]
	adds r5, r3, #0
	adds r5, #0x52
	cmp r4, #1
	bne _080E4534
	ldr r2, _080E4524 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E4528 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E452C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	ands r1, r4
	ldr r2, [r3, #0x44]
	movs r0, #0xf0
	lsls r0, r0, #8
	cmp r2, r0
	bne _080E4510
	movs r1, #0
_080E4510:
	movs r0, #0x8c
	lsls r0, r0, #9
	cmp r2, r0
	bne _080E451A
	movs r1, #1
_080E451A:
	cmp r1, #0
	beq _080E4530
	movs r0, #0x40
	b _080E4532
	.align 2, 0
_080E4524: .4byte gRngVal
_080E4528: .4byte 0x00196225
_080E452C: .4byte 0x3C6EF35F
_080E4530:
	ldr r0, _080E4590 @ =0x0000FFC0
_080E4532:
	strh r0, [r5]
_080E4534:
	adds r2, r5, #0
	movs r4, #0
	ldrsh r1, [r2, r4]
	ldr r0, [r3, #0x44]
	subs r0, r0, r1
	movs r1, #0xf0
	lsls r1, r1, #8
	cmp r0, r1
	bgt _080E454C
	movs r0, #0
	strh r0, [r2]
	str r1, [r3, #0x44]
_080E454C:
	movs r1, #0
	ldrsh r0, [r2, r1]
	ldr r1, [r3, #0x44]
	subs r1, r1, r0
	ldr r0, _080E4594 @ =0x000117FF
	cmp r1, r0
	ble _080E4564
	movs r0, #0
	strh r0, [r2]
	movs r0, #0x8c
	lsls r0, r0, #9
	str r0, [r3, #0x44]
_080E4564:
	ldrb r2, [r6]
	cmp r2, #1
	bne _080E4598
	ldr r1, [r3, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080E4584
	ldrb r0, [r3, #1]
	cmp r0, #0x19
	bls _080E45B6
	mov r0, ip
	adds r0, #0xc0
	ldrh r0, [r0]
	cmp r0, #0
	beq _080E45B6
_080E4584:
	eors r1, r2
	str r1, [r3, #8]
	movs r0, #0
	strb r0, [r6]
	b _080E45B6
	.align 2, 0
_080E4590: .4byte 0x0000FFC0
_080E4594: .4byte 0x000117FF
_080E4598:
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _080E45B6
	strh r0, [r5]
	adds r0, r3, #0
	bl sub_080E41D0
_080E45B6:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080E45BC
sub_080E45BC: @ 0x080E45BC
	push {r4, r5, lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x52
	ldrh r3, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080E45DC
	adds r0, r3, #0
	adds r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E45EC
	b _080E45E8
_080E45DC:
	adds r0, r3, #0
	subs r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E45EC
_080E45E8:
	movs r0, #0
	strh r0, [r1]
_080E45EC:
	adds r0, r2, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #1
	bne _080E46DA
	ldrb r0, [r2, #1]
	cmp r0, #7
	bhi _080E462C
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r3, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _080E461A
	adds r0, r3, #0
	adds r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E46C6
	b _080E4626
_080E461A:
	adds r0, r3, #0
	subs r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E46C6
_080E4626:
	movs r0, #0
	strh r0, [r1]
	b _080E46C6
_080E462C:
	cmp r0, #0x17
	bhi _080E467C
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E465C
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _080E4658 @ =0xFFFFFF00
	cmp r0, r3
	blt _080E46C4
	movs r3, #0x80
	lsls r3, r3, #1
	cmp r0, r3
	ble _080E46C6
	b _080E46C4
	.align 2, 0
_080E4658: .4byte 0xFFFFFF00
_080E465C:
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #1
	cmp r0, r3
	bgt _080E46C4
	ldr r3, _080E4678 @ =0xFFFFFF00
	b _080E46C0
	.align 2, 0
_080E4678: .4byte 0xFFFFFF00
_080E467C:
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E46A8
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _080E46A4 @ =0xFFFFFE00
	cmp r0, r3
	blt _080E46C4
	movs r3, #0x80
	lsls r3, r3, #2
	cmp r0, r3
	ble _080E46C6
	b _080E46C4
	.align 2, 0
_080E46A4: .4byte 0xFFFFFE00
_080E46A8:
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #2
	cmp r0, r3
	bgt _080E46C4
	ldr r3, _080E4708 @ =0xFFFFFE00
_080E46C0:
	cmp r0, r3
	bge _080E46C6
_080E46C4:
	strh r3, [r1]
_080E46C6:
	ldr r1, [r2, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080E46DA
	movs r0, #1
	eors r1, r0
	str r1, [r2, #8]
	movs r0, #0
	strb r0, [r4]
_080E46DA:
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E4778
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E4718
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	ldr r0, _080E4708 @ =0xFFFFFE00
	cmp r3, r0
	bge _080E470C
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r1]
	b _080E4736
	.align 2, 0
_080E4708: .4byte 0xFFFFFE00
_080E470C:
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r3, r0
	ble _080E4736
	strh r0, [r1]
	b _080E4736
_080E4718:
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #2
	cmp r0, r3
	bgt _080E4734
	ldr r3, _080E4758 @ =0xFFFFFE00
	cmp r0, r3
	bge _080E4736
_080E4734:
	strh r3, [r1]
_080E4736:
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E4760
	ldr r0, [r2, #0x40]
	ldr r1, _080E475C @ =0xFFFFD800
	cmp r0, r1
	bgt _080E4778
	str r1, [r2, #0x40]
	movs r0, #0x80
	lsls r0, r0, #9
	str r0, [r2, #0x44]
	adds r0, r2, #0
	bl sub_080E7BCC
	b _080E4778
	.align 2, 0
_080E4758: .4byte 0xFFFFFE00
_080E475C: .4byte 0xFFFFD800
_080E4760:
	ldr r1, [r2, #0x40]
	ldr r0, _080E4780 @ =0x000127FF
	cmp r1, r0
	ble _080E4778
	adds r0, #1
	str r0, [r2, #0x40]
	movs r0, #0x80
	lsls r0, r0, #9
	str r0, [r2, #0x44]
	adds r0, r2, #0
	bl sub_080E7BCC
_080E4778:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E4780: .4byte 0x000127FF

	thumb_func_start sub_080E4784
sub_080E4784: @ 0x080E4784
	push {r4, r5, lr}
	mov ip, r0
	mov r1, ip
	adds r1, #0x9f
	ldrb r0, [r1]
	cmp r0, #0
	bne _080E4858
	mov r2, ip
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0xe
	strh r0, [r2]
	lsls r0, r0, #0x10
	ldr r1, _080E47D8 @ =0xFE800000
	cmp r0, r1
	bge _080E47A8
	ldr r0, _080E47DC @ =0x0000FE80
	strh r0, [r2]
_080E47A8:
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E47E4
	mov r2, ip
	adds r2, #0x50
	ldr r3, _080E47E0 @ =0xFFFFFC00
	adds r1, r3, #0
	ldrh r3, [r2]
	adds r0, r1, r3
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r0, r1
	blt _080E4806
	movs r1, #0x80
	lsls r1, r1, #3
	cmp r0, r1
	ble _080E4808
	b _080E4806
	.align 2, 0
_080E47D8: .4byte 0xFE800000
_080E47DC: .4byte 0x0000FE80
_080E47E0: .4byte 0xFFFFFC00
_080E47E4:
	mov r2, ip
	adds r2, #0x50
	movs r0, #0x80
	lsls r0, r0, #3
	adds r1, r0, #0
	ldrh r3, [r2]
	adds r0, r1, r3
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r0, r1
	bgt _080E4806
	ldr r1, _080E482C @ =0xFFFFFC00
	cmp r0, r1
	bge _080E4808
_080E4806:
	strh r1, [r2]
_080E4808:
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E4834
	mov r2, ip
	ldr r0, [r2, #0x40]
	ldr r1, _080E4830 @ =0xFFFFD800
	cmp r0, r1
	ble _080E4820
	b _080E4964
_080E4820:
	str r1, [r2, #0x40]
	movs r0, #0x80
	lsls r0, r0, #9
	str r0, [r2, #0x44]
	b _080E484A
	.align 2, 0
_080E482C: .4byte 0xFFFFFC00
_080E4830: .4byte 0xFFFFD800
_080E4834:
	mov r3, ip
	ldr r1, [r3, #0x40]
	ldr r0, _080E4854 @ =0x000127FF
	cmp r1, r0
	bgt _080E4840
	b _080E4964
_080E4840:
	adds r0, #1
	str r0, [r3, #0x40]
	movs r0, #0x80
	lsls r0, r0, #9
	str r0, [r3, #0x44]
_080E484A:
	mov r0, ip
	bl sub_080E498C
	b _080E4964
	.align 2, 0
_080E4854: .4byte 0x000127FF
_080E4858:
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080E4864
	b _080E4964
_080E4864:
	mov r0, ip
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r0, #0x44]
	movs r0, #0xe0
	lsls r0, r0, #8
	cmp r1, r0
	ble _080E48C0
	ldr r5, _080E48AC @ =gRngVal
	ldr r0, [r5]
	ldr r4, _080E48B0 @ =0x00196225
	adds r2, r0, #0
	muls r2, r4, r2
	ldr r3, _080E48B4 @ =0x3C6EF35F
	adds r2, r2, r3
	lsrs r0, r2, #0x10
	movs r1, #0x1f
	ands r0, r1
	movs r1, #0xf0
	lsls r1, r1, #8
	adds r0, r0, r1
	mov r1, ip
	str r0, [r1, #0x44]
	adds r0, r2, #0
	muls r0, r4, r0
	adds r0, r0, r3
	str r0, [r5]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E48B8
	mov r0, ip
	bl sub_080E4FD8
	b _080E4964
	.align 2, 0
_080E48AC: .4byte gRngVal
_080E48B0: .4byte 0x00196225
_080E48B4: .4byte 0x3C6EF35F
_080E48B8:
	mov r0, ip
	bl sub_080E5554
	b _080E4964
_080E48C0:
	ldr r2, _080E48E4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E48E8 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080E48EC @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E48F0
	mov r1, ip
	adds r1, #0x52
	movs r0, #0xa0
	lsls r0, r0, #2
	b _080E48F8
	.align 2, 0
_080E48E4: .4byte gRngVal
_080E48E8: .4byte 0x00196225
_080E48EC: .4byte 0x3C6EF35F
_080E48F0:
	mov r1, ip
	adds r1, #0x52
	movs r0, #0xb8
	lsls r0, r0, #2
_080E48F8:
	strh r0, [r1]
	ldr r1, _080E496C @ =gUnk_02020EE0
	ldr r0, _080E4970 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	mov r1, ip
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E4964
	mov r1, ip
	ldrb r0, [r1]
	cmp r0, #0
	bne _080E4928
	mov r0, ip
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E4964
_080E4928:
	ldr r1, _080E4974 @ =gUnk_08D60FA4
	ldr r4, _080E4978 @ =gSongTable
	ldr r2, _080E497C @ =0x00000C2C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E494C
	ldr r1, _080E4980 @ =0x00000C28
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E4964
_080E494C:
	cmp r3, #0
	beq _080E495E
	ldr r0, _080E4984 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E4964
_080E495E:
	ldr r0, _080E4988 @ =0x00000185
	bl m4aSongNumStart
_080E4964:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E496C: .4byte gUnk_02020EE0
_080E4970: .4byte gUnk_0203AD3C
_080E4974: .4byte gUnk_08D60FA4
_080E4978: .4byte gSongTable
_080E497C: .4byte 0x00000C2C
_080E4980: .4byte 0x00000C28
_080E4984: .4byte gUnk_0203AD10
_080E4988: .4byte 0x00000185

	thumb_func_start sub_080E498C
sub_080E498C: @ 0x080E498C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E4A44 @ =sub_080E4A6C
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	movs r1, #1
	eors r0, r1
	str r0, [r4, #8]
	ldr r2, _080E4A48 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E4A4C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E4A50 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0x1f
	ands r0, r1
	movs r1, #0xf0
	lsls r1, r1, #8
	adds r0, r0, r1
	str r0, [r4, #0x44]
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0x12
	strb r0, [r1]
	ldr r1, _080E4A54 @ =gUnk_02020EE0
	ldr r0, _080E4A58 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E4A3E
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E4A00
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E4A3E
_080E4A00:
	ldr r1, _080E4A5C @ =gUnk_08D60FA4
	ldr r4, _080E4A60 @ =gSongTable
	ldr r2, _080E4A64 @ =0x00000404
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E4A26
	movs r1, #0x80
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E4A3E
_080E4A26:
	cmp r3, #0
	beq _080E4A38
	ldr r0, _080E4A68 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E4A3E
_080E4A38:
	movs r0, #0x80
	bl m4aSongNumStart
_080E4A3E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E4A44: .4byte sub_080E4A6C
_080E4A48: .4byte gRngVal
_080E4A4C: .4byte 0x00196225
_080E4A50: .4byte 0x3C6EF35F
_080E4A54: .4byte gUnk_02020EE0
_080E4A58: .4byte gUnk_0203AD3C
_080E4A5C: .4byte gUnk_08D60FA4
_080E4A60: .4byte gSongTable
_080E4A64: .4byte 0x00000404
_080E4A68: .4byte gUnk_0203AD10

	thumb_func_start sub_080E4A6C
sub_080E4A6C: @ 0x080E4A6C
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	cmp r0, #0
	beq _080E4A7C
	b _080E4BC4
_080E4A7C:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E4AB4
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080E4AA4 @ =0xFFFFFE00
	cmp r2, r0
	bge _080E4AA8
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r1]
	b _080E4AD2
	.align 2, 0
_080E4AA4: .4byte 0xFFFFFE00
_080E4AA8:
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r2, r0
	ble _080E4AD2
	strh r0, [r1]
	b _080E4AD2
_080E4AB4:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E4AD0
	ldr r2, _080E4B20 @ =0xFFFFFE00
	cmp r0, r2
	bge _080E4AD2
_080E4AD0:
	strh r2, [r1]
_080E4AD2:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E4B28
	adds r0, r4, #0
	adds r0, #0xa8
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r0, #8
	lsls r0, r0, #8
	ldr r1, [r4, #0x40]
	cmp r1, r0
	bge _080E4BC8
	adds r0, r4, #0
	bl sub_080E43B4
	movs r1, #0
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	cmp r0, #0
	beq _080E4B10
	ldr r2, _080E4B24 @ =0x00000103
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0x12
	beq _080E4B0E
	cmp r0, #0x1a
	bne _080E4B10
_080E4B0E:
	movs r1, #1
_080E4B10:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E4B6A
	cmp r1, #0
	bne _080E4B6A
	b _080E4B90
	.align 2, 0
_080E4B20: .4byte 0xFFFFFE00
_080E4B24: .4byte 0x00000103
_080E4B28:
	adds r0, r4, #0
	adds r0, #0xa4
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, #8
	lsls r0, r0, #8
	ldr r1, [r4, #0x40]
	cmp r1, r0
	ble _080E4BC8
	adds r0, r4, #0
	bl sub_080E43B4
	movs r1, #0
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	cmp r0, #0
	beq _080E4B5C
	ldr r2, _080E4B80 @ =0x00000103
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0x12
	beq _080E4B5A
	cmp r0, #0x1a
	bne _080E4B5C
_080E4B5A:
	movs r1, #1
_080E4B5C:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E4B6A
	cmp r1, #0
	beq _080E4B90
_080E4B6A:
	ldr r2, _080E4B84 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E4B88 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E4B8C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
	b _080E4BAE
	.align 2, 0
_080E4B80: .4byte 0x00000103
_080E4B84: .4byte gRngVal
_080E4B88: .4byte 0x00196225
_080E4B8C: .4byte 0x3C6EF35F
_080E4B90:
	ldr r2, _080E4BB8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E4BBC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E4BC0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r2, #0
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080E4BAC
	movs r2, #1
_080E4BAC:
	adds r1, r2, #0
_080E4BAE:
	cmp r1, #0
	beq _080E4BC8
	movs r0, #1
	strh r0, [r4, #4]
	b _080E4BC8
	.align 2, 0
_080E4BB8: .4byte gRngVal
_080E4BBC: .4byte 0x00196225
_080E4BC0: .4byte 0x3C6EF35F
_080E4BC4:
	subs r0, #1
	strb r0, [r1]
_080E4BC8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E4BD0
sub_080E4BD0: @ 0x080E4BD0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r2, _080E4C34 @ =sub_080E4CAC
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0x9f
	movs r6, #0
	strb r6, [r5]
	ldr r2, _080E4C38 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E4C3C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E4C40 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080E4C44 @ =0x00005554
	cmp r2, r0
	bls _080E4C64
	ldr r0, _080E4C48 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080E4C0E
	movs r1, #1
_080E4C0E:
	cmp r1, #0
	beq _080E4C64
	adds r0, r4, #0
	bl sub_0803D5CC
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r3, [r4, #0x44]
	movs r2, #0xa0
	lsls r2, r2, #4
	adds r1, r3, r2
	ldr r2, [r0, #0x44]
	cmp r2, r1
	ble _080E4C4C
	movs r0, #2
	strb r0, [r5]
	b _080E4CA0
	.align 2, 0
_080E4C34: .4byte sub_080E4CAC
_080E4C38: .4byte gRngVal
_080E4C3C: .4byte 0x00196225
_080E4C40: .4byte 0x3C6EF35F
_080E4C44: .4byte 0x00005554
_080E4C48: .4byte 0x0000AAA9
_080E4C4C:
	ldr r1, _080E4C5C @ =0xFFFFF600
	adds r0, r3, r1
	cmp r2, r0
	bge _080E4C60
	movs r0, #1
	strb r0, [r5]
	b _080E4CA0
	.align 2, 0
_080E4C5C: .4byte 0xFFFFF600
_080E4C60:
	strb r6, [r5]
	b _080E4CA0
_080E4C64:
	ldr r2, _080E4C80 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E4C84 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E4C88 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080E4C8C @ =0x00005554
	cmp r2, r0
	bhi _080E4C90
	movs r1, #0
	b _080E4C9A
	.align 2, 0
_080E4C80: .4byte gRngVal
_080E4C84: .4byte 0x00196225
_080E4C88: .4byte 0x3C6EF35F
_080E4C8C: .4byte 0x00005554
_080E4C90:
	ldr r0, _080E4CA8 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080E4C9A
	movs r1, #1
_080E4C9A:
	adds r0, r4, #0
	adds r0, #0x9f
	strb r1, [r0]
_080E4CA0:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E4CA8: .4byte 0x0000AAA9

	thumb_func_start sub_080E4CAC
sub_080E4CAC: @ 0x080E4CAC
	push {r4, r5, lr}
	mov ip, r0
	ldr r1, [r0, #8]
	movs r0, #4
	orrs r1, r0
	mov r0, ip
	str r1, [r0, #8]
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E4D20
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080E4CF8
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x1a
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080E4CE4 @ =0xFFFFFDF8
	cmp r2, r0
	bge _080E4CEC
	ldr r0, _080E4CE8 @ =0x0000FDF8
	strh r0, [r1]
	b _080E4D16
	.align 2, 0
_080E4CE4: .4byte 0xFFFFFDF8
_080E4CE8: .4byte 0x0000FDF8
_080E4CEC:
	movs r0, #0x82
	lsls r0, r0, #2
	cmp r2, r0
	ble _080E4D16
	strh r0, [r1]
	b _080E4D16
_080E4CF8:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x1a
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x82
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E4D14
	ldr r2, _080E4D1C @ =0xFFFFFDF8
	cmp r0, r2
	bge _080E4D16
_080E4D14:
	strh r2, [r1]
_080E4D16:
	movs r0, #0xa
	movs r3, #0x78
	b _080E4D6E
	.align 2, 0
_080E4D1C: .4byte 0xFFFFFDF8
_080E4D20:
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080E4D4C
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E4D48 @ =0xFFFFFE58
	cmp r0, r2
	blt _080E4D68
	movs r2, #0xd4
	lsls r2, r2, #1
	cmp r0, r2
	ble _080E4D6A
	b _080E4D68
	.align 2, 0
_080E4D48: .4byte 0xFFFFFE58
_080E4D4C:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xd4
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080E4D68
	ldr r2, _080E4D80 @ =0xFFFFFE58
	cmp r0, r2
	bge _080E4D6A
_080E4D68:
	strh r2, [r1]
_080E4D6A:
	movs r0, #7
	movs r3, #0x58
_080E4D6E:
	mov r2, ip
	adds r2, #0x9f
	ldrb r2, [r2]
	cmp r2, #1
	beq _080E4D84
	cmp r2, #2
	beq _080E4DD2
	b _080E4E06
	.align 2, 0
_080E4D80: .4byte 0xFFFFFE58
_080E4D84:
	adds r2, r0, #0
	cmp r2, #0
	ble _080E4DA0
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, r2, r0
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r2, r1, #0
	cmp r0, r3
	ble _080E4DB8
	b _080E4DB6
_080E4DA0:
	mov r0, ip
	adds r0, #0x52
	ldrh r1, [r0]
	adds r1, r2, r1
	strh r1, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	rsbs r3, r3, #0
	adds r2, r0, #0
	cmp r1, r3
	bge _080E4DB8
_080E4DB6:
	strh r3, [r2]
_080E4DB8:
	movs r3, #0
	ldrsh r1, [r2, r3]
	mov r3, ip
	ldr r0, [r3, #0x44]
	subs r0, r0, r1
	movs r1, #0xf0
	lsls r1, r1, #8
	cmp r0, r1
	bgt _080E4E06
	movs r0, #0
	strh r0, [r2]
	str r1, [r3, #0x44]
	b _080E4E06
_080E4DD2:
	adds r2, r0, #0
	mov r0, ip
	adds r0, #0x52
	ldrh r1, [r0]
	subs r1, r1, r2
	strh r1, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	rsbs r3, r3, #0
	adds r2, r0, #0
	cmp r1, r3
	bge _080E4DEC
	strh r3, [r2]
_080E4DEC:
	movs r3, #0
	ldrsh r0, [r2, r3]
	mov r3, ip
	ldr r1, [r3, #0x44]
	subs r1, r1, r0
	ldr r0, _080E4E24 @ =0x000117FF
	cmp r1, r0
	ble _080E4E06
	movs r0, #0
	strh r0, [r2]
	movs r0, #0x8c
	lsls r0, r0, #9
	str r0, [r3, #0x44]
_080E4E06:
	mov r4, ip
	adds r4, #0x83
	ldrb r0, [r4]
	cmp r0, #4
	bne _080E4E28
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E4E64
	movs r0, #0
	strb r0, [r4]
	b _080E4E64
	.align 2, 0
_080E4E24: .4byte 0x000117FF
_080E4E28:
	mov r2, ip
	ldr r0, [r2, #8]
	movs r5, #1
	ands r0, r5
	cmp r0, #0
	beq _080E4E48
	mov r0, ip
	adds r0, #0xa4
	movs r3, #0
	ldrsh r0, [r0, r3]
	adds r0, #0x40
	lsls r0, r0, #8
	ldr r1, [r2, #0x40]
	cmp r1, r0
	bge _080E4E64
	b _080E4E5C
_080E4E48:
	mov r0, ip
	adds r0, #0xa8
	movs r1, #0
	ldrsh r0, [r0, r1]
	subs r0, #0x40
	lsls r0, r0, #8
	mov r2, ip
	ldr r1, [r2, #0x40]
	cmp r1, r0
	ble _080E4E64
_080E4E5C:
	mov r0, ip
	bl sub_080E43B4
	strb r5, [r4]
_080E4E64:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E4E6C
sub_080E4E6C: @ 0x080E4E6C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _080E4EBC @ =sub_080E4F0C
	movs r1, #2
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xc0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E4F00
	adds r0, r4, #0
	adds r0, #0xc2
	ldrb r0, [r0]
	cmp r0, #1
	bls _080E4F06
	cmp r0, #6
	bls _080E4ECC
	ldr r2, _080E4EC0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E4EC4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E4EC8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	movs r0, #1
	b _080E4EDE
	.align 2, 0
_080E4EBC: .4byte sub_080E4F0C
_080E4EC0: .4byte gRngVal
_080E4EC4: .4byte 0x00196225
_080E4EC8: .4byte 0x3C6EF35F
_080E4ECC:
	ldr r2, _080E4EF4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E4EF8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E4EFC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	movs r0, #3
_080E4EDE:
	ands r2, r0
	cmp r2, #0
	bne _080E4F06
	adds r0, r5, #0
	adds r0, #0xc0
	movs r1, #4
	strb r1, [r0]
	adds r0, #2
	strb r2, [r0]
	b _080E4F06
	.align 2, 0
_080E4EF4: .4byte gRngVal
_080E4EF8: .4byte 0x00196225
_080E4EFC: .4byte 0x3C6EF35F
_080E4F00:
	adds r0, r4, #0
	bl sub_080E4FD8
_080E4F06:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080E4F0C
sub_080E4F0C: @ 0x080E4F0C
	push {r4, r5, lr}
	adds r2, r0, #0
	adds r4, r2, #0
	ldrb r0, [r2, #1]
	cmp r0, #0xf
	bls _080E4F72
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r3, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _080E4F34
	adds r0, r3, #0
	adds r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E4F44
	b _080E4F40
_080E4F34:
	adds r0, r3, #0
	subs r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E4F44
_080E4F40:
	movs r0, #0
	strh r0, [r1]
_080E4F44:
	adds r0, r4, #0
	adds r0, #0xc0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E4FBE
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x25
	bgt _080E4F66
	ldr r0, [r2, #8]
	movs r1, #8
	orrs r0, r1
	str r0, [r2, #8]
	b _080E4FBE
_080E4F66:
	ldr r0, [r2, #8]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2, #8]
	b _080E4FBE
_080E4F72:
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E4FA0
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _080E4F9C @ =0xFFFFFE58
	cmp r0, r3
	blt _080E4FBC
	movs r3, #0xd4
	lsls r3, r3, #1
	cmp r0, r3
	ble _080E4FBE
	b _080E4FBC
	.align 2, 0
_080E4F9C: .4byte 0xFFFFFE58
_080E4FA0:
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0xd4
	lsls r3, r3, #1
	cmp r0, r3
	bgt _080E4FBC
	ldr r3, _080E4FD4 @ =0xFFFFFE58
	cmp r0, r3
	bge _080E4FBE
_080E4FBC:
	strh r3, [r1]
_080E4FBE:
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E4FCE
	adds r0, r2, #0
	bl sub_080E4FD8
_080E4FCE:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E4FD4: .4byte 0xFFFFFE58

	thumb_func_start sub_080E4FD8
sub_080E4FD8: @ 0x080E4FD8
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _080E5008 @ =sub_080E50E0
	movs r1, #3
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D5CC
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r3, [r4, #0x44]
	movs r2, #0xa0
	lsls r2, r2, #4
	adds r1, r3, r2
	ldr r2, [r0, #0x44]
	cmp r2, r1
	ble _080E500C
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #2
	b _080E5026
	.align 2, 0
_080E5008: .4byte sub_080E50E0
_080E500C:
	ldr r1, _080E501C @ =0xFFFFF600
	adds r0, r3, r1
	cmp r2, r0
	bge _080E5020
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #1
	b _080E5026
	.align 2, 0
_080E501C: .4byte 0xFFFFF600
_080E5020:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
_080E5026:
	strb r0, [r1]
	ldr r1, _080E50BC @ =gUnk_02020EE0
	ldr r0, _080E50C0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E5090
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E5054
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E5090
_080E5054:
	ldr r1, _080E50C4 @ =gUnk_08D60FA4
	ldr r5, _080E50C8 @ =gSongTable
	ldr r2, _080E50CC @ =0x00000C2C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E5078
	ldr r1, _080E50D0 @ =0x00000C28
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E5090
_080E5078:
	cmp r3, #0
	beq _080E508A
	ldr r0, _080E50D4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E5090
_080E508A:
	ldr r0, _080E50D8 @ =0x00000185
	bl m4aSongNumStart
_080E5090:
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	cmp r0, #0
	beq _080E50B4
	ldr r2, _080E50DC @ =0x00000103
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0x12
	beq _080E50B0
	cmp r0, #0x1a
	bne _080E50B4
_080E50B0:
	movs r0, #1
	strb r0, [r1]
_080E50B4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E50BC: .4byte gUnk_02020EE0
_080E50C0: .4byte gUnk_0203AD3C
_080E50C4: .4byte gUnk_08D60FA4
_080E50C8: .4byte gSongTable
_080E50CC: .4byte 0x00000C2C
_080E50D0: .4byte 0x00000C28
_080E50D4: .4byte gUnk_0203AD10
_080E50D8: .4byte 0x00000185
_080E50DC: .4byte 0x00000103

	thumb_func_start sub_080E50E0
sub_080E50E0: @ 0x080E50E0
	push {lr}
	mov ip, r0
	ldr r2, [r0, #8]
	movs r0, #4
	orrs r2, r0
	mov r0, ip
	str r2, [r0, #8]
	adds r0, #0x84
	ldr r0, [r0]
	ldr r1, _080E511C @ =0xFF00FF00
	ands r0, r1
	cmp r0, #0
	beq _080E515C
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _080E5134
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080E5120 @ =0xFFFFFD60
	cmp r2, r0
	bge _080E5128
	ldr r0, _080E5124 @ =0x0000FD60
	strh r0, [r1]
	b _080E5152
	.align 2, 0
_080E511C: .4byte 0xFF00FF00
_080E5120: .4byte 0xFFFFFD60
_080E5124: .4byte 0x0000FD60
_080E5128:
	movs r0, #0xa8
	lsls r0, r0, #2
	cmp r2, r0
	ble _080E5152
	strh r0, [r1]
	b _080E5152
_080E5134:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa8
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E5150
	ldr r2, _080E5158 @ =0xFFFFFD60
	cmp r0, r2
	bge _080E5152
_080E5150:
	strh r2, [r1]
_080E5152:
	movs r0, #0xa
	movs r3, #0x70
	b _080E51AA
	.align 2, 0
_080E5158: .4byte 0xFFFFFD60
_080E515C:
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _080E5188
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E5184 @ =0xFFFFFD80
	cmp r0, r2
	blt _080E51A4
	movs r2, #0xa0
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E51A6
	b _080E51A4
	.align 2, 0
_080E5184: .4byte 0xFFFFFD80
_080E5188:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E51A4
	ldr r2, _080E51BC @ =0xFFFFFD80
	cmp r0, r2
	bge _080E51A6
_080E51A4:
	strh r2, [r1]
_080E51A6:
	movs r0, #6
	movs r3, #0x40
_080E51AA:
	mov r2, ip
	adds r2, #0x9f
	ldrb r2, [r2]
	cmp r2, #1
	beq _080E51C0
	cmp r2, #2
	beq _080E520E
	b _080E5242
	.align 2, 0
_080E51BC: .4byte 0xFFFFFD80
_080E51C0:
	adds r2, r0, #0
	cmp r2, #0
	ble _080E51DC
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, r2, r0
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r2, r1, #0
	cmp r0, r3
	ble _080E51F4
	b _080E51F2
_080E51DC:
	mov r0, ip
	adds r0, #0x52
	ldrh r1, [r0]
	adds r1, r2, r1
	strh r1, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	rsbs r3, r3, #0
	adds r2, r0, #0
	cmp r1, r3
	bge _080E51F4
_080E51F2:
	strh r3, [r2]
_080E51F4:
	movs r3, #0
	ldrsh r1, [r2, r3]
	mov r3, ip
	ldr r0, [r3, #0x44]
	subs r0, r0, r1
	movs r1, #0xf0
	lsls r1, r1, #8
	cmp r0, r1
	bgt _080E5242
	movs r0, #0
	strh r0, [r2]
	str r1, [r3, #0x44]
	b _080E5242
_080E520E:
	adds r2, r0, #0
	mov r0, ip
	adds r0, #0x52
	ldrh r1, [r0]
	subs r1, r1, r2
	strh r1, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	rsbs r3, r3, #0
	adds r2, r0, #0
	cmp r1, r3
	bge _080E5228
	strh r3, [r2]
_080E5228:
	movs r3, #0
	ldrsh r0, [r2, r3]
	mov r3, ip
	ldr r1, [r3, #0x44]
	subs r1, r1, r0
	ldr r0, _080E526C @ =0x000117FF
	cmp r1, r0
	ble _080E5242
	movs r0, #0
	strh r0, [r2]
	movs r0, #0x8c
	lsls r0, r0, #9
	str r0, [r3, #0x44]
_080E5242:
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E5270
	mov r0, ip
	adds r0, #0xa4
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, #0x48
	lsls r0, r0, #8
	mov r3, ip
	ldr r1, [r3, #0x40]
	cmp r1, r0
	bge _080E528A
	mov r0, ip
	bl sub_080E79F8
	b _080E528A
	.align 2, 0
_080E526C: .4byte 0x000117FF
_080E5270:
	mov r0, ip
	adds r0, #0xa8
	movs r1, #0
	ldrsh r0, [r0, r1]
	subs r0, #0x48
	lsls r0, r0, #8
	mov r2, ip
	ldr r1, [r2, #0x40]
	cmp r1, r0
	ble _080E528A
	mov r0, ip
	bl sub_080E79F8
_080E528A:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E5290
sub_080E5290: @ 0x080E5290
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r0, #0x84
	ldr r2, [r0]
	ldr r0, _080E52C0 @ =0xFF00FF00
	ands r2, r0
	cmp r2, #0
	beq _080E52D6
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E52C4
	adds r0, r2, #0
	adds r0, #0x1b
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E5300
	b _080E52D0
	.align 2, 0
_080E52C0: .4byte 0xFF00FF00
_080E52C4:
	adds r0, r2, #0
	subs r0, #0x1b
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E5300
_080E52D0:
	movs r0, #0
	strh r0, [r1]
	b _080E5300
_080E52D6:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r3, [r1]
	movs r6, #0
	ldrsh r0, [r1, r6]
	cmp r0, #0
	bge _080E52F2
	adds r0, r3, #0
	adds r0, #0x12
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E5300
	b _080E52FE
_080E52F2:
	adds r0, r3, #0
	subs r0, #0x12
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E5300
_080E52FE:
	strh r2, [r1]
_080E5300:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E531C
	adds r0, r2, #0
	adds r0, #0x12
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E532C
	b _080E5328
_080E531C:
	adds r0, r2, #0
	subs r0, #0x12
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E532C
_080E5328:
	movs r0, #0
	strh r0, [r1]
_080E532C:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E53D6
	adds r0, r4, #0
	bl sub_080E43B4
	adds r0, r4, #0
	adds r0, #0x83
	movs r2, #1
	strb r2, [r0]
	adds r1, r5, #0
	adds r1, #0xc0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080E5360
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080E535C
	strh r2, [r4, #4]
	b _080E53D6
_080E535C:
	movs r0, #0x40
	b _080E53D4
_080E5360:
	movs r1, #0
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	cmp r0, #0
	beq _080E537C
	ldr r6, _080E53A0 @ =0x00000103
	adds r0, r0, r6
	ldrb r0, [r0]
	cmp r0, #0x12
	beq _080E537A
	cmp r0, #0x1a
	bne _080E537C
_080E537A:
	movs r1, #1
_080E537C:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E538A
	cmp r1, #0
	beq _080E53B0
_080E538A:
	ldr r2, _080E53A4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E53A8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E53AC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
	b _080E53CE
	.align 2, 0
_080E53A0: .4byte 0x00000103
_080E53A4: .4byte gRngVal
_080E53A8: .4byte 0x00196225
_080E53AC: .4byte 0x3C6EF35F
_080E53B0:
	ldr r2, _080E53DC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E53E0 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080E53E4 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	movs r2, #0
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080E53CC
	movs r2, #1
_080E53CC:
	adds r1, r2, #0
_080E53CE:
	cmp r1, #0
	beq _080E53D6
	movs r0, #1
_080E53D4:
	strh r0, [r4, #4]
_080E53D6:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E53DC: .4byte gRngVal
_080E53E0: .4byte 0x00196225
_080E53E4: .4byte 0x3C6EF35F

	thumb_func_start sub_080E53E8
sub_080E53E8: @ 0x080E53E8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _080E5438 @ =sub_080E5488
	movs r1, #0xd
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xc1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E547C
	adds r0, r4, #0
	adds r0, #0xc2
	ldrb r0, [r0]
	cmp r0, #1
	bls _080E5482
	cmp r0, #6
	bls _080E5448
	ldr r2, _080E543C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E5440 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E5444 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	b _080E545A
	.align 2, 0
_080E5438: .4byte sub_080E5488
_080E543C: .4byte gRngVal
_080E5440: .4byte 0x00196225
_080E5444: .4byte 0x3C6EF35F
_080E5448:
	ldr r2, _080E5470 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E5474 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E5478 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #3
_080E545A:
	ands r1, r0
	cmp r1, #0
	bne _080E5482
	adds r2, r5, #0
	adds r2, #0xc1
	movs r0, #3
	strb r0, [r2]
	adds r0, r5, #0
	adds r0, #0xc2
	strb r1, [r0]
	b _080E5482
	.align 2, 0
_080E5470: .4byte gRngVal
_080E5474: .4byte 0x00196225
_080E5478: .4byte 0x3C6EF35F
_080E547C:
	adds r0, r4, #0
	bl sub_080E5554
_080E5482:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080E5488
sub_080E5488: @ 0x080E5488
	push {r4, r5, lr}
	adds r2, r0, #0
	adds r4, r2, #0
	ldrb r0, [r2, #1]
	cmp r0, #0xf
	bls _080E54EE
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r3, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _080E54B0
	adds r0, r3, #0
	adds r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E54C0
	b _080E54BC
_080E54B0:
	adds r0, r3, #0
	subs r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E54C0
_080E54BC:
	movs r0, #0
	strh r0, [r1]
_080E54C0:
	adds r0, r4, #0
	adds r0, #0xc1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E553A
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x25
	bgt _080E54E2
	ldr r0, [r2, #8]
	movs r1, #8
	orrs r0, r1
	str r0, [r2, #8]
	b _080E553A
_080E54E2:
	ldr r0, [r2, #8]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2, #8]
	b _080E553A
_080E54EE:
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E551C
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _080E5518 @ =0xFFFFFE58
	cmp r0, r3
	blt _080E5538
	movs r3, #0xd4
	lsls r3, r3, #1
	cmp r0, r3
	ble _080E553A
	b _080E5538
	.align 2, 0
_080E5518: .4byte 0xFFFFFE58
_080E551C:
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0xd4
	lsls r3, r3, #1
	cmp r0, r3
	bgt _080E5538
	ldr r3, _080E5550 @ =0xFFFFFE58
	cmp r0, r3
	bge _080E553A
_080E5538:
	strh r3, [r1]
_080E553A:
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E554A
	adds r0, r2, #0
	bl sub_080E5554
_080E554A:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E5550: .4byte 0xFFFFFE58

	thumb_func_start sub_080E5554
sub_080E5554: @ 0x080E5554
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _080E5614 @ =sub_080E5644
	movs r1, #0xe
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	ldr r1, _080E5618 @ =gUnk_02020EE0
	ldr r0, _080E561C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E55D0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E5594
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E55D0
_080E5594:
	ldr r1, _080E5620 @ =gUnk_08D60FA4
	ldr r5, _080E5624 @ =gSongTable
	ldr r2, _080E5628 @ =0x00000C2C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E55B8
	ldr r1, _080E562C @ =0x00000C28
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E55D0
_080E55B8:
	cmp r3, #0
	beq _080E55CA
	ldr r0, _080E5630 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E55D0
_080E55CA:
	ldr r0, _080E5634 @ =0x00000185
	bl m4aSongNumStart
_080E55D0:
	adds r3, r4, #0
	adds r3, #0x85
	movs r2, #0
	strb r2, [r3]
	ldr r1, _080E5638 @ =gUnk_08351530
	ldr r0, _080E563C @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	cmp r2, r0
	ble _080E5608
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	cmp r0, #0
	beq _080E560C
	ldr r2, _080E5640 @ =0x00000103
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0x12
	beq _080E5608
	cmp r0, #0x1a
	bne _080E560C
_080E5608:
	movs r0, #1
	strb r0, [r3]
_080E560C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E5614: .4byte sub_080E5644
_080E5618: .4byte gUnk_02020EE0
_080E561C: .4byte gUnk_0203AD3C
_080E5620: .4byte gUnk_08D60FA4
_080E5624: .4byte gSongTable
_080E5628: .4byte 0x00000C2C
_080E562C: .4byte 0x00000C28
_080E5630: .4byte gUnk_0203AD10
_080E5634: .4byte 0x00000185
_080E5638: .4byte gUnk_08351530
_080E563C: .4byte gUnk_0203AD30
_080E5640: .4byte 0x00000103

	thumb_func_start sub_080E5644
sub_080E5644: @ 0x080E5644
	push {lr}
	adds r3, r0, #0
	ldr r2, [r3, #8]
	movs r0, #4
	orrs r2, r0
	str r2, [r3, #8]
	adds r0, r3, #0
	adds r0, #0x84
	ldr r0, [r0]
	ldr r1, _080E5684 @ =0xFF00FF00
	ands r0, r1
	cmp r0, #0
	beq _080E56C4
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _080E56A0
	adds r1, r3, #0
	adds r1, #0x50
	ldr r2, _080E5688 @ =0xFFFFFEA0
	adds r0, r2, #0
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080E568C @ =0xFFFFFC80
	cmp r2, r0
	bge _080E5694
	ldr r0, _080E5690 @ =0x0000FC80
	strh r0, [r1]
	b _080E571C
	.align 2, 0
_080E5684: .4byte 0xFF00FF00
_080E5688: .4byte 0xFFFFFEA0
_080E568C: .4byte 0xFFFFFC80
_080E5690: .4byte 0x0000FC80
_080E5694:
	movs r0, #0xe0
	lsls r0, r0, #2
	cmp r2, r0
	ble _080E571C
	strh r0, [r1]
	b _080E571C
_080E56A0:
	adds r1, r3, #0
	adds r1, #0x50
	movs r2, #0xb0
	lsls r2, r2, #1
	adds r0, r2, #0
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E571A
	ldr r2, _080E56C0 @ =0xFFFFFC80
	b _080E5716
	.align 2, 0
_080E56C0: .4byte 0xFFFFFC80
_080E56C4:
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _080E56F8
	adds r1, r3, #0
	adds r1, #0x50
	ldr r2, _080E56F0 @ =0xFFFFFEA0
	adds r0, r2, #0
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E56F4 @ =0xFFFFFCC0
	cmp r0, r2
	blt _080E571A
	movs r2, #0xd0
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E571C
	b _080E571A
	.align 2, 0
_080E56F0: .4byte 0xFFFFFEA0
_080E56F4: .4byte 0xFFFFFCC0
_080E56F8:
	adds r1, r3, #0
	adds r1, #0x50
	movs r2, #0xb0
	lsls r2, r2, #1
	adds r0, r2, #0
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xd0
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E571A
	ldr r2, _080E5740 @ =0xFFFFFCC0
_080E5716:
	cmp r0, r2
	bge _080E571C
_080E571A:
	strh r2, [r1]
_080E571C:
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E5744
	adds r0, r3, #0
	adds r0, #0xa4
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r0, #0x50
	lsls r0, r0, #8
	ldr r1, [r3, #0x40]
	cmp r1, r0
	bge _080E575C
	adds r0, r3, #0
	bl sub_080E7A18
	b _080E575C
	.align 2, 0
_080E5740: .4byte 0xFFFFFCC0
_080E5744:
	adds r0, r3, #0
	adds r0, #0xa8
	movs r2, #0
	ldrsh r0, [r0, r2]
	subs r0, #0x50
	lsls r0, r0, #8
	ldr r1, [r3, #0x40]
	cmp r1, r0
	ble _080E575C
	adds r0, r3, #0
	bl sub_080E7A18
_080E575C:
	pop {r0}
	bx r0

	thumb_func_start sub_080E5760
sub_080E5760: @ 0x080E5760
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r0, #0x84
	ldr r2, [r0]
	ldr r0, _080E5790 @ =0xFF00FF00
	ands r2, r0
	cmp r2, #0
	beq _080E57A6
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E5794
	adds r0, r2, #0
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E57D0
	b _080E57A0
	.align 2, 0
_080E5790: .4byte 0xFF00FF00
_080E5794:
	adds r0, r2, #0
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E57D0
_080E57A0:
	movs r0, #0
	strh r0, [r1]
	b _080E57D0
_080E57A6:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r3, [r1]
	movs r6, #0
	ldrsh r0, [r1, r6]
	cmp r0, #0
	bge _080E57C2
	adds r0, r3, #0
	adds r0, #0x24
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E57D0
	b _080E57CE
_080E57C2:
	adds r0, r3, #0
	subs r0, #0x24
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E57D0
_080E57CE:
	strh r2, [r1]
_080E57D0:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E587A
	adds r0, r4, #0
	bl sub_080E43B4
	adds r0, r4, #0
	adds r0, #0x83
	movs r2, #1
	strb r2, [r0]
	adds r1, r5, #0
	adds r1, #0xc1
	ldrb r0, [r1]
	cmp r0, #0
	beq _080E5804
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080E5800
	strh r2, [r4, #4]
	b _080E587A
_080E5800:
	movs r0, #0x40
	b _080E5878
_080E5804:
	movs r1, #0
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	cmp r0, #0
	beq _080E5820
	ldr r2, _080E5844 @ =0x00000103
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0x12
	beq _080E581E
	cmp r0, #0x1a
	bne _080E5820
_080E581E:
	movs r1, #1
_080E5820:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E582E
	cmp r1, #0
	beq _080E5854
_080E582E:
	ldr r2, _080E5848 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E584C @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080E5850 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
	b _080E5872
	.align 2, 0
_080E5844: .4byte 0x00000103
_080E5848: .4byte gRngVal
_080E584C: .4byte 0x00196225
_080E5850: .4byte 0x3C6EF35F
_080E5854:
	ldr r2, _080E5880 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E5884 @ =0x00196225
	muls r0, r1, r0
	ldr r6, _080E5888 @ =0x3C6EF35F
	adds r0, r0, r6
	str r0, [r2]
	movs r2, #0
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080E5870
	movs r2, #1
_080E5870:
	adds r1, r2, #0
_080E5872:
	cmp r1, #0
	beq _080E587A
	movs r0, #1
_080E5878:
	strh r0, [r4, #4]
_080E587A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E5880: .4byte gRngVal
_080E5884: .4byte 0x00196225
_080E5888: .4byte 0x3C6EF35F

	thumb_func_start sub_080E588C
sub_080E588C: @ 0x080E588C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #3
	bne _080E58DA
	ldrb r0, [r6]
	cmp r0, #0
	bne _080E58DA
	movs r0, #0x80
	lsls r0, r0, #1
	mov r8, r0
	adds r0, r6, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080E58DA
	adds r0, r6, #0
	adds r0, #0xd4
	ldrh r0, [r0]
	cmp r0, #0x27
	beq _080E58DA
	cmp r0, #0x7a
	bhi _080E58DA
	movs r1, #0x88
	lsls r1, r1, #1
	adds r7, r6, r1
	ldr r0, [r7]
	cmp r0, #0
	bne _080E58DA
	ldr r4, [r6, #8]
	ldr r0, _080E58E0 @ =0x03800B00
	ands r4, r0
	cmp r4, #0
	beq _080E58E4
_080E58DA:
	movs r0, #0
	b _080E598A
	.align 2, 0
_080E58E0: .4byte 0x03800B00
_080E58E4:
	ldr r2, _080E5994 @ =sub_080E7A38
	adds r0, r5, #0
	movs r1, #5
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	movs r2, #0
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #0x4d
	strb r2, [r0]
	subs r0, #1
	strb r2, [r0]
	ldr r0, _080E5998 @ =gUnk_08356A98
	str r0, [r7]
	adds r0, r5, #0
	adds r0, #0xac
	str r6, [r0]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	str r6, [r5, #0x6c]
	adds r0, r5, #0
	adds r0, #0xc0
	strb r2, [r0]
	ldr r1, _080E599C @ =gUnk_02020EE0
	ldr r0, _080E59A0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E5988
	ldrb r0, [r5]
	cmp r0, #0
	bne _080E594A
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E5988
_080E594A:
	ldr r1, _080E59A4 @ =gUnk_08D60FA4
	ldr r4, _080E59A8 @ =gSongTable
	ldr r2, _080E59AC @ =0x00000C34
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E5970
	movs r1, #0xc3
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E5988
_080E5970:
	cmp r3, #0
	beq _080E5980
	ldr r0, _080E59B0 @ =gUnk_0203AD10
	ldr r0, [r0]
	mov r2, r8
	ands r0, r2
	cmp r0, #0
	bne _080E5988
_080E5980:
	movs r0, #0xc3
	lsls r0, r0, #1
	bl m4aSongNumStart
_080E5988:
	movs r0, #1
_080E598A:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080E5994: .4byte sub_080E7A38
_080E5998: .4byte gUnk_08356A98
_080E599C: .4byte gUnk_02020EE0
_080E59A0: .4byte gUnk_0203AD3C
_080E59A4: .4byte gUnk_08D60FA4
_080E59A8: .4byte gSongTable
_080E59AC: .4byte 0x00000C34
_080E59B0: .4byte gUnk_0203AD10

	thumb_func_start sub_080E59B4
sub_080E59B4: @ 0x080E59B4
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r5, #1
	ldr r2, _080E5A1C @ =sub_080E5A20
	movs r1, #0xa
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	strh r0, [r4, #4]
	adds r3, r4, #0
	adds r3, #0x9f
	strb r2, [r3]
	movs r0, #0x9e
	adds r0, r0, r4
	mov ip, r0
	strb r2, [r0]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r0, [r0]
	cmp r0, #0
	bne _080E59F8
	strh r5, [r4, #4]
	movs r5, #0x10
_080E59F8:
	adds r0, r4, #0
	adds r0, #0xb8
	ldr r0, [r0]
	cmp r0, #0
	bne _080E5A06
	strb r5, [r3]
	movs r5, #0x10
_080E5A06:
	adds r0, r4, #0
	adds r0, #0xbc
	ldr r0, [r0]
	cmp r0, #0
	bne _080E5A14
	mov r0, ip
	strb r5, [r0]
_080E5A14:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E5A1C: .4byte sub_080E5A20

	thumb_func_start sub_080E5A20
sub_080E5A20: @ 0x080E5A20
	push {r4, lr}
	adds r4, r0, #0
	ldrh r1, [r4, #4]
	movs r2, #4
	ldrsh r0, [r4, r2]
	cmp r0, #0
	beq _080E5A50
	subs r0, r1, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	bne _080E5A42
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xa
	strb r0, [r1]
_080E5A42:
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _080E5ABC
	adds r0, r4, #0
	movs r1, #0
	b _080E5AA2
_080E5A50:
	adds r2, r4, #0
	adds r2, #0x9f
	ldrb r0, [r2]
	cmp r0, #0
	beq _080E5A7A
	subs r0, #1
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _080E5A6E
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xa
	strb r0, [r1]
_080E5A6E:
	ldrb r0, [r2]
	cmp r0, #0
	bne _080E5ABC
	adds r0, r4, #0
	movs r1, #1
	b _080E5AA2
_080E5A7A:
	adds r2, r4, #0
	adds r2, #0x9e
	ldrb r0, [r2]
	cmp r0, #0
	beq _080E5AB0
	subs r0, #1
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _080E5A98
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xa
	strb r0, [r1]
_080E5A98:
	ldrb r0, [r2]
	cmp r0, #0
	bne _080E5ABC
	adds r0, r4, #0
	movs r1, #2
_080E5AA2:
	bl sub_080E7848
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xb
	strb r0, [r1]
	b _080E5ABC
_080E5AB0:
	ldrh r0, [r2]
	cmp r0, #0
	bne _080E5ABC
	adds r0, r4, #0
	bl sub_080E7B50
_080E5ABC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E5AC4
sub_080E5AC4: @ 0x080E5AC4
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E5AE4
	adds r0, r2, #0
	adds r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E5AF4
	b _080E5AF0
_080E5AE4:
	adds r0, r2, #0
	subs r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E5AF4
_080E5AF0:
	movs r0, #0
	strh r0, [r1]
_080E5AF4:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E5B7A
	adds r0, r4, #0
	bl sub_080E43B4
	movs r1, #0
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	cmp r0, #0
	beq _080E5B20
	ldr r2, _080E5B44 @ =0x00000103
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0x12
	beq _080E5B1E
	cmp r0, #0x1a
	bne _080E5B20
_080E5B1E:
	movs r1, #1
_080E5B20:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E5B2E
	cmp r1, #0
	beq _080E5B54
_080E5B2E:
	ldr r2, _080E5B48 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E5B4C @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080E5B50 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
	b _080E5B72
	.align 2, 0
_080E5B44: .4byte 0x00000103
_080E5B48: .4byte gRngVal
_080E5B4C: .4byte 0x00196225
_080E5B50: .4byte 0x3C6EF35F
_080E5B54:
	ldr r2, _080E5B80 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E5B84 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E5B88 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r2, #0
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080E5B70
	movs r2, #1
_080E5B70:
	adds r1, r2, #0
_080E5B72:
	cmp r1, #0
	beq _080E5B7A
	movs r0, #1
	strh r0, [r4, #4]
_080E5B7A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E5B80: .4byte gRngVal
_080E5B84: .4byte 0x00196225
_080E5B88: .4byte 0x3C6EF35F

	thumb_func_start sub_080E5B8C
sub_080E5B8C: @ 0x080E5B8C
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E5BAE
	adds r0, r2, #0
	adds r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E5BBE
	b _080E5BBA
_080E5BAE:
	adds r0, r2, #0
	subs r0, #0xf
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E5BBE
_080E5BBA:
	movs r0, #0
	strh r0, [r1]
_080E5BBE:
	ldrb r0, [r4, #1]
	cmp r0, #0x1e
	bne _080E5C62
	movs r6, #0
	adds r0, r5, #0
	adds r0, #0xb4
	ldr r0, [r0]
	cmp r0, #0
	beq _080E5BD4
	bl sub_080E7028
_080E5BD4:
	adds r0, r5, #0
	adds r0, #0xb8
	ldr r1, [r0]
	adds r7, r0, #0
	cmp r1, #0
	beq _080E5C0C
	ldr r2, _080E5CB4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E5CB8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E5CBC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080E5CC0 @ =0x00005554
	cmp r2, r0
	bls _080E5C04
	ldr r0, _080E5CC4 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080E5C00
	movs r1, #1
_080E5C00:
	cmp r1, #0
	bne _080E5C0C
_080E5C04:
	ldr r0, [r7]
	bl sub_080E6CDC
	movs r6, #1
_080E5C0C:
	adds r0, r5, #0
	adds r0, #0xbc
	ldr r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	beq _080E5C44
	ldr r2, _080E5CB4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E5CB8 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080E5CBC @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080E5CC0 @ =0x00005554
	cmp r2, r0
	bls _080E5C3C
	ldr r0, _080E5CC4 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080E5C38
	movs r1, #1
_080E5C38:
	cmp r1, #0
	bne _080E5C44
_080E5C3C:
	ldr r0, [r5]
	bl sub_080E6CDC
	movs r6, #1
_080E5C44:
	cmp r6, #0
	bne _080E5C62
	ldr r0, [r7]
	cmp r0, #0
	beq _080E5C54
	bl sub_080E6CDC
	movs r6, #1
_080E5C54:
	cmp r6, #0
	bne _080E5C62
	ldr r0, [r5]
	cmp r0, #0
	beq _080E5C62
	bl sub_080E6CDC
_080E5C62:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E5CF2
	adds r0, r4, #0
	bl sub_080E43B4
	movs r1, #0
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	cmp r0, #0
	beq _080E5C8E
	ldr r2, _080E5CC8 @ =0x00000103
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0x12
	beq _080E5C8C
	cmp r0, #0x1a
	bne _080E5C8E
_080E5C8C:
	movs r1, #1
_080E5C8E:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E5C9C
	cmp r1, #0
	beq _080E5CCC
_080E5C9C:
	ldr r2, _080E5CB4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E5CB8 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080E5CBC @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
	b _080E5CEA
	.align 2, 0
_080E5CB4: .4byte gRngVal
_080E5CB8: .4byte 0x00196225
_080E5CBC: .4byte 0x3C6EF35F
_080E5CC0: .4byte 0x00005554
_080E5CC4: .4byte 0x0000AAA9
_080E5CC8: .4byte 0x00000103
_080E5CCC:
	ldr r2, _080E5CF8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E5CFC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E5D00 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r2, #0
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080E5CE8
	movs r2, #1
_080E5CE8:
	adds r1, r2, #0
_080E5CEA:
	cmp r1, #0
	beq _080E5CF2
	movs r0, #1
	strh r0, [r4, #4]
_080E5CF2:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E5CF8: .4byte gRngVal
_080E5CFC: .4byte 0x00196225
_080E5D00: .4byte 0x3C6EF35F

	thumb_func_start sub_080E5D04
sub_080E5D04: @ 0x080E5D04
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E5D9A
	ldr r2, _080E5DB8 @ =0x00000299
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	movs r0, #2
	adds r1, r4, #0
	bl sub_0806FE64
	ldr r1, _080E5DBC @ =gUnk_02020EE0
	ldr r0, _080E5DC0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E5D90
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E5D54
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E5D90
_080E5D54:
	ldr r1, _080E5DC4 @ =gUnk_08D60FA4
	ldr r5, _080E5DC8 @ =gSongTable
	ldr r2, _080E5DCC @ =0x00000BDC
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E5D78
	ldr r1, _080E5DD0 @ =0x00000BD8
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E5D90
_080E5D78:
	cmp r3, #0
	beq _080E5D8A
	ldr r0, _080E5DD4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E5D90
_080E5D8A:
	ldr r0, _080E5DD8 @ =0x0000017B
	bl m4aSongNumStart
_080E5D90:
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
_080E5D9A:
	ldrh r1, [r4, #4]
	movs r0, #0x1f
	ands r0, r1
	cmp r0, #0
	bne _080E5E52
	ldr r2, _080E5DDC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E5DE0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E5DE4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r5, r0, #0x10
	movs r3, #0
	b _080E5DEC
	.align 2, 0
_080E5DB8: .4byte 0x00000299
_080E5DBC: .4byte gUnk_02020EE0
_080E5DC0: .4byte gUnk_0203AD3C
_080E5DC4: .4byte gUnk_08D60FA4
_080E5DC8: .4byte gSongTable
_080E5DCC: .4byte 0x00000BDC
_080E5DD0: .4byte 0x00000BD8
_080E5DD4: .4byte gUnk_0203AD10
_080E5DD8: .4byte 0x0000017B
_080E5DDC: .4byte gRngVal
_080E5DE0: .4byte 0x00196225
_080E5DE4: .4byte 0x3C6EF35F
_080E5DE8:
	lsls r0, r2, #0x10
	lsrs r3, r0, #0x10
_080E5DEC:
	cmp r3, #3
	bhi _080E5E02
	adds r2, r3, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r1, r0, #4
	adds r0, r0, r1
	lsls r1, r0, #8
	adds r0, r0, r1
	cmp r5, r0
	bge _080E5DE8
_080E5E02:
	cmp r3, #1
	beq _080E5E28
	cmp r3, #1
	bgt _080E5E10
	cmp r3, #0
	beq _080E5E1A
	b _080E5E52
_080E5E10:
	cmp r3, #2
	beq _080E5E38
	cmp r3, #3
	beq _080E5E46
	b _080E5E52
_080E5E1A:
	movs r1, #9
	rsbs r1, r1, #0
	adds r0, r4, #0
	movs r2, #4
	bl sub_080E625C
	b _080E5E52
_080E5E28:
	movs r1, #8
	rsbs r1, r1, #0
	movs r2, #6
	rsbs r2, r2, #0
	adds r0, r4, #0
	bl sub_080E625C
	b _080E5E52
_080E5E38:
	movs r1, #0xa
	rsbs r1, r1, #0
	adds r0, r4, #0
	movs r2, #1
	bl sub_080E625C
	b _080E5E52
_080E5E46:
	movs r1, #7
	rsbs r1, r1, #0
	adds r0, r4, #0
	movs r2, #0xc
	bl sub_080E625C
_080E5E52:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080E5E58
sub_080E5E58: @ 0x080E5E58
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080E5E88 @ =sub_080E5F20
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080E5E8C @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E5E90
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080E5E98
	.align 2, 0
_080E5E88: .4byte sub_080E5F20
_080E5E8C: .4byte sub_0803DCCC
_080E5E90:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080E5E98:
	adds r0, r4, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r5, r4, #0
	adds r5, #0x42
	movs r7, #0
	strh r0, [r5]
	adds r1, r4, #0
	adds r1, #0xc
	movs r6, #0xc3
	lsls r6, r6, #2
	movs r0, #0x12
	str r0, [sp]
	movs r0, #0x1d
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x10
	adds r3, r6, #0
	bl sub_080709F8
	adds r4, #0x2b
	strb r7, [r4]
	ldr r2, _080E5F0C @ =gUnk_02020EE0
	ldr r0, _080E5F10 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r5, [r5]
	cmp r0, r5
	bne _080E5F14
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080E5F16
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080E5F16
	.align 2, 0
_080E5F0C: .4byte gUnk_02020EE0
_080E5F10: .4byte gUnk_0203AD3C
_080E5F14:
	strb r7, [r4]
_080E5F16:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E5F20
sub_080E5F20: @ 0x080E5F20
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r2, _080E5F44 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E5F48
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080E5F50
	.align 2, 0
_080E5F44: .4byte gCurTask
_080E5F48:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080E5F50:
	adds r7, r0, #0
	ldr r0, [r7, #0x44]
	mov r8, r0
	ldrh r3, [r7, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080E5F6C
	ldr r0, [r2]
	bl TaskDestroy
	b _080E6242
_080E5F6C:
	mov r2, r8
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E5F7E
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r7, #6]
	b _080E6242
_080E5F7E:
	ldr r2, _080E5FE8 @ =gUnk_02020EE0
	ldr r0, _080E5FEC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r6, r1, #0
	ldrh r5, [r6]
	cmp r0, r5
	bne _080E6030
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080E5FF8
	ldr r0, [r7, #0xc]
	cmp r0, #0
	bne _080E6056
	ldrh r1, [r7, #0x18]
	adds r0, r7, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x10
	bl sub_0803DE54
	adds r4, r7, #0
	adds r4, #0xc
	str r0, [r7, #0xc]
	ldr r0, [r7, #0x14]
	ldr r1, _080E5FF0 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080E5FF4 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r7, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r7, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080E6056
	.align 2, 0
_080E5FE8: .4byte gUnk_02020EE0
_080E5FEC: .4byte gUnk_0203AD3C
_080E5FF0: .4byte 0xFFF7FFFF
_080E5FF4: .4byte 0x0400000A
_080E5FF8:
	ldr r0, [r7, #0xc]
	cmp r0, #0
	bne _080E6056
	movs r0, #0x10
	bl sub_081570B0
	adds r3, r7, #0
	adds r3, #0xc
	str r0, [r7, #0xc]
	ldr r0, [r7, #0x14]
	ldr r1, _080E6028 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080E602C @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r7, #1]
	mov r0, sp
	bl sub_0815521C
	b _080E6056
	.align 2, 0
_080E6028: .4byte 0xFFF7FFFF
_080E602C: .4byte 0x0400000A
_080E6030:
	ldr r1, [r7, #0xc]
	cmp r1, #0
	beq _080E604C
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080E604C
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r7, #0xc]
_080E604C:
	ldr r0, [r7, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r7, #0x14]
_080E6056:
	ldr r2, _080E6098 @ =gUnk_02020EE0
	ldr r0, _080E609C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r6]
	cmp r0, r1
	bne _080E60A0
	adds r4, r7, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E60A8
	movs r5, #0xc3
	lsls r5, r5, #2
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080E60A8
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080E60A8
	.align 2, 0
_080E6098: .4byte gUnk_02020EE0
_080E609C: .4byte gUnk_0203AD3C
_080E60A0:
	adds r1, r7, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_080E60A8:
	ldrh r0, [r7, #6]
	ldr r2, _080E613C @ =0x0000FBFF
	ands r2, r0
	strh r2, [r7, #6]
	mov r5, r8
	ldr r1, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r1, r0
	orrs r1, r2
	ldr r0, _080E6140 @ =0x0000FFFE
	ands r1, r0
	strh r1, [r7, #6]
	ldr r0, [r5, #8]
	mvns r0, r0
	movs r2, #1
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #6]
	ldr r0, [r5, #0x40]
	str r0, [r7, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r7, #0x38]
	mov r0, r8
	adds r0, #0x54
	ldrb r1, [r0]
	adds r0, r7, #0
	adds r0, #0x40
	strb r1, [r0]
	mov r0, r8
	adds r0, #0x55
	ldrb r0, [r0]
	adds r1, r7, #0
	adds r1, #0x41
	strb r0, [r1]
	ldr r3, [r7, #0x44]
	cmp r3, #0
	beq _080E6148
	ldrb r0, [r3]
	cmp r0, #0
	beq _080E610C
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080E610C
	movs r0, #0
	str r0, [r7, #0x44]
	movs r3, #0
_080E610C:
	cmp r3, #0
	beq _080E6148
	ldr r0, _080E6144 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080E61B4
	ldrh r1, [r7, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080E61B4
	adds r0, r7, #0
	bl sub_0803DBC8
	b _080E6242
	.align 2, 0
_080E613C: .4byte 0x0000FBFF
_080E6140: .4byte 0x0000FFFE
_080E6144: .4byte gUnk_03000510
_080E6148:
	adds r4, r7, #0
	movs r3, #0
	ldr r2, _080E61AC @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r6]
	cmp r0, r1
	beq _080E6186
	movs r3, #1
	movs r5, #0x82
	lsls r5, r5, #2
	adds r0, r2, r5
	ldrh r0, [r0]
	cmp r0, r1
	beq _080E6186
	movs r3, #2
	movs r5, #0xec
	lsls r5, r5, #2
	adds r0, r2, r5
	ldrh r0, [r0]
	cmp r0, r1
	beq _080E6186
	movs r3, #3
	movs r5, #0xab
	lsls r5, r5, #3
	adds r0, r2, r5
	ldrh r0, [r0]
	cmp r0, r1
	beq _080E6186
	movs r3, #4
_080E6186:
	ldr r0, _080E61B0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080E61B4
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080E61B4
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080E6242
	.align 2, 0
_080E61AC: .4byte gUnk_02020EE0
_080E61B0: .4byte gUnk_03000510
_080E61B4:
	ldrh r1, [r7, #6]
	movs r0, #4
	orrs r0, r1
	strh r0, [r7, #6]
	mov r0, r8
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #1
	beq _080E61CE
	cmp r0, #7
	beq _080E61CE
	cmp r0, #0xc
	bls _080E61DA
_080E61CE:
	ldrh r1, [r7, #6]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r7, #6]
_080E61DA:
	adds r0, r7, #0
	bl sub_0806FAC8
	ldrh r1, [r7, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	bne _080E623C
	ldrh r1, [r7, #4]
	movs r0, #0x3f
	ands r0, r1
	cmp r0, #0
	bne _080E623C
	ldr r4, _080E6250 @ =gRngVal
	ldr r0, [r4]
	ldr r6, _080E6254 @ =0x00196225
	muls r0, r6, r0
	ldr r5, _080E6258 @ =0x3C6EF35F
	adds r0, r0, r5
	lsrs r1, r0, #0x10
	movs r3, #7
	ands r1, r3
	subs r1, #0x1b
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r2, r0, #0
	muls r2, r6, r2
	adds r2, r2, r5
	str r2, [r4]
	lsrs r2, r2, #0x10
	ands r2, r3
	subs r2, #3
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	mov r0, r8
	bl sub_080E625C
	ldr r0, [r4]
	muls r0, r6, r0
	adds r0, r0, r5
	str r0, [r4]
	movs r5, #4
	ldrsh r2, [r7, r5]
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	adds r2, r2, r0
	strh r2, [r7, #4]
_080E623C:
	ldrh r0, [r7, #4]
	adds r0, #1
	strh r0, [r7, #4]
_080E6242:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E6250: .4byte gRngVal
_080E6254: .4byte 0x00196225
_080E6258: .4byte 0x3C6EF35F

	thumb_func_start sub_080E625C
sub_080E625C: @ 0x080E625C
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r0, #0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r7, r2, #0x18
	ldr r0, _080E6294 @ =sub_080E6320
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080E6298 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E629C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080E62A4
	.align 2, 0
_080E6294: .4byte sub_080E6320
_080E6298: .4byte sub_0803DCCC
_080E629C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080E62A4:
	adds r5, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r5]
	ldr r0, [r4, #0x40]
	str r0, [r5, #0x34]
	ldr r0, [r4, #0x44]
	str r0, [r5, #0x38]
	str r4, [r5, #0x44]
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r1, r5, #0
	adds r1, #0x42
	strh r0, [r1]
	movs r0, #0x80
	strh r0, [r5, #0x3e]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E62DC
	lsls r1, r6, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r5, #0x34]
	subs r0, r0, r1
	b _080E62E4
_080E62DC:
	lsls r1, r6, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r5, #0x34]
	adds r0, r0, r1
_080E62E4:
	str r0, [r5, #0x34]
	lsls r1, r7, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r5, #0x38]
	adds r0, r0, r1
	str r0, [r5, #0x38]
	ldrh r1, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #7
	adds r0, r2, #0
	movs r4, #0
	orrs r0, r1
	strh r0, [r5, #6]
	adds r1, r5, #0
	adds r1, #0xc
	ldr r2, _080E631C @ =0x06012000
	movs r3, #0xa8
	lsls r3, r3, #2
	str r4, [sp]
	movs r0, #0xa
	str r0, [sp, #4]
	adds r0, r5, #0
	bl sub_080709F8
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E631C: .4byte 0x06012000

	thumb_func_start sub_080E6320
sub_080E6320: @ 0x080E6320
	push {r4, r5, r6, lr}
	ldr r2, _080E6340 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	adds r5, r2, #0
	cmp r0, #0
	beq _080E6344
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080E634C
	.align 2, 0
_080E6340: .4byte gCurTask
_080E6344:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080E634C:
	adds r3, r0, #0
	ldrh r1, [r3, #6]
	movs r4, #0x80
	lsls r4, r4, #5
	adds r0, r4, #0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _080E6368
	ldr r0, [r5]
	bl TaskDestroy
	b _080E646A
_080E6368:
	ldr r1, [r3, #0x44]
	cmp r1, #0
	beq _080E63B4
	ldrb r0, [r1]
	cmp r0, #0
	beq _080E6380
	ldr r0, [r1, #8]
	ands r0, r4
	cmp r0, #0
	beq _080E6380
	str r2, [r3, #0x44]
	movs r1, #0
_080E6380:
	cmp r1, #0
	beq _080E63B4
	ldr r0, _080E63B0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080E6424
	ldrh r1, [r3, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080E6424
	adds r0, r3, #0
	bl sub_0803DBC8
	b _080E646A
	.align 2, 0
_080E63B0: .4byte gUnk_03000510
_080E63B4:
	adds r5, r3, #0
	movs r4, #0
	ldr r2, _080E641C @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	adds r1, r3, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _080E63F6
	movs r4, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080E63F6
	movs r4, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080E63F6
	movs r4, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080E63F6
	movs r4, #4
_080E63F6:
	ldr r0, _080E6420 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r4
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080E6424
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080E6424
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080E646A
	.align 2, 0
_080E641C: .4byte gUnk_02020EE0
_080E6420: .4byte gUnk_03000510
_080E6424:
	ldrh r0, [r3, #6]
	movs r1, #4
	movs r2, #0
	orrs r1, r0
	strh r1, [r3, #6]
	movs r0, #0x80
	lsls r0, r0, #4
	ands r1, r0
	cmp r1, #0
	bne _080E644C
	movs r0, #0x3c
	ldrsh r1, [r3, r0]
	ldr r0, [r3, #0x34]
	adds r0, r0, r1
	str r0, [r3, #0x34]
	movs r6, #0x3e
	ldrsh r1, [r3, r6]
	ldr r0, [r3, #0x38]
	subs r0, r0, r1
	str r0, [r3, #0x38]
_080E644C:
	ldr r1, [r3, #0x38]
	movs r0, #0xe8
	lsls r0, r0, #8
	cmp r1, r0
	bgt _080E6464
	ldrh r0, [r3, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r3, #6]
	b _080E646A
_080E6464:
	adds r0, r3, #0
	bl sub_0806FAC8
_080E646A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080E6470
sub_080E6470: @ 0x080E6470
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, _080E64A0 @ =sub_080E6550
	movs r2, #0xd4
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E64A4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080E64AC
	.align 2, 0
_080E64A0: .4byte sub_080E6550
_080E64A4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080E64AC:
	adds r4, r0, #0
	bl sub_0803E380
	movs r1, #0
	movs r0, #2
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	str r5, [r4, #0x70]
	strh r1, [r4, #4]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x60
	strh r1, [r0]
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _080E6548 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r3, #1
	adds r0, r3, #0
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080E64FC
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
_080E64FC:
	adds r0, r4, #0
	adds r0, #0x63
	strb r3, [r0]
	ldr r2, _080E654C @ =0x12010400
	str r2, [r4, #8]
	ldr r0, [r4, #0x68]
	movs r1, #0x20
	orrs r0, r1
	subs r1, #0x28
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r5, #8]
	ands r0, r3
	cmp r0, #0
	beq _080E652A
	orrs r2, r3
_080E652A:
	str r2, [r4, #8]
	movs r2, #0xe
	rsbs r2, r2, #0
	movs r0, #0x16
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #8
	movs r3, #0x1e
	bl sub_0803E2B0
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E6548: .4byte gUnk_03000510
_080E654C: .4byte 0x12010400

	thumb_func_start sub_080E6550
sub_080E6550: @ 0x080E6550
	push {r4, r5, lr}
	ldr r2, _080E656C @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E6570
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080E6578
	.align 2, 0
_080E656C: .4byte gCurTask
_080E6570:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080E6578:
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	ldr r1, [r4, #8]
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080E6592
	ldr r0, [r2]
	bl TaskDestroy
	b _080E668E
_080E6592:
	ldr r0, [r5, #8]
	ands r0, r3
	cmp r0, #0
	beq _080E65A0
	orrs r1, r3
	str r1, [r4, #8]
	b _080E668E
_080E65A0:
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r3, r4, #0
	adds r3, #0x56
	strb r0, [r3]
	ldr r0, _080E65DC @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	ldrb r1, [r3]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080E65E0
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	bne _080E65E0
	adds r0, r4, #0
	bl sub_0803D9A8
	b _080E668E
	.align 2, 0
_080E65DC: .4byte gUnk_03000510
_080E65E0:
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E65F0
	ldr r0, [r4, #8]
	orrs r0, r1
	b _080E65F8
_080E65F0:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080E65F8:
	str r0, [r4, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #3
	bne _080E668E
	ldr r1, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #0xb
	ands r0, r1
	cmp r0, #0
	beq _080E661C
	ldr r0, _080E6618 @ =0xFFFBFFFF
	ands r1, r0
	str r1, [r4, #8]
	b _080E668E
	.align 2, 0
_080E6618: .4byte 0xFFFBFFFF
_080E661C:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080E668E
	movs r0, #0x90
	lsls r0, r0, #5
	ands r1, r0
	cmp r1, #0
	bne _080E668E
	ldrb r0, [r3]
	cmp r0, #0xff
	beq _080E6654
	ldr r2, _080E664C @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r2, _080E6650 @ =0x0000065E
	adds r0, r0, r2
	ldrb r1, [r0]
	b _080E6656
	.align 2, 0
_080E664C: .4byte gCurLevelInfo
_080E6650: .4byte 0x0000065E
_080E6654:
	movs r1, #0xff
_080E6656:
	cmp r1, #0xff
	beq _080E668E
	lsls r3, r1, #6
	ldrb r0, [r4]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _080E6694 @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r2, [r4]
	adds r1, r1, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080E6698 @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r4, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_080E668E:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E6694: .4byte gUnk_02022EB0
_080E6698: .4byte gUnk_02022F50

	thumb_func_start sub_080E669C
sub_080E669C: @ 0x080E669C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080E66D0 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080E66D4 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E66D8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080E66E0
	.align 2, 0
_080E66D0: .4byte ObjectMain
_080E66D4: .4byte ObjectDestroy
_080E66D8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080E66E0:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r2, [r4, #8]
	movs r0, #0xa0
	lsls r0, r0, #1
	orrs r2, r0
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	str r0, [r4, #0xc]
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r2, r0
	str r2, [r4, #8]
	movs r2, #6
	rsbs r2, r2, #0
	movs r0, #6
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r2, #0
	movs r3, #6
	bl sub_0803E2B0
	movs r1, #7
	rsbs r1, r1, #0
	movs r2, #5
	rsbs r2, r2, #0
	movs r0, #7
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #7
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	adds r5, r4, #0
	adds r5, #0xb0
	ldr r0, [r5]
	ldrb r0, [r0, #0xe]
	cmp r0, #1
	bhi _080E6744
	movs r0, #0xc8
	lsls r0, r0, #3
	strh r0, [r4, #0x24]
_080E6744:
	ldr r0, [r5]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E6754
	ldr r0, [r4, #0xc]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #0xc]
_080E6754:
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080E6780 @ =sub_0809F840
	str r0, [r4, #0x7c]
	adds r0, r4, #0
	bl sub_080E79A4
	ldr r0, [r5]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E6774
	adds r0, r4, #0
	bl sub_080E761C
_080E6774:
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080E6780: .4byte sub_0809F840

	thumb_func_start sub_080E6784
sub_080E6784: @ 0x080E6784
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov ip, r0
	ldr r0, [r0, #0x70]
	mov sl, r0
	mov r0, ip
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #1
	beq _080E67B0
	cmp r0, #1
	ble _080E67AA
	cmp r0, #2
	beq _080E67B6
_080E67AA:
	movs r7, #0xe8
	movs r6, #0xf0
	b _080E67BA
_080E67B0:
	movs r7, #0xec
	movs r6, #0x1e
	b _080E67BA
_080E67B6:
	movs r7, #0xc
	movs r6, #0x18
_080E67BA:
	mov r1, sl
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E67CC
	lsls r0, r7, #0x18
	rsbs r0, r0, #0
	lsrs r7, r0, #0x18
_080E67CC:
	mov r0, ip
	adds r0, #0x83
	ldrb r1, [r0]
	str r0, [sp]
	cmp r1, #0
	bne _080E67E4
	mov r2, ip
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	b _080E67FC
_080E67E4:
	lsls r0, r7, #0x18
	rsbs r0, r0, #0
	lsrs r7, r0, #0x18
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E67FC
	movs r0, #0
	ldr r5, [sp]
	strb r0, [r5]
_080E67FC:
	mov r1, ip
	adds r1, #0xac
	mov r0, sl
	str r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	mov r2, ip
	adds r2, #0xa0
	movs r3, #0
	mov r8, r3
	strh r0, [r2]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	mov r4, ip
	adds r4, #0xa2
	strh r0, [r4]
	mov r0, sl
	adds r0, #0x83
	ldrb r1, [r0]
	mov sb, r2
	adds r5, r4, #0
	str r0, [sp, #4]
	cmp r1, #3
	blt _080E683E
	cmp r1, #4
	bgt _080E6834
	b _080E69A0
_080E6834:
	cmp r1, #0xf
	bgt _080E683E
	cmp r1, #0xe
	blt _080E683E
	b _080E6B00
_080E683E:
	mov r1, ip
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r2, #0
	mov r8, r2
	strb r0, [r1]
	mov r0, ip
	ldr r3, [r0, #0x44]
	ldr r2, _080E6884 @ =0xFFFFFC00
	ands r3, r2
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r0, r6, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r1, #8
	ands r0, r2
	cmp r3, r0
	ble _080E6888
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0xa
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x8c
	lsls r2, r2, #1
	adds r4, r1, #0
	cmp r0, r2
	ble _080E68DA
	strh r2, [r4]
	b _080E68DA
	.align 2, 0
_080E6884: .4byte 0xFFFFFC00
_080E6888:
	cmp r3, r0
	bge _080E68AC
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0xa
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E68A8 @ =0xFFFFFEE8
	adds r4, r1, #0
	cmp r0, r2
	bge _080E68DA
	strh r2, [r4]
	b _080E68DA
	.align 2, 0
_080E68A8: .4byte 0xFFFFFEE8
_080E68AC:
	mov r0, ip
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	cmp r1, #0
	bge _080E68CC
	adds r0, r2, #6
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E68DA
	mov r5, r8
	strh r5, [r4]
	b _080E68DA
_080E68CC:
	subs r0, r2, #6
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E68DA
	mov r0, r8
	strh r0, [r4]
_080E68DA:
	mov r1, ip
	ldr r3, [r1, #0x40]
	ldr r2, _080E6920 @ =0xFFFFFC00
	ands r3, r2
	mov r5, sb
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r0, r7, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r1, #8
	ands r0, r2
	cmp r3, r0
	bge _080E6928
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0xe
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080E691C
	b _080E6BFC
_080E691C:
	ldr r2, _080E6924 @ =0xFFFFFE80
	b _080E6C1C
	.align 2, 0
_080E6920: .4byte 0xFFFFFC00
_080E6924: .4byte 0xFFFFFE80
_080E6928:
	cmp r3, r0
	ble _080E697C
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E695C
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0xe
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E6958 @ =0xFFFFFE80
	cmp r0, r2
	bge _080E6952
	b _080E6BFC
_080E6952:
	movs r2, #0xc0
	lsls r2, r2, #1
	b _080E6BF8
	.align 2, 0
_080E6958: .4byte 0xFFFFFE80
_080E695C:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0xe
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080E6974
	b _080E6BFC
_080E6974:
	ldr r2, _080E6978 @ =0xFFFFFE80
	b _080E6C1C
	.align 2, 0
_080E6978: .4byte 0xFFFFFE80
_080E697C:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _080E699A
	adds r0, r2, #0
	adds r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080E6998
	b _080E6C56
_080E6998:
	b _080E6C52
_080E699A:
	adds r0, r2, #0
	subs r0, #0x28
	b _080E6C4A
_080E69A0:
	lsls r1, r6, #0x18
	mov r2, ip
	adds r2, #0x9e
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	mov r0, ip
	ldr r3, [r0, #0x44]
	ldr r2, _080E69E0 @ =0xFFFFFC00
	ands r3, r2
	movs r5, #0
	ldrsh r0, [r4, r5]
	asrs r1, r1, #0x19
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r3, r0
	ble _080E69E4
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #1
	adds r4, r1, #0
	cmp r0, r2
	ble _080E6A3A
	strh r2, [r4]
	b _080E6A3A
	.align 2, 0
_080E69E0: .4byte 0xFFFFFC00
_080E69E4:
	cmp r3, r0
	bge _080E6A08
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E6A04 @ =0xFFFFFEE0
	adds r4, r1, #0
	cmp r0, r2
	bge _080E6A3A
	strh r2, [r4]
	b _080E6A3A
	.align 2, 0
_080E6A04: .4byte 0xFFFFFEE0
_080E6A08:
	mov r0, ip
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	cmp r1, #0
	bge _080E6A2A
	adds r0, r2, #0
	adds r0, #0x30
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E6A3A
	mov r5, r8
	strh r5, [r4]
	b _080E6A3A
_080E6A2A:
	adds r0, r2, #0
	subs r0, #0x30
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E6A3A
	mov r0, r8
	strh r0, [r4]
_080E6A3A:
	mov r1, ip
	ldr r3, [r1, #0x40]
	ldr r2, _080E6A80 @ =0xFFFFFC00
	ands r3, r2
	mov r5, sb
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r0, r7, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r1, #8
	ands r0, r2
	cmp r3, r0
	bge _080E6A88
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x88
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E6A7C
	b _080E6BFC
_080E6A7C:
	ldr r2, _080E6A84 @ =0xFFFFFDE0
	b _080E6C1C
	.align 2, 0
_080E6A80: .4byte 0xFFFFFC00
_080E6A84: .4byte 0xFFFFFDE0
_080E6A88:
	cmp r3, r0
	ble _080E6ADC
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E6ABC
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E6AB8 @ =0xFFFFFDE0
	cmp r0, r2
	bge _080E6AB2
	b _080E6BFC
_080E6AB2:
	movs r2, #0x88
	lsls r2, r2, #2
	b _080E6BF8
	.align 2, 0
_080E6AB8: .4byte 0xFFFFFDE0
_080E6ABC:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x88
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E6AD4
	b _080E6BFC
_080E6AD4:
	ldr r2, _080E6AD8 @ =0xFFFFFDE0
	b _080E6C1C
	.align 2, 0
_080E6AD8: .4byte 0xFFFFFDE0
_080E6ADC:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _080E6AFA
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080E6AF8
	b _080E6C56
_080E6AF8:
	b _080E6C52
_080E6AFA:
	adds r0, r2, #0
	subs r0, #0x60
	b _080E6C4A
_080E6B00:
	lsls r1, r6, #0x18
	mov r2, ip
	adds r2, #0x9e
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	mov r0, ip
	ldr r3, [r0, #0x44]
	ldr r2, _080E6B40 @ =0xFFFFFC00
	ands r3, r2
	movs r5, #0
	ldrsh r0, [r4, r5]
	asrs r1, r1, #0x19
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r3, r0
	ble _080E6B44
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #1
	adds r4, r1, #0
	cmp r0, r2
	ble _080E6B9A
	strh r2, [r4]
	b _080E6B9A
	.align 2, 0
_080E6B40: .4byte 0xFFFFFC00
_080E6B44:
	cmp r3, r0
	bge _080E6B68
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E6B64 @ =0xFFFFFF00
	adds r4, r1, #0
	cmp r0, r2
	bge _080E6B9A
	strh r2, [r4]
	b _080E6B9A
	.align 2, 0
_080E6B64: .4byte 0xFFFFFF00
_080E6B68:
	mov r0, ip
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	cmp r1, #0
	bge _080E6B8A
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E6B9A
	mov r5, r8
	strh r5, [r4]
	b _080E6B9A
_080E6B8A:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E6B9A
	mov r0, r8
	strh r0, [r4]
_080E6B9A:
	mov r1, ip
	ldr r3, [r1, #0x40]
	ldr r2, _080E6BC8 @ =0xFFFFFC00
	ands r3, r2
	mov r5, sb
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r0, r7, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r1, #8
	ands r0, r2
	cmp r3, r0
	bge _080E6BCC
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	b _080E6C04
	.align 2, 0
_080E6BC8: .4byte 0xFFFFFC00
_080E6BCC:
	cmp r3, r0
	ble _080E6C28
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E6C04
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x48
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E6C00 @ =0xFFFFFD20
	cmp r0, r2
	blt _080E6BFC
	movs r2, #0xb8
	lsls r2, r2, #2
_080E6BF8:
	cmp r0, r2
	ble _080E6C56
_080E6BFC:
	strh r2, [r1]
	b _080E6C56
	.align 2, 0
_080E6C00: .4byte 0xFFFFFD20
_080E6C04:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x48
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xb8
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E6BFC
	ldr r2, _080E6C24 @ =0xFFFFFD20
_080E6C1C:
	cmp r0, r2
	bge _080E6C56
	b _080E6BFC
	.align 2, 0
_080E6C24: .4byte 0xFFFFFD20
_080E6C28:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _080E6C46
	movs r3, #0xa0
	lsls r3, r3, #1
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E6C56
	b _080E6C52
_080E6C46:
	ldr r5, _080E6CD4 @ =0xFFFFFEC0
	adds r0, r2, r5
_080E6C4A:
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E6C56
_080E6C52:
	movs r0, #0
	strh r0, [r1]
_080E6C56:
	mov r0, ip
	ldr r2, [r0, #8]
	movs r0, #2
	rsbs r0, r0, #0
	ands r2, r0
	mov r1, ip
	str r2, [r1, #8]
	mov r3, sl
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	orrs r2, r0
	mov r5, ip
	str r2, [r5, #8]
	ldr r1, [sp, #4]
	ldrb r0, [r1]
	cmp r0, #1
	bne _080E6C90
	ldrb r0, [r3, #1]
	cmp r0, #0xe
	bne _080E6C90
	movs r0, #2
	ldr r2, [sp]
	strb r0, [r2]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
_080E6C90:
	adds r2, r4, #0
	movs r3, #0
	ldrsh r1, [r2, r3]
	mov r5, ip
	ldr r0, [r5, #0x44]
	subs r0, r0, r1
	movs r1, #0xee
	lsls r1, r1, #8
	cmp r0, r1
	bgt _080E6CAA
	movs r0, #0
	strh r0, [r2]
	str r1, [r5, #0x44]
_080E6CAA:
	movs r1, #0
	ldrsh r0, [r4, r1]
	mov r2, ip
	ldr r1, [r2, #0x44]
	subs r1, r1, r0
	ldr r0, _080E6CD8 @ =0x000129FF
	cmp r1, r0
	ble _080E6CC4
	movs r0, #0
	strh r0, [r4]
	movs r0, #0x95
	lsls r0, r0, #9
	str r0, [r2, #0x44]
_080E6CC4:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E6CD4: .4byte 0xFFFFFEC0
_080E6CD8: .4byte 0x000129FF

	thumb_func_start sub_080E6CDC
sub_080E6CDC: @ 0x080E6CDC
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	ldr r1, [r4, #0x78]
	ldr r0, _080E6D34 @ =sub_080E6784
	cmp r1, r0
	bne _080E6D44
	ldr r2, _080E6D38 @ =sub_080E6D4C
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D5CC
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r2, [r4, #8]
	movs r0, #2
	rsbs r0, r0, #0
	ands r2, r0
	str r2, [r4, #8]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	orrs r2, r0
	str r2, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #0x5e
	ldr r0, [r0]
	ldrb r1, [r0, #0xe]
	cmp r1, #1
	bne _080E6D3C
	adds r0, r4, #0
	adds r0, #0x9f
	strb r1, [r0]
	b _080E6D44
	.align 2, 0
_080E6D34: .4byte sub_080E6784
_080E6D38: .4byte sub_080E6D4C
_080E6D3C:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0x10
	strb r0, [r1]
_080E6D44:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E6D4C
sub_080E6D4C: @ 0x080E6D4C
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	adds r2, r0, #0
	cmp r2, #0
	bne _080E6DDC
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0xb
	bgt _080E6DC0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E6D9C
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080E6D8C @ =0xFFFFFF00
	cmp r2, r0
	bge _080E6D90
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1]
	b _080E6DC6
	.align 2, 0
_080E6D8C: .4byte 0xFFFFFF00
_080E6D90:
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r2, r0
	ble _080E6DC6
	strh r0, [r1]
	b _080E6DC6
_080E6D9C:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080E6DB8
	ldr r2, _080E6DBC @ =0xFFFFFF00
	cmp r0, r2
	bge _080E6DC6
_080E6DB8:
	strh r2, [r1]
	b _080E6DC6
	.align 2, 0
_080E6DBC: .4byte 0xFFFFFF00
_080E6DC0:
	adds r0, r4, #0
	adds r0, #0x50
	strh r2, [r0]
_080E6DC6:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x14
	ble _080E6DE0
	adds r0, r4, #0
	bl sub_080E7CA8
	b _080E6DE0
_080E6DDC:
	subs r0, #1
	strb r0, [r1]
_080E6DE0:
	adds r2, r4, #0
	adds r2, #0x52
	movs r0, #0
	ldrsh r1, [r2, r0]
	ldr r0, [r4, #0x44]
	subs r0, r0, r1
	movs r1, #0xee
	lsls r1, r1, #8
	cmp r0, r1
	bgt _080E6DFA
	movs r0, #0
	strh r0, [r2]
	str r1, [r4, #0x44]
_080E6DFA:
	movs r1, #0
	ldrsh r0, [r2, r1]
	ldr r1, [r4, #0x44]
	subs r1, r1, r0
	ldr r0, _080E6E18 @ =0x000129FF
	cmp r1, r0
	ble _080E6E12
	movs r0, #0
	strh r0, [r2]
	movs r0, #0x95
	lsls r0, r0, #9
	str r0, [r4, #0x44]
_080E6E12:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E6E18: .4byte 0x000129FF

	thumb_func_start sub_080E6E1C
sub_080E6E1C: @ 0x080E6E1C
	push {r4, lr}
	mov ip, r0
	ldr r1, [r0, #8]
	movs r0, #4
	orrs r1, r0
	mov r0, ip
	str r1, [r0, #8]
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #1
	bne _080E6F14
	ands r1, r0
	cmp r1, #0
	beq _080E6E68
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080E6E54 @ =0xFFFFFDC0
	cmp r2, r0
	bge _080E6E5C
	ldr r0, _080E6E58 @ =0x0000FDC0
	strh r0, [r1]
	b _080E6E86
	.align 2, 0
_080E6E54: .4byte 0xFFFFFDC0
_080E6E58: .4byte 0x0000FDC0
_080E6E5C:
	movs r0, #0x90
	lsls r0, r0, #2
	cmp r2, r0
	ble _080E6E86
	strh r0, [r1]
	b _080E6E86
_080E6E68:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E6E84
	ldr r2, _080E6EB8 @ =0xFFFFFDC0
	cmp r0, r2
	bge _080E6E86
_080E6E84:
	strh r2, [r1]
_080E6E86:
	mov r0, ip
	adds r0, #0xac
	ldr r1, [r0]
	mov r3, ip
	ldr r2, [r3, #0x44]
	movs r4, #0x80
	lsls r4, r4, #4
	adds r0, r2, r4
	ldr r1, [r1, #0x44]
	cmp r1, r0
	blt _080E6EC4
	mov r0, ip
	adds r0, #0x52
	ldrh r1, [r0]
	subs r1, #0x20
	strh r1, [r0]
	lsls r1, r1, #0x10
	ldr r2, _080E6EBC @ =0xFE800000
	adds r3, r0, #0
	cmp r1, r2
	blt _080E6EB2
	b _080E6FEA
_080E6EB2:
	ldr r0, _080E6EC0 @ =0x0000FE80
	b _080E6FE8
	.align 2, 0
_080E6EB8: .4byte 0xFFFFFDC0
_080E6EBC: .4byte 0xFE800000
_080E6EC0: .4byte 0x0000FE80
_080E6EC4:
	ldr r3, _080E6EEC @ =0xFFFFF800
	adds r0, r2, r3
	cmp r1, r0
	bgt _080E6EF0
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	adds r3, r1, #0
	cmp r0, r2
	bgt _080E6EE6
	b _080E6FEA
_080E6EE6:
	strh r2, [r3]
	b _080E6FEA
	.align 2, 0
_080E6EEC: .4byte 0xFFFFF800
_080E6EF0:
	mov r0, ip
	adds r0, #0x52
	ldrh r2, [r0]
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r3, r0, #0
	cmp r1, #0
	bge _080E6F0E
	adds r0, r2, #0
	adds r0, #0x12
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E6FEA
	b _080E6FE6
_080E6F0E:
	adds r0, r2, #0
	subs r0, #0x12
	b _080E6FDE
_080E6F14:
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080E6F40
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E6F3C @ =0xFFFFFD30
	cmp r0, r2
	blt _080E6F5C
	movs r2, #0xb4
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E6F5E
	b _080E6F5C
	.align 2, 0
_080E6F3C: .4byte 0xFFFFFD30
_080E6F40:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xb4
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080E6F5C
	ldr r2, _080E6F8C @ =0xFFFFFD30
	cmp r0, r2
	bge _080E6F5E
_080E6F5C:
	strh r2, [r1]
_080E6F5E:
	mov r0, ip
	adds r0, #0xac
	ldr r1, [r0]
	mov r0, ip
	ldr r2, [r0, #0x44]
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r2, r3
	ldr r1, [r1, #0x44]
	cmp r1, r0
	blt _080E6F98
	mov r0, ip
	adds r0, #0x52
	ldrh r1, [r0]
	subs r1, #0x10
	strh r1, [r0]
	lsls r1, r1, #0x10
	ldr r2, _080E6F90 @ =0xFF300000
	adds r3, r0, #0
	cmp r1, r2
	bge _080E6FEA
	ldr r0, _080E6F94 @ =0x0000FF30
	b _080E6FE8
	.align 2, 0
_080E6F8C: .4byte 0xFFFFFD30
_080E6F90: .4byte 0xFF300000
_080E6F94: .4byte 0x0000FF30
_080E6F98:
	ldr r4, _080E6FB8 @ =0xFFFFF800
	adds r0, r2, r4
	cmp r1, r0
	bgt _080E6FBC
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r3, r1, #0
	cmp r0, #0xd0
	ble _080E6FEA
	movs r0, #0xd0
	b _080E6FE8
	.align 2, 0
_080E6FB8: .4byte 0xFFFFF800
_080E6FBC:
	mov r0, ip
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r3, r0, #0
	cmp r1, #0
	bge _080E6FDA
	adds r0, r2, #0
	adds r0, #8
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E6FEA
	b _080E6FE6
_080E6FDA:
	adds r0, r2, #0
	subs r0, #8
_080E6FDE:
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E6FEA
_080E6FE6:
	movs r0, #0
_080E6FE8:
	strh r0, [r3]
_080E6FEA:
	adds r2, r3, #0
	movs r4, #0
	ldrsh r1, [r2, r4]
	mov r4, ip
	ldr r0, [r4, #0x44]
	subs r0, r0, r1
	movs r1, #0xee
	lsls r1, r1, #8
	cmp r0, r1
	bgt _080E7004
	movs r0, #0
	strh r0, [r2]
	str r1, [r4, #0x44]
_080E7004:
	movs r1, #0
	ldrsh r0, [r3, r1]
	mov r2, ip
	ldr r1, [r2, #0x44]
	subs r1, r1, r0
	ldr r0, _080E7024 @ =0x000129FF
	cmp r1, r0
	ble _080E701E
	movs r0, #0
	strh r0, [r3]
	movs r0, #0x95
	lsls r0, r0, #9
	str r0, [r2, #0x44]
_080E701E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E7024: .4byte 0x000129FF

	thumb_func_start sub_080E7028
sub_080E7028: @ 0x080E7028
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	ldr r1, [r4, #0x78]
	ldr r0, _080E7068 @ =sub_080E6784
	cmp r1, r0
	beq _080E7038
	b _080E7142
_080E7038:
	ldr r2, _080E706C @ =sub_080E7148
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E70C4
	ldr r2, _080E7070 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E7074 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E7078 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080E707C @ =0x00005554
	cmp r2, r0
	bhi _080E7080
	movs r1, #0
	b _080E708A
	.align 2, 0
_080E7068: .4byte sub_080E6784
_080E706C: .4byte sub_080E7148
_080E7070: .4byte gRngVal
_080E7074: .4byte 0x00196225
_080E7078: .4byte 0x3C6EF35F
_080E707C: .4byte 0x00005554
_080E7080:
	ldr r0, _080E7098 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080E708A
	movs r1, #1
_080E708A:
	cmp r1, #1
	beq _080E70AA
	cmp r1, #1
	bgt _080E709C
	cmp r1, #0
	beq _080E70A2
	b _080E70BC
	.align 2, 0
_080E7098: .4byte 0x0000AAA9
_080E709C:
	cmp r1, #2
	beq _080E70B2
	b _080E70BC
_080E70A2:
	adds r1, r4, #0
	adds r1, #0xa0
	movs r0, #0xc0
	b _080E70BA
_080E70AA:
	adds r1, r4, #0
	adds r1, #0xa0
	movs r0, #0xe0
	b _080E70BA
_080E70B2:
	adds r1, r4, #0
	adds r1, #0xa0
	movs r0, #0x88
	lsls r0, r0, #1
_080E70BA:
	strh r0, [r1]
_080E70BC:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080E7138
_080E70C4:
	ldr r2, _080E70E0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E70E4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E70E8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080E70EC @ =0x00005554
	cmp r2, r0
	bhi _080E70F0
	movs r1, #0
	b _080E70FA
	.align 2, 0
_080E70E0: .4byte gRngVal
_080E70E4: .4byte 0x00196225
_080E70E8: .4byte 0x3C6EF35F
_080E70EC: .4byte 0x00005554
_080E70F0:
	ldr r0, _080E7108 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080E70FA
	movs r1, #1
_080E70FA:
	cmp r1, #1
	beq _080E7120
	cmp r1, #1
	bgt _080E710C
	cmp r1, #0
	beq _080E7112
	b _080E7130
	.align 2, 0
_080E7108: .4byte 0x0000AAA9
_080E710C:
	cmp r1, #2
	beq _080E7128
	b _080E7130
_080E7112:
	adds r1, r4, #0
	adds r1, #0xa0
	ldr r0, _080E711C @ =0x0000FFF0
	b _080E712E
	.align 2, 0
_080E711C: .4byte 0x0000FFF0
_080E7120:
	adds r1, r4, #0
	adds r1, #0xa0
	movs r0, #0x20
	b _080E712E
_080E7128:
	adds r1, r4, #0
	adds r1, #0xa0
	movs r0, #0x40
_080E712E:
	strh r0, [r1]
_080E7130:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080E7138:
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0xa2
	movs r0, #0xee
	strh r0, [r1]
_080E7142:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080E7148
sub_080E7148: @ 0x080E7148
	push {r4, r5, lr}
	mov ip, r0
	ldr r0, [r0, #8]
	movs r5, #1
	ands r5, r0
	movs r1, #4
	orrs r0, r1
	mov r1, ip
	str r0, [r1, #8]
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r4, #0
	strb r0, [r1]
	mov r2, ip
	ldr r3, [r2, #0x44]
	ldr r1, _080E7198 @ =0xFFFFFC00
	ands r3, r1
	mov r0, ip
	adds r0, #0xa2
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r2, r0, #8
	ands r2, r1
	cmp r3, r2
	ble _080E719C
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #1
	cmp r0, r2
	ble _080E71E6
	strh r2, [r1]
	b _080E71E6
	.align 2, 0
_080E7198: .4byte 0xFFFFFC00
_080E719C:
	cmp r3, r2
	bge _080E71BC
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E71B8 @ =0xFFFFFEE0
	cmp r0, r2
	bge _080E71E6
	strh r2, [r1]
	b _080E71E6
	.align 2, 0
_080E71B8: .4byte 0xFFFFFEE0
_080E71BC:
	mov r1, ip
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E71D8
	adds r0, r2, #0
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E71E6
	b _080E71E4
_080E71D8:
	adds r0, r2, #0
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E71E6
_080E71E4:
	strh r4, [r1]
_080E71E6:
	mov r0, ip
	ldr r3, [r0, #0x40]
	ldr r0, _080E720C @ =0xFFFFFC00
	ands r3, r0
	mov r1, ip
	adds r1, #0xa0
	movs r2, #0
	ldrsh r1, [r1, r2]
	lsls r2, r1, #8
	ands r2, r0
	cmp r3, r2
	bge _080E7210
	mov r3, ip
	ldr r0, [r3, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r3, #8]
	b _080E724C
	.align 2, 0
_080E720C: .4byte 0xFFFFFC00
_080E7210:
	cmp r3, r2
	ble _080E7270
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #1
	orrs r0, r1
	mov r2, ip
	str r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _080E724C
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0xe
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080E7248 @ =0xFFFFFE80
	cmp r0, r2
	blt _080E7242
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080E729C
_080E7242:
	strh r2, [r1]
	b _080E729C
	.align 2, 0
_080E7248: .4byte 0xFFFFFE80
_080E724C:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0xe
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080E7242
	ldr r2, _080E726C @ =0xFFFFFE80
	cmp r0, r2
	bge _080E729C
	b _080E7242
	.align 2, 0
_080E726C: .4byte 0xFFFFFE80
_080E7270:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080E728C
	adds r0, r2, #0
	adds r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080E729C
	b _080E7298
_080E728C:
	adds r0, r2, #0
	subs r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080E729C
_080E7298:
	movs r0, #0
	strh r0, [r1]
_080E729C:
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	orrs r0, r5
	mov r2, ip
	str r0, [r2, #8]
	ldr r0, [r2, #0x50]
	cmp r0, #0
	bne _080E72B8
	mov r0, ip
	bl sub_080E7CBC
_080E72B8:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E72C0
sub_080E72C0: @ 0x080E72C0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	ldr r0, [r4, #0x70]
	mov r8, r0
	adds r3, r4, #0
	adds r3, #0x9e
	ldrb r0, [r3]
	ldr r7, _080E738C @ =gUnk_08356B88
	cmp r0, #0
	bne _080E73C2
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrb r2, [r1]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrb r0, [r0, #8]
	adds r6, r1, #0
	cmp r0, #0
	bne _080E72F8
	subs r0, r2, #1
	strb r0, [r6]
_080E72F8:
	ldrb r1, [r6]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrb r0, [r0, #8]
	strb r0, [r3]
	ldrb r1, [r6]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrb r1, [r0, #9]
	adds r0, r1, #0
	movs r2, #0x83
	adds r2, r2, r4
	mov ip, r2
	cmp r0, #0xff
	beq _080E7320
	strb r1, [r2]
_080E7320:
	ldrb r0, [r6]
	cmp r0, #0
	beq _080E7390
	adds r2, r0, #0
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r7
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrh r3, [r1]
	movs r2, #0
	ldrsh r1, [r1, r2]
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r1, r0
	beq _080E735C
	adds r2, r4, #0
	adds r2, #0x50
	strh r3, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E735C
	rsbs r0, r3, #0
	strh r0, [r2]
_080E735C:
	adds r0, r4, #0
	adds r0, #0x9f
	ldrb r2, [r0]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r7
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrh r2, [r1, #2]
	movs r3, #2
	ldrsh r1, [r1, r3]
	movs r3, #2
	ldrsh r0, [r0, r3]
	cmp r1, r0
	beq _080E73C2
	adds r0, r4, #0
	adds r0, #0x52
	strh r2, [r0]
	b _080E73C2
	.align 2, 0
_080E738C: .4byte gUnk_08356B88
_080E7390:
	ldrb r1, [r6]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrh r0, [r0, #2]
	adds r3, r4, #0
	adds r3, #0x52
	strh r0, [r3]
	ldrb r1, [r6]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrh r5, [r0]
	adds r2, r4, #0
	adds r2, #0x50
	strh r5, [r2]
	ldr r1, [r4, #8]
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080E73F2
	rsbs r0, r5, #0
	strh r0, [r2]
_080E73C2:
	ldr r1, [r4, #8]
	movs r0, #1
	ands r1, r0
	adds r6, r4, #0
	adds r6, #0x9f
	movs r0, #0x83
	adds r0, r0, r4
	mov ip, r0
	adds r2, r4, #0
	adds r2, #0x50
	adds r3, r4, #0
	adds r3, #0x52
	cmp r1, #0
	beq _080E73F2
	ldrb r1, [r6]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrh r1, [r2]
	ldrh r0, [r0, #4]
	subs r1, r1, r0
	strh r1, [r2]
	b _080E7404
_080E73F2:
	ldrb r0, [r6]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r7
	ldrh r0, [r1, #4]
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2]
_080E7404:
	ldrb r1, [r6]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrh r0, [r0, #6]
	ldrh r2, [r3]
	adds r0, r0, r2
	strh r0, [r3]
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	mov r3, ip
	ldrb r0, [r3]
	adds r5, r1, #0
	cmp r0, #2
	bne _080E747C
	mov r1, r8
	ldr r0, [r1, #0x40]
	ldr r1, [r4, #0x40]
	subs r2, r0, r1
	cmp r2, #0
	blt _080E7444
	ldr r0, _080E7440 @ =0x00003FFF
	cmp r2, r0
	ble _080E744C
	b _080E7450
	.align 2, 0
_080E7440: .4byte 0x00003FFF
_080E7444:
	subs r1, r1, r0
	ldr r0, _080E7474 @ =0x00003FFF
	cmp r1, r0
	bgt _080E7450
_080E744C:
	movs r0, #1
	strh r0, [r4, #4]
_080E7450:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E747C
	adds r3, r4, #0
	adds r3, #0x85
	ldrb r0, [r3]
	cmp r0, #0
	beq _080E7478
	movs r0, #0
	mov r2, ip
	strb r0, [r2]
	ldr r1, [r4, #8]
	movs r2, #1
	eors r1, r2
	str r1, [r4, #8]
	b _080E747A
	.align 2, 0
_080E7474: .4byte 0x00003FFF
_080E7478:
	movs r0, #1
_080E747A:
	strb r0, [r3]
_080E747C:
	ldrb r2, [r6]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r7
	ldrb r0, [r1, #8]
	cmp r0, #0
	bne _080E74DA
	ldrb r0, [r5]
	cmp r0, #0
	bne _080E74DA
	movs r3, #4
	ldrsh r0, [r4, r3]
	cmp r0, #0
	beq _080E74D4
	ldr r0, [r4, #0xc]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0xc]
	ldr r2, _080E74CC @ =sub_080E6784
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0xa0
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	ldr r1, _080E74D0 @ =0xFDFFFFFF
	ands r0, r1
	str r0, [r4, #8]
	b _080E74DA
	.align 2, 0
_080E74CC: .4byte sub_080E6784
_080E74D0: .4byte 0xFDFFFFFF
_080E74D4:
	movs r0, #0xff
	orrs r0, r2
	strb r0, [r6]
_080E74DA:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080E74E4
sub_080E74E4: @ 0x080E74E4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #3
	bne _080E7532
	ldrb r0, [r6]
	cmp r0, #0
	bne _080E7532
	movs r0, #0x80
	lsls r0, r0, #1
	mov r8, r0
	adds r0, r6, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080E7532
	adds r0, r6, #0
	adds r0, #0xd4
	ldrh r0, [r0]
	cmp r0, #0x27
	beq _080E7532
	cmp r0, #0x7a
	bhi _080E7532
	movs r1, #0x88
	lsls r1, r1, #1
	adds r7, r6, r1
	ldr r0, [r7]
	cmp r0, #0
	bne _080E7532
	ldr r4, [r6, #8]
	ldr r0, _080E7538 @ =0x03800B00
	ands r4, r0
	cmp r4, #0
	beq _080E753C
_080E7532:
	movs r0, #0
	b _080E75F0
	.align 2, 0
_080E7538: .4byte 0x03800B00
_080E753C:
	ldr r2, _080E75FC @ =sub_080E7CF4
	adds r0, r5, #0
	movs r1, #7
	bl ObjectSetFunc
	adds r2, r5, #0
	adds r2, #0x50
	movs r0, #0
	strh r4, [r2]
	adds r1, r5, #0
	adds r1, #0x52
	strh r4, [r1]
	adds r1, #0x4d
	strb r0, [r1]
	subs r1, #1
	strb r0, [r1]
	ldr r0, _080E7600 @ =gUnk_08356B00
	str r0, [r7]
	adds r0, r5, #0
	adds r0, #0xac
	str r6, [r0]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	str r6, [r5, #0x6c]
	movs r3, #0x80
	strh r3, [r2]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E7584
	rsbs r0, r3, #0
	strh r0, [r2]
_080E7584:
	ldr r1, _080E7604 @ =gUnk_02020EE0
	ldr r0, _080E7608 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E75EE
	ldrb r0, [r5]
	cmp r0, #0
	bne _080E75B0
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E75EE
_080E75B0:
	ldr r1, _080E760C @ =gUnk_08D60FA4
	ldr r4, _080E7610 @ =gSongTable
	ldr r2, _080E7614 @ =0x00000C34
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E75D6
	movs r1, #0xc3
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E75EE
_080E75D6:
	cmp r3, #0
	beq _080E75E6
	ldr r0, _080E7618 @ =gUnk_0203AD10
	ldr r0, [r0]
	mov r2, r8
	ands r0, r2
	cmp r0, #0
	bne _080E75EE
_080E75E6:
	movs r0, #0xc3
	lsls r0, r0, #1
	bl m4aSongNumStart
_080E75EE:
	movs r0, #1
_080E75F0:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080E75FC: .4byte sub_080E7CF4
_080E7600: .4byte gUnk_08356B00
_080E7604: .4byte gUnk_02020EE0
_080E7608: .4byte gUnk_0203AD3C
_080E760C: .4byte gUnk_08D60FA4
_080E7610: .4byte gSongTable
_080E7614: .4byte 0x00000C34
_080E7618: .4byte gUnk_0203AD10

	thumb_func_start sub_080E761C
sub_080E761C: @ 0x080E761C
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, _080E764C @ =sub_080E76FC
	movs r2, #0xd4
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E7650
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080E7658
	.align 2, 0
_080E764C: .4byte sub_080E76FC
_080E7650:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080E7658:
	adds r4, r0, #0
	bl sub_0803E380
	movs r1, #0
	movs r0, #2
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	str r5, [r4, #0x70]
	strh r1, [r4, #4]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x60
	strh r1, [r0]
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _080E76F4 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r3, #1
	adds r0, r3, #0
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080E76A8
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
_080E76A8:
	adds r0, r4, #0
	adds r0, #0x63
	strb r3, [r0]
	ldr r0, [r4, #0x68]
	movs r1, #0x20
	orrs r0, r1
	ldr r2, _080E76F8 @ =0x12010400
	str r2, [r4, #8]
	subs r1, #0x28
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r5, #8]
	ands r0, r3
	cmp r0, #0
	beq _080E76D6
	orrs r2, r3
_080E76D6:
	str r2, [r4, #8]
	movs r2, #6
	rsbs r2, r2, #0
	movs r0, #6
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0xc
	bl sub_0803E2B0
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E76F4: .4byte gUnk_03000510
_080E76F8: .4byte 0x12010400

	thumb_func_start sub_080E76FC
sub_080E76FC: @ 0x080E76FC
	push {r4, r5, lr}
	ldr r2, _080E7718 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E771C
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080E7724
	.align 2, 0
_080E7718: .4byte gCurTask
_080E771C:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080E7724:
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	ldr r1, [r4, #8]
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080E773E
	ldr r0, [r2]
	bl TaskDestroy
	b _080E783A
_080E773E:
	ldr r0, [r5, #8]
	ands r0, r3
	cmp r0, #0
	beq _080E774C
	orrs r1, r3
	str r1, [r4, #8]
	b _080E783A
_080E774C:
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r3, r4, #0
	adds r3, #0x56
	strb r0, [r3]
	ldr r0, _080E7788 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	ldrb r1, [r3]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080E778C
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	bne _080E778C
	adds r0, r4, #0
	bl sub_0803D9A8
	b _080E783A
	.align 2, 0
_080E7788: .4byte gUnk_03000510
_080E778C:
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E779C
	ldr r0, [r4, #8]
	orrs r0, r1
	b _080E77A4
_080E779C:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080E77A4:
	str r0, [r4, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #3
	bne _080E783A
	ldr r1, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #0xb
	ands r0, r1
	cmp r0, #0
	beq _080E77C8
	ldr r0, _080E77C4 @ =0xFFFBFFFF
	ands r1, r0
	str r1, [r4, #8]
	b _080E783A
	.align 2, 0
_080E77C4: .4byte 0xFFFBFFFF
_080E77C8:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080E783A
	movs r0, #0x90
	lsls r0, r0, #5
	ands r1, r0
	cmp r1, #0
	bne _080E783A
	ldrb r0, [r3]
	cmp r0, #0xff
	beq _080E7800
	ldr r2, _080E77F8 @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r2, _080E77FC @ =0x0000065E
	adds r0, r0, r2
	ldrb r1, [r0]
	b _080E7802
	.align 2, 0
_080E77F8: .4byte gCurLevelInfo
_080E77FC: .4byte 0x0000065E
_080E7800:
	movs r1, #0xff
_080E7802:
	cmp r1, #0xff
	beq _080E783A
	lsls r3, r1, #6
	ldrb r0, [r4]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _080E7840 @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r2, [r4]
	adds r1, r1, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080E7844 @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r4, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_080E783A:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E7840: .4byte gUnk_02022EB0
_080E7844: .4byte gUnk_02022F50

	thumb_func_start sub_080E7848
sub_080E7848: @ 0x080E7848
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	mov sl, r5
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov sb, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov r8, r0
	movs r4, #0
	ldr r1, _080E7878 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _080E787C @ =gUnk_020229E0
	mov ip, r7
	b _080E7894
	.align 2, 0
_080E7878: .4byte gUnk_020229D4
_080E787C: .4byte gUnk_020229E0
_080E7880:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080E789C
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080E7894:
	cmp r0, #0
	bne _080E7880
	orrs r2, r3
	str r2, [r1]
_080E789C:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	add r1, ip
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, sb
	strh r0, [r1, #6]
	mov r7, r8
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0x9f
	strb r0, [r1, #0xc]
	strb r6, [r1, #0xe]
	strb r3, [r1, #0xf]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0x10]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	adds r4, r5, #0
	adds r4, #0x56
	ldrb r0, [r4]
	bl CreateObject
	adds r1, r0, #0
	str r5, [r1, #0x70]
	cmp r6, #1
	beq _080E7908
	cmp r6, #1
	ble _080E7902
	cmp r6, #2
	beq _080E790E
_080E7902:
	mov r0, sl
	adds r0, #0xb4
	b _080E7912
_080E7908:
	mov r0, sl
	adds r0, #0xb8
	b _080E7912
_080E790E:
	mov r0, sl
	adds r0, #0xbc
_080E7912:
	str r1, [r0]
	ldr r1, _080E798C @ =gUnk_02020EE0
	ldr r0, _080E7990 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E797C
	ldrb r0, [r5]
	cmp r0, #0
	bne _080E793C
	ldrb r0, [r4]
	cmp r0, r2
	bne _080E797C
_080E793C:
	ldr r1, _080E7994 @ =gUnk_08D60FA4
	ldr r4, _080E7998 @ =gSongTable
	ldr r2, _080E799C @ =0x00000CE4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E7962
	movs r7, #0xce
	lsls r7, r7, #4
	adds r0, r4, r7
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E797C
_080E7962:
	cmp r3, #0
	beq _080E7974
	ldr r0, _080E79A0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E797C
_080E7974:
	movs r0, #0xce
	lsls r0, r0, #1
	bl m4aSongNumStart
_080E797C:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E798C: .4byte gUnk_02020EE0
_080E7990: .4byte gUnk_0203AD3C
_080E7994: .4byte gUnk_08D60FA4
_080E7998: .4byte gSongTable
_080E799C: .4byte 0x00000CE4
_080E79A0: .4byte gUnk_0203AD10

	thumb_func_start sub_080E79A4
sub_080E79A4: @ 0x080E79A4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E79CC @ =sub_080E6784
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0xa0
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	ldr r1, _080E79D0 @ =0xFDFFFFFF
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E79CC: .4byte sub_080E6784
_080E79D0: .4byte 0xFDFFFFFF

	thumb_func_start sub_080E79D4
sub_080E79D4: @ 0x080E79D4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E79F4 @ =sub_080E3FFC
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r4, #0x52
	strh r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E79F4: .4byte sub_080E3FFC

	thumb_func_start sub_080E79F8
sub_080E79F8: @ 0x080E79F8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E7A14 @ =sub_080E5290
	movs r1, #4
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E7A14: .4byte sub_080E5290

	thumb_func_start sub_080E7A18
sub_080E7A18: @ 0x080E7A18
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E7A34 @ =sub_080E5760
	movs r1, #0xf
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E7A34: .4byte sub_080E5760

	thumb_func_start sub_080E7A38
sub_080E7A38: @ 0x080E7A38
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E7A4C
	adds r0, r2, #0
	bl sub_080E7A50
_080E7A4C:
	pop {r0}
	bx r0

	thumb_func_start sub_080E7A50
sub_080E7A50: @ 0x080E7A50
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r0, #0xac
	ldr r4, [r0]
	ldr r2, _080E7A78 @ =sub_080E7A80
	adds r0, r5, #0
	movs r1, #6
	bl ObjectSetFunc
	movs r0, #0x88
	lsls r0, r0, #1
	adds r4, r4, r0
	ldr r0, _080E7A7C @ =gUnk_08356AD8
	str r0, [r4]
	movs r0, #0x10
	strh r0, [r5, #4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E7A78: .4byte sub_080E7A80
_080E7A7C: .4byte gUnk_08356AD8

	thumb_func_start sub_080E7A80
sub_080E7A80: @ 0x080E7A80
	push {lr}
	adds r1, r0, #0
	ldrh r0, [r1, #4]
	subs r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E7A96
	adds r0, r1, #0
	bl sub_080E7A9C
_080E7A96:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E7A9C
sub_080E7A9C: @ 0x080E7A9C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E7AB8 @ =sub_080E7ABC
	movs r1, #7
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E7AB8: .4byte sub_080E7ABC

	thumb_func_start sub_080E7ABC
sub_080E7ABC: @ 0x080E7ABC
	push {r4, lr}
	adds r2, r0, #0
	adds r0, #0xac
	ldr r3, [r0]
	adds r4, r2, #0
	adds r4, #0x83
	ldrb r0, [r4]
	cmp r0, #7
	bne _080E7AF0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E7B06
	movs r0, #8
	strb r0, [r4]
	movs r0, #0x10
	strh r0, [r2, #4]
	movs r0, #0x88
	lsls r0, r0, #1
	adds r1, r3, r0
	ldr r0, _080E7AEC @ =gUnk_08356AF0
	str r0, [r1]
	b _080E7B06
	.align 2, 0
_080E7AEC: .4byte gUnk_08356AF0
_080E7AF0:
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E7B06
	adds r0, r2, #0
	bl sub_080E4BD0
	movs r0, #4
	strb r0, [r4]
_080E7B06:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080E7B0C
sub_080E7B0C: @ 0x080E7B0C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E7B34 @ =sub_080E7B38
	movs r1, #9
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E7B34: .4byte sub_080E7B38

	thumb_func_start sub_080E7B38
sub_080E7B38: @ 0x080E7B38
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E7B4C
	adds r0, r2, #0
	bl sub_080E59B4
_080E7B4C:
	pop {r0}
	bx r0

	thumb_func_start sub_080E7B50
sub_080E7B50: @ 0x080E7B50
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E7B78 @ =sub_080E5AC4
	movs r1, #0xb
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E7B78: .4byte sub_080E5AC4

	thumb_func_start sub_080E7B7C
sub_080E7B7C: @ 0x080E7B7C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E7BA0 @ =sub_080E5B8C
	movs r1, #0xc
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E7BA0: .4byte sub_080E5B8C

	thumb_func_start sub_080E7BA4
sub_080E7BA4: @ 0x080E7BA4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E7BC8 @ =sub_080E45BC
	movs r1, #1
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r4, #0x9f
	movs r0, #0
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E7BC8: .4byte sub_080E45BC

	thumb_func_start sub_080E7BCC
sub_080E7BCC: @ 0x080E7BCC
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E7BFC @ =sub_080E4784
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	movs r1, #1
	eors r0, r1
	str r0, [r4, #8]
	adds r4, #0x9f
	movs r0, #0x12
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E7BFC: .4byte sub_080E4784

	thumb_func_start sub_080E7C00
sub_080E7C00: @ 0x080E7C00
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E7C4C @ =sub_080E5D04
	movs r1, #0x11
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080E7C50 @ =0x0000FFC0
	strh r0, [r1]
	movs r0, #0x78
	strh r0, [r4, #4]
	movs r1, #9
	rsbs r1, r1, #0
	adds r0, r4, #0
	movs r2, #4
	bl sub_080E625C
	movs r1, #8
	rsbs r1, r1, #0
	movs r2, #6
	rsbs r2, r2, #0
	adds r0, r4, #0
	bl sub_080E625C
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E7C4C: .4byte sub_080E5D04
_080E7C50: .4byte 0x0000FFC0

	thumb_func_start sub_080E7C54
sub_080E7C54: @ 0x080E7C54
	push {lr}
	adds r2, r0, #0
	adds r3, r2, #0
	adds r3, #0xb4
	ldr r0, [r3]
	cmp r0, #0
	beq _080E7C72
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080E7C72
	movs r0, #0
	str r0, [r3]
_080E7C72:
	adds r3, r2, #0
	adds r3, #0xb8
	ldr r0, [r3]
	cmp r0, #0
	beq _080E7C8C
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080E7C8C
	movs r0, #0
	str r0, [r3]
_080E7C8C:
	adds r2, #0xbc
	ldr r0, [r2]
	cmp r0, #0
	beq _080E7CA4
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080E7CA4
	movs r0, #0
	str r0, [r2]
_080E7CA4:
	pop {r0}
	bx r0

	thumb_func_start sub_080E7CA8
sub_080E7CA8: @ 0x080E7CA8
	push {lr}
	ldr r2, _080E7CB8 @ =sub_080E6E1C
	movs r1, #3
	bl ObjectSetFunc
	pop {r0}
	bx r0
	.align 2, 0
_080E7CB8: .4byte sub_080E6E1C

	thumb_func_start sub_080E7CBC
sub_080E7CBC: @ 0x080E7CBC
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E7CF0 @ =sub_080E72C0
	movs r1, #6
	bl ObjectSetFunc
	ldr r1, [r4, #8]
	movs r0, #0x40
	orrs r1, r0
	subs r0, #0x61
	ands r1, r0
	ldr r0, [r4, #0xc]
	movs r2, #2
	orrs r0, r2
	str r0, [r4, #0xc]
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r1, r0
	str r1, [r4, #8]
	adds r4, #0x85
	movs r0, #0
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E7CF0: .4byte sub_080E72C0

	thumb_func_start sub_080E7CF4
sub_080E7CF4: @ 0x080E7CF4
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #1]
	cmp r0, #0xf
	bne _080E7D06
	adds r1, r2, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080E7D06:
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E7D16
	adds r0, r2, #0
	bl sub_080E7D1C
_080E7D16:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E7D1C
sub_080E7D1C: @ 0x080E7D1C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E7D34 @ =sub_080E7D38
	movs r1, #8
	bl ObjectSetFunc
	movs r0, #0x10
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E7D34: .4byte sub_080E7D38

	thumb_func_start sub_080E7D38
sub_080E7D38: @ 0x080E7D38
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E7D66
	ldr r2, _080E7D6C @ =sub_080E6784
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0xa0
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	ldr r1, _080E7D70 @ =0xFDFFFFFF
	ands r0, r1
	str r0, [r4, #8]
_080E7D66:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E7D6C: .4byte sub_080E6784
_080E7D70: .4byte 0xFDFFFFFF

	thumb_func_start sub_080E7D74
sub_080E7D74: @ 0x080E7D74
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080E7DA8 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080E7DAC @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E7DB0
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080E7DB8
	.align 2, 0
_080E7DA8: .4byte ObjectMain
_080E7DAC: .4byte ObjectDestroy
_080E7DB0:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080E7DB8:
	adds r4, r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	ldr r1, _080E7EA4 @ =0x001080A0
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x12
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #0x14
	rsbs r1, r1, #0
	movs r2, #0x10
	rsbs r2, r2, #0
	movs r0, #0x10
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0x10
	bl sub_0803E2B0
	movs r1, #7
	rsbs r1, r1, #0
	movs r2, #0xa
	rsbs r2, r2, #0
	movs r0, #0x12
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #7
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	adds r0, r4, #0
	bl sub_080EAD0C
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	str r0, [r4, #0x7c]
	ldr r2, _080E7EA8 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080E7EAC @ =0x0000065E
	adds r0, r0, r1
	ldrb r5, [r0]
	adds r0, r5, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0
	bl sub_08002A44
	adds r0, r5, #0
	movs r1, #0
	bl sub_08002A1C
	ldr r2, _080E7EB0 @ =gUnk_02020EE0
	ldr r0, _080E7EB4 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E7E98
	ldr r0, _080E7EB8 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080E7E98
	adds r0, r5, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080E7E98:
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080E7EA4: .4byte 0x001080A0
_080E7EA8: .4byte gCurLevelInfo
_080E7EAC: .4byte 0x0000065E
_080E7EB0: .4byte gUnk_02020EE0
_080E7EB4: .4byte gUnk_0203AD3C
_080E7EB8: .4byte gUnk_0203AD20

	thumb_func_start sub_080E7EBC
sub_080E7EBC: @ 0x080E7EBC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	bl sub_0803D368
	adds r6, r0, #0
	adds r7, r5, #0
	adds r7, #0xac
	str r6, [r7]
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r6, #0xc]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _080E7F8A
	adds r0, r5, #0
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E7F8A
	ldr r1, [r5, #0x40]
	ldr r2, [r5, #0x44]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r4, [r0]
	movs r3, #0x1a
	ldrsh r0, [r4, r3]
	mov ip, r0
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	adds r0, r6, #0
	mov r3, ip
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080E7F8A
	ldr r3, _080E7F94 @ =gCurLevelInfo
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	movs r2, #0xcd
	lsls r2, r2, #3
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa0
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa4
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa4
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa6
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa8
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xac
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r2, r5, #0
	adds r2, #0xaa
	strh r0, [r2]
	adds r0, r5, #0
	bl sub_080EABC0
_080E7F8A:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E7F94: .4byte gCurLevelInfo

	thumb_func_start sub_080E7F98
sub_080E7F98: @ 0x080E7F98
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	ldrb r0, [r4, #1]
	cmp r0, #1
	beq _080E7FAE
	cmp r0, #0x20
	bne _080E8016
_080E7FAE:
	ldr r1, _080E8030 @ =gUnk_02020EE0
	ldr r0, _080E8034 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E8016
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E7FDA
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E8016
_080E7FDA:
	ldr r1, _080E8038 @ =gUnk_08D60FA4
	ldr r5, _080E803C @ =gSongTable
	ldr r2, _080E8040 @ =0x00000D0C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E7FFE
	ldr r1, _080E8044 @ =0x00000D08
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E8016
_080E7FFE:
	cmp r3, #0
	beq _080E8010
	ldr r0, _080E8048 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E8016
_080E8010:
	ldr r0, _080E804C @ =0x000001A1
	bl m4aSongNumStart
_080E8016:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E8028
	adds r0, r4, #0
	bl sub_080EAC18
_080E8028:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E8030: .4byte gUnk_02020EE0
_080E8034: .4byte gUnk_0203AD3C
_080E8038: .4byte gUnk_08D60FA4
_080E803C: .4byte gSongTable
_080E8040: .4byte 0x00000D0C
_080E8044: .4byte 0x00000D08
_080E8048: .4byte gUnk_0203AD10
_080E804C: .4byte 0x000001A1

	thumb_func_start sub_080E8050
sub_080E8050: @ 0x080E8050
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrb r1, [r4, #1]
	cmp r1, #0x2c
	bhi _080E80CE
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _080E80CE
	ldr r1, _080E8154 @ =gUnk_02020EE0
	ldr r0, _080E8158 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E80CE
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E808E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E80CE
_080E808E:
	ldr r1, _080E815C @ =gUnk_08D60FA4
	ldr r5, _080E8160 @ =gSongTable
	ldr r2, _080E8164 @ =0x00000D14
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E80B4
	movs r1, #0xd1
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E80CE
_080E80B4:
	cmp r3, #0
	beq _080E80C6
	ldr r0, _080E8168 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E80CE
_080E80C6:
	movs r0, #0xd1
	lsls r0, r0, #1
	bl m4aSongNumStart
_080E80CE:
	ldrb r0, [r4, #1]
	cmp r0, #0x59
	bne _080E813C
	ldr r1, _080E8154 @ =gUnk_02020EE0
	ldr r0, _080E8158 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E813C
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E8100
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E813C
_080E8100:
	ldr r1, _080E815C @ =gUnk_08D60FA4
	ldr r5, _080E8160 @ =gSongTable
	ldr r2, _080E816C @ =0x00000D1C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E8124
	ldr r1, _080E8170 @ =0x00000D18
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E813C
_080E8124:
	cmp r3, #0
	beq _080E8136
	ldr r0, _080E8168 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E813C
_080E8136:
	ldr r0, _080E8174 @ =0x000001A3
	bl m4aSongNumStart
_080E813C:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E814C
	adds r0, r4, #0
	bl sub_080EAC48
_080E814C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E8154: .4byte gUnk_02020EE0
_080E8158: .4byte gUnk_0203AD3C
_080E815C: .4byte gUnk_08D60FA4
_080E8160: .4byte gSongTable
_080E8164: .4byte 0x00000D14
_080E8168: .4byte gUnk_0203AD10
_080E816C: .4byte 0x00000D1C
_080E8170: .4byte 0x00000D18
_080E8174: .4byte 0x000001A3

	thumb_func_start sub_080E8178
sub_080E8178: @ 0x080E8178
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r2, _080E81A8 @ =sub_080EACD8
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r1, [r4, #0x40]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080E81B0
	ldr r0, _080E81AC @ =0xFFFFFF00
	ands r1, r0
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	str r0, [r4, #0x40]
	b _080E81B6
	.align 2, 0
_080E81A8: .4byte sub_080EACD8
_080E81AC: .4byte 0xFFFFFF00
_080E81B0:
	ldr r0, _080E82A8 @ =0xFFFFFF00
	ands r1, r0
	str r1, [r4, #0x40]
_080E81B6:
	ldr r0, [r4, #8]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x3c
	strh r0, [r4, #4]
	adds r0, r4, #0
	bl sub_08034E14
	adds r1, r0, #0
	cmp r1, #0
	beq _080E81D2
	movs r0, #0
	strb r0, [r1, #9]
_080E81D2:
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r6, [r0]
	adds r3, r6, #0
	subs r3, #0x38
	ldr r2, _080E82AC @ =gCurLevelInfo
	subs r0, #0x2c
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080E82B0 @ =0x0000065E
	adds r0, r0, r1
	ldrb r5, [r0]
	lsls r3, r3, #0x10
	asrs r1, r3, #0x10
	cmp r1, #0
	blt _080E82A0
	ldr r0, _080E82B4 @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080E82A0
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080E82A0
	adds r0, r6, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r6, r3, #0
	adds r7, r4, #0
	adds r7, #0x60
	cmp r0, #0xf
	bls _080E8260
	movs r4, #1
_080E8228:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r5, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _080E8228
	adds r0, r5, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0
	bl sub_08002A44
_080E8260:
	ldr r1, _080E82B4 @ =gUnk_08352D80
	asrs r0, r6, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r5, #0
	bl sub_08002A1C
	ldr r2, _080E82B8 @ =gUnk_02020EE0
	ldr r0, _080E82BC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _080E82A0
	ldr r0, _080E82C0 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080E82A0
	adds r0, r5, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080E82A0:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E82A8: .4byte 0xFFFFFF00
_080E82AC: .4byte gCurLevelInfo
_080E82B0: .4byte 0x0000065E
_080E82B4: .4byte gUnk_08352D80
_080E82B8: .4byte gUnk_02020EE0
_080E82BC: .4byte gUnk_0203AD3C
_080E82C0: .4byte gUnk_0203AD20

	thumb_func_start sub_080E82C4
sub_080E82C4: @ 0x080E82C4
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _080E82DA
	adds r0, r4, #0
	bl sub_080EAFDC
	b _080E83A0
_080E82DA:
	ldr r2, _080E82FC @ =sub_080E83A8
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	ldr r1, [r4, #0x40]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080E8304
	ldr r0, _080E8300 @ =0xFFFFFF00
	ands r1, r0
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	str r0, [r4, #0x40]
	b _080E830A
	.align 2, 0
_080E82FC: .4byte sub_080E83A8
_080E8300: .4byte 0xFFFFFF00
_080E8304:
	ldr r0, _080E8350 @ =0xFFFFFF00
	ands r1, r0
	str r1, [r4, #0x40]
_080E830A:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080E8354 @ =gUnk_08351530
	ldr r0, _080E8358 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x88
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080E8372
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E8360
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E835C
	movs r0, #0x14
	b _080E839E
	.align 2, 0
_080E8350: .4byte 0xFFFFFF00
_080E8354: .4byte gUnk_08351530
_080E8358: .4byte gUnk_0203AD30
_080E835C:
	movs r0, #0x1e
	b _080E839E
_080E8360:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E836E
	movs r0, #8
	b _080E839E
_080E836E:
	movs r0, #0x10
	b _080E839E
_080E8372:
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E838E
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E838A
	movs r0, #0x28
	b _080E839E
_080E838A:
	movs r0, #0x5a
	b _080E839E
_080E838E:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E839C
	movs r0, #0x1e
	b _080E839E
_080E839C:
	movs r0, #0x3c
_080E839E:
	strh r0, [r4, #4]
_080E83A0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E83A8
sub_080E83A8: @ 0x080E83A8
	push {lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E842A
	adds r1, r3, #0
	adds r1, #0x85
	ldrb r0, [r1]
	cmp r0, #0
	beq _080E83D6
	movs r0, #0
	strb r0, [r1]
	adds r0, r3, #0
	bl sub_080EAE98
	b _080E842A
_080E83D6:
	adds r0, #1
	strb r0, [r1]
	ldr r2, _080E8400 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E8404 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E8408 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #3
	ands r1, r0
	cmp r1, #1
	beq _080E8414
	cmp r1, #1
	blo _080E840C
	cmp r1, #2
	beq _080E841C
	cmp r1, #3
	beq _080E8424
	b _080E842A
	.align 2, 0
_080E8400: .4byte gRngVal
_080E8404: .4byte 0x00196225
_080E8408: .4byte 0x3C6EF35F
_080E840C:
	adds r0, r3, #0
	bl sub_080E8430
	b _080E842A
_080E8414:
	adds r0, r3, #0
	bl sub_080E8588
	b _080E842A
_080E841C:
	adds r0, r3, #0
	bl sub_080EAD3C
	b _080E842A
_080E8424:
	adds r0, r3, #0
	bl sub_080EADE4
_080E842A:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E8430
sub_080E8430: @ 0x080E8430
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	adds r0, #0x85
	ldrb r0, [r0]
	mov r8, r0
	ldr r2, _080E8460 @ =sub_080E8738
	adds r0, r4, #0
	movs r1, #1
	bl ObjectSetFunc
	ldr r1, [r4, #0x40]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080E8468
	ldr r0, _080E8464 @ =0xFFFFFF00
	ands r1, r0
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	str r0, [r4, #0x40]
	b _080E846E
	.align 2, 0
_080E8460: .4byte sub_080E8738
_080E8464: .4byte 0xFFFFFF00
_080E8468:
	ldr r0, _080E84AC @ =0xFFFFFF00
	ands r1, r0
	str r1, [r4, #0x40]
_080E846E:
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r2, [r0]
	ldr r3, _080E84B0 @ =gRngVal
	ldr r0, [r3]
	ldr r7, _080E84B4 @ =0x00196225
	muls r0, r7, r0
	ldr r6, _080E84B8 @ =0x3C6EF35F
	adds r2, r0, r6
	str r2, [r3]
	lsrs r0, r2, #0x10
	movs r5, #1
	ands r0, r5
	adds r1, #0x4d
	strb r0, [r1]
	ldr r1, [r4, #0x44]
	ldr r0, _080E84BC @ =0x00003FFF
	cmp r1, r0
	bgt _080E84C0
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #2
	strb r0, [r1]
	b _080E84F0
	.align 2, 0
_080E84AC: .4byte 0xFFFFFF00
_080E84B0: .4byte gRngVal
_080E84B4: .4byte 0x00196225
_080E84B8: .4byte 0x3C6EF35F
_080E84BC: .4byte 0x00003FFF
_080E84C0:
	adds r0, r4, #0
	adds r0, #0x85
	strb r5, [r0]
	adds r5, r0, #0
	mov r0, r8
	cmp r0, #3
	beq _080E84F0
	adds r0, r2, #0
	muls r0, r7, r0
	adds r0, r0, r6
	str r0, [r3]
	lsrs r2, r0, #0x10
	ldr r0, _080E8568 @ =0x00005554
	cmp r2, r0
	bls _080E84EC
	ldr r0, _080E856C @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080E84E8
	movs r1, #1
_080E84E8:
	cmp r1, #0
	bne _080E84F0
_080E84EC:
	movs r0, #3
	strb r0, [r5]
_080E84F0:
	ldr r1, _080E8570 @ =gUnk_02020EE0
	ldr r0, _080E8574 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E855C
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E851C
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E855C
_080E851C:
	ldr r1, _080E8578 @ =gUnk_08D60FA4
	ldr r4, _080E857C @ =gSongTable
	ldr r2, _080E8580 @ =0x00000CF4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E8542
	movs r1, #0xcf
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E855C
_080E8542:
	cmp r3, #0
	beq _080E8554
	ldr r0, _080E8584 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E855C
_080E8554:
	movs r0, #0xcf
	lsls r0, r0, #1
	bl m4aSongNumStart
_080E855C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E8568: .4byte 0x00005554
_080E856C: .4byte 0x0000AAA9
_080E8570: .4byte gUnk_02020EE0
_080E8574: .4byte gUnk_0203AD3C
_080E8578: .4byte gUnk_08D60FA4
_080E857C: .4byte gSongTable
_080E8580: .4byte 0x00000CF4
_080E8584: .4byte gUnk_0203AD10

	thumb_func_start sub_080E8588
sub_080E8588: @ 0x080E8588
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	adds r0, #0x85
	ldrb r0, [r0]
	mov r8, r0
	ldr r2, _080E85BC @ =sub_080E8738
	adds r0, r4, #0
	movs r1, #2
	bl ObjectSetFunc
	ldr r1, [r4, #0x40]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080E85C4
	ldr r0, _080E85C0 @ =0xFFFFFF00
	ands r1, r0
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	str r0, [r4, #0x40]
	b _080E85CA
	.align 2, 0
_080E85BC: .4byte sub_080E8738
_080E85C0: .4byte 0xFFFFFF00
_080E85C4:
	ldr r0, _080E863C @ =0xFFFFFF00
	ands r1, r0
	str r1, [r4, #0x40]
_080E85CA:
	adds r1, r4, #0
	adds r1, #0x50
	movs r7, #0
	mov sb, r7
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9e
	mov r1, sb
	strb r1, [r0]
	adds r3, r4, #0
	adds r3, #0x9f
	strb r1, [r3]
	adds r1, r4, #0
	adds r1, #0x85
	movs r6, #1
	strb r6, [r1]
	subs r0, #0x17
	ldrb r0, [r0]
	adds r5, r1, #0
	cmp r0, #0
	bne _080E8616
	movs r2, #0x80
	ldr r1, _080E8640 @ =gUnk_08351530
	ldr r0, _080E8644 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x88
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	ldrsh r1, [r2, r4]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080E865A
_080E8616:
	ldr r2, _080E8648 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E864C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E8650 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	ands r0, r6
	strb r0, [r3]
	ldr r1, [r4, #0x44]
	ldr r0, _080E8654 @ =0x00003FFF
	cmp r1, r0
	bgt _080E8658
	mov r2, sb
	strb r2, [r3]
	movs r0, #2
	strb r0, [r5]
	b _080E865A
	.align 2, 0
_080E863C: .4byte 0xFFFFFF00
_080E8640: .4byte gUnk_08351530
_080E8644: .4byte gUnk_0203AD30
_080E8648: .4byte gRngVal
_080E864C: .4byte 0x00196225
_080E8650: .4byte 0x3C6EF35F
_080E8654: .4byte 0x00003FFF
_080E8658:
	strb r6, [r5]
_080E865A:
	mov r7, r8
	cmp r7, #3
	beq _080E8692
	ldr r2, _080E870C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E8710 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E8714 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080E8718 @ =0x00005554
	cmp r2, r0
	bls _080E8684
	ldr r0, _080E871C @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080E8680
	movs r1, #1
_080E8680:
	cmp r1, #0
	bne _080E8692
_080E8684:
	ldr r1, [r4, #0x44]
	movs r0, #0x80
	lsls r0, r0, #7
	cmp r1, r0
	ble _080E8692
	movs r0, #3
	strb r0, [r5]
_080E8692:
	ldr r1, _080E8720 @ =gUnk_02020EE0
	ldr r0, _080E8724 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E86FE
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E86BE
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E86FE
_080E86BE:
	ldr r1, _080E8728 @ =gUnk_08D60FA4
	ldr r4, _080E872C @ =gSongTable
	ldr r2, _080E8730 @ =0x00000CF4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E86E4
	movs r7, #0xcf
	lsls r7, r7, #4
	adds r0, r4, r7
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E86FE
_080E86E4:
	cmp r3, #0
	beq _080E86F6
	ldr r0, _080E8734 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E86FE
_080E86F6:
	movs r0, #0xcf
	lsls r0, r0, #1
	bl m4aSongNumStart
_080E86FE:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080E870C: .4byte gRngVal
_080E8710: .4byte 0x00196225
_080E8714: .4byte 0x3C6EF35F
_080E8718: .4byte 0x00005554
_080E871C: .4byte 0x0000AAA9
_080E8720: .4byte gUnk_02020EE0
_080E8724: .4byte gUnk_0203AD3C
_080E8728: .4byte gUnk_08D60FA4
_080E872C: .4byte gSongTable
_080E8730: .4byte 0x00000CF4
_080E8734: .4byte gUnk_0203AD10

	thumb_func_start sub_080E8738
sub_080E8738: @ 0x080E8738
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	bne _080E8808
	adds r2, r3, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x18
	strh r0, [r2]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _080E875E
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r2]
_080E875E:
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E87B8
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E8798
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r4, _080E8794 @ =0xFFFFFB80
	adds r2, r1, #0
	cmp r0, r4
	blt _080E8850
	movs r1, #0x90
	lsls r1, r1, #3
	cmp r0, r1
	ble _080E885C
	b _080E885A
	.align 2, 0
_080E8794: .4byte 0xFFFFFB80
_080E8798:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0x90
	lsls r4, r4, #3
	adds r2, r1, #0
	cmp r0, r4
	bgt _080E8850
	ldr r1, _080E87B4 @ =0xFFFFFB80
	b _080E8856
	.align 2, 0
_080E87B4: .4byte 0xFFFFFB80
_080E87B8:
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E87E8
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r4, _080E87E4 @ =0xFFFFFC80
	adds r2, r1, #0
	cmp r0, r4
	blt _080E8850
	movs r1, #0xe0
	lsls r1, r1, #2
	cmp r0, r1
	ble _080E885C
	b _080E885A
	.align 2, 0
_080E87E4: .4byte 0xFFFFFC80
_080E87E8:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0xe0
	lsls r4, r4, #2
	adds r2, r1, #0
	cmp r0, r4
	bgt _080E8850
	ldr r1, _080E8804 @ =0xFFFFFC80
	b _080E8856
	.align 2, 0
_080E8804: .4byte 0xFFFFFC80
_080E8808:
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E8838
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r4, _080E8834 @ =0xFFFFFE00
	adds r2, r1, #0
	cmp r0, r4
	blt _080E8850
	movs r1, #0x80
	lsls r1, r1, #2
	cmp r0, r1
	ble _080E885C
	b _080E885A
	.align 2, 0
_080E8834: .4byte 0xFFFFFE00
_080E8838:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x60
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0x80
	lsls r4, r4, #2
	adds r2, r1, #0
	cmp r0, r4
	ble _080E8854
_080E8850:
	strh r4, [r2]
	b _080E885C
_080E8854:
	ldr r1, _080E8890 @ =0xFFFFFE00
_080E8856:
	cmp r0, r1
	bge _080E885C
_080E885A:
	strh r1, [r2]
_080E885C:
	ldr r0, [r3, #8]
	movs r6, #4
	orrs r0, r6
	str r0, [r3, #8]
	movs r4, #1
	ands r4, r0
	cmp r4, #0
	bne _080E886E
	b _080E8980
_080E886E:
	adds r0, r3, #0
	adds r0, #0x85
	ldrb r4, [r0]
	cmp r4, #3
	bne _080E8894
	movs r1, #0
	ldrsh r0, [r2, r1]
	ldr r1, [r3, #0x40]
	adds r1, r1, r0
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r1, r0
	ble _080E888A
	b _080E8AA8
_080E888A:
	movs r0, #0
	strh r0, [r2]
	b _080E899C
	.align 2, 0
_080E8890: .4byte 0xFFFFFE00
_080E8894:
	adds r0, r3, #0
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E88CA
	adds r0, r3, #0
	adds r0, #0x62
	ldrb r1, [r0]
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080E88CA
	movs r5, #0
	ldrsh r1, [r2, r5]
	ldr r0, [r3, #0x40]
	adds r0, r0, r1
	movs r1, #0xdc
	lsls r1, r1, #7
	cmp r0, r1
	ble _080E88BE
	b _080E8AA8
_080E88BE:
	cmp r4, #2
	beq _080E88C4
	str r1, [r3, #0x40]
_080E88C4:
	movs r0, #0
	strh r0, [r2]
	b _080E89D8
_080E88CA:
	movs r0, #0
	ldrsh r1, [r2, r0]
	ldr r0, [r3, #0x40]
	adds r0, r0, r1
	movs r1, #0xb8
	lsls r1, r1, #6
	cmp r0, r1
	ble _080E88DC
	b _080E8AA8
_080E88DC:
	str r1, [r3, #0x40]
	movs r0, #0
	strh r0, [r2]
	ldr r0, [r3, #8]
	movs r4, #1
	eors r0, r4
	str r0, [r3, #8]
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E8914
	adds r2, r3, #0
	adds r2, #0x80
	ldr r1, _080E8928 @ =gUnk_08351530
	ldr r0, _080E892C @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x88
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r5, #0
	ldrsh r1, [r2, r5]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080E893C
_080E8914:
	ldr r2, _080E8930 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E8934 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E8938 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	ands r0, r4
	b _080E8974
	.align 2, 0
_080E8928: .4byte gUnk_08351530
_080E892C: .4byte gUnk_0203AD30
_080E8930: .4byte gRngVal
_080E8934: .4byte 0x00196225
_080E8938: .4byte 0x3C6EF35F
_080E893C:
	ldr r2, _080E8958 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E895C @ =0x00196225
	muls r0, r1, r0
	ldr r5, _080E8960 @ =0x3C6EF35F
	adds r0, r0, r5
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080E8964 @ =0x00005554
	cmp r2, r0
	bhi _080E8968
	movs r1, #0
	b _080E8972
	.align 2, 0
_080E8958: .4byte gRngVal
_080E895C: .4byte 0x00196225
_080E8960: .4byte 0x3C6EF35F
_080E8964: .4byte 0x00005554
_080E8968:
	ldr r0, _080E897C @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080E8972
	movs r1, #1
_080E8972:
	adds r0, r1, #0
_080E8974:
	cmp r0, #0
	beq _080E897A
	b _080E8A94
_080E897A:
	b _080E8AA0
	.align 2, 0
_080E897C: .4byte 0x0000AAA9
_080E8980:
	adds r0, r3, #0
	adds r0, #0x85
	ldrb r5, [r0]
	cmp r5, #3
	bne _080E89A8
	movs r1, #0
	ldrsh r0, [r2, r1]
	ldr r1, [r3, #0x40]
	adds r1, r1, r0
	ldr r0, _080E89A4 @ =0x00007FFF
	cmp r1, r0
	bgt _080E899A
	b _080E8AA8
_080E899A:
	strh r4, [r2]
_080E899C:
	adds r0, r3, #0
	bl sub_080EAE98
	b _080E8AFE
	.align 2, 0
_080E89A4: .4byte 0x00007FFF
_080E89A8:
	adds r0, r3, #0
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E89E4
	adds r0, r3, #0
	adds r0, #0x62
	ldrb r1, [r0]
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080E89E4
	movs r1, #0
	ldrsh r0, [r2, r1]
	ldr r1, [r3, #0x40]
	adds r1, r1, r0
	ldr r0, _080E89E0 @ =0x000092FF
	cmp r1, r0
	ble _080E8AA8
	cmp r5, #2
	beq _080E89D6
	adds r0, #1
	str r0, [r3, #0x40]
_080E89D6:
	strh r4, [r2]
_080E89D8:
	adds r0, r3, #0
	bl sub_080E8C04
	b _080E8AFE
	.align 2, 0
_080E89E0: .4byte 0x000092FF
_080E89E4:
	movs r5, #0
	ldrsh r0, [r2, r5]
	ldr r1, [r3, #0x40]
	adds r1, r1, r0
	ldr r0, _080E8A40 @ =0x0000D2FF
	cmp r1, r0
	ble _080E8AA8
	adds r0, #1
	str r0, [r3, #0x40]
	movs r0, #0
	strh r0, [r2]
	ldr r0, [r3, #8]
	movs r4, #1
	eors r0, r4
	str r0, [r3, #8]
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E8A2C
	adds r2, r3, #0
	adds r2, #0x80
	ldr r1, _080E8A44 @ =gUnk_08351530
	ldr r0, _080E8A48 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x88
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r5, #0
	ldrsh r1, [r2, r5]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080E8A58
_080E8A2C:
	ldr r2, _080E8A4C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E8A50 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E8A54 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	ands r0, r4
	b _080E8A90
	.align 2, 0
_080E8A40: .4byte 0x0000D2FF
_080E8A44: .4byte gUnk_08351530
_080E8A48: .4byte gUnk_0203AD30
_080E8A4C: .4byte gRngVal
_080E8A50: .4byte 0x00196225
_080E8A54: .4byte 0x3C6EF35F
_080E8A58:
	ldr r2, _080E8A74 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E8A78 @ =0x00196225
	muls r0, r1, r0
	ldr r5, _080E8A7C @ =0x3C6EF35F
	adds r0, r0, r5
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080E8A80 @ =0x00005554
	cmp r2, r0
	bhi _080E8A84
	movs r1, #0
	b _080E8A8E
	.align 2, 0
_080E8A74: .4byte gRngVal
_080E8A78: .4byte 0x00196225
_080E8A7C: .4byte 0x3C6EF35F
_080E8A80: .4byte 0x00005554
_080E8A84:
	ldr r0, _080E8A9C @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080E8A8E
	movs r1, #1
_080E8A8E:
	adds r0, r1, #0
_080E8A90:
	cmp r0, #0
	beq _080E8AA0
_080E8A94:
	adds r0, r3, #0
	bl sub_080E82C4
	b _080E8AFE
	.align 2, 0
_080E8A9C: .4byte 0x0000AAA9
_080E8AA0:
	adds r0, r3, #0
	bl sub_080EAD3C
	b _080E8AFE
_080E8AA8:
	adds r0, r3, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	adds r2, r3, #0
	adds r2, #0x9e
	cmp r0, #0
	bne _080E8AE0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080E8AE0
	movs r0, #0x22
	strh r0, [r3, #4]
	adds r0, r3, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	bne _080E8AD2
	movs r0, #0x16
	strh r0, [r3, #4]
_080E8AD2:
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r3, #8]
	movs r0, #1
	strb r0, [r2]
_080E8AE0:
	ldrb r0, [r2]
	cmp r0, #1
	bne _080E8AFE
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E8AFE
	ldr r0, [r3, #8]
	ldr r1, _080E8B04 @ =0xFFFFFEFF
	ands r0, r1
	str r0, [r3, #8]
	movs r0, #2
	strb r0, [r2]
_080E8AFE:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E8B04: .4byte 0xFFFFFEFF

	thumb_func_start sub_080E8B08
sub_080E8B08: @ 0x080E8B08
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _080E8BE4 @ =sub_080E8CF0
	movs r1, #4
	bl ObjectSetFunc
	adds r5, r4, #0
	adds r5, #0x50
	movs r1, #0
	movs r0, #0
	strh r0, [r5]
	adds r2, r4, #0
	adds r2, #0x52
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r2]
	adds r3, r4, #0
	adds r3, #0x9e
	strb r1, [r3]
	ldr r1, [r4, #0x44]
	ldr r0, _080E8BE8 @ =0x00003FFF
	cmp r1, r0
	bgt _080E8B4E
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r2]
	movs r0, #0x3c
	strh r0, [r4, #4]
	movs r0, #1
	strb r0, [r3]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080E8B4E:
	ldr r0, [r4, #8]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #0xfb
	ands r0, r1
	strb r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E8B72
	ldrh r0, [r5]
	rsbs r0, r0, #0
	strh r0, [r5]
_080E8B72:
	ldr r1, _080E8BEC @ =gUnk_02020EE0
	ldr r0, _080E8BF0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E8BDE
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E8B9E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E8BDE
_080E8B9E:
	ldr r1, _080E8BF4 @ =gUnk_08D60FA4
	ldr r4, _080E8BF8 @ =gSongTable
	ldr r2, _080E8BFC @ =0x00000C44
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E8BC4
	movs r1, #0xc4
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E8BDE
_080E8BC4:
	cmp r3, #0
	beq _080E8BD6
	ldr r0, _080E8C00 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E8BDE
_080E8BD6:
	movs r0, #0xc4
	lsls r0, r0, #1
	bl m4aSongNumStart
_080E8BDE:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080E8BE4: .4byte sub_080E8CF0
_080E8BE8: .4byte 0x00003FFF
_080E8BEC: .4byte gUnk_02020EE0
_080E8BF0: .4byte gUnk_0203AD3C
_080E8BF4: .4byte gUnk_08D60FA4
_080E8BF8: .4byte gSongTable
_080E8BFC: .4byte 0x00000C44
_080E8C00: .4byte gUnk_0203AD10

	thumb_func_start sub_080E8C04
sub_080E8C04: @ 0x080E8C04
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r2, _080E8CD4 @ =sub_080E8CF0
	movs r1, #4
	bl ObjectSetFunc
	adds r5, r4, #0
	adds r5, #0x50
	movs r0, #0xd0
	strh r0, [r5]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	cmp r0, #2
	bne _080E8C30
	movs r0, #0xa4
	strh r0, [r5]
_080E8C30:
	movs r0, #0x3c
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	movs r2, #1
	strb r2, [r0]
	ldr r0, [r4, #8]
	movs r6, #0x80
	lsls r6, r6, #1
	orrs r0, r6
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #8]
	adds r3, r4, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #0xfb
	ands r0, r1
	strb r0, [r3]
	ldr r0, [r4, #8]
	ands r0, r2
	cmp r0, #0
	beq _080E8C64
	ldrh r0, [r5]
	rsbs r0, r0, #0
	strh r0, [r5]
_080E8C64:
	ldr r1, _080E8CD8 @ =gUnk_02020EE0
	ldr r0, _080E8CDC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E8CCC
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E8C90
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E8CCC
_080E8C90:
	ldr r1, _080E8CE0 @ =gUnk_08D60FA4
	ldr r4, _080E8CE4 @ =gSongTable
	ldr r2, _080E8CE8 @ =0x00000C44
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E8CB6
	movs r1, #0xc4
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E8CCC
_080E8CB6:
	cmp r3, #0
	beq _080E8CC4
	ldr r0, _080E8CEC @ =gUnk_0203AD10
	ldr r0, [r0]
	ands r0, r6
	cmp r0, #0
	bne _080E8CCC
_080E8CC4:
	movs r0, #0xc4
	lsls r0, r0, #1
	bl m4aSongNumStart
_080E8CCC:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080E8CD4: .4byte sub_080E8CF0
_080E8CD8: .4byte gUnk_02020EE0
_080E8CDC: .4byte gUnk_0203AD3C
_080E8CE0: .4byte gUnk_08D60FA4
_080E8CE4: .4byte gSongTable
_080E8CE8: .4byte 0x00000C44
_080E8CEC: .4byte gUnk_0203AD10

	thumb_func_start sub_080E8CF0
sub_080E8CF0: @ 0x080E8CF0
	push {r4, lr}
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #4
	bne _080E8D0C
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E8D20
	movs r0, #5
	b _080E8D1E
_080E8D0C:
	adds r0, r4, #0
	adds r0, #0x52
	movs r3, #0
	ldrsh r1, [r0, r3]
	movs r0, #0x80
	rsbs r0, r0, #0
	cmp r1, r0
	bgt _080E8D20
	movs r0, #6
_080E8D1E:
	strb r0, [r2]
_080E8D20:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #6
	bne _080E8D44
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r0, [r0]
	ands r1, r0
	cmp r1, #0
	beq _080E8D44
	adds r0, r4, #0
	bl sub_080EADA4
_080E8D44:
	ldr r1, [r4, #8]
	movs r0, #1
	ands r0, r1
	adds r2, r1, #0
	cmp r0, #0
	beq _080E8D70
	adds r0, r4, #0
	adds r0, #0x50
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	ldr r1, _080E8D6C @ =0x00002DFF
	cmp r0, r1
	bgt _080E8D86
	movs r0, #0xb8
	lsls r0, r0, #6
	str r0, [r4, #0x40]
	b _080E8D86
	.align 2, 0
_080E8D6C: .4byte 0x00002DFF
_080E8D70:
	adds r0, r4, #0
	adds r0, #0x50
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	movs r1, #0xd3
	lsls r1, r1, #8
	cmp r0, r1
	ble _080E8D86
	str r1, [r4, #0x40]
_080E8D86:
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E8DA2
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E8DA2
	ldr r0, _080E8DA8 @ =0xFFFFFEFF
	ands r0, r2
	str r0, [r4, #8]
_080E8DA2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E8DA8: .4byte 0xFFFFFEFF

	thumb_func_start sub_080E8DAC
sub_080E8DAC: @ 0x080E8DAC
	push {r4, lr}
	adds r3, r0, #0
	ldr r1, [r3, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080E8E6E
	adds r0, r3, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E8DCA
	movs r0, #1
	eors r1, r0
	str r1, [r3, #8]
_080E8DCA:
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E8DF4
	adds r2, r3, #0
	adds r2, #0x80
	ldr r1, _080E8E0C @ =gUnk_08351530
	ldr r0, _080E8E10 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x88
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r4, #0
	ldrsh r1, [r2, r4]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080E8E20
_080E8DF4:
	ldr r2, _080E8E14 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E8E18 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E8E1C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
	b _080E8E56
	.align 2, 0
_080E8E0C: .4byte gUnk_08351530
_080E8E10: .4byte gUnk_0203AD30
_080E8E14: .4byte gRngVal
_080E8E18: .4byte 0x00196225
_080E8E1C: .4byte 0x3C6EF35F
_080E8E20:
	ldr r2, _080E8E3C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E8E40 @ =0x00196225
	muls r0, r1, r0
	ldr r4, _080E8E44 @ =0x3C6EF35F
	adds r0, r0, r4
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080E8E48 @ =0x00005554
	cmp r2, r0
	bhi _080E8E4C
	movs r1, #0
	b _080E8E56
	.align 2, 0
_080E8E3C: .4byte gRngVal
_080E8E40: .4byte 0x00196225
_080E8E44: .4byte 0x3C6EF35F
_080E8E48: .4byte 0x00005554
_080E8E4C:
	ldr r0, _080E8E64 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080E8E56
	movs r1, #1
_080E8E56:
	cmp r1, #0
	beq _080E8E68
	adds r0, r3, #0
	bl sub_080E82C4
	b _080E8E6E
	.align 2, 0
_080E8E64: .4byte 0x0000AAA9
_080E8E68:
	adds r0, r3, #0
	bl sub_080E8E74
_080E8E6E:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080E8E74
sub_080E8E74: @ 0x080E8E74
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E8F50 @ =sub_080E8F74
	movs r1, #4
	bl ObjectSetFunc
	adds r3, r4, #0
	adds r3, #0x50
	ldr r0, _080E8F54 @ =0x000001A1
	strh r0, [r3]
	adds r2, r4, #0
	adds r2, #0x52
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r2]
	ldr r1, [r4, #0x44]
	ldr r0, _080E8F58 @ =0x00003FFF
	cmp r1, r0
	bgt _080E8EBA
	movs r0, #0x8e
	lsls r0, r0, #2
	strh r0, [r3]
	adds r0, #0xc8
	strh r0, [r2]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x3c
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080E8EBA:
	ldr r0, [r4, #8]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #0xfb
	ands r0, r1
	strb r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E8EDE
	ldrh r0, [r3]
	rsbs r0, r0, #0
	strh r0, [r3]
_080E8EDE:
	ldr r1, _080E8F5C @ =gUnk_02020EE0
	ldr r0, _080E8F60 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E8F4A
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E8F0A
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E8F4A
_080E8F0A:
	ldr r1, _080E8F64 @ =gUnk_08D60FA4
	ldr r4, _080E8F68 @ =gSongTable
	ldr r2, _080E8F6C @ =0x00000C44
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E8F30
	movs r1, #0xc4
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E8F4A
_080E8F30:
	cmp r3, #0
	beq _080E8F42
	ldr r0, _080E8F70 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E8F4A
_080E8F42:
	movs r0, #0xc4
	lsls r0, r0, #1
	bl m4aSongNumStart
_080E8F4A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E8F50: .4byte sub_080E8F74
_080E8F54: .4byte 0x000001A1
_080E8F58: .4byte 0x00003FFF
_080E8F5C: .4byte gUnk_02020EE0
_080E8F60: .4byte gUnk_0203AD3C
_080E8F64: .4byte gUnk_08D60FA4
_080E8F68: .4byte gSongTable
_080E8F6C: .4byte 0x00000C44
_080E8F70: .4byte gUnk_0203AD10

	thumb_func_start sub_080E8F74
sub_080E8F74: @ 0x080E8F74
	push {r4, lr}
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #4
	bne _080E8F90
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E8FA4
	movs r0, #5
	b _080E8FA2
_080E8F90:
	adds r0, r4, #0
	adds r0, #0x52
	movs r3, #0
	ldrsh r1, [r0, r3]
	movs r0, #0x80
	rsbs r0, r0, #0
	cmp r1, r0
	bgt _080E8FA4
	movs r0, #6
_080E8FA2:
	strb r0, [r2]
_080E8FA4:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #6
	bne _080E8FC8
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r0, [r0]
	ands r1, r0
	cmp r1, #0
	beq _080E8FC8
	adds r0, r4, #0
	bl sub_080EAE4C
_080E8FC8:
	ldr r2, [r4, #8]
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _080E8FF4
	adds r2, r4, #0
	adds r2, #0x50
	movs r1, #0
	ldrsh r0, [r2, r1]
	ldr r1, [r4, #0x40]
	adds r1, r1, r0
	ldr r0, _080E8FF0 @ =0x00002DFF
	cmp r1, r0
	bgt _080E900C
	adds r0, #1
	str r0, [r4, #0x40]
	movs r0, #0
	strh r0, [r2]
	b _080E900C
	.align 2, 0
_080E8FF0: .4byte 0x00002DFF
_080E8FF4:
	adds r3, r4, #0
	adds r3, #0x50
	movs r0, #0
	ldrsh r1, [r3, r0]
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	movs r1, #0xd3
	lsls r1, r1, #8
	cmp r0, r1
	ble _080E900C
	str r1, [r4, #0x40]
	strh r2, [r3]
_080E900C:
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E902A
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E902A
	ldr r0, [r4, #8]
	ldr r1, _080E9030 @ =0xFFFFFEFF
	ands r0, r1
	str r0, [r4, #8]
_080E902A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E9030: .4byte 0xFFFFFEFF

	thumb_func_start sub_080E9034
sub_080E9034: @ 0x080E9034
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0x11
	orrs r0, r1
	str r0, [r4, #8]
	ldrb r0, [r4, #1]
	cmp r0, #0xb
	beq _080E9052
	cmp r0, #0x15
	bne _080E90BA
_080E9052:
	ldr r1, _080E9190 @ =gUnk_02020EE0
	ldr r0, _080E9194 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E90BA
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E907E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E90BA
_080E907E:
	ldr r1, _080E9198 @ =gUnk_08D60FA4
	ldr r5, _080E919C @ =gSongTable
	ldr r2, _080E91A0 @ =0x00000C3C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E90A2
	ldr r1, _080E91A4 @ =0x00000C38
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E90BA
_080E90A2:
	cmp r3, #0
	beq _080E90B4
	ldr r0, _080E91A8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E90BA
_080E90B4:
	ldr r0, _080E91AC @ =0x00000187
	bl m4aSongNumStart
_080E90BA:
	ldrb r0, [r4, #1]
	cmp r0, #0x28
	bne _080E913A
	ldr r2, _080E91B0 @ =0x000002AA
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	adds r0, r4, #0
	bl sub_080E921C
	ldr r1, _080E9190 @ =gUnk_02020EE0
	ldr r0, _080E9194 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080E913A
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E90FE
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080E913A
_080E90FE:
	ldr r1, _080E9198 @ =gUnk_08D60FA4
	ldr r5, _080E919C @ =gSongTable
	ldr r2, _080E91B4 @ =0x00000CEC
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080E9122
	ldr r1, _080E91B8 @ =0x00000CE8
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080E913A
_080E9122:
	cmp r3, #0
	beq _080E9134
	ldr r0, _080E91A8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080E913A
_080E9134:
	ldr r0, _080E91BC @ =0x0000019D
	bl m4aSongNumStart
_080E913A:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E9214
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x87
	ldrb r1, [r1]
	adds r3, r0, #0
	cmp r1, #0
	bne _080E917C
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080E91C0 @ =gUnk_08351530
	ldr r0, _080E91C4 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x88
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r5, #0
	ldrsh r1, [r2, r5]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080E91D4
_080E917C:
	ldr r2, _080E91C8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E91CC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E91D0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	b _080E91E6
	.align 2, 0
_080E9190: .4byte gUnk_02020EE0
_080E9194: .4byte gUnk_0203AD3C
_080E9198: .4byte gUnk_08D60FA4
_080E919C: .4byte gSongTable
_080E91A0: .4byte 0x00000C3C
_080E91A4: .4byte 0x00000C38
_080E91A8: .4byte gUnk_0203AD10
_080E91AC: .4byte 0x00000187
_080E91B0: .4byte 0x000002AA
_080E91B4: .4byte 0x00000CEC
_080E91B8: .4byte 0x00000CE8
_080E91BC: .4byte 0x0000019D
_080E91C0: .4byte gUnk_08351530
_080E91C4: .4byte gUnk_0203AD30
_080E91C8: .4byte gRngVal
_080E91CC: .4byte 0x00196225
_080E91D0: .4byte 0x3C6EF35F
_080E91D4:
	ldr r2, _080E91FC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E9200 @ =0x00196225
	muls r0, r1, r0
	ldr r5, _080E9204 @ =0x3C6EF35F
	adds r0, r0, r5
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #3
_080E91E6:
	ands r1, r0
	ldrb r0, [r3]
	cmp r0, #2
	bls _080E91F0
	movs r1, #1
_080E91F0:
	cmp r1, #0
	beq _080E9208
	adds r0, r4, #0
	bl sub_080EAF24
	b _080E9214
	.align 2, 0
_080E91FC: .4byte gRngVal
_080E9200: .4byte 0x00196225
_080E9204: .4byte 0x3C6EF35F
_080E9208:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x38
	strh r0, [r4, #4]
_080E9214:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E921C
sub_080E921C: @ 0x080E921C
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	movs r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E924C
	adds r2, r3, #0
	adds r2, #0x80
	ldr r1, _080E9274 @ =gUnk_08351530
	ldr r0, _080E9278 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x88
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r5, #0
	ldrsh r1, [r2, r5]
	asrs r0, r0, #0x11
	ldr r6, _080E927C @ =gRngVal
	cmp r1, r0
	bgt _080E9262
_080E924C:
	ldr r2, _080E927C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E9280 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E9284 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r4, r0, #0x10
	movs r0, #1
	ands r4, r0
	adds r6, r2, #0
_080E9262:
	ldr r1, [r6]
	ldr r0, _080E9280 @ =0x00196225
	muls r0, r1, r0
	ldr r5, _080E9284 @ =0x3C6EF35F
	adds r0, r0, r5
	str r0, [r6]
	lsrs r5, r0, #0x10
	movs r2, #0
	b _080E928C
	.align 2, 0
_080E9274: .4byte gUnk_08351530
_080E9278: .4byte gUnk_0203AD30
_080E927C: .4byte gRngVal
_080E9280: .4byte 0x00196225
_080E9284: .4byte 0x3C6EF35F
_080E9288:
	lsls r0, r1, #0x10
	lsrs r2, r0, #0x10
_080E928C:
	cmp r2, #8
	bhi _080E929A
	adds r1, r2, #1
	ldr r0, _080E92A8 @ =0x00001999
	muls r0, r1, r0
	cmp r5, r0
	bge _080E9288
_080E929A:
	cmp r2, #9
	bhi _080E937C
	lsls r0, r2, #2
	ldr r1, _080E92AC @ =_080E92B0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080E92A8: .4byte 0x00001999
_080E92AC: .4byte _080E92B0
_080E92B0: @ jump table
	.4byte _080E932C @ case 0
	.4byte _080E9340 @ case 1
	.4byte _080E9360 @ case 2
	.4byte _080E92D8 @ case 3
	.4byte _080E92E2 @ case 4
	.4byte _080E92EC @ case 5
	.4byte _080E92F6 @ case 6
	.4byte _080E9306 @ case 7
	.4byte _080E9316 @ case 8
	.4byte _080E934A @ case 9
_080E92D8:
	adds r0, r3, #0
	adds r1, r4, #0
	bl sub_080E9A54
	b _080E937C
_080E92E2:
	adds r0, r3, #0
	adds r1, r4, #0
	bl sub_080E9C58
	b _080E937C
_080E92EC:
	adds r0, r3, #0
	adds r1, r4, #0
	bl sub_080E9FC0
	b _080E937C
_080E92F6:
	adds r0, r3, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #0x10]
	adds r0, r3, #0
	bl sub_080EA1C0
	b _080E937C
_080E9306:
	adds r0, r3, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #0x10]
	adds r0, r3, #0
	bl sub_080EA27C
	b _080E937C
_080E9316:
	ldr r1, [r6]
	ldr r0, _080E9338 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E933C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r6]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E9340
_080E932C:
	adds r0, r3, #0
	adds r1, r4, #0
	bl sub_080E9384
	b _080E937C
	.align 2, 0
_080E9338: .4byte 0x00196225
_080E933C: .4byte 0x3C6EF35F
_080E9340:
	adds r0, r3, #0
	adds r1, r4, #0
	bl sub_080E9524
	b _080E937C
_080E934A:
	ldr r1, [r6]
	ldr r0, _080E936C @ =0x00196225
	muls r0, r1, r0
	ldr r5, _080E9370 @ =0x3C6EF35F
	adds r0, r0, r5
	str r0, [r6]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E9374
_080E9360:
	adds r0, r3, #0
	adds r1, r4, #0
	bl sub_080E96F8
	b _080E937C
	.align 2, 0
_080E936C: .4byte 0x00196225
_080E9370: .4byte 0x3C6EF35F
_080E9374:
	adds r0, r3, #0
	adds r1, r4, #0
	bl sub_080E9A54
_080E937C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E9384
sub_080E9384: @ 0x080E9384
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov sl, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov ip, r0
	movs r4, #0
	ldr r1, _080E93C0 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080E93C4 @ =gUnk_020229E0
	movs r7, #0x56
	adds r7, r7, r5
	mov r8, r7
	b _080E93DC
	.align 2, 0
_080E93C0: .4byte gUnk_020229D4
_080E93C4: .4byte gUnk_020229E0
_080E93C8:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080E93E4
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080E93DC:
	cmp r0, #0
	bne _080E93C8
	orrs r2, r3
	str r2, [r1]
_080E93E4:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, sl
	strh r0, [r1, #6]
	mov r7, ip
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xb5
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sb
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E9448
sub_080E9448: @ 0x080E9448
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r2, [r4, #8]
	movs r6, #4
	orrs r2, r6
	str r2, [r4, #8]
	adds r5, r4, #0
	adds r5, #0x62
	ldrb r1, [r5]
	movs r7, #3
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	beq _080E9472
	movs r0, #0x80
	lsls r0, r0, #5
	orrs r2, r0
	str r2, [r4, #8]
	adds r0, r4, #0
	bl sub_0809DA30
_080E9472:
	ldrb r1, [r5]
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080E951E
	ldr r2, _080E94A0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E94A4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E94A8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	ands r0, r7
	cmp r0, #1
	beq _080E94BE
	cmp r0, #1
	blo _080E94AC
	cmp r0, #2
	beq _080E94D0
	cmp r0, #3
	beq _080E94E4
	b _080E94F6
	.align 2, 0
_080E94A0: .4byte gRngVal
_080E94A4: .4byte 0x00196225
_080E94A8: .4byte 0x3C6EF35F
_080E94AC:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0xd0
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #2
	b _080E94F4
_080E94BE:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0x88
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xc0
	lsls r0, r0, #2
	b _080E94F4
_080E94D0:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0x90
	lsls r1, r1, #1
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #1
	b _080E94F4
_080E94E4:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0xc0
	lsls r1, r1, #2
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x64
_080E94F4:
	strh r0, [r1]
_080E94F6:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E950A
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x80
	strh r0, [r1]
_080E950A:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E951E
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
_080E951E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080E9524
sub_080E9524: @ 0x080E9524
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov sl, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov ip, r0
	movs r4, #0
	ldr r1, _080E9560 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080E9564 @ =gUnk_020229E0
	movs r7, #0x56
	adds r7, r7, r5
	mov r8, r7
	b _080E957C
	.align 2, 0
_080E9560: .4byte gUnk_020229D4
_080E9564: .4byte gUnk_020229E0
_080E9568:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080E9584
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080E957C:
	cmp r0, #0
	bne _080E9568
	orrs r2, r3
	str r2, [r1]
_080E9584:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, sl
	strh r0, [r1, #6]
	mov r7, ip
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xb6
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sb
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E95E8
sub_080E95E8: @ 0x080E95E8
	push {r4, lr}
	adds r3, r0, #0
	ldr r1, [r3, #8]
	movs r0, #4
	orrs r1, r0
	str r1, [r3, #8]
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E9658
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080E9638
	adds r0, r3, #0
	adds r0, #0x50
	ldrh r1, [r0]
	subs r1, #8
	strh r1, [r0]
	lsls r1, r1, #0x10
	asrs r4, r1, #0x10
	ldr r1, _080E9624 @ =0xFFFFFC80
	adds r2, r0, #0
	cmp r4, r1
	bge _080E962C
	ldr r0, _080E9628 @ =0x0000FC80
	strh r0, [r2]
	b _080E96A8
	.align 2, 0
_080E9624: .4byte 0xFFFFFC80
_080E9628: .4byte 0x0000FC80
_080E962C:
	movs r0, #0xe0
	lsls r0, r0, #2
	cmp r4, r0
	ble _080E96A8
	strh r0, [r2]
	b _080E96A8
_080E9638:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0xe0
	lsls r4, r4, #2
	adds r2, r1, #0
	cmp r0, r4
	bgt _080E969C
	ldr r1, _080E9654 @ =0xFFFFFC80
	b _080E96A2
	.align 2, 0
_080E9654: .4byte 0xFFFFFC80
_080E9658:
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080E9684
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r4, _080E9680 @ =0xFFFFFD80
	adds r2, r1, #0
	cmp r0, r4
	blt _080E969C
	movs r1, #0xa0
	lsls r1, r1, #2
	cmp r0, r1
	ble _080E96A8
	b _080E96A6
	.align 2, 0
_080E9680: .4byte 0xFFFFFD80
_080E9684:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0xa0
	lsls r4, r4, #2
	adds r2, r1, #0
	cmp r0, r4
	ble _080E96A0
_080E969C:
	strh r4, [r2]
	b _080E96A8
_080E96A0:
	ldr r1, _080E96DC @ =0xFFFFFD80
_080E96A2:
	cmp r0, r1
	bge _080E96A8
_080E96A6:
	strh r1, [r2]
_080E96A8:
	ldrh r1, [r3, #4]
	movs r4, #4
	ldrsh r0, [r3, r4]
	cmp r0, #0
	beq _080E96B6
	subs r0, r1, #1
	strh r0, [r3, #4]
_080E96B6:
	adds r0, r3, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080E96F0
	movs r1, #4
	ldrsh r0, [r3, r1]
	cmp r0, #0
	beq _080E96E0
	ldr r0, [r3, #8]
	movs r1, #1
	eors r0, r1
	str r0, [r3, #8]
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
	b _080E96F0
	.align 2, 0
_080E96DC: .4byte 0xFFFFFD80
_080E96E0:
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r3, #8]
	adds r0, r3, #0
	bl sub_0809DA30
_080E96F0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E96F8
sub_080E96F8: @ 0x080E96F8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r6, r0, #8
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov r8, r0
	movs r4, #0
	ldr r1, _080E9734 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _080E9738 @ =gUnk_020229E0
	mov ip, r7
	movs r7, #0x56
	adds r7, r7, r5
	mov sb, r7
	b _080E9750
	.align 2, 0
_080E9734: .4byte gUnk_020229D4
_080E9738: .4byte gUnk_020229E0
_080E973C:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080E9758
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080E9750:
	cmp r0, #0
	bne _080E973C
	orrs r2, r3
	str r2, [r1]
_080E9758:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	add r1, ip
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	strh r6, [r1, #6]
	mov r0, r8
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xb7
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r7, sl
	strb r7, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, sb
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	mov r7, sl
	cmp r7, #0
	beq _080E97D4
	ldr r2, _080E97C8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E97CC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E97D0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #3
	ands r1, r0
	b _080E97F2
	.align 2, 0
_080E97C8: .4byte gRngVal
_080E97CC: .4byte 0x00196225
_080E97D0: .4byte 0x3C6EF35F
_080E97D4:
	ldr r2, _080E9808 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E980C @ =0x00196225
	muls r0, r1, r0
	ldr r7, _080E9810 @ =0x3C6EF35F
	adds r0, r0, r7
	str r0, [r2]
	movs r2, #0
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080E97F0
	movs r2, #1
_080E97F0:
	adds r1, r2, #0
_080E97F2:
	cmp r1, #0
	beq _080E988A
	movs r4, #0
	ldr r1, _080E9814 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _080E9818 @ =gUnk_020229E0
	mov ip, r7
	b _080E9830
	.align 2, 0
_080E9808: .4byte gRngVal
_080E980C: .4byte 0x00196225
_080E9810: .4byte 0x3C6EF35F
_080E9814: .4byte gUnk_020229D4
_080E9818: .4byte gUnk_020229E0
_080E981C:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080E9838
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080E9830:
	cmp r0, #0
	bne _080E981C
	orrs r2, r3
	str r2, [r1]
_080E9838:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	add r1, ip
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	strh r6, [r1, #6]
	mov r0, r8
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xb7
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r7, sl
	strb r7, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, sb
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
_080E988A:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080E9898
sub_080E9898: @ 0x080E9898
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080E98CC @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080E98D0 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E98D4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080E98DC
	.align 2, 0
_080E98CC: .4byte ObjectMain
_080E98D0: .4byte ObjectDestroy
_080E98D4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080E98DC:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #0xc]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r0, [r4, #8]
	adds r1, #0xfe
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080E9944 @ =sub_0809F840
	str r0, [r4, #0x7c]
	movs r1, #5
	rsbs r1, r1, #0
	movs r2, #3
	rsbs r2, r2, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	movs r1, #6
	rsbs r1, r1, #0
	movs r2, #4
	rsbs r2, r2, #0
	movs r0, #0xa
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #6
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	adds r0, r4, #0
	bl sub_080E9948
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080E9944: .4byte sub_0809F840

	thumb_func_start sub_080E9948
sub_080E9948: @ 0x080E9948
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E9990 @ =sub_080E99F0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E9968
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080E9968:
	ldr r2, _080E9994 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E9998 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E999C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	strh r0, [r4, #4]
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080E99B2
	cmp r0, #1
	bgt _080E99A0
	cmp r0, #0
	beq _080E99AA
	b _080E99D4
	.align 2, 0
_080E9990: .4byte sub_080E99F0
_080E9994: .4byte gRngVal
_080E9998: .4byte 0x00196225
_080E999C: .4byte 0x3C6EF35F
_080E99A0:
	cmp r0, #2
	beq _080E99BA
	cmp r0, #3
	beq _080E99C2
	b _080E99D4
_080E99AA:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0xc0
	b _080E99CA
_080E99B2:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0x80
	b _080E99CA
_080E99BA:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0xe0
	b _080E99CA
_080E99C2:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0xc0
	lsls r1, r1, #1
_080E99CA:
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x28
	strh r0, [r1]
_080E99D4:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E99E8
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
_080E99E8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E99F0
sub_080E99F0: @ 0x080E99F0
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	movs r1, #4
	ldrsh r0, [r2, r1]
	cmp r0, #1
	beq _080E9A22
	cmp r0, #1
	bgt _080E9A0E
	cmp r0, #0
	beq _080E9A18
	b _080E9A4E
_080E9A0E:
	cmp r0, #2
	beq _080E9A2C
	cmp r0, #3
	beq _080E9A36
	b _080E9A4E
_080E9A18:
	adds r1, r2, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x10
	b _080E9A3E
_080E9A22:
	adds r1, r2, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x18
	b _080E9A3E
_080E9A2C:
	adds r1, r2, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #8
	b _080E9A3E
_080E9A36:
	adds r1, r2, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #4
_080E9A3E:
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #2
	cmp r0, r2
	ble _080E9A4E
	strh r2, [r1]
_080E9A4E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E9A54
sub_080E9A54: @ 0x080E9A54
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov sl, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov ip, r0
	movs r4, #0
	ldr r1, _080E9A90 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080E9A94 @ =gUnk_020229E0
	movs r7, #0x56
	adds r7, r7, r5
	mov r8, r7
	b _080E9AAC
	.align 2, 0
_080E9A90: .4byte gUnk_020229D4
_080E9A94: .4byte gUnk_020229E0
_080E9A98:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080E9AB4
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080E9AAC:
	cmp r0, #0
	bne _080E9A98
	orrs r2, r3
	str r2, [r1]
_080E9AB4:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, sl
	strh r0, [r1, #6]
	mov r7, ip
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xb8
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sb
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E9B18
sub_080E9B18: @ 0x080E9B18
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E9B4C @ =sub_080E9BA0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E9B38
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080E9B38:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E9B50
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #1
	b _080E9B56
	.align 2, 0
_080E9B4C: .4byte sub_080E9BA0
_080E9B50:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xd0
_080E9B56:
	strh r0, [r1]
	adds r2, r1, #0
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E9B74
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080E9B74:
	ldr r2, _080E9B94 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E9B98 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E9B9C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0x3f
	ands r0, r1
	adds r0, #0x78
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E9B94: .4byte gRngVal
_080E9B98: .4byte 0x00196225
_080E9B9C: .4byte 0x3C6EF35F

	thumb_func_start sub_080E9BA0
sub_080E9BA0: @ 0x080E9BA0
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r1, [r4, #8]
	movs r5, #4
	orrs r1, r5
	str r1, [r4, #8]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E9BC6
	movs r0, #0x80
	lsls r0, r0, #5
	orrs r1, r0
	str r1, [r4, #8]
	adds r0, r4, #0
	bl sub_0809DA30
_080E9BC6:
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r1, [r0]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _080E9C3A
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r1, [r0]
	adds r2, r0, #0
	cmp r1, #4
	beq _080E9C3A
	ldrb r0, [r2]
	cmp r0, #1
	beq _080E9C04
	cmp r0, #1
	bgt _080E9BF0
	cmp r0, #0
	beq _080E9BFA
	b _080E9C20
_080E9BF0:
	cmp r0, #2
	beq _080E9C0E
	cmp r0, #3
	beq _080E9C18
	b _080E9C20
_080E9BFA:
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xe8
	lsls r0, r0, #1
	b _080E9C1E
_080E9C04:
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xa0
	lsls r0, r0, #1
	b _080E9C1E
_080E9C0E:
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #1
	b _080E9C1E
_080E9C18:
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
_080E9C1E:
	strh r0, [r1]
_080E9C20:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #8]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
_080E9C3A:
	ldrh r1, [r4, #4]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _080E9C50
	movs r2, #6
	rsbs r2, r2, #0
	adds r0, r4, #0
	adds r1, r2, #0
	bl sub_08097E9C
_080E9C50:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E9C58
sub_080E9C58: @ 0x080E9C58
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov sl, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov ip, r0
	movs r4, #0
	ldr r1, _080E9C94 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080E9C98 @ =gUnk_020229E0
	movs r7, #0x56
	adds r7, r7, r5
	mov r8, r7
	b _080E9CB0
	.align 2, 0
_080E9C94: .4byte gUnk_020229D4
_080E9C98: .4byte gUnk_020229E0
_080E9C9C:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080E9CB8
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080E9CB0:
	cmp r0, #0
	bne _080E9C9C
	orrs r2, r3
	str r2, [r1]
_080E9CB8:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, sl
	strh r0, [r1, #6]
	mov r7, ip
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xb9
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sb
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E9D1C
sub_080E9D1C: @ 0x080E9D1C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080E9D50 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080E9D54 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080E9D58
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080E9D60
	.align 2, 0
_080E9D50: .4byte ObjectMain
_080E9D54: .4byte ObjectDestroy
_080E9D58:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080E9D60:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #0xc]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r0, [r4, #8]
	adds r1, #0xfe
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080E9DD0 @ =sub_0809F840
	str r0, [r4, #0x7c]
	movs r1, #5
	rsbs r1, r1, #0
	movs r2, #3
	rsbs r2, r2, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	movs r1, #6
	rsbs r1, r1, #0
	movs r2, #4
	rsbs r2, r2, #0
	movs r0, #0xa
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #6
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	movs r0, #0xb0
	lsls r0, r0, #2
	strh r0, [r4, #0x24]
	adds r0, r4, #0
	bl sub_080EAA30
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080E9DD0: .4byte sub_0809F840

	thumb_func_start sub_080E9DD4
sub_080E9DD4: @ 0x080E9DD4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080E9E10 @ =sub_080E9E58
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080E9DF4
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080E9DF4:
	adds r2, r4, #0
	adds r2, #0x50
	movs r1, #0
	movs r0, #0x80
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x52
	strh r1, [r0]
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E9E14
	movs r0, #0x30
	b _080E9E16
	.align 2, 0
_080E9E10: .4byte sub_080E9E58
_080E9E14:
	movs r0, #0x40
_080E9E16:
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080E9E28
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080E9E28:
	ldr r2, _080E9E4C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080E9E50 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080E9E54 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #4
	ldrsh r2, [r4, r1]
	lsrs r0, r0, #0x10
	movs r1, #0x1f
	ands r0, r1
	subs r2, r2, r0
	strh r2, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080E9E4C: .4byte gRngVal
_080E9E50: .4byte 0x00196225
_080E9E54: .4byte 0x3C6EF35F

	thumb_func_start sub_080E9E58
sub_080E9E58: @ 0x080E9E58
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r1, _080E9E90 @ =gUnk_08356CB4
	adds r2, r4, #0
	adds r2, #0x9e
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	movs r6, #0
	strh r0, [r1]
	ldrb r0, [r2]
	adds r0, #1
	movs r1, #0xf
	ands r0, r1
	strb r0, [r2]
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E9E94
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	b _080E9F9A
	.align 2, 0
_080E9E90: .4byte gUnk_08356CB4
_080E9E94:
	ldrb r1, [r4, #1]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080E9ED4
	adds r3, r4, #0
	adds r3, #0x2f
	strb r6, [r3]
	ldr r2, _080E9ECC @ =gUnk_02020EE0
	ldr r0, _080E9ED0 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	adds r5, r3, #0
	adds r7, r1, #0
	ldrh r1, [r7]
	cmp r0, r1
	bne _080E9F24
	movs r6, #0xc6
	lsls r6, r6, #2
	b _080E9EFC
	.align 2, 0
_080E9ECC: .4byte gUnk_02020EE0
_080E9ED0: .4byte gUnk_0203AD3C
_080E9ED4:
	adds r3, r4, #0
	adds r3, #0x2f
	strb r6, [r3]
	ldr r2, _080E9F18 @ =gUnk_02020EE0
	ldr r0, _080E9F1C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	adds r5, r3, #0
	adds r7, r1, #0
	ldrh r1, [r7]
	cmp r0, r1
	bne _080E9F24
	ldr r6, _080E9F20 @ =0x00000317
_080E9EFC:
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080E9F26
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080E9F26
	.align 2, 0
_080E9F18: .4byte gUnk_02020EE0
_080E9F1C: .4byte gUnk_0203AD3C
_080E9F20: .4byte 0x00000317
_080E9F24:
	strb r6, [r5]
_080E9F26:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080E9F9A
	adds r0, r4, #0
	bl sub_080EA3B8
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E9F4C
	movs r0, #0x30
	b _080E9F4E
_080E9F4C:
	movs r0, #0x40
_080E9F4E:
	strh r0, [r4, #4]
	movs r3, #0
	strb r3, [r5]
	ldr r2, _080E9F8C @ =gUnk_02020EE0
	ldr r0, _080E9F90 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _080E9F98
	ldr r6, _080E9F94 @ =0x00000317
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080E9F9A
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080E9F9A
	.align 2, 0
_080E9F8C: .4byte gUnk_02020EE0
_080E9F90: .4byte gUnk_0203AD3C
_080E9F94: .4byte 0x00000317
_080E9F98:
	strb r3, [r5]
_080E9F9A:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080E9FB8
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #1
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
_080E9FB8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080E9FC0
sub_080E9FC0: @ 0x080E9FC0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov sl, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov ip, r0
	movs r4, #0
	ldr r1, _080E9FFC @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080EA000 @ =gUnk_020229E0
	movs r7, #0x56
	adds r7, r7, r5
	mov r8, r7
	b _080EA018
	.align 2, 0
_080E9FFC: .4byte gUnk_020229D4
_080EA000: .4byte gUnk_020229E0
_080EA004:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080EA020
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080EA018:
	cmp r0, #0
	bne _080EA004
	orrs r2, r3
	str r2, [r1]
_080EA020:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, sl
	strh r0, [r1, #6]
	mov r7, ip
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xba
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sb
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EA084
sub_080EA084: @ 0x080EA084
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EA0D4 @ =sub_080EA0D8
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080EA0A4
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080EA0A4:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xd0
	strh r0, [r1]
	adds r2, r1, #0
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EA0CE
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080EA0CE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EA0D4: .4byte sub_080EA0D8

	thumb_func_start sub_080EA0D8
sub_080EA0D8: @ 0x080EA0D8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	ldrb r0, [r4, #1]
	movs r6, #3
	ands r6, r0
	cmp r6, #0
	bne _080EA19A
	movs r0, #4
	ldrsh r3, [r4, r0]
	cmp r3, #0
	beq _080EA14A
	adds r5, r4, #0
	adds r5, #0x2f
	strb r6, [r5]
	ldr r2, _080EA138 @ =gUnk_02020EE0
	ldr r0, _080EA13C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EA144
	ldr r6, _080EA140 @ =0x00000317
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080EA146
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080EA146
	.align 2, 0
_080EA138: .4byte gUnk_02020EE0
_080EA13C: .4byte gUnk_0203AD3C
_080EA140: .4byte 0x00000317
_080EA144:
	strb r6, [r5]
_080EA146:
	movs r0, #0
	b _080EA198
_080EA14A:
	adds r5, r4, #0
	adds r5, #0x2f
	strb r3, [r5]
	ldr r2, _080EA18C @ =gUnk_02020EE0
	ldr r0, _080EA190 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EA194
	movs r6, #0xc6
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080EA196
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080EA196
	.align 2, 0
_080EA18C: .4byte gUnk_02020EE0
_080EA190: .4byte gUnk_0203AD3C
_080EA194:
	strb r3, [r5]
_080EA196:
	movs r0, #1
_080EA198:
	strh r0, [r4, #4]
_080EA19A:
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080EA1B8
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_0809DA30
_080EA1B8:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EA1C0
sub_080EA1C0: @ 0x080EA1C0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov sl, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov ip, r0
	movs r4, #0
	ldr r1, _080EA1FC @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080EA200 @ =gUnk_020229E0
	movs r7, #0x56
	adds r7, r7, r5
	mov r8, r7
	b _080EA218
	.align 2, 0
_080EA1FC: .4byte gUnk_020229D4
_080EA200: .4byte gUnk_020229E0
_080EA204:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080EA220
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080EA218:
	cmp r0, #0
	bne _080EA204
	orrs r2, r3
	str r2, [r1]
_080EA220:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, sl
	strh r0, [r1, #6]
	mov r7, ip
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	strb r4, [r1, #0xc]
	strb r4, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sb
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080EA27C
sub_080EA27C: @ 0x080EA27C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov sl, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov ip, r0
	movs r4, #0
	ldr r1, _080EA2B8 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080EA2BC @ =gUnk_020229E0
	movs r7, #0x56
	adds r7, r7, r5
	mov r8, r7
	b _080EA2D4
	.align 2, 0
_080EA2B8: .4byte gUnk_020229D4
_080EA2BC: .4byte gUnk_020229E0
_080EA2C0:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080EA2DC
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080EA2D4:
	cmp r0, #0
	bne _080EA2C0
	orrs r2, r3
	str r2, [r1]
_080EA2DC:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, sl
	strh r0, [r1, #6]
	mov r7, ip
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xbb
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sb
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EA340
sub_080EA340: @ 0x080EA340
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EA3A8 @ =sub_080EB0DC
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080EA360
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080EA360:
	adds r3, r4, #0
	adds r3, #0x50
	movs r0, #0xa0
	strh r0, [r3]
	ldr r2, _080EA3AC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EA3B0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EA3B4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r2, #1
	ands r0, r2
	cmp r0, #0
	beq _080EA38E
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #3
	strb r0, [r1]
	movs r0, #0x90
	lsls r0, r0, #1
	strh r0, [r3]
_080EA38E:
	ldr r0, [r4, #8]
	ands r0, r2
	cmp r0, #0
	beq _080EA39C
	ldrh r0, [r3]
	rsbs r0, r0, #0
	strh r0, [r3]
_080EA39C:
	movs r0, #0x5a
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EA3A8: .4byte sub_080EB0DC
_080EA3AC: .4byte gRngVal
_080EA3B0: .4byte 0x00196225
_080EA3B4: .4byte 0x3C6EF35F

	thumb_func_start sub_080EA3B8
sub_080EA3B8: @ 0x080EA3B8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080EA3EC @ =sub_080EA528
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080EA3F0 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080EA3F4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080EA3FC
	.align 2, 0
_080EA3EC: .4byte sub_080EA528
_080EA3F0: .4byte sub_0803DCCC
_080EA3F4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080EA3FC:
	adds r4, r0, #0
	bl sub_0803E380
	movs r0, #0
	mov ip, r0
	movs r6, #2
	strb r6, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	str r5, [r4, #0x70]
	movs r1, #0
	mov r8, r1
	mov r0, ip
	strh r0, [r4, #4]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r7, r4, #0
	adds r7, #0x60
	strh r0, [r7]
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _080EA500 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r3, #1
	adds r0, r3, #0
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080EA454
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
_080EA454:
	adds r0, r4, #0
	adds r0, #0x63
	strb r3, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x15
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, _080EA504 @ =0x20000043
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #0x5c]
	adds r0, r4, #0
	adds r0, #0x50
	mov r1, ip
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xfc
	lsls r0, r0, #8
	strh r0, [r1]
	movs r2, #2
	rsbs r2, r2, #0
	str r6, [sp]
	adds r0, r4, #0
	adds r1, r2, #0
	movs r3, #2
	bl sub_0803E2B0
	str r6, [sp]
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	movs r3, #2
	bl sub_0803E308
	adds r1, r4, #0
	adds r1, #0x10
	ldr r3, _080EA508 @ =0x00000317
	movs r0, #0x18
	str r0, [sp]
	movs r0, #0xc
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #6
	bl sub_080708DC
	adds r5, r4, #0
	adds r5, #0x2f
	mov r0, r8
	strb r0, [r5]
	ldr r2, _080EA50C @ =gUnk_02020EE0
	ldr r0, _080EA510 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _080EA514
	movs r6, #0xc6
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080EA518
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080EA518
	.align 2, 0
_080EA500: .4byte gUnk_03000510
_080EA504: .4byte 0x20000043
_080EA508: .4byte 0x00000317
_080EA50C: .4byte gUnk_02020EE0
_080EA510: .4byte gUnk_0203AD3C
_080EA514:
	mov r1, r8
	strb r1, [r5]
_080EA518:
	movs r0, #8
	strh r0, [r4, #4]
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080EA528
sub_080EA528: @ 0x080EA528
	push {r4, r5, r6, lr}
	sub sp, #0x28
	ldr r0, _080EA548 @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080EA54C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080EA554
	.align 2, 0
_080EA548: .4byte gCurTask
_080EA54C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080EA554:
	adds r5, r0, #0
	ldr r2, _080EA5C0 @ =gUnk_02020EE0
	ldr r0, _080EA5C4 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EA608
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _080EA5D0
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080EA62C
	ldrh r1, [r5, #0x1c]
	adds r0, r5, #0
	adds r0, #0x2a
	ldrb r2, [r0]
	movs r0, #6
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080EA5C8 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080EA5CC @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080EA62C
	.align 2, 0
_080EA5C0: .4byte gUnk_02020EE0
_080EA5C4: .4byte gUnk_0203AD3C
_080EA5C8: .4byte 0xFFF7FFFF
_080EA5CC: .4byte 0x0400000A
_080EA5D0:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080EA62C
	movs r0, #6
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080EA600 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080EA604 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080EA62C
	.align 2, 0
_080EA600: .4byte 0xFFF7FFFF
_080EA604: .4byte 0x0400000A
_080EA608:
	ldr r1, [r5, #0x10]
	cmp r1, #0
	beq _080EA622
	ldr r4, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r4, r0
	cmp r4, #0
	bne _080EA622
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0x10]
_080EA622:
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x18]
_080EA62C:
	ldr r2, _080EA674 @ =gUnk_02020EE0
	ldr r0, _080EA678 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EA67C
	adds r4, r5, #0
	adds r4, #0x2f
	ldrb r0, [r4]
	cmp r0, #0
	bne _080EA684
	movs r6, #0xc6
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080EA684
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080EA684
	.align 2, 0
_080EA674: .4byte gUnk_02020EE0
_080EA678: .4byte gUnk_0203AD3C
_080EA67C:
	adds r1, r5, #0
	adds r1, #0x2f
	movs r0, #0
	strb r0, [r1]
_080EA684:
	adds r0, r5, #0
	bl sub_0806F780
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080EA692
	b _080EA7C6
_080EA692:
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	movs r1, #0x90
	lsls r1, r1, #5
	ands r0, r1
	adds r4, r5, #0
	adds r4, #0x56
	ldr r6, _080EA6C4 @ =gCurLevelInfo
	cmp r0, #0
	bne _080EA706
	ldrb r0, [r4]
	cmp r0, #0xff
	beq _080EA6CC
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r6
	ldr r1, _080EA6C8 @ =0x0000065E
	adds r0, r0, r1
	ldrb r1, [r0]
	b _080EA6CE
	.align 2, 0
_080EA6C4: .4byte gCurLevelInfo
_080EA6C8: .4byte 0x0000065E
_080EA6CC:
	movs r1, #0xff
_080EA6CE:
	cmp r1, #0xff
	beq _080EA706
	lsls r3, r1, #6
	ldrb r0, [r5]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _080EA7B4 @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r2, [r5]
	adds r1, r1, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080EA7B8 @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r5, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_080EA706:
	ldr r2, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r2
	cmp r0, #0
	bne _080EA72E
	adds r0, r5, #0
	adds r0, #0x50
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	str r0, [r5, #0x40]
	adds r0, r5, #0
	adds r0, #0x52
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, [r5, #0x44]
	subs r0, r0, r1
	str r0, [r5, #0x44]
_080EA72E:
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EA740
	ldr r0, _080EA7BC @ =0xFFFFFEFF
	ands r2, r0
	str r2, [r5, #8]
_080EA740:
	ldrb r1, [r4]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r1, r0, r1
	adds r0, r6, #0
	adds r0, #0x50
	adds r0, r1, r0
	ldr r2, [r5, #0x40]
	ldr r0, [r0]
	cmp r2, r0
	bgt _080EA782
	adds r0, r6, #0
	adds r0, #0x48
	adds r0, r1, r0
	ldr r0, [r0]
	cmp r2, r0
	blt _080EA782
	adds r0, r6, #0
	adds r0, #0x54
	adds r0, r1, r0
	ldr r2, [r5, #0x44]
	ldr r0, [r0]
	cmp r2, r0
	bgt _080EA782
	adds r0, r6, #0
	adds r0, #0x4c
	adds r0, r1, r0
	ldr r0, [r0]
	cmp r2, r0
	blt _080EA782
	adds r0, r5, #0
	bl sub_0806FC70
_080EA782:
	adds r0, r5, #0
	adds r0, #0x62
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EA798
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #0xb
	ands r0, r1
	cmp r0, #0
	beq _080EA7C0
_080EA798:
	movs r2, #0xa6
	lsls r2, r2, #2
	adds r0, r5, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r5, #8]
	b _080EA7C6
	.align 2, 0
_080EA7B4: .4byte gUnk_02022EB0
_080EA7B8: .4byte gUnk_02022F50
_080EA7BC: .4byte 0xFFFFFEFF
_080EA7C0:
	adds r0, r5, #0
	bl sub_0806F8BC
_080EA7C6:
	add sp, #0x28
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EA7D0
sub_080EA7D0: @ 0x080EA7D0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080EA804 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080EA808 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080EA80C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080EA814
	.align 2, 0
_080EA804: .4byte ObjectMain
_080EA808: .4byte ObjectDestroy
_080EA80C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080EA814:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #0xc]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0xc]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080EA870 @ =sub_0809F840
	str r0, [r4, #0x7c]
	movs r1, #5
	rsbs r1, r1, #0
	movs r2, #7
	rsbs r2, r2, #0
	movs r0, #4
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	movs r1, #6
	rsbs r1, r1, #0
	movs r2, #8
	rsbs r2, r2, #0
	movs r0, #6
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #6
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	adds r0, r4, #0
	bl sub_080EA874
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080EA870: .4byte sub_0809F840

	thumb_func_start sub_080EA874
sub_080EA874: @ 0x080EA874
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EA8BC @ =sub_080E9448
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080EA894
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080EA894:
	adds r2, r4, #0
	adds r2, #0x50
	movs r0, #0xd0
	strh r0, [r2]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EA8B6
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080EA8B6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EA8BC: .4byte sub_080E9448

	thumb_func_start sub_080EA8C0
sub_080EA8C0: @ 0x080EA8C0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080EA8F4 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080EA8F8 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080EA8FC
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080EA904
	.align 2, 0
_080EA8F4: .4byte ObjectMain
_080EA8F8: .4byte ObjectDestroy
_080EA8FC:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080EA904:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080EA958 @ =sub_0809F840
	str r0, [r4, #0x7c]
	movs r1, #5
	rsbs r1, r1, #0
	movs r2, #3
	rsbs r2, r2, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	movs r1, #6
	rsbs r1, r1, #0
	movs r2, #4
	rsbs r2, r2, #0
	movs r0, #0xa
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #6
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	adds r0, r4, #0
	bl sub_080EA95C
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080EA958: .4byte sub_0809F840

	thumb_func_start sub_080EA95C
sub_080EA95C: @ 0x080EA95C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EA988 @ =sub_080E95E8
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080EA97C
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080EA97C:
	movs r0, #0x5a
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EA988: .4byte sub_080E95E8

	thumb_func_start sub_080EA98C
sub_080EA98C: @ 0x080EA98C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _080EA9C0 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080EA9C4 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080EA9C8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r5, r0, r1
	b _080EA9D0
	.align 2, 0
_080EA9C0: .4byte ObjectMain
_080EA9C4: .4byte ObjectDestroy
_080EA9C8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
_080EA9D0:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r5, #0xc]
	movs r1, #2
	orrs r0, r1
	str r0, [r5, #0xc]
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080EAA2C @ =sub_0809F840
	str r0, [r5, #0x7c]
	movs r1, #5
	rsbs r1, r1, #0
	movs r4, #6
	rsbs r4, r4, #0
	movs r0, #5
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	movs r2, #7
	rsbs r2, r2, #0
	movs r0, #7
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #6
	bl sub_0803E308
	adds r0, r5, #0
	bl ObjectInitSprite
	adds r0, r5, #0
	bl sub_080E9B18
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080EAA2C: .4byte sub_0809F840

	thumb_func_start sub_080EAA30
sub_080EAA30: @ 0x080EAA30
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EAA7C @ =sub_080EB0B8
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080EAA50
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080EAA50:
	adds r2, r4, #0
	adds r2, #0x50
	movs r0, #0
	strh r0, [r2]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EAA72
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080EAA72:
	movs r0, #0x18
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EAA7C: .4byte sub_080EB0B8

	thumb_func_start sub_080EAA80
sub_080EAA80: @ 0x080EAA80
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _080EAAB4 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080EAAB8 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080EAABC
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r5, r0, r1
	b _080EAAC4
	.align 2, 0
_080EAAB4: .4byte ObjectMain
_080EAAB8: .4byte ObjectDestroy
_080EAABC:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
_080EAAC4:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r5, #0xc]
	movs r1, #2
	orrs r0, r1
	str r0, [r5, #0xc]
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080EAB20 @ =sub_0809F840
	str r0, [r5, #0x7c]
	movs r1, #5
	rsbs r1, r1, #0
	movs r4, #6
	rsbs r4, r4, #0
	movs r0, #5
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	movs r2, #7
	rsbs r2, r2, #0
	movs r0, #7
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #6
	bl sub_0803E308
	adds r0, r5, #0
	bl ObjectInitSprite
	adds r0, r5, #0
	bl sub_080EA084
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080EAB20: .4byte sub_0809F840

	thumb_func_start sub_080EAB24
sub_080EAB24: @ 0x080EAB24
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080EAB58 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080EAB5C @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080EAB60
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080EAB68
	.align 2, 0
_080EAB58: .4byte ObjectMain
_080EAB5C: .4byte ObjectDestroy
_080EAB60:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080EAB68:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080EABBC @ =sub_0809F840
	str r0, [r4, #0x7c]
	movs r1, #5
	rsbs r1, r1, #0
	movs r2, #7
	rsbs r2, r2, #0
	movs r0, #4
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	movs r1, #6
	rsbs r1, r1, #0
	movs r2, #8
	rsbs r2, r2, #0
	movs r0, #6
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #6
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	adds r0, r4, #0
	bl sub_080EA340
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080EABBC: .4byte sub_0809F840

	thumb_func_start sub_080EABC0
sub_080EABC0: @ 0x080EABC0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EAC08 @ =sub_080E7F98
	movs r1, #0x10
	bl ObjectSetFunc
	movs r0, #0x80
	lsls r0, r0, #8
	str r0, [r4, #0x40]
	ldr r0, _080EAC0C @ =0xFFFFF000
	str r0, [r4, #0x44]
	adds r2, r4, #0
	adds r2, #0x52
	movs r1, #0
	ldr r0, _080EAC10 @ =0x0000FF80
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x85
	strb r1, [r0]
	ldr r0, [r4, #8]
	ldr r1, _080EAC14 @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #0xb4
	strh r1, [r4, #4]
	adds r1, #0x4c
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EAC08: .4byte sub_080E7F98
_080EAC0C: .4byte 0xFFFFF000
_080EAC10: .4byte 0x0000FF80
_080EAC14: .4byte 0xFFFFFBFF

	thumb_func_start sub_080EAC18
sub_080EAC18: @ 0x080EAC18
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EAC44 @ =sub_080E8050
	movs r1, #0x11
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EAC44: .4byte sub_080E8050

	thumb_func_start sub_080EAC48
sub_080EAC48: @ 0x080EAC48
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EAC7C @ =sub_080EAC80
	movs r1, #4
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xb0
	lsls r0, r0, #1
	strh r0, [r1]
	adds r1, #2
	adds r0, #0x20
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #2
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x28
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EAC7C: .4byte sub_080EAC80

	thumb_func_start sub_080EAC80
sub_080EAC80: @ 0x080EAC80
	push {lr}
	adds r2, r0, #0
	adds r3, r2, #0
	adds r3, #0x83
	ldrb r0, [r3]
	cmp r0, #6
	bne _080EAC98
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	b _080EACA6
_080EAC98:
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EACA6
	movs r0, #6
	strb r0, [r3]
_080EACA6:
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EACBA
	ldr r0, [r2, #8]
	ldr r1, _080EACD4 @ =0xFFFFFEFF
	ands r0, r1
	str r0, [r2, #8]
_080EACBA:
	adds r0, r2, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080EACCE
	adds r0, r2, #0
	bl sub_080E8178
_080EACCE:
	pop {r0}
	bx r0
	.align 2, 0
_080EACD4: .4byte 0xFFFFFEFF

	thumb_func_start sub_080EACD8
sub_080EACD8: @ 0x080EACD8
	push {lr}
	adds r1, r0, #0
	ldr r2, [r1, #8]
	movs r0, #4
	orrs r2, r0
	str r2, [r1, #8]
	ldrh r0, [r1, #4]
	subs r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EAD04
	ldr r0, _080EAD08 @ =0xFFFFFDFF
	ands r2, r0
	str r2, [r1, #8]
	adds r2, r1, #0
	adds r2, #0x85
	movs r0, #0
	strb r0, [r2]
	adds r0, r1, #0
	bl sub_080E82C4
_080EAD04:
	pop {r0}
	bx r0
	.align 2, 0
_080EAD08: .4byte 0xFFFFFDFF

	thumb_func_start sub_080EAD0C
sub_080EAD0C: @ 0x080EAD0C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EAD38 @ =sub_080E7EBC
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EAD38: .4byte sub_080E7EBC

	thumb_func_start sub_080EAD3C
sub_080EAD3C: @ 0x080EAD3C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EAD60 @ =sub_080EAD8C
	movs r1, #3
	bl ObjectSetFunc
	ldr r1, [r4, #0x40]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080EAD68
	ldr r0, _080EAD64 @ =0xFFFFFF00
	ands r1, r0
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	str r0, [r4, #0x40]
	b _080EAD6E
	.align 2, 0
_080EAD60: .4byte sub_080EAD8C
_080EAD64: .4byte 0xFFFFFF00
_080EAD68:
	ldr r0, _080EAD88 @ =0xFFFFFF00
	ands r1, r0
	str r1, [r4, #0x40]
_080EAD6E:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EAD88: .4byte 0xFFFFFF00

	thumb_func_start sub_080EAD8C
sub_080EAD8C: @ 0x080EAD8C
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EADA0
	adds r0, r2, #0
	bl sub_080E8B08
_080EADA0:
	pop {r0}
	bx r0

	thumb_func_start sub_080EADA4
sub_080EADA4: @ 0x080EADA4
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _080EADE0 @ =sub_080E8DAC
	movs r1, #7
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r3, r4, #0
	adds r3, #0x9e
	movs r2, #0
	strb r2, [r3]
	adds r1, r4, #0
	adds r1, #0x50
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	beq _080EADD2
	movs r0, #1
	strb r0, [r3]
_080EADD2:
	strh r2, [r1]
	adds r0, r4, #0
	adds r0, #0x52
	strh r2, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080EADE0: .4byte sub_080E8DAC

	thumb_func_start sub_080EADE4
sub_080EADE4: @ 0x080EADE4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EAE08 @ =sub_080EAE34
	movs r1, #3
	bl ObjectSetFunc
	ldr r1, [r4, #0x40]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080EAE10
	ldr r0, _080EAE0C @ =0xFFFFFF00
	ands r1, r0
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	str r0, [r4, #0x40]
	b _080EAE16
	.align 2, 0
_080EAE08: .4byte sub_080EAE34
_080EAE0C: .4byte 0xFFFFFF00
_080EAE10:
	ldr r0, _080EAE30 @ =0xFFFFFF00
	ands r1, r0
	str r1, [r4, #0x40]
_080EAE16:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EAE30: .4byte 0xFFFFFF00

	thumb_func_start sub_080EAE34
sub_080EAE34: @ 0x080EAE34
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EAE48
	adds r0, r2, #0
	bl sub_080E8E74
_080EAE48:
	pop {r0}
	bx r0

	thumb_func_start sub_080EAE4C
sub_080EAE4C: @ 0x080EAE4C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EAE74 @ =sub_080EAE78
	movs r1, #7
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r4, #0x52
	strh r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EAE74: .4byte sub_080EAE78

	thumb_func_start sub_080EAE78
sub_080EAE78: @ 0x080EAE78
	push {lr}
	adds r2, r0, #0
	ldr r1, [r2, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080EAE92
	movs r0, #1
	eors r1, r0
	str r1, [r2, #8]
	adds r0, r2, #0
	bl sub_080E82C4
_080EAE92:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EAE98
sub_080EAE98: @ 0x080EAE98
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EAEC0 @ =sub_080EAEC4
	movs r1, #0xd
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EAEC0: .4byte sub_080EAEC4

	thumb_func_start sub_080EAEC4
sub_080EAEC4: @ 0x080EAEC4
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #1]
	cmp r0, #0x14
	bls _080EAEDE
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0x11
	orrs r0, r1
	str r0, [r2, #8]
_080EAEDE:
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EAEEE
	adds r0, r2, #0
	bl sub_080EAEF4
_080EAEEE:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EAEF4
sub_080EAEF4: @ 0x080EAEF4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EAF20 @ =sub_080E9034
	movs r1, #0xe
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x38
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EAF20: .4byte sub_080E9034

	thumb_func_start sub_080EAF24
sub_080EAF24: @ 0x080EAF24
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EAF4C @ =sub_080EAF50
	movs r1, #0xf
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EAF4C: .4byte sub_080EAF50

	thumb_func_start sub_080EAF50
sub_080EAF50: @ 0x080EAF50
	push {lr}
	adds r3, r0, #0
	ldrb r2, [r3, #1]
	cmp r2, #0x1d
	bhi _080EAF78
	ldr r1, [r3, #8]
	movs r0, #0x80
	lsls r0, r0, #8
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r1, r0
	str r1, [r3, #8]
	cmp r2, #0x1d
	bne _080EAF78
	ldr r0, _080EAFB4 @ =0xFFFF7FFF
	ands r1, r0
	ldr r0, _080EAFB8 @ =0xFEFFFFFF
	ands r1, r0
	str r1, [r3, #8]
_080EAF78:
	ldr r1, [r3, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080EAFD6
	ldr r0, _080EAFB4 @ =0xFFFF7FFF
	ands r1, r0
	str r1, [r3, #8]
	adds r0, r3, #0
	adds r0, #0x85
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EAFD0
	ldr r2, _080EAFBC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EAFC0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EAFC4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EAFC8
	adds r0, r3, #0
	bl sub_080E8430
	b _080EAFD6
	.align 2, 0
_080EAFB4: .4byte 0xFFFF7FFF
_080EAFB8: .4byte 0xFEFFFFFF
_080EAFBC: .4byte gRngVal
_080EAFC0: .4byte 0x00196225
_080EAFC4: .4byte 0x3C6EF35F
_080EAFC8:
	adds r0, r3, #0
	bl sub_080E8588
	b _080EAFD6
_080EAFD0:
	adds r0, r3, #0
	bl sub_080E82C4
_080EAFD6:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EAFDC
sub_080EAFDC: @ 0x080EAFDC
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EB024 @ =sub_080EB028
	movs r1, #0x12
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x50
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r2]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xc0
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #0x1e
	strh r1, [r4, #4]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EB01E
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080EB01E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EB024: .4byte sub_080EB028

	thumb_func_start sub_080EB028
sub_080EB028: @ 0x080EB028
	push {lr}
	adds r1, r0, #0
	ldrh r0, [r1, #4]
	subs r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EB03E
	adds r0, r1, #0
	bl sub_080EB044
_080EB03E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EB044
sub_080EB044: @ 0x080EB044
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EB080 @ =sub_080EB088
	movs r1, #0x13
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080EB084 @ =0x0000FF80
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x61
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x8c
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EB080: .4byte sub_080EB088
_080EB084: .4byte 0x0000FF80

	thumb_func_start sub_080EB088
sub_080EB088: @ 0x080EB088
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EB0B0
	adds r0, r4, #0
	bl sub_0809DA30
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
_080EB0B0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EB0B8
sub_080EB0B8: @ 0x080EB0B8
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EB0D6
	adds r0, r2, #0
	bl sub_080E9DD4
_080EB0D6:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EB0DC
sub_080EB0DC: @ 0x080EB0DC
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	ldrh r1, [r2, #4]
	movs r3, #4
	ldrsh r0, [r2, r3]
	cmp r0, #0
	beq _080EB0F6
	subs r0, r1, #1
	strh r0, [r2, #4]
_080EB0F6:
	adds r0, r2, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080EB130
	movs r1, #4
	ldrsh r0, [r2, r1]
	cmp r0, #0
	beq _080EB120
	ldr r0, [r2, #8]
	movs r1, #1
	eors r0, r1
	str r0, [r2, #8]
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
	b _080EB130
_080EB120:
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r2, #8]
	adds r0, r2, #0
	bl sub_0809DA30
_080EB130:
	pop {r0}
	bx r0

	thumb_func_start sub_080EB134
sub_080EB134: @ 0x080EB134
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _080EB168 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080EB16C @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb8
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080EB170
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080EB178
	.align 2, 0
_080EB168: .4byte ObjectMain
_080EB16C: .4byte ObjectDestroy
_080EB170:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080EB178:
	adds r5, r0, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r5, #0xc]
	movs r3, #1
	orrs r0, r3
	str r0, [r5, #0xc]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #0x12
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0xb4
	movs r1, #0
	strb r3, [r0]
	adds r2, r5, #0
	adds r2, #0xb6
	movs r0, #0
	strh r1, [r2]
	adds r1, r5, #0
	adds r1, #0xb5
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r5, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080EB1DA
	ldr r0, [r5, #8]
	orrs r0, r3
	b _080EB1E2
_080EB1DA:
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080EB1E2:
	str r0, [r5, #8]
	ldr r0, [r5, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	ldr r1, _080EB2A8 @ =0x001080A0
	orrs r0, r1
	str r0, [r5, #0x5c]
	movs r1, #0xc
	rsbs r1, r1, #0
	movs r4, #0x10
	rsbs r4, r4, #0
	movs r0, #0x14
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r4, #0
	movs r3, #0xc
	bl sub_0803E2B0
	movs r1, #0xa
	rsbs r1, r1, #0
	movs r0, #6
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r4, #0
	movs r3, #0xa
	bl sub_0803E308
	adds r0, r5, #0
	bl ObjectInitSprite
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	str r0, [r5, #0x7c]
	ldr r2, _080EB2AC @ =gCurLevelInfo
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080EB2B0 @ =0x0000065E
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r4, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	movs r2, #0
	bl sub_08002A44
	adds r0, r4, #0
	movs r1, #0
	bl sub_08002A1C
	ldr r2, _080EB2B4 @ =gUnk_02020EE0
	ldr r0, _080EB2B8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EB296
	ldr r0, _080EB2BC @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080EB296
	adds r0, r4, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080EB296:
	adds r0, r5, #0
	bl sub_080ED520
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080EB2A8: .4byte 0x001080A0
_080EB2AC: .4byte gCurLevelInfo
_080EB2B0: .4byte 0x0000065E
_080EB2B4: .4byte gUnk_02020EE0
_080EB2B8: .4byte gUnk_0203AD3C
_080EB2BC: .4byte gUnk_0203AD20

	thumb_func_start sub_080EB2C0
sub_080EB2C0: @ 0x080EB2C0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	bl sub_0803D368
	adds r6, r0, #0
	adds r7, r5, #0
	adds r7, #0xac
	str r6, [r7]
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r6, #0xc]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _080EB38E
	adds r0, r5, #0
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EB38E
	ldr r1, [r5, #0x40]
	ldr r2, [r5, #0x44]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r4, [r0]
	movs r3, #0x1a
	ldrsh r0, [r4, r3]
	mov ip, r0
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	adds r0, r6, #0
	mov r3, ip
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080EB38E
	ldr r3, _080EB398 @ =gCurLevelInfo
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	movs r2, #0xcd
	lsls r2, r2, #3
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa0
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa4
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa4
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa6
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa8
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xac
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r2, r5, #0
	adds r2, #0xaa
	strh r0, [r2]
	adds r0, r5, #0
	bl sub_080ED54C
_080EB38E:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080EB398: .4byte gCurLevelInfo

	thumb_func_start sub_080EB39C
sub_080EB39C: @ 0x080EB39C
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0x8c
	bne _080EB3B0
	movs r0, #4
	adds r1, r4, #0
	bl sub_0806FE64
_080EB3B0:
	ldrh r1, [r4, #4]
	movs r2, #4
	ldrsh r0, [r4, r2]
	cmp r0, #0x77
	bgt _080EB3F8
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _080EB3F8
	ldr r5, _080EB494 @ =gRngVal
	ldr r0, [r5]
	ldr r7, _080EB498 @ =0x00196225
	muls r0, r7, r0
	ldr r6, _080EB49C @ =0x3C6EF35F
	adds r0, r0, r6
	str r0, [r5]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EB3E0
	adds r0, r4, #0
	bl sub_080ED078
_080EB3E0:
	ldr r0, [r5]
	muls r0, r7, r0
	adds r0, r0, r6
	str r0, [r5]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080EB3F8
	adds r0, r4, #0
	bl sub_080ED078
_080EB3F8:
	ldrh r1, [r4, #4]
	movs r2, #4
	ldrsh r0, [r4, r2]
	cmp r0, #0x8c
	bgt _080EB476
	movs r0, #0xf
	ands r0, r1
	cmp r0, #0
	bne _080EB476
	ldr r1, _080EB4A0 @ =gUnk_02020EE0
	ldr r0, _080EB4A4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EB476
	ldrb r0, [r4]
	cmp r0, #0
	bne _080EB436
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080EB476
_080EB436:
	ldr r1, _080EB4A8 @ =gUnk_08D60FA4
	ldr r5, _080EB4AC @ =gSongTable
	ldr r2, _080EB4B0 @ =0x00000C54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080EB45C
	movs r1, #0xc5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080EB476
_080EB45C:
	cmp r3, #0
	beq _080EB46E
	ldr r0, _080EB4B4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080EB476
_080EB46E:
	movs r0, #0xc5
	lsls r0, r0, #1
	bl m4aSongNumStart
_080EB476:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EB48E
	adds r0, r4, #0
	bl sub_080700D8
	adds r0, r4, #0
	bl sub_080ED578
_080EB48E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080EB494: .4byte gRngVal
_080EB498: .4byte 0x00196225
_080EB49C: .4byte 0x3C6EF35F
_080EB4A0: .4byte gUnk_02020EE0
_080EB4A4: .4byte gUnk_0203AD3C
_080EB4A8: .4byte gUnk_08D60FA4
_080EB4AC: .4byte gSongTable
_080EB4B0: .4byte 0x00000C54
_080EB4B4: .4byte gUnk_0203AD10

	thumb_func_start sub_080EB4B8
sub_080EB4B8: @ 0x080EB4B8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #6
	bls _080EB4CA
	b _080EB6F4
_080EB4CA:
	lsls r0, r0, #2
	ldr r1, _080EB4D4 @ =_080EB4D8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080EB4D4: .4byte _080EB4D8
_080EB4D8: @ jump table
	.4byte _080EB51C @ case 0
	.4byte _080EB6F4 @ case 1
	.4byte _080EB6F4 @ case 2
	.4byte _080EB4F4 @ case 3
	.4byte _080EB508 @ case 4
	.4byte _080EB640 @ case 5
	.4byte _080EB6E4 @ case 6
_080EB4F4:
	ldr r0, [r5, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080EB500
	b _080EB6F4
_080EB500:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #4
	b _080EB650
_080EB508:
	ldr r0, [r5, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080EB514
	b _080EB6F4
_080EB514:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #0
	b _080EB618
_080EB51C:
	movs r2, #4
	ldrsh r0, [r5, r2]
	cmp r0, #0x10
	bne _080EB606
	adds r0, r5, #0
	bl sub_08034E14
	adds r1, r0, #0
	cmp r1, #0
	beq _080EB534
	movs r0, #0
	strb r0, [r1, #9]
_080EB534:
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r4, [r0]
	adds r3, r4, #0
	subs r3, #0x38
	ldr r2, _080EB628 @ =gCurLevelInfo
	subs r0, #0x2c
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080EB62C @ =0x0000065E
	adds r0, r0, r1
	ldrb r6, [r0]
	lsls r3, r3, #0x10
	asrs r1, r3, #0x10
	cmp r1, #0
	blt _080EB606
	ldr r0, _080EB630 @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080EB606
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080EB606
	adds r0, r4, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x60
	adds r2, r2, r5
	mov r8, r2
	adds r7, r3, #0
	cmp r0, #0xf
	bls _080EB5C4
	movs r4, #1
_080EB58C:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _080EB58C
	adds r0, r6, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	movs r2, #0
	bl sub_08002A44
_080EB5C4:
	ldr r1, _080EB630 @ =gUnk_08352D80
	asrs r0, r7, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r6, #0
	bl sub_08002A1C
	ldr r2, _080EB634 @ =gUnk_02020EE0
	ldr r0, _080EB638 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, r8
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EB606
	ldr r0, _080EB63C @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080EB606
	adds r0, r6, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080EB606:
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EB6F4
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #5
_080EB618:
	strb r0, [r1]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	b _080EB6F4
	.align 2, 0
_080EB628: .4byte gCurLevelInfo
_080EB62C: .4byte 0x0000065E
_080EB630: .4byte gUnk_08352D80
_080EB634: .4byte gUnk_02020EE0
_080EB638: .4byte gUnk_0203AD3C
_080EB63C: .4byte gUnk_0203AD20
_080EB640:
	ldr r0, [r5, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EB6F4
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #6
_080EB650:
	strb r0, [r1]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	ldr r1, _080EB6CC @ =gUnk_02020EE0
	ldr r0, _080EB6D0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EB6F4
	ldrb r0, [r5]
	cmp r0, #0
	bne _080EB688
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080EB6F4
_080EB688:
	ldr r1, _080EB6D4 @ =gUnk_08D60FA4
	ldr r4, _080EB6D8 @ =gSongTable
	ldr r2, _080EB6DC @ =0x00000C54
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080EB6AE
	movs r1, #0xc5
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080EB6F4
_080EB6AE:
	cmp r3, #0
	beq _080EB6C0
	ldr r0, _080EB6E0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080EB6F4
_080EB6C0:
	movs r0, #0xc5
	lsls r0, r0, #1
	bl m4aSongNumStart
	b _080EB6F4
	.align 2, 0
_080EB6CC: .4byte gUnk_02020EE0
_080EB6D0: .4byte gUnk_0203AD3C
_080EB6D4: .4byte gUnk_08D60FA4
_080EB6D8: .4byte gSongTable
_080EB6DC: .4byte 0x00000C54
_080EB6E0: .4byte gUnk_0203AD10
_080EB6E4:
	ldr r0, [r5, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EB6F4
	adds r0, r5, #0
	bl sub_080EBBD0
_080EB6F4:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EB700
sub_080EB700: @ 0x080EB700
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r3, r0, #0
	movs r4, #3
	movs r5, #3
	movs r6, #3
	movs r0, #2
	mov sb, r0
	mov ip, r0
	mov r8, r6
	adds r2, r3, #0
	adds r2, #0x80
	ldr r1, _080EB778 @ =gUnk_08351530
	ldr r0, _080EB77C @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x90
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r7, #0
	ldrsh r1, [r2, r7]
	asrs r0, r0, #0x11
	cmp r1, r0
	ble _080EB746
	movs r4, #4
	movs r5, #4
	movs r6, #5
	movs r0, #1
	mov sb, r0
	mov ip, r0
	mov r8, r0
_080EB746:
	ldr r2, _080EB780 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EB784 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EB788 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	subs r0, r0, r4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080EB790
	ldr r0, [r3, #0x18]
	ldr r1, _080EB78C @ =0xFFFFF7FF
	ands r0, r1
	str r0, [r3, #0x18]
	movs r0, #0xfc
	lsls r0, r0, #9
	str r0, [r3, #0x40]
	movs r0, #0x8c
	lsls r0, r0, #9
	b _080EB83A
	.align 2, 0
_080EB778: .4byte gUnk_08351530
_080EB77C: .4byte gUnk_0203AD30
_080EB780: .4byte gRngVal
_080EB784: .4byte 0x00196225
_080EB788: .4byte 0x3C6EF35F
_080EB78C: .4byte 0xFFFFF7FF
_080EB790:
	subs r0, r1, r5
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080EB7B4
	ldr r0, [r3, #0x18]
	ldr r1, _080EB7B0 @ =0xFFFFF7FF
	ands r0, r1
	str r0, [r3, #0x18]
	movs r0, #0x94
	lsls r0, r0, #0xa
	str r0, [r3, #0x40]
	movs r0, #0x84
	lsls r0, r0, #9
	b _080EB83A
	.align 2, 0
_080EB7B0: .4byte 0xFFFFF7FF
_080EB7B4:
	subs r0, r1, r6
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080EB7D8
	ldr r0, [r3, #0x18]
	ldr r1, _080EB7D4 @ =0xFFFFF7FF
	ands r0, r1
	str r0, [r3, #0x18]
	movs r0, #0xa8
	lsls r0, r0, #0xa
	str r0, [r3, #0x40]
	movs r0, #0xf8
	lsls r0, r0, #8
	b _080EB83A
	.align 2, 0
_080EB7D4: .4byte 0xFFFFF7FF
_080EB7D8:
	mov r2, sb
	subs r0, r1, r2
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080EB7FA
	ldr r0, [r3, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r3, #0x18]
	movs r0, #0xfc
	lsls r0, r0, #9
	str r0, [r3, #0x40]
	movs r0, #0xf8
	lsls r0, r0, #8
	b _080EB83A
_080EB7FA:
	mov r7, ip
	subs r0, r1, r7
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080EB81C
	ldr r0, [r3, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r3, #0x18]
	movs r0, #0x94
	lsls r0, r0, #0xa
	str r0, [r3, #0x40]
	movs r0, #0xe8
	lsls r0, r0, #8
	b _080EB83A
_080EB81C:
	mov r2, r8
	subs r0, r1, r2
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _080EB83C
	ldr r0, [r3, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r3, #0x18]
	movs r0, #0xa8
	lsls r0, r0, #0xa
	str r0, [r3, #0x40]
	movs r0, #0xd8
	lsls r0, r0, #8
_080EB83A:
	str r0, [r3, #0x44]
_080EB83C:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080EB848
sub_080EB848: @ 0x080EB848
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _080EB860
	adds r0, r4, #0
	bl sub_080EC504
	b _080EB98A
_080EB860:
	ldr r2, _080EB894 @ =sub_080EB9AC
	adds r0, r4, #0
	movs r1, #2
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080EB898
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080EB8A0
	.align 2, 0
_080EB894: .4byte sub_080EB9AC
_080EB898:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080EB8A0:
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r1, _080EB8D0 @ =0xFFFFFDFF
	ands r0, r1
	ldr r1, _080EB8D4 @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080EB8D8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EB8DC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EB8E0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EB8E4
	movs r0, #0x10
	b _080EB8E6
	.align 2, 0
_080EB8D0: .4byte 0xFFFFFDFF
_080EB8D4: .4byte 0xFFFFFBFF
_080EB8D8: .4byte gRngVal
_080EB8DC: .4byte 0x00196225
_080EB8E0: .4byte 0x3C6EF35F
_080EB8E4:
	movs r0, #0x30
_080EB8E6:
	strh r0, [r4, #4]
	ldr r0, [r4, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	beq _080EB90C
	movs r1, #0xa
	rsbs r1, r1, #0
	movs r2, #0x10
	rsbs r2, r2, #0
	movs r0, #4
	rsbs r0, r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0xa
	bl sub_0803E2B0
	b _080EB91E
_080EB90C:
	movs r1, #0xa
	rsbs r1, r1, #0
	movs r0, #0x14
	str r0, [sp]
	adds r0, r4, #0
	movs r2, #4
	movs r3, #0xa
	bl sub_0803E2B0
_080EB91E:
	ldr r1, _080EB994 @ =gUnk_02020EE0
	ldr r0, _080EB998 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EB98A
	ldrb r0, [r4]
	cmp r0, #0
	bne _080EB94A
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080EB98A
_080EB94A:
	ldr r1, _080EB99C @ =gUnk_08D60FA4
	ldr r4, _080EB9A0 @ =gSongTable
	ldr r2, _080EB9A4 @ =0x00000C54
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080EB970
	movs r1, #0xc5
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080EB98A
_080EB970:
	cmp r3, #0
	beq _080EB982
	ldr r0, _080EB9A8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080EB98A
_080EB982:
	movs r0, #0xc5
	lsls r0, r0, #1
	bl m4aSongNumStart
_080EB98A:
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EB994: .4byte gUnk_02020EE0
_080EB998: .4byte gUnk_0203AD3C
_080EB99C: .4byte gUnk_08D60FA4
_080EB9A0: .4byte gSongTable
_080EB9A4: .4byte 0x00000C54
_080EB9A8: .4byte gUnk_0203AD10

	thumb_func_start sub_080EB9AC
sub_080EB9AC: @ 0x080EB9AC
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #3
	beq _080EBA58
	cmp r0, #3
	bgt _080EB9C4
	cmp r0, #2
	beq _080EB9D2
	b _080EBBC8
_080EB9C4:
	cmp r0, #4
	bne _080EB9CA
	b _080EBB6A
_080EB9CA:
	cmp r0, #6
	bne _080EB9D0
	b _080EBBB8
_080EB9D0:
	b _080EBBC8
_080EB9D2:
	ldr r1, [r4, #8]
	ands r0, r1
	cmp r0, #0
	bne _080EB9DC
	b _080EBBC8
_080EB9DC:
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r1, r0
	str r1, [r4, #8]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080EB9F8
	b _080EBBC8
_080EB9F8:
	ldr r2, _080EBA38 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EBA3C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EBA40 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080EBA44 @ =0x00005554
	cmp r2, r0
	bls _080EBA1C
	ldr r0, _080EBA48 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080EBA18
	movs r1, #1
_080EBA18:
	cmp r1, #0
	bne _080EBA26
_080EBA1C:
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	cmp r0, #2
	bls _080EBA50
_080EBA26:
	ldr r0, [r4, #8]
	ldr r1, _080EBA4C @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #3
	b _080EBB10
	.align 2, 0
_080EBA38: .4byte gRngVal
_080EBA3C: .4byte 0x00196225
_080EBA40: .4byte 0x3C6EF35F
_080EBA44: .4byte 0x00005554
_080EBA48: .4byte 0x0000AAA9
_080EBA4C: .4byte 0xFFFFFBFF
_080EBA50:
	adds r0, r4, #0
	bl sub_080EBBD0
	b _080EBBC8
_080EBA58:
	ldrb r0, [r4, #1]
	cmp r0, #7
	bne _080EBAD2
	ldr r0, [r4, #8]
	ldr r1, _080EBB20 @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _080EBB24 @ =gUnk_02020EE0
	ldr r0, _080EBB28 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EBAD2
	ldrb r0, [r4]
	cmp r0, #0
	bne _080EBA92
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080EBAD2
_080EBA92:
	ldr r1, _080EBB2C @ =gUnk_08D60FA4
	ldr r5, _080EBB30 @ =gSongTable
	ldr r2, _080EBB34 @ =0x00000C54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080EBAB8
	movs r1, #0xc5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080EBAD2
_080EBAB8:
	cmp r3, #0
	beq _080EBACA
	ldr r0, _080EBB38 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080EBAD2
_080EBACA:
	movs r0, #0xc5
	lsls r0, r0, #1
	bl m4aSongNumStart
_080EBAD2:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EBBC8
	ldr r2, _080EBB3C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EBB40 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EBB44 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080EBB48 @ =0x00005554
	cmp r2, r0
	bls _080EBB00
	ldr r0, _080EBB4C @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080EBAFC
	movs r1, #1
_080EBAFC:
	cmp r1, #0
	bne _080EBB0A
_080EBB00:
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	cmp r0, #2
	bls _080EBB50
_080EBB0A:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #4
_080EBB10:
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	b _080EBBC8
	.align 2, 0
_080EBB20: .4byte 0xFFFFFDFF
_080EBB24: .4byte gUnk_02020EE0
_080EBB28: .4byte gUnk_0203AD3C
_080EBB2C: .4byte gUnk_08D60FA4
_080EBB30: .4byte gSongTable
_080EBB34: .4byte 0x00000C54
_080EBB38: .4byte gUnk_0203AD10
_080EBB3C: .4byte gRngVal
_080EBB40: .4byte 0x00196225
_080EBB44: .4byte 0x3C6EF35F
_080EBB48: .4byte 0x00005554
_080EBB4C: .4byte 0x0000AAA9
_080EBB50:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #6
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	b _080EBBC8
_080EBB6A:
	ldrb r0, [r4, #1]
	cmp r0, #5
	bne _080EBBA6
	ldr r0, [r4, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	beq _080EBB92
	movs r1, #0xc
	rsbs r1, r1, #0
	movs r2, #0x10
	rsbs r2, r2, #0
	movs r0, #0xa
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0xc
	bl sub_0803E2B0
	b _080EBBA6
_080EBB92:
	movs r1, #0xc
	rsbs r1, r1, #0
	movs r2, #0x10
	rsbs r2, r2, #0
	movs r0, #0x14
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0xc
	bl sub_0803E2B0
_080EBBA6:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EBBC8
	adds r0, r4, #0
	bl sub_080EBF34
	b _080EBBC8
_080EBBB8:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EBBC8
	adds r0, r4, #0
	bl sub_080EBBD0
_080EBBC8:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080EBBD0
sub_080EBBD0: @ 0x080EBBD0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	adds r4, r5, #0
	ldr r2, _080EBC80 @ =sub_080ED5FC
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080EBC3C
	ldr r6, _080EBC84 @ =gRngVal
	ldr r0, [r6]
	ldr r1, _080EBC88 @ =0x00196225
	mov sb, r1
	mov r1, sb
	muls r1, r0, r1
	adds r0, r1, #0
	ldr r1, _080EBC8C @ =0x3C6EF35F
	mov r8, r1
	add r0, r8
	str r0, [r6]
	lsrs r0, r0, #0x10
	movs r7, #1
	ands r0, r7
	cmp r0, #0
	beq _080EBC22
	adds r0, r5, #0
	bl sub_080ED078
_080EBC22:
	ldr r0, [r6]
	mov r1, sb
	muls r1, r0, r1
	adds r0, r1, #0
	add r0, r8
	str r0, [r6]
	lsrs r0, r0, #0x10
	ands r0, r7
	cmp r0, #0
	beq _080EBC3C
	adds r0, r5, #0
	bl sub_080ED078
_080EBC3C:
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x85
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r2, _080EBC84 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EBC88 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EBC8C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #3
	ands r1, r0
	cmp r1, #1
	beq _080EBC94
	cmp r1, #1
	blo _080EBC90
	cmp r1, #2
	beq _080EBC98
	movs r0, #0xf
	b _080EBC9A
	.align 2, 0
_080EBC80: .4byte sub_080ED5FC
_080EBC84: .4byte gRngVal
_080EBC88: .4byte 0x00196225
_080EBC8C: .4byte 0x3C6EF35F
_080EBC90:
	movs r0, #0x5a
	b _080EBC9A
_080EBC94:
	movs r0, #0x3c
	b _080EBC9A
_080EBC98:
	movs r0, #0x1e
_080EBC9A:
	strh r0, [r4, #4]
	ldr r0, [r4, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	adds r6, r5, #0
	adds r6, #0xb4
	cmp r0, #0
	beq _080EBCC2
	ldrb r0, [r6]
	cmp r0, #0
	bne _080EBCC2
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r2, [r0, #0x10]
	adds r0, r4, #0
	movs r1, #1
	bl sub_080EC650
_080EBCC2:
	movs r0, #0
	strb r0, [r6]
	adds r1, r5, #0
	adds r1, #0xb6
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080EBCDC
sub_080EBCDC: @ 0x080EBCDC
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080EBD28 @ =sub_080EBD4C
	movs r1, #5
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	ldr r1, _080EBD2C @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080EBD30 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EBD34 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EBD38 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EBD3C
	strh r1, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	b _080EBD46
	.align 2, 0
_080EBD28: .4byte sub_080EBD4C
_080EBD2C: .4byte 0xFFFFFBFF
_080EBD30: .4byte gRngVal
_080EBD34: .4byte 0x00196225
_080EBD38: .4byte 0x3C6EF35F
_080EBD3C:
	movs r0, #0x18
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r1, [r0]
_080EBD46:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080EBD4C
sub_080EBD4C: @ 0x080EBD4C
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #5
	beq _080EBD6C
	cmp r0, #5
	bgt _080EBD66
	cmp r0, #4
	bne _080EBD64
	b _080EBEE0
_080EBD64:
	b _080EBF2C
_080EBD66:
	cmp r0, #6
	beq _080EBE38
	b _080EBF2C
_080EBD6C:
	ldrb r0, [r4, #1]
	cmp r0, #5
	bne _080EBDA8
	ldr r0, [r4, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	beq _080EBD96
	movs r1, #0xa
	rsbs r1, r1, #0
	movs r2, #0x10
	rsbs r2, r2, #0
	movs r0, #4
	rsbs r0, r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0xa
	bl sub_0803E2B0
	b _080EBDA8
_080EBD96:
	movs r1, #0xa
	rsbs r1, r1, #0
	movs r0, #0x14
	str r0, [sp]
	adds r0, r4, #0
	movs r2, #4
	movs r3, #0xa
	bl sub_0803E2B0
_080EBDA8:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080EBDB4
	b _080EBF2C
_080EBDB4:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080EBDC2
	b _080EBF2C
_080EBDC2:
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EBDDC
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #6
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	b _080EBE2E
_080EBDDC:
	ldr r2, _080EBE10 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EBE14 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EBE18 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080EBDFE
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	cmp r0, #2
	bls _080EBE1C
_080EBDFE:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #6
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	b _080EBE2E
	.align 2, 0
_080EBE10: .4byte gRngVal
_080EBE14: .4byte 0x00196225
_080EBE18: .4byte 0x3C6EF35F
_080EBE1C:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #4
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	ldr r1, _080EBE34 @ =0xFFFFFDFF
_080EBE2E:
	ands r0, r1
	str r0, [r4, #8]
	b _080EBF2C
	.align 2, 0
_080EBE34: .4byte 0xFFFFFDFF
_080EBE38:
	ldrb r0, [r4, #1]
	cmp r0, #1
	bne _080EBEB4
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	ldr r1, _080EBEC8 @ =gUnk_02020EE0
	ldr r0, _080EBECC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EBEB4
	ldrb r0, [r4]
	cmp r0, #0
	bne _080EBE74
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080EBEB4
_080EBE74:
	ldr r1, _080EBED0 @ =gUnk_08D60FA4
	ldr r5, _080EBED4 @ =gSongTable
	ldr r2, _080EBED8 @ =0x00000C54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080EBE9A
	movs r1, #0xc5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080EBEB4
_080EBE9A:
	cmp r3, #0
	beq _080EBEAC
	ldr r0, _080EBEDC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080EBEB4
_080EBEAC:
	movs r0, #0xc5
	lsls r0, r0, #1
	bl m4aSongNumStart
_080EBEB4:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EBF2C
	adds r0, r4, #0
	bl sub_080EBBD0
	b _080EBF2C
	.align 2, 0
_080EBEC8: .4byte gUnk_02020EE0
_080EBECC: .4byte gUnk_0203AD3C
_080EBED0: .4byte gUnk_08D60FA4
_080EBED4: .4byte gSongTable
_080EBED8: .4byte 0x00000C54
_080EBEDC: .4byte gUnk_0203AD10
_080EBEE0:
	ldrb r0, [r4, #1]
	cmp r0, #4
	bne _080EBF1C
	ldr r0, [r4, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	beq _080EBF08
	movs r1, #0xc
	rsbs r1, r1, #0
	movs r2, #0x10
	rsbs r2, r2, #0
	movs r0, #0xa
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0xc
	bl sub_0803E2B0
	b _080EBF1C
_080EBF08:
	movs r1, #0xc
	rsbs r1, r1, #0
	movs r2, #0x10
	rsbs r2, r2, #0
	movs r0, #0x14
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0xc
	bl sub_0803E2B0
_080EBF1C:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EBF2C
	adds r0, r4, #0
	bl sub_080EBF34
_080EBF2C:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080EBF34
sub_080EBF34: @ 0x080EBF34
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r2, _080EBFA8 @ =sub_080ED67C
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r5, #8]
	ldr r1, _080EBFAC @ =0xFFFFFBFF
	ands r0, r1
	ldr r1, _080EBFB0 @ =0xFFFFFDFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EBF8C
	adds r2, r5, #0
	adds r2, #0x80
	ldr r3, _080EBFB4 @ =gUnk_08351530
	ldr r4, _080EBFB8 @ =gUnk_0203AD30
	ldrb r0, [r4]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, r3, #0
	adds r1, #0x90
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r6, #0
	ldrsh r1, [r2, r6]
	asrs r0, r0, #0x11
	adds r6, r2, #0
	cmp r1, r0
	bge _080EBFE0
_080EBF8C:
	ldr r2, _080EBFBC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EBFC0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EBFC4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EBFC8
	movs r0, #0x18
	b _080EBFCA
	.align 2, 0
_080EBFA8: .4byte sub_080ED67C
_080EBFAC: .4byte 0xFFFFFBFF
_080EBFB0: .4byte 0xFFFFFDFF
_080EBFB4: .4byte gUnk_08351530
_080EBFB8: .4byte gUnk_0203AD30
_080EBFBC: .4byte gRngVal
_080EBFC0: .4byte 0x00196225
_080EBFC4: .4byte 0x3C6EF35F
_080EBFC8:
	movs r0, #0x10
_080EBFCA:
	strh r0, [r5, #4]
	adds r6, r5, #0
	adds r6, #0x80
	ldr r3, _080EBFD8 @ =gUnk_08351530
	ldr r4, _080EBFDC @ =gUnk_0203AD30
	b _080EC00C
	.align 2, 0
_080EBFD8: .4byte gUnk_08351530
_080EBFDC: .4byte gUnk_0203AD30
_080EBFE0:
	ldr r2, _080EBFFC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EC000 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EC004 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EC008
	movs r0, #0x24
	b _080EC00A
	.align 2, 0
_080EBFFC: .4byte gRngVal
_080EC000: .4byte 0x00196225
_080EC004: .4byte 0x3C6EF35F
_080EC008:
	movs r0, #0x18
_080EC00A:
	strh r0, [r5, #4]
_080EC00C:
	ldrb r0, [r4]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, r3, #0
	adds r1, #0x90
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r2, #0
	ldrsh r1, [r6, r2]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080EC02E
	ldrh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	strh r0, [r5, #4]
_080EC02E:
	adds r1, r5, #0
	adds r1, #0x85
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EC040
sub_080EC040: @ 0x080EC040
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	movs r5, #5
	adds r3, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EC070
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080EC0BC @ =gUnk_08351530
	ldr r0, _080EC0C0 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x90
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r6, #0
	ldrsh r1, [r2, r6]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080EC072
_080EC070:
	movs r5, #3
_080EC072:
	adds r0, r3, #0
	adds r0, #0xb6
	ldrh r0, [r0]
	cmp r0, r5
	bhi _080EC07E
	b _080EC188
_080EC07E:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EC10C
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080EC0BC @ =gUnk_08351530
	ldr r0, _080EC0C0 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x90
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080EC0D0
	ldr r2, _080EC0C4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EC0C8 @ =0x00196225
	muls r0, r1, r0
	ldr r6, _080EC0CC @ =0x3C6EF35F
	adds r0, r0, r6
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	b _080EC16E
	.align 2, 0
_080EC0BC: .4byte gUnk_08351530
_080EC0C0: .4byte gUnk_0203AD30
_080EC0C4: .4byte gRngVal
_080EC0C8: .4byte 0x00196225
_080EC0CC: .4byte 0x3C6EF35F
_080EC0D0:
	ldr r2, _080EC0EC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EC0F0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EC0F4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080EC0F8 @ =0x00005554
	cmp r2, r0
	bhi _080EC0FC
_080EC0E6:
	movs r1, #0
	b _080EC170
	.align 2, 0
_080EC0EC: .4byte gRngVal
_080EC0F0: .4byte 0x00196225
_080EC0F4: .4byte 0x3C6EF35F
_080EC0F8: .4byte 0x00005554
_080EC0FC:
	ldr r0, _080EC108 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080EC170
	movs r1, #1
	b _080EC170
	.align 2, 0
_080EC108: .4byte 0x0000AAA9
_080EC10C:
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080EC144 @ =gUnk_08351530
	ldr r0, _080EC148 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x90
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080EC15C
	ldr r2, _080EC14C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EC150 @ =0x00196225
	muls r0, r1, r0
	ldr r6, _080EC154 @ =0x3C6EF35F
	adds r0, r0, r6
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080EC158 @ =0x00005554
	cmp r2, r0
	bls _080EC0E6
	b _080EC0FC
	.align 2, 0
_080EC144: .4byte gUnk_08351530
_080EC148: .4byte gUnk_0203AD30
_080EC14C: .4byte gRngVal
_080EC150: .4byte 0x00196225
_080EC154: .4byte 0x3C6EF35F
_080EC158: .4byte 0x00005554
_080EC15C:
	ldr r2, _080EC17C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EC180 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EC184 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #3
_080EC16E:
	ands r1, r0
_080EC170:
	cmp r1, #0
	bne _080EC188
	adds r0, r4, #0
	bl sub_080ED704
	b _080EC1EC
	.align 2, 0
_080EC17C: .4byte gRngVal
_080EC180: .4byte 0x00196225
_080EC184: .4byte 0x3C6EF35F
_080EC188:
	ldr r2, _080EC1D4 @ =sub_080ED6D0
	adds r0, r4, #0
	movs r1, #7
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	ldr r1, _080EC1D8 @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080EC1DC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EC1E0 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080EC1E4 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080EC1CE
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EC1E8
_080EC1CE:
	strh r1, [r4, #4]
	b _080EC1EC
	.align 2, 0
_080EC1D4: .4byte sub_080ED6D0
_080EC1D8: .4byte 0xFFFFFBFF
_080EC1DC: .4byte gRngVal
_080EC1E0: .4byte 0x00196225
_080EC1E4: .4byte 0x3C6EF35F
_080EC1E8:
	movs r0, #2
	strh r0, [r4, #4]
_080EC1EC:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EC1F4
sub_080EC1F4: @ 0x080EC1F4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _080EC220 @ =sub_080EC308
	movs r1, #8
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080EC224
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080EC22C
	.align 2, 0
_080EC220: .4byte sub_080EC308
_080EC224:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080EC22C:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	ldr r1, _080EC270 @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EC284
	ldr r2, _080EC274 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EC278 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EC27C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EC280
	movs r0, #0xc
	b _080EC2AE
	.align 2, 0
_080EC270: .4byte 0xFFFFFBFF
_080EC274: .4byte gRngVal
_080EC278: .4byte 0x00196225
_080EC27C: .4byte 0x3C6EF35F
_080EC280:
	movs r0, #8
	b _080EC2AE
_080EC284:
	ldr r2, _080EC2A0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EC2A4 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080EC2A8 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EC2AC
	movs r0, #0x24
	b _080EC2AE
	.align 2, 0
_080EC2A0: .4byte gRngVal
_080EC2A4: .4byte 0x00196225
_080EC2A8: .4byte 0x3C6EF35F
_080EC2AC:
	movs r0, #0x18
_080EC2AE:
	strh r0, [r4, #4]
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080EC300 @ =gUnk_08351530
	ldr r0, _080EC304 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x90
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080EC2D8
	ldrh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	strh r0, [r4, #4]
_080EC2D8:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r2, [r0, #0x10]
	adds r0, r4, #0
	movs r1, #0
	bl sub_080EC650
	adds r1, r5, #0
	adds r1, #0xb4
	movs r0, #1
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x85
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080EC300: .4byte gUnk_08351530
_080EC304: .4byte gUnk_0203AD30

	thumb_func_start sub_080EC308
sub_080EC308: @ 0x080EC308
	push {r4, lr}
	adds r3, r0, #0
	adds r2, r3, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #8
	beq _080EC326
	cmp r0, #8
	bgt _080EC320
	cmp r0, #0
	beq _080EC34C
	b _080EC3B2
_080EC320:
	cmp r0, #9
	beq _080EC334
	b _080EC3B2
_080EC326:
	ldr r0, [r3, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EC3B2
	movs r0, #9
	b _080EC340
_080EC334:
	ldr r0, [r3, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EC3B2
	movs r0, #0
_080EC340:
	strb r0, [r2]
	ldr r0, [r3, #8]
	subs r1, #5
	ands r0, r1
	str r0, [r3, #8]
	b _080EC3B2
_080EC34C:
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EC3B2
	ldr r2, _080EC398 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EC39C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EC3A0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	ldr r0, _080EC3A4 @ =0x00005554
	cmp r1, r0
	bls _080EC380
	ldr r0, _080EC3A8 @ =0x0000AAA9
	movs r4, #2
	cmp r1, r0
	bhi _080EC378
	movs r4, #1
_080EC378:
	adds r2, r3, #0
	adds r2, #0x85
	cmp r4, #0
	bne _080EC38C
_080EC380:
	adds r0, r3, #0
	adds r0, #0x85
	ldrb r1, [r0]
	adds r2, r0, #0
	cmp r1, #2
	bls _080EC3AC
_080EC38C:
	movs r0, #0
	strb r0, [r2]
	adds r0, r3, #0
	bl sub_080EBCDC
	b _080EC3B2
	.align 2, 0
_080EC398: .4byte gRngVal
_080EC39C: .4byte 0x00196225
_080EC3A0: .4byte 0x3C6EF35F
_080EC3A4: .4byte 0x00005554
_080EC3A8: .4byte 0x0000AAA9
_080EC3AC:
	adds r0, r3, #0
	bl sub_080EC1F4
_080EC3B2:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080EC3B8
sub_080EC3B8: @ 0x080EC3B8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _080EC3E4 @ =sub_080EC44C
	movs r1, #8
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080EC3E8
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080EC3F0
	.align 2, 0
_080EC3E4: .4byte sub_080EC44C
_080EC3E8:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080EC3F0:
	str r0, [r4, #8]
	adds r0, r5, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r5, #8]
	ldr r1, _080EC41C @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EC420
	movs r0, #0x1c
	b _080EC422
	.align 2, 0
_080EC41C: .4byte 0xFFFFFBFF
_080EC420:
	movs r0, #0x2a
_080EC422:
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r2, [r0, #0x10]
	adds r0, r5, #0
	movs r1, #2
	bl sub_080EC650
	adds r1, r4, #0
	adds r1, #0xb4
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EC44C
sub_080EC44C: @ 0x080EC44C
	push {r4, r5, lr}
	adds r3, r0, #0
	mov ip, r3
	adds r2, r3, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #8
	beq _080EC46C
	cmp r0, #8
	bgt _080EC466
	cmp r0, #0
	beq _080EC4E4
	b _080EC4FE
_080EC466:
	cmp r0, #9
	beq _080EC47C
	b _080EC4FE
_080EC46C:
	ldr r0, [r3, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EC4FE
	movs r0, #9
	strb r0, [r2]
	b _080EC4D8
_080EC47C:
	ldr r0, [r3, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EC4FE
	movs r4, #8
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EC4B4
	adds r2, r3, #0
	adds r2, #0x80
	ldr r1, _080EC4C8 @ =gUnk_08351530
	ldr r0, _080EC4CC @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x90
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r5, #0
	ldrsh r1, [r2, r5]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080EC4B4
	movs r4, #0xc
_080EC4B4:
	mov r0, ip
	adds r0, #0xb5
	ldrb r0, [r0]
	cmp r0, r4
	bhs _080EC4D0
	adds r0, r3, #0
	bl sub_080EC3B8
	b _080EC4FE
	.align 2, 0
_080EC4C8: .4byte gUnk_08351530
_080EC4CC: .4byte gUnk_0203AD30
_080EC4D0:
	adds r1, r3, #0
	adds r1, #0x83
	movs r0, #0
	strb r0, [r1]
_080EC4D8:
	ldr r0, [r3, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r3, #8]
	b _080EC4FE
_080EC4E4:
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EC4FE
	adds r1, r3, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	adds r0, r3, #0
	bl sub_080EBCDC
_080EC4FE:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080EC504
sub_080EC504: @ 0x080EC504
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080EC560 @ =sub_080ED77C
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	ldr r1, [r4, #0x40]
	movs r0, #0xa8
	lsls r0, r0, #0xa
	cmp r1, r0
	bne _080EC564
	ldr r1, [r4, #0x44]
	movs r0, #0xf8
	lsls r0, r0, #8
	cmp r1, r0
	bne _080EC564
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	subs r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #5
	bhi _080EC556
	adds r0, r1, #0
	cmp r0, #4
	beq _080EC556
	cmp r0, #5
	bne _080EC564
_080EC556:
	adds r0, r4, #0
	bl sub_080ED87C
	b _080EC5AC
	.align 2, 0
_080EC560: .4byte sub_080ED77C
_080EC564:
	ldr r1, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080EC578
	adds r0, r4, #0
	bl sub_080ED7D8
	b _080EC5AC
_080EC578:
	ldr r0, _080EC5A4 @ =0xFFFFFBFF
	ands r1, r0
	movs r0, #3
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x83
	ldrb r0, [r1]
	adds r2, r1, #0
	cmp r0, #2
	blt _080EC59C
	cmp r0, #3
	ble _080EC5A8
	cmp r0, #6
	bgt _080EC59C
	cmp r0, #5
	bge _080EC5AC
_080EC59C:
	movs r0, #5
	strb r0, [r2]
	b _080EC5AC
	.align 2, 0
_080EC5A4: .4byte 0xFFFFFBFF
_080EC5A8:
	movs r0, #6
	strb r0, [r1]
_080EC5AC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EC5B4
sub_080EC5B4: @ 0x080EC5B4
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _080EC638
	movs r5, #0
	ldr r0, _080EC640 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r5, r0
	bhs _080EC638
	movs r7, #0xf8
	lsls r7, r7, #5
	ldr r6, _080EC644 @ =gCurLevelInfo
_080EC5D0:
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r1, r5, #0
	muls r1, r0, r1
	ldr r0, _080EC648 @ =gUnk_02020EE0
	adds r2, r1, r0
	adds r0, r2, #0
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EC62A
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #0x11
	ands r0, r1
	cmp r0, #0
	beq _080EC62A
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r1, [r0]
	ldrh r0, [r1, #2]
	cmp r0, r7
	beq _080EC62A
	ldrb r1, [r1, #4]
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r6
	ldr r2, _080EC64C @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	ldr r1, [r0]
	adds r1, #1
	str r1, [r0]
	movs r0, #1
	strh r0, [r4, #4]
_080EC62A:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _080EC640 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r5, r0
	blo _080EC5D0
_080EC638:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080EC640: .4byte gUnk_0203AD44
_080EC644: .4byte gCurLevelInfo
_080EC648: .4byte gUnk_02020EE0
_080EC64C: .4byte 0x0000065E

	thumb_func_start sub_080EC650
sub_080EC650: @ 0x080EC650
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r4, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov sl, r2
	ldr r2, _080EC6B4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EC6B8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EC6BC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	movs r1, #0
	ldr r0, _080EC6C0 @ =0x00002492
	ldr r7, _080EC6C4 @ =gUnk_020229D4
	cmp r2, r0
	blt _080EC698
	adds r3, r0, #0
_080EC686:
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #5
	bhi _080EC698
	adds r0, r1, #1
	muls r0, r3, r0
	cmp r2, r0
	bge _080EC686
_080EC698:
	adds r0, r1, #0
	adds r0, #0xc1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EC6C8
	ldr r1, [r4, #0x40]
	asrs r0, r1, #8
	subs r0, #0x14
	b _080EC6CE
	.align 2, 0
_080EC6B4: .4byte gRngVal
_080EC6B8: .4byte 0x00196225
_080EC6BC: .4byte 0x3C6EF35F
_080EC6C0: .4byte 0x00002492
_080EC6C4: .4byte gUnk_020229D4
_080EC6C8:
	ldr r1, [r4, #0x40]
	asrs r0, r1, #8
	adds r0, #0x14
_080EC6CE:
	str r0, [sp]
	adds r2, r1, #0
	ldr r0, [r4, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	beq _080EC6E8
	ldr r1, [r4, #0x44]
	asrs r0, r1, #8
	adds r5, r0, #0
	adds r5, #0x14
	b _080EC6F0
_080EC6E8:
	ldr r1, [r4, #0x44]
	asrs r0, r1, #8
	adds r5, r0, #0
	subs r5, #0x14
_080EC6F0:
	mov r3, r8
	cmp r3, #1
	bne _080EC6FC
	asrs r2, r2, #8
	str r2, [sp]
	asrs r5, r1, #8
_080EC6FC:
	movs r3, #0
	movs r2, #1
	ldr r1, [r7]
	adds r0, r1, #0
	ands r0, r2
	movs r6, #0x56
	adds r6, r6, r4
	mov ip, r6
	b _080EC722
_080EC70E:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x1f
	bhi _080EC72A
	movs r2, #1
	lsls r2, r3
	ldr r1, [r7]
	adds r0, r1, #0
	ands r0, r2
_080EC722:
	cmp r0, #0
	bne _080EC70E
	orrs r1, r2
	str r1, [r7]
_080EC72A:
	lsls r1, r3, #3
	adds r1, r1, r3
	lsls r1, r1, #2
	ldr r0, _080EC7A0 @ =gUnk_020229E0
	adds r1, r1, r0
	movs r2, #0
	movs r7, #1
	strb r7, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r6, sp
	ldrh r6, [r6]
	strh r6, [r1, #6]
	strh r5, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	mov r0, sb
	strb r0, [r1, #0xc]
	mov r6, r8
	strb r6, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sl
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, ip
	ldrb r0, [r2]
	bl CreateObject
	adds r1, r0, #0
	str r4, [r1, #0x70]
	ldr r0, [r4, #8]
	ands r0, r7
	cmp r0, #0
	beq _080EC78E
	ldr r0, [r1, #8]
	orrs r0, r7
	str r0, [r1, #8]
_080EC78E:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080EC7A0: .4byte gUnk_020229E0

	thumb_func_start sub_080EC7A4
sub_080EC7A4: @ 0x080EC7A4
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _080EC7D8 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080EC7DC @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080EC7E0
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080EC7E8
	.align 2, 0
_080EC7D8: .4byte ObjectMain
_080EC7DC: .4byte ObjectDestroy
_080EC7E0:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080EC7E8:
	adds r5, r0, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r5, #0xc]
	movs r1, #2
	orrs r0, r1
	str r0, [r5, #0xc]
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080EC84C @ =sub_0809F840
	str r0, [r5, #0x7c]
	movs r1, #5
	rsbs r1, r1, #0
	movs r4, #6
	rsbs r4, r4, #0
	movs r0, #5
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	movs r2, #7
	rsbs r2, r2, #0
	movs r0, #7
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #6
	bl sub_0803E308
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r0, [r0]
	subs r0, #0xc1
	cmp r0, #6
	bhi _080EC8B8
	lsls r0, r0, #2
	ldr r1, _080EC850 @ =_080EC854
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080EC84C: .4byte sub_0809F840
_080EC850: .4byte _080EC854
_080EC854: @ jump table
	.4byte _080EC884 @ case 0
	.4byte _080EC870 @ case 1
	.4byte _080EC870 @ case 2
	.4byte _080EC8A6 @ case 3
	.4byte _080EC898 @ case 4
	.4byte _080EC8A6 @ case 5
	.4byte _080EC8A6 @ case 6
_080EC870:
	movs r2, #4
	rsbs r2, r2, #0
	movs r0, #4
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r2, #0
	movs r3, #4
	bl sub_0803E2B0
	b _080EC8B8
_080EC884:
	movs r2, #6
	rsbs r2, r2, #0
	movs r0, #6
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r2, #0
	movs r3, #6
	bl sub_0803E2B0
	b _080EC8B8
_080EC898:
	ldr r0, [r5, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	str r0, [r5, #0x5c]
_080EC8A6:
	movs r2, #8
	rsbs r2, r2, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r2, #0
	movs r3, #8
	bl sub_0803E2B0
_080EC8B8:
	adds r0, r5, #0
	bl ObjectInitSprite
	movs r0, #0xc8
	lsls r0, r0, #3
	strh r0, [r5, #0x24]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #1
	bne _080EC8D8
	adds r0, r5, #0
	bl sub_080EC8E8
	b _080EC8DE
_080EC8D8:
	adds r0, r5, #0
	bl sub_080ED8C4
_080EC8DE:
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_080EC8E8
sub_080EC8E8: @ 0x080EC8E8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov r8, r0
	movs r4, #0
	ldr r0, [r0, #0x70]
	mov sb, r0
	adds r0, #0xac
	ldr r5, [r0]
	ldr r2, _080EC938 @ =sub_080ECDE0
	mov r0, r8
	movs r1, #0
	bl ObjectSetFunc
	mov r0, r8
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #0x5e
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #1
	bne _080EC91C
	b _080ECA94
_080EC91C:
	cmp r0, #0
	beq _080EC948
	ldr r2, _080EC93C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EC940 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EC944 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r4, r0, #0x10
	movs r0, #0xff
	ands r4, r0
	b _080EC966
	.align 2, 0
_080EC938: .4byte sub_080ECDE0
_080EC93C: .4byte gRngVal
_080EC940: .4byte 0x00196225
_080EC944: .4byte 0x3C6EF35F
_080EC948:
	ldr r2, [r5, #0x40]
	mov r0, sb
	ldr r1, [r0, #0x40]
	subs r0, r2, r1
	cmp r0, #0
	blt _080EC960
	asrs r4, r0, #8
	ldr r1, _080EC95C @ =gRngVal
	mov ip, r1
	b _080EC968
	.align 2, 0
_080EC95C: .4byte gRngVal
_080EC960:
	subs r0, r1, r2
	asrs r4, r0, #8
	ldr r2, _080EC974 @ =gRngVal
_080EC966:
	mov ip, r2
_080EC968:
	cmp r4, #0x1d
	bhi _080EC978
	mov r1, r8
	adds r1, #0x50
	movs r0, #0x80
	b _080EC9D2
	.align 2, 0
_080EC974: .4byte gRngVal
_080EC978:
	cmp r4, #0x3b
	bhi _080EC984
	mov r1, r8
	adds r1, #0x50
	movs r0, #0xd0
	b _080EC9D2
_080EC984:
	cmp r4, #0x59
	bhi _080EC992
	mov r1, r8
	adds r1, #0x50
	movs r0, #0x90
	lsls r0, r0, #1
	b _080EC9D2
_080EC992:
	cmp r4, #0x77
	bhi _080EC9A0
	mov r1, r8
	adds r1, #0x50
	movs r0, #0xc0
	lsls r0, r0, #1
	b _080EC9D2
_080EC9A0:
	cmp r4, #0x95
	bhi _080EC9AE
	mov r1, r8
	adds r1, #0x50
	movs r0, #0xe8
	lsls r0, r0, #1
	b _080EC9D2
_080EC9AE:
	cmp r4, #0xb3
	bhi _080EC9BC
	mov r1, r8
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #2
	b _080EC9D2
_080EC9BC:
	cmp r4, #0xd1
	bhi _080EC9CA
	mov r1, r8
	adds r1, #0x50
	movs r0, #0x90
	lsls r0, r0, #2
	b _080EC9D2
_080EC9CA:
	mov r1, r8
	adds r1, #0x50
	movs r0, #0xa0
	lsls r0, r0, #2
_080EC9D2:
	strh r0, [r1]
	adds r7, r1, #0
	mov r1, ip
	ldr r0, [r1]
	ldr r6, _080ECA38 @ =0x00196225
	adds r2, r0, #0
	muls r2, r6, r2
	ldr r5, _080ECA3C @ =0x3C6EF35F
	adds r2, r2, r5
	str r2, [r1]
	movs r0, #0
	ldrsh r1, [r7, r0]
	lsrs r0, r2, #0x10
	movs r4, #0x7f
	ands r0, r4
	adds r1, r1, r0
	strh r1, [r7]
	mov r3, r8
	adds r3, #0x52
	movs r1, #0xe8
	lsls r1, r1, #1
	strh r1, [r3]
	adds r0, r2, #0
	muls r0, r6, r0
	adds r0, r0, r5
	mov r2, ip
	str r0, [r2]
	lsrs r2, r0, #0x10
	ands r2, r4
	adds r1, r2, r1
	strh r1, [r3]
	mov r0, sb
	ldr r1, [r0, #0x44]
	ldr r0, _080ECA40 @ =0x0000F7FF
	cmp r1, r0
	ble _080ECA52
	mov r0, sb
	ldr r1, [r0, #0x40]
	movs r0, #0xfc
	lsls r0, r0, #9
	cmp r1, r0
	bne _080ECA44
	movs r1, #0x94
	lsls r1, r1, #2
	adds r0, r2, r1
	strh r0, [r3]
	ldrh r0, [r7]
	adds r0, #0x80
	strh r0, [r7]
	b _080ECA66
	.align 2, 0
_080ECA38: .4byte 0x00196225
_080ECA3C: .4byte 0x3C6EF35F
_080ECA40: .4byte 0x0000F7FF
_080ECA44:
	movs r0, #0xa8
	lsls r0, r0, #0xa
	cmp r1, r0
	bne _080ECA66
	movs r1, #0x80
	lsls r1, r1, #1
	b _080ECA62
_080ECA52:
	mov r0, sb
	ldr r1, [r0, #0x40]
	movs r0, #0xfc
	lsls r0, r0, #9
	cmp r1, r0
	bne _080ECA66
	movs r1, #0xac
	lsls r1, r1, #2
_080ECA62:
	adds r0, r2, r1
	strh r0, [r3]
_080ECA66:
	mov r2, sb
	ldr r0, [r2, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	beq _080ECA82
	ldrh r0, [r3]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	strh r0, [r3]
	ldrh r0, [r7]
	adds r0, #0x80
	strh r0, [r7]
_080ECA82:
	mov r1, r8
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080ECA94
	ldrh r0, [r7]
	rsbs r0, r0, #0
	strh r0, [r7]
_080ECA94:
	mov r0, r8
	adds r0, #0x82
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0xc7
	bne _080ECAA8
	mov r1, r8
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
_080ECAA8:
	mov r2, r8
	ldr r0, [r2, #8]
	ldr r1, _080ECB34 @ =0xFFFFFDFF
	ands r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2, #8]
	ldr r1, _080ECB38 @ =gUnk_02020EE0
	ldr r0, _080ECB3C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	mov r1, r8
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080ECB22
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #0
	bne _080ECAE6
	mov r0, r8
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080ECB22
_080ECAE6:
	ldr r1, _080ECB40 @ =gUnk_08D60FA4
	ldr r4, _080ECB44 @ =gSongTable
	ldr r2, _080ECB48 @ =0x00000C5C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080ECB0A
	ldr r1, _080ECB4C @ =0x00000C58
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080ECB22
_080ECB0A:
	cmp r3, #0
	beq _080ECB1C
	ldr r0, _080ECB50 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080ECB22
_080ECB1C:
	ldr r0, _080ECB54 @ =0x0000018B
	bl m4aSongNumStart
_080ECB22:
	ldrb r0, [r5]
	subs r0, #0xc1
	cmp r0, #6
	bhi _080ECB9C
	lsls r0, r0, #2
	ldr r1, _080ECB58 @ =_080ECB5C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080ECB34: .4byte 0xFFFFFDFF
_080ECB38: .4byte gUnk_02020EE0
_080ECB3C: .4byte gUnk_0203AD3C
_080ECB40: .4byte gUnk_08D60FA4
_080ECB44: .4byte gSongTable
_080ECB48: .4byte 0x00000C5C
_080ECB4C: .4byte 0x00000C58
_080ECB50: .4byte gUnk_0203AD10
_080ECB54: .4byte 0x0000018B
_080ECB58: .4byte _080ECB5C
_080ECB5C: @ jump table
	.4byte _080ECB9C @ case 0
	.4byte _080ECB78 @ case 1
	.4byte _080ECB78 @ case 2
	.4byte _080ECB8A @ case 3
	.4byte _080ECB9C @ case 4
	.4byte _080ECB84 @ case 5
	.4byte _080ECB9C @ case 6
_080ECB78:
	ldr r0, _080ECB80 @ =sub_080ECCAC
	mov r2, r8
	b _080ECB9A
	.align 2, 0
_080ECB80: .4byte sub_080ECCAC
_080ECB84:
	movs r0, #0
	movs r1, #0x91
	b _080ECB8E
_080ECB8A:
	movs r0, #0
	movs r1, #0x5a
_080ECB8E:
	mov r2, r8
	strh r1, [r2, #4]
	mov r1, r8
	adds r1, #0x9e
	strb r0, [r1]
	ldr r0, _080ECBA8 @ =sub_080ECBAC
_080ECB9A:
	str r0, [r2, #0x78]
_080ECB9C:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080ECBA8: .4byte sub_080ECBAC

	thumb_func_start sub_080ECBAC
sub_080ECBAC: @ 0x080ECBAC
	push {r4, lr}
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0x9e
	ldrb r0, [r2]
	cmp r0, #0
	bne _080ECBC2
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
_080ECBC2:
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080ECC46
	ldrb r0, [r2]
	cmp r0, #3
	beq _080ECC3A
	adds r1, r4, #0
	adds r1, #0x83
	ldrb r0, [r1]
	cmp r0, #0
	bne _080ECBE4
	movs r0, #1
	b _080ECBE6
_080ECBE4:
	movs r0, #0
_080ECBE6:
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r1, [r0]
	adds r2, r0, #0
	cmp r1, #1
	beq _080ECC0E
	cmp r1, #1
	bgt _080ECBFE
	cmp r1, #0
	beq _080ECC04
	b _080ECC1E
_080ECBFE:
	cmp r1, #2
	beq _080ECC16
	b _080ECC1E
_080ECC04:
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x90
	lsls r0, r0, #1
	b _080ECC1C
_080ECC0E:
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xc0
	b _080ECC1C
_080ECC16:
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
_080ECC1C:
	strh r0, [r1]
_080ECC1E:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #8]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	b _080ECC46
_080ECC3A:
	adds r0, r4, #0
	adds r0, #0x52
	movs r1, #0
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
_080ECC46:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080ECC62
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_0809DA30
_080ECC62:
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0xc4
	bne _080ECC84
	ldrh r1, [r4, #4]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _080ECCA6
	movs r2, #0xa
	rsbs r2, r2, #0
	adds r0, r4, #0
	adds r1, r2, #0
	bl sub_08097E9C
	b _080ECCA6
_080ECC84:
	ldrh r1, [r4, #4]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _080ECCA6
	adds r0, r4, #0
	adds r0, #0x34
	ldrb r1, [r0]
	rsbs r1, r1, #0
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, #1
	movs r2, #0
	ldrsb r2, [r0, r2]
	adds r0, r4, #0
	bl sub_08097E9C
_080ECCA6:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080ECCAC
sub_080ECCAC: @ 0x080ECCAC
	push {lr}
	adds r3, r0, #0
	adds r2, r3, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #0
	bne _080ECCC2
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
_080ECCC2:
	adds r0, r3, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080ECCD2
	b _080ECDDC
_080ECCD2:
	ldrb r0, [r2]
	cmp r0, #0
	bne _080ECCDC
	movs r0, #1
	b _080ECCDE
_080ECCDC:
	movs r0, #0
_080ECCDE:
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0xc2
	bne _080ECD8E
	ldr r2, _080ECD10 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080ECD14 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080ECD18 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
	cmp r1, #1
	beq _080ECD30
	cmp r1, #1
	blo _080ECD1C
	cmp r1, #2
	beq _080ECD42
	cmp r1, #3
	beq _080ECD56
	b _080ECD6A
	.align 2, 0
_080ECD10: .4byte gRngVal
_080ECD14: .4byte 0x00196225
_080ECD18: .4byte 0x3C6EF35F
_080ECD1C:
	adds r0, r3, #0
	adds r0, #0x50
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0]
	adds r1, r3, #0
	adds r1, #0x52
	movs r0, #0xe8
	lsls r0, r0, #1
	b _080ECD68
_080ECD30:
	adds r0, r3, #0
	adds r0, #0x50
	movs r1, #0x80
	strh r1, [r0]
	adds r1, r3, #0
	adds r1, #0x52
	movs r0, #0xb4
	lsls r0, r0, #2
	b _080ECD68
_080ECD42:
	adds r0, r3, #0
	adds r0, #0x50
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0]
	adds r1, r3, #0
	adds r1, #0x52
	movs r0, #0xa0
	lsls r0, r0, #2
	b _080ECD68
_080ECD56:
	adds r0, r3, #0
	adds r0, #0x50
	movs r1, #0x98
	lsls r1, r1, #2
	strh r1, [r0]
	adds r1, r3, #0
	adds r1, #0x52
	movs r0, #0xa0
	lsls r0, r0, #1
_080ECD68:
	strh r0, [r1]
_080ECD6A:
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080ECD7E
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
_080ECD7E:
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #5
	ble _080ECDD4
	b _080ECDB8
_080ECD8E:
	adds r0, r3, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #1
	bne _080ECDAA
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	ble _080ECDCA
	b _080ECDB8
_080ECDAA:
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	ble _080ECDCA
_080ECDB8:
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r3, #8]
	adds r0, r3, #0
	bl sub_0809DA30
	b _080ECDDC
_080ECDCA:
	adds r1, r3, #0
	adds r1, #0x52
	movs r0, #0x88
	lsls r0, r0, #2
	strh r0, [r1]
_080ECDD4:
	ldr r0, [r3, #8]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r3, #8]
_080ECDDC:
	pop {r0}
	bx r0

	thumb_func_start sub_080ECDE0
sub_080ECDE0: @ 0x080ECDE0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, [r4, #8]
	movs r0, #4
	orrs r2, r0
	str r2, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0xc7
	bne _080ECE0E
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080ECE0E
	movs r0, #0x80
	lsls r0, r0, #5
	orrs r2, r0
	str r2, [r4, #8]
	b _080ECE80
_080ECE0E:
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080ECEB8
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0xc7
	beq _080ECE88
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _080ECE6E
	movs r0, #1
	adds r1, r4, #0
	bl sub_0806FE64
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #0xc1
	bne _080ECE4A
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #2
	b _080ECE52
_080ECE4A:
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x90
	lsls r0, r0, #1
_080ECE52:
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	strh r0, [r1]
	movs r0, #1
	strh r0, [r4, #4]
	b _080ECEB8
_080ECE6E:
	movs r0, #1
	adds r1, r4, #0
	bl sub_0806FE64
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
_080ECE80:
	adds r0, r4, #0
	bl sub_0809DA30
	b _080ECEB8
_080ECE88:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080ECE9C
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #2
	b _080ECEA4
_080ECE9C:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #1
_080ECEA4:
	strh r0, [r1]
	adds r2, r1, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080ECEB8
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080ECEB8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080ECEC0
sub_080ECEC0: @ 0x080ECEC0
	push {r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080ECEF0 @ =sub_080ECF6C
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080ECEF4 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080ECEF8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080ECF00
	.align 2, 0
_080ECEF0: .4byte sub_080ECF6C
_080ECEF4: .4byte sub_0803DCCC
_080ECEF8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080ECF00:
	adds r0, r4, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x42
	strh r0, [r1]
	ldr r0, [r4, #0x38]
	ldr r1, _080ECF64 @ =0xFFFFF000
	adds r0, r0, r1
	str r0, [r4, #0x38]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080ECF38
	ldrh r0, [r4, #6]
	orrs r0, r1
	strh r0, [r4, #6]
_080ECF38:
	ldrh r0, [r4, #6]
	movs r2, #0x80
	lsls r2, r2, #7
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r4, #6]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r2, _080ECF68 @ =0x06012000
	movs r3, #0xd0
	lsls r3, r3, #2
	movs r0, #0
	str r0, [sp]
	movs r0, #0x17
	str r0, [sp, #4]
	adds r0, r4, #0
	bl sub_080709F8
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080ECF64: .4byte 0xFFFFF000
_080ECF68: .4byte 0x06012000

	thumb_func_start sub_080ECF6C
sub_080ECF6C: @ 0x080ECF6C
	push {r4, r5, r6, lr}
	ldr r2, _080ECF8C @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	adds r5, r2, #0
	cmp r0, #0
	beq _080ECF90
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080ECF98
	.align 2, 0
_080ECF8C: .4byte gCurTask
_080ECF90:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080ECF98:
	adds r3, r0, #0
	ldrh r4, [r3, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	ands r0, r4
	cmp r0, #0
	beq _080ECFB0
	ldr r0, [r5]
	bl TaskDestroy
	b _080ED072
_080ECFB0:
	ldr r1, [r3, #0x44]
	ldr r0, [r1, #8]
	ands r0, r2
	cmp r0, #0
	beq _080ECFC2
	adds r0, r2, #0
	orrs r0, r4
	strh r0, [r3, #6]
	b _080ED072
_080ECFC2:
	cmp r1, #0
	beq _080ECFF4
	ldr r0, _080ECFF0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080ED064
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r4
	cmp r0, #0
	bne _080ED064
	adds r0, r3, #0
	bl sub_0803DBC8
	b _080ED072
	.align 2, 0
_080ECFF0: .4byte gUnk_03000510
_080ECFF4:
	adds r5, r3, #0
	movs r4, #0
	ldr r2, _080ED05C @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	adds r1, r3, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _080ED036
	movs r4, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080ED036
	movs r4, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080ED036
	movs r4, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080ED036
	movs r4, #4
_080ED036:
	ldr r0, _080ED060 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r4
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080ED064
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080ED064
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080ED072
	.align 2, 0
_080ED05C: .4byte gUnk_02020EE0
_080ED060: .4byte gUnk_03000510
_080ED064:
	ldrh r1, [r3, #6]
	movs r0, #4
	orrs r0, r1
	strh r0, [r3, #6]
	adds r0, r3, #0
	bl sub_0806FAC8
_080ED072:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080ED078
sub_080ED078: @ 0x080ED078
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r0, #0
	ldr r0, _080ED0A8 @ =sub_080ED270
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080ED0AC @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080ED0B0
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080ED0B8
	.align 2, 0
_080ED0A8: .4byte sub_080ED270
_080ED0AC: .4byte sub_0803DCCC
_080ED0B0:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080ED0B8:
	adds r5, r0, #0
	bl sub_0803E380
	movs r3, #0
	movs r0, #2
	strb r0, [r5]
	ldr r0, [r4, #0x40]
	str r0, [r5, #0x40]
	ldr r0, [r4, #0x44]
	str r0, [r5, #0x44]
	str r4, [r5, #0x70]
	strh r3, [r5, #4]
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r1, [r0]
	adds r0, r5, #0
	adds r0, #0x60
	strh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _080ED130 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080ED106
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r5, #8]
_080ED106:
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r4, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	beq _080ED13C
	ldr r0, [r5, #0x44]
	ldr r1, _080ED134 @ =0xFFFFF800
	adds r0, r0, r1
	str r0, [r5, #0x44]
	adds r0, r5, #0
	adds r0, #0x52
	strh r3, [r0]
	ldr r7, _080ED138 @ =gRngVal
	b _080ED166
	.align 2, 0
_080ED130: .4byte gUnk_03000510
_080ED134: .4byte 0xFFFFF800
_080ED138: .4byte gRngVal
_080ED13C:
	ldr r0, [r5, #0x44]
	movs r1, #0xb0
	lsls r1, r1, #5
	adds r0, r0, r1
	str r0, [r5, #0x44]
	ldr r2, _080ED1B4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080ED1B8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080ED1BC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsls r0, r0, #7
	lsrs r0, r0, #0x17
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	adds r1, r5, #0
	adds r1, #0x52
	strh r0, [r1]
	adds r7, r2, #0
_080ED166:
	ldr r0, [r7]
	ldr r4, _080ED1B8 @ =0x00196225
	adds r2, r0, #0
	muls r2, r4, r2
	ldr r3, _080ED1BC @ =0x3C6EF35F
	adds r2, r2, r3
	str r2, [r7]
	lsrs r0, r2, #0x10
	movs r1, #0x7f
	ands r0, r1
	adds r0, #0x20
	adds r6, r5, #0
	adds r6, #0x50
	strh r0, [r6]
	adds r0, r2, #0
	muls r0, r4, r0
	adds r0, r0, r3
	lsrs r2, r0, #0x10
	movs r1, #0xf
	ands r2, r1
	muls r0, r4, r0
	adds r0, r0, r3
	str r0, [r7]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080ED1C0
	ldr r0, [r5, #8]
	orrs r0, r1
	str r0, [r5, #8]
	lsls r1, r2, #8
	ldr r0, [r5, #0x40]
	subs r0, r0, r1
	str r0, [r5, #0x40]
	ldrh r0, [r6]
	rsbs r0, r0, #0
	strh r0, [r6]
	b _080ED1C8
	.align 2, 0
_080ED1B4: .4byte gRngVal
_080ED1B8: .4byte 0x00196225
_080ED1BC: .4byte 0x3C6EF35F
_080ED1C0:
	lsls r1, r2, #8
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	str r0, [r5, #0x40]
_080ED1C8:
	ldr r1, [r7]
	ldr r0, _080ED1F4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080ED1F8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r7]
	lsrs r0, r0, #0x10
	movs r4, #1
	ands r0, r4
	cmp r0, #0
	beq _080ED200
	adds r1, r5, #0
	adds r1, #0x10
	ldr r3, _080ED1FC @ =0x00000342
	movs r4, #0
	str r4, [sp]
	movs r0, #0x17
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r2, #4
	b _080ED210
	.align 2, 0
_080ED1F4: .4byte 0x00196225
_080ED1F8: .4byte 0x3C6EF35F
_080ED1FC: .4byte 0x00000342
_080ED200:
	adds r1, r5, #0
	adds r1, #0x10
	ldr r3, _080ED258 @ =0x00000342
	str r4, [sp]
	movs r0, #0x17
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r2, #1
_080ED210:
	bl sub_080708DC
	strh r4, [r5, #4]
	adds r4, r5, #0
	adds r4, #0x2f
	movs r3, #0
	strb r3, [r4]
	ldr r2, _080ED25C @ =gUnk_02020EE0
	ldr r0, _080ED260 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080ED264
	ldr r5, _080ED258 @ =0x00000342
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080ED266
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080ED266
	.align 2, 0
_080ED258: .4byte 0x00000342
_080ED25C: .4byte gUnk_02020EE0
_080ED260: .4byte gUnk_0203AD3C
_080ED264:
	strb r3, [r4]
_080ED266:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080ED270
sub_080ED270: @ 0x080ED270
	push {r4, r5, r6, lr}
	sub sp, #0x28
	ldr r2, _080ED290 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080ED294
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080ED29C
	.align 2, 0
_080ED290: .4byte gCurTask
_080ED294:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080ED29C:
	adds r5, r0, #0
	ldr r3, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _080ED2B4
	ldr r0, [r2]
	bl TaskDestroy
	b _080ED514
_080ED2B4:
	ldr r0, [r5, #0x70]
	ldr r0, [r0, #8]
	ands r0, r1
	cmp r0, #0
	beq _080ED2C4
	orrs r3, r1
	str r3, [r5, #8]
	b _080ED514
_080ED2C4:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _080ED31A
	ldr r2, _080ED308 @ =gUnk_02020EE0
	ldr r0, _080ED30C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	adds r6, r1, #0
	ldrh r1, [r6]
	cmp r0, r1
	bne _080ED3CC
	movs r0, #0x80
	lsls r0, r0, #7
	ands r3, r0
	cmp r3, #0
	beq _080ED310
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080ED3EC
	ldrh r1, [r5, #0x1c]
	adds r0, r5, #0
	adds r0, #0x2a
	ldrb r2, [r0]
	movs r0, #1
	b _080ED352
	.align 2, 0
_080ED308: .4byte gUnk_02020EE0
_080ED30C: .4byte gUnk_0203AD3C
_080ED310:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080ED3EC
	movs r0, #1
	b _080ED39C
_080ED31A:
	ldr r2, _080ED384 @ =gUnk_02020EE0
	ldr r0, _080ED388 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	adds r6, r1, #0
	ldrh r1, [r6]
	cmp r0, r1
	bne _080ED3CC
	movs r0, #0x80
	lsls r0, r0, #7
	ands r3, r0
	cmp r3, #0
	beq _080ED394
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080ED3EC
	ldrh r1, [r5, #0x1c]
	adds r0, r5, #0
	adds r0, #0x2a
	ldrb r2, [r0]
	movs r0, #4
_080ED352:
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080ED38C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080ED390 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080ED3EC
	.align 2, 0
_080ED384: .4byte gUnk_02020EE0
_080ED388: .4byte gUnk_0203AD3C
_080ED38C: .4byte 0xFFF7FFFF
_080ED390: .4byte 0x0400000A
_080ED394:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080ED3EC
	movs r0, #4
_080ED39C:
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080ED3C4 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080ED3C8 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080ED3EC
	.align 2, 0
_080ED3C4: .4byte 0xFFF7FFFF
_080ED3C8: .4byte 0x0400000A
_080ED3CC:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _080ED3E2
	movs r4, #0x80
	lsls r4, r4, #7
	ands r4, r3
	cmp r4, #0
	bne _080ED3E2
	bl sub_08157190
	str r4, [r5, #0x10]
_080ED3E2:
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x18]
_080ED3EC:
	ldr r2, _080ED42C @ =gUnk_02020EE0
	ldr r0, _080ED430 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r6]
	cmp r0, r6
	bne _080ED438
	adds r4, r5, #0
	adds r4, #0x2f
	ldrb r0, [r4]
	cmp r0, #0
	bne _080ED440
	ldr r6, _080ED434 @ =0x00000342
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080ED440
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080ED440
	.align 2, 0
_080ED42C: .4byte gUnk_02020EE0
_080ED430: .4byte gUnk_0203AD3C
_080ED434: .4byte 0x00000342
_080ED438:
	adds r1, r5, #0
	adds r1, #0x2f
	movs r0, #0
	strb r0, [r1]
_080ED440:
	adds r0, r5, #0
	bl sub_0806F780
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080ED514
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x15
	strh r0, [r1]
	lsls r0, r0, #0x10
	movs r2, #0xfd
	lsls r2, r2, #0x18
	adds r4, r1, #0
	cmp r0, r2
	bge _080ED470
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r4]
_080ED470:
	ldr r3, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r3
	cmp r0, #0
	bne _080ED498
	ldr r1, [r5, #0x40]
	str r1, [r5, #0x48]
	ldr r2, [r5, #0x44]
	str r2, [r5, #0x4c]
	adds r0, r5, #0
	adds r0, #0x50
	movs r6, #0
	ldrsh r0, [r0, r6]
	adds r1, r1, r0
	str r1, [r5, #0x40]
	movs r1, #0
	ldrsh r0, [r4, r1]
	subs r2, r2, r0
	str r2, [r5, #0x44]
_080ED498:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r3, r0
	cmp r3, #0
	bne _080ED4EA
	ldr r2, _080ED51C @ =gCurLevelInfo
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r1, r0, r1
	adds r0, r2, #0
	adds r0, #0x50
	adds r0, r1, r0
	ldr r3, [r5, #0x40]
	ldr r0, [r0]
	cmp r3, r0
	bgt _080ED4EA
	adds r0, r2, #0
	adds r0, #0x48
	adds r0, r1, r0
	ldr r0, [r0]
	cmp r3, r0
	blt _080ED4EA
	adds r0, r2, #0
	adds r0, #0x54
	adds r0, r1, r0
	ldr r3, [r5, #0x44]
	ldr r0, [r0]
	cmp r3, r0
	bgt _080ED4EA
	adds r0, r2, #0
	adds r0, #0x4c
	adds r0, r1, r0
	ldr r0, [r0]
	cmp r3, r0
	blt _080ED4EA
	adds r0, r5, #0
	bl sub_0806FC70
_080ED4EA:
	adds r1, r5, #0
	adds r1, #0x62
	ldrb r0, [r1]
	cmp r0, #0
	beq _080ED50E
	movs r0, #0
	strb r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r4]
	subs r1, #0x12
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	strh r0, [r1]
	ldr r0, [r5, #8]
	orrs r0, r2
	str r0, [r5, #8]
_080ED50E:
	adds r0, r5, #0
	bl sub_0806F8BC
_080ED514:
	add sp, #0x28
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080ED51C: .4byte gCurLevelInfo

	thumb_func_start sub_080ED520
sub_080ED520: @ 0x080ED520
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080ED548 @ =sub_080EB2C0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080ED548: .4byte sub_080EB2C0

	thumb_func_start sub_080ED54C
sub_080ED54C: @ 0x080ED54C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080ED574 @ =sub_080EB39C
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	movs r0, #0xd2
	strh r0, [r4, #4]
	adds r4, #0x85
	strb r2, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080ED574: .4byte sub_080EB39C

	thumb_func_start sub_080ED578
sub_080ED578: @ 0x080ED578
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080ED5A4 @ =sub_080ED5AC
	movs r1, #2
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	ldr r1, _080ED5A8 @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080ED5A4: .4byte sub_080ED5AC
_080ED5A8: .4byte 0xFFFFFBFF

	thumb_func_start sub_080ED5AC
sub_080ED5AC: @ 0x080ED5AC
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080ED5C0
	adds r0, r2, #0
	bl sub_080ED5C4
_080ED5C0:
	pop {r0}
	bx r0

	thumb_func_start sub_080ED5C4
sub_080ED5C4: @ 0x080ED5C4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080ED5F4 @ =sub_080EB4B8
	movs r1, #3
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	ldr r1, _080ED5F8 @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x20
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080ED5F4: .4byte sub_080EB4B8
_080ED5F8: .4byte 0xFFFFFBFF

	thumb_func_start sub_080ED5FC
sub_080ED5FC: @ 0x080ED5FC
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #8
	bne _080ED63A
	adds r0, r4, #0
	bl sub_080EB700
	movs r0, #1
	adds r1, r4, #0
	bl sub_0806FE64
	adds r0, r4, #0
	bl sub_080ED078
	ldr r2, _080ED670 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080ED674 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080ED678 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080ED63A
	adds r0, r4, #0
	bl sub_080ED078
_080ED63A:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080ED66A
	ldr r2, _080ED670 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080ED674 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080ED678 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080ED664
	adds r0, r4, #0
	bl sub_080ED078
_080ED664:
	adds r0, r4, #0
	bl sub_080EB848
_080ED66A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080ED670: .4byte gRngVal
_080ED674: .4byte 0x00196225
_080ED678: .4byte 0x3C6EF35F

	thumb_func_start sub_080ED67C
sub_080ED67C: @ 0x080ED67C
	push {lr}
	adds r3, r0, #0
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080ED6CA
	ldr r2, _080ED6B8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080ED6BC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080ED6C0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080ED6AE
	adds r0, r3, #0
	adds r0, #0x85
	ldrb r0, [r0]
	cmp r0, #2
	bls _080ED6C4
_080ED6AE:
	adds r0, r3, #0
	bl sub_080EC040
	b _080ED6CA
	.align 2, 0
_080ED6B8: .4byte gRngVal
_080ED6BC: .4byte 0x00196225
_080ED6C0: .4byte 0x3C6EF35F
_080ED6C4:
	adds r0, r3, #0
	bl sub_080EBCDC
_080ED6CA:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080ED6D0
sub_080ED6D0: @ 0x080ED6D0
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080ED6FE
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080ED6FE
	adds r1, r2, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	bl sub_080EC1F4
_080ED6FE:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080ED704
sub_080ED704: @ 0x080ED704
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080ED740 @ =sub_080ED748
	movs r1, #7
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r3, #0
	movs r2, #0
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	ldr r0, [r4, #8]
	ldr r1, _080ED744 @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #6
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0xb6
	strh r2, [r0]
	subs r0, #1
	strb r3, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080ED740: .4byte sub_080ED748
_080ED744: .4byte 0xFFFFFBFF

	thumb_func_start sub_080ED748
sub_080ED748: @ 0x080ED748
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080ED776
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080ED776
	adds r1, r2, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	bl sub_080EC3B8
_080ED776:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080ED77C
sub_080ED77C: @ 0x080ED77C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_080EC5B4
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #5
	beq _080ED794
	cmp r0, #6
	beq _080ED7AC
	b _080ED7D2
_080ED794:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080ED7D2
	movs r0, #6
	strb r0, [r2]
	ldr r0, [r4, #8]
	subs r1, #5
	ands r0, r1
	str r0, [r4, #8]
	b _080ED7D2
_080ED7AC:
	ldr r1, [r4, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080ED7D2
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r1, r0
	str r1, [r4, #8]
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x3c
	ble _080ED7D2
	adds r0, r4, #0
	bl sub_080ED7D8
_080ED7D2:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080ED7D8
sub_080ED7D8: @ 0x080ED7D8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080ED81C @ =sub_080ED828
	movs r1, #3
	bl ObjectSetFunc
	movs r0, #0xa8
	lsls r0, r0, #0xa
	str r0, [r4, #0x40]
	movs r0, #0xf8
	lsls r0, r0, #8
	str r0, [r4, #0x44]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #0x18]
	ldr r1, _080ED820 @ =0xFFFFF7FF
	ands r0, r1
	str r0, [r4, #0x18]
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	ldr r1, _080ED824 @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080ED81C: .4byte sub_080ED828
_080ED820: .4byte 0xFFFFF7FF
_080ED824: .4byte 0xFFFFFBFF

	thumb_func_start sub_080ED828
sub_080ED828: @ 0x080ED828
	push {r4, lr}
	adds r4, r0, #0
	bl sub_080EC5B4
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #3
	beq _080ED840
	cmp r0, #4
	beq _080ED858
	b _080ED876
_080ED840:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080ED876
	movs r0, #4
	strb r0, [r2]
	ldr r0, [r4, #8]
	subs r1, #5
	ands r0, r1
	str r0, [r4, #8]
	b _080ED876
_080ED858:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080ED876
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc
	ble _080ED876
	adds r0, r4, #0
	bl sub_080ED87C
_080ED876:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080ED87C
sub_080ED87C: @ 0x080ED87C
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _080ED8B0 @ =sub_080ED8B8
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r5, #0
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r0, [r4, #8]
	ldr r1, _080ED8B4 @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080ECEC0
	strh r5, [r4, #4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080ED8B0: .4byte sub_080ED8B8
_080ED8B4: .4byte 0xFFFFFBFF

	thumb_func_start sub_080ED8B8
sub_080ED8B8: @ 0x080ED8B8
	push {lr}
	bl sub_080EC5B4
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080ED8C4
sub_080ED8C4: @ 0x080ED8C4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080ED8EC @ =sub_080ED8F0
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080ED8EC: .4byte sub_080ED8F0

	thumb_func_start sub_080ED8F0
sub_080ED8F0: @ 0x080ED8F0
	push {lr}
	adds r2, r0, #0
	ldr r3, [r2, #0x70]
	ldrb r0, [r2, #1]
	cmp r0, #3
	bne _080ED938
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080ED90E
	ldr r0, [r2, #0x40]
	movs r1, #0xa0
	lsls r1, r1, #4
	b _080ED912
_080ED90E:
	ldr r0, [r2, #0x40]
	ldr r1, _080ED92C @ =0xFFFFF600
_080ED912:
	adds r0, r0, r1
	str r0, [r2, #0x40]
	ldr r0, [r3, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	beq _080ED930
	ldr r0, [r2, #0x44]
	movs r1, #0x80
	lsls r1, r1, #3
	b _080ED934
	.align 2, 0
_080ED92C: .4byte 0xFFFFF600
_080ED930:
	ldr r0, [r2, #0x44]
	ldr r1, _080ED94C @ =0xFFFFFC00
_080ED934:
	adds r0, r0, r1
	str r0, [r2, #0x44]
_080ED938:
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080ED948
	adds r0, r2, #0
	bl sub_080EC8E8
_080ED948:
	pop {r0}
	bx r0
	.align 2, 0
_080ED94C: .4byte 0xFFFFFC00

	thumb_func_start CreateMegaTitan
CreateMegaTitan: @ 0x080ED950
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _080ED984 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080ED988 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xc8
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080ED98C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080ED994
	.align 2, 0
_080ED984: .4byte ObjectMain
_080ED988: .4byte ObjectDestroy
_080ED98C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080ED994:
	adds r4, r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #0xc]
	movs r2, #1
	orrs r0, r2
	str r0, [r4, #0xc]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x12
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	ldr r1, _080ED9DC @ =0xFBFFFFFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0xc4
	movs r0, #0
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080ED9E0
	ldr r0, [r4, #8]
	orrs r0, r2
	b _080ED9E8
	.align 2, 0
_080ED9DC: .4byte 0xFBFFFFFF
_080ED9E0:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080ED9E8:
	str r0, [r4, #8]
	ldr r0, [r4, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	ldr r1, _080EDAB4 @ =0x001080A0
	orrs r0, r1
	str r0, [r4, #0x5c]
	movs r1, #0xc
	rsbs r1, r1, #0
	movs r2, #0x14
	rsbs r2, r2, #0
	movs r0, #0xa
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0xc
	bl sub_0803E2B0
	movs r1, #4
	rsbs r1, r1, #0
	movs r2, #0x10
	rsbs r2, r2, #0
	movs r0, #6
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #4
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	movs r1, #0
	movs r0, #0xe8
	lsls r0, r0, #3
	strh r0, [r4, #0x24]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r1, [r0]
	ldr r0, _080EDAB8 @ =sub_080F4190
	str r0, [r4, #0x7c]
	ldr r2, _080EDABC @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080EDAC0 @ =0x0000065E
	adds r0, r0, r1
	ldrb r5, [r0]
	adds r0, r5, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0
	bl sub_08002A44
	adds r0, r5, #0
	movs r1, #0
	bl sub_08002A1C
	ldr r2, _080EDAC4 @ =gUnk_02020EE0
	ldr r0, _080EDAC8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EDAA4
	ldr r0, _080EDACC @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080EDAA4
	adds r0, r5, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080EDAA4:
	adds r0, r4, #0
	bl sub_080F5640
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080EDAB4: .4byte 0x001080A0
_080EDAB8: .4byte sub_080F4190
_080EDABC: .4byte gCurLevelInfo
_080EDAC0: .4byte 0x0000065E
_080EDAC4: .4byte gUnk_02020EE0
_080EDAC8: .4byte gUnk_0203AD3C
_080EDACC: .4byte gUnk_0203AD20

	thumb_func_start sub_080EDAD0
sub_080EDAD0: @ 0x080EDAD0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	bl sub_0803D368
	adds r7, r0, #0
	adds r0, r6, #0
	adds r0, #0xac
	str r7, [r0]
	ldr r0, [r6, #8]
	movs r1, #4
	mov r8, r1
	orrs r0, r1
	str r0, [r6, #8]
	ldr r0, [r7, #0xc]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	beq _080EDB00
	b _080EDC6C
_080EDB00:
	adds r0, r6, #0
	adds r0, #0x60
	adds r2, r7, #0
	adds r2, #0x60
	ldrh r1, [r0]
	mov sb, r0
	ldrh r2, [r2]
	cmp r1, r2
	beq _080EDB14
	b _080EDC6C
_080EDB14:
	ldr r1, [r6, #0x40]
	ldr r2, [r6, #0x44]
	adds r5, r6, #0
	adds r5, #0xb0
	ldr r4, [r5]
	movs r0, #0x1a
	ldrsh r3, [r4, r0]
	mov ip, r3
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	adds r0, r7, #0
	mov r3, ip
	bl sub_08039430
	lsls r0, r0, #0x18
	adds r7, r5, #0
	cmp r0, #0
	bne _080EDB44
	b _080EDC6C
_080EDB44:
	adds r1, r6, #0
	adds r1, #0xa4
	movs r4, #0
	movs r0, #0x10
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	movs r0, #0xee
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x98
	strh r0, [r1]
	adds r0, r6, #0
	adds r0, #0x9f
	strb r4, [r0]
	adds r0, r6, #0
	bl sub_080EDC94
	movs r0, #0x5a
	strh r0, [r6, #4]
	adds r0, r6, #0
	bl sub_08034E14
	cmp r0, #0
	beq _080EDB7A
	strb r4, [r0, #9]
_080EDB7A:
	adds r0, r6, #0
	adds r0, #0x82
	ldrb r4, [r0]
	adds r3, r4, #0
	subs r3, #0x38
	ldr r2, _080EDC7C @ =gCurLevelInfo
	subs r0, #0x2c
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080EDC80 @ =0x0000065E
	adds r0, r0, r1
	ldrb r5, [r0]
	lsls r3, r3, #0x10
	asrs r1, r3, #0x10
	cmp r1, #0
	blt _080EDC44
	ldr r0, _080EDC84 @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080EDC44
	ldr r0, [r7]
	ldrh r1, [r0, #0x22]
	mov r0, r8
	ands r0, r1
	cmp r0, #0
	bne _080EDC44
	adds r0, r4, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r3
	cmp r0, #0xf
	bls _080EDC00
	movs r4, #1
_080EDBC8:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r5, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _080EDBC8
	adds r0, r5, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0
	bl sub_08002A44
_080EDC00:
	ldr r1, _080EDC84 @ =gUnk_08352D80
	mov r2, r8
	asrs r0, r2, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r5, #0
	bl sub_08002A1C
	ldr r2, _080EDC88 @ =gUnk_02020EE0
	ldr r0, _080EDC8C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r3, sb
	ldrh r3, [r3]
	cmp r0, r3
	bne _080EDC44
	ldr r0, _080EDC90 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080EDC44
	adds r0, r5, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080EDC44:
	ldr r0, [r7]
	ldrb r1, [r0, #0x10]
	adds r0, r6, #0
	bl sub_080EF010
	ldr r0, [r7]
	ldrb r1, [r0, #0x10]
	adds r0, r6, #0
	bl sub_080F1FD8
	ldr r0, [r7]
	ldrb r1, [r0, #0x10]
	adds r0, r6, #0
	bl sub_080F1400
	ldr r0, [r7]
	ldrb r1, [r0, #0x10]
	adds r0, r6, #0
	bl sub_080F2BDC
_080EDC6C:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080EDC7C: .4byte gCurLevelInfo
_080EDC80: .4byte 0x0000065E
_080EDC84: .4byte gUnk_08352D80
_080EDC88: .4byte gUnk_02020EE0
_080EDC8C: .4byte gUnk_0203AD3C
_080EDC90: .4byte gUnk_0203AD20

	thumb_func_start sub_080EDC94
sub_080EDC94: @ 0x080EDC94
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	adds r7, r4, #0
	adds r7, #0x9f
	ldrb r0, [r7]
	mov r8, r0
	adds r6, r4, #0
	adds r6, #0x9e
	ldrb r5, [r6]
	adds r0, r4, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _080EDCBE
	adds r0, r4, #0
	bl sub_080EEC24
	b _080EDCF6
_080EDCBE:
	ldr r2, _080EDD00 @ =sub_080EDD0C
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	ldr r1, _080EDD04 @ =0xFBFFFFFF
	ands r0, r1
	ldr r1, _080EDD08 @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0xb4
	lsls r0, r0, #1
	strh r0, [r4, #4]
	mov r0, r8
	strb r0, [r7]
	strb r5, [r6]
	cmp r5, #0
	bne _080EDCF6
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #1
	strb r0, [r1]
_080EDCF6:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080EDD00: .4byte sub_080EDD0C
_080EDD04: .4byte 0xFBFFFFFF
_080EDD08: .4byte 0xFFFFFDFF

	thumb_func_start sub_080EDD0C
sub_080EDD0C: @ 0x080EDD0C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	mov r8, r4
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EDDA8
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080EDD60 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080EDD64
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	b _080EDE28
	.align 2, 0
_080EDD60: .4byte 0xFFFFF800
_080EDD64:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	cmp r1, r0
	bgt _080EDE2C
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r6, #0
	ldrsh r1, [r3, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _080EDDA4 @ =0xFFFFF800
	adds r0, r0, r2
	b _080EDE28
	.align 2, 0
_080EDDA4: .4byte 0xFFFFF800
_080EDDA8:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080EDDEC
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _080EDDE8 @ =0xFFFFF800
	adds r0, r0, r2
	b _080EDE28
	.align 2, 0
_080EDDE8: .4byte 0xFFFFF800
_080EDDEC:
	movs r3, #0x3e
	adds r3, r3, r4
	mov ip, r3
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r5, #0
	ldrsh r0, [r3, r5]
	lsls r0, r0, #8
	ldr r2, _080EDE70 @ =0xFFFFF800
	adds r0, r0, r2
	cmp r1, r0
	blt _080EDE2C
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r5, #0
	ldrsh r1, [r3, r5]
	lsls r1, r1, #8
	mov r2, ip
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080EDE28:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080EDE2C:
	adds r5, r4, #0
	adds r5, #0x3f
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x44]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xaa
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080EDE70 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080EDE74
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #4
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	subs r1, r1, r0
	str r1, [r4, #0x44]
	b _080EDE9E
	.align 2, 0
_080EDE70: .4byte 0xFFFFF800
_080EDE74:
	adds r0, r4, #0
	adds r0, #0x3d
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r0, #0x69
	movs r3, #0
	ldrsh r0, [r0, r3]
	lsls r0, r0, #8
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r0, r5
	cmp r1, r0
	bgt _080EDE9E
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #8
	orrs r0, r1
	strb r0, [r2]
_080EDE9E:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #2
	beq _080EDEAE
	cmp r1, #0
	bne _080EDEB6
_080EDEAE:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
_080EDEB6:
	mov r0, r8
	adds r0, #0xc4
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	bne _080EDF90
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080EDED8
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080EDEE0
_080EDED8:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080EDEE0:
	str r0, [r4, #8]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EDFAC
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080EDF40 @ =gUnk_08351530
	ldr r0, _080EDF44 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x98
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _080EDF54
	ldr r3, _080EDF48 @ =gRngVal
	ldr r0, [r3]
	ldr r5, _080EDF4C @ =0x00196225
	muls r0, r5, r0
	ldr r1, _080EDF50 @ =0x3C6EF35F
	adds r2, r0, r1
	str r2, [r3]
	lsrs r0, r2, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EDF3A
	adds r0, r2, #0
	muls r0, r5, r0
	ldr r2, _080EDF50 @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r3]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	adds r0, #1
	strb r0, [r6]
_080EDF3A:
	movs r0, #0xb4
	strh r0, [r4, #4]
	b _080EDFAC
	.align 2, 0
_080EDF40: .4byte gUnk_08351530
_080EDF44: .4byte gUnk_0203AD30
_080EDF48: .4byte gRngVal
_080EDF4C: .4byte 0x00196225
_080EDF50: .4byte 0x3C6EF35F
_080EDF54:
	ldr r2, _080EDF84 @ =gRngVal
	ldr r0, [r2]
	ldr r5, _080EDF88 @ =0x00196225
	muls r0, r5, r0
	ldr r3, _080EDF8C @ =0x3C6EF35F
	adds r1, r0, r3
	str r1, [r2]
	lsrs r0, r1, #0x10
	movs r3, #1
	ands r0, r3
	cmp r0, #0
	beq _080EDF7E
	adds r0, r1, #0
	muls r0, r5, r0
	ldr r5, _080EDF8C @ =0x3C6EF35F
	adds r0, r0, r5
	str r0, [r2]
	lsrs r0, r0, #0x10
	ands r0, r3
	adds r0, #1
	strb r0, [r6]
_080EDF7E:
	movs r0, #0xf0
	strh r0, [r4, #4]
	b _080EDFAC
	.align 2, 0
_080EDF84: .4byte gRngVal
_080EDF88: .4byte 0x00196225
_080EDF8C: .4byte 0x3C6EF35F
_080EDF90:
	ldr r1, [r4, #0x40]
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r1, r0
	ble _080EDFA2
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080EDFAA
_080EDFA2:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080EDFAA:
	str r0, [r4, #8]
_080EDFAC:
	adds r0, r4, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	beq _080EE01C
	subs r0, #0x18
	ldrb r1, [r0]
	adds r3, r0, #0
	cmp r1, #0
	bne _080EDFE2
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080EDFFC @ =gUnk_08351530
	ldr r0, _080EE000 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x98
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r5, #0
	ldrsh r1, [r2, r5]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080EE004
_080EDFE2:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x80
	ble _080EE07C
	movs r0, #0x80
	strh r0, [r1]
	b _080EE07C
	.align 2, 0
_080EDFFC: .4byte gUnk_08351530
_080EE000: .4byte gUnk_0203AD30
_080EE004:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x50
	ble _080EE07C
	movs r0, #0x50
	strh r0, [r1]
	b _080EE07C
_080EE01C:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r1, [r0]
	adds r3, r0, #0
	cmp r1, #0
	bne _080EE048
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080EE05C @ =gUnk_08351530
	ldr r0, _080EE060 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x98
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r5, #0
	ldrsh r1, [r2, r5]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080EE064
_080EE048:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	rsbs r2, r2, #0
	b _080EE076
	.align 2, 0
_080EE05C: .4byte gUnk_08351530
_080EE060: .4byte gUnk_0203AD30
_080EE064:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x50
	rsbs r2, r2, #0
_080EE076:
	cmp r0, r2
	bge _080EE07C
	strh r2, [r1]
_080EE07C:
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r1, [r0]
	mov r8, r0
	cmp r1, #0
	beq _080EE0A8
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x10
	strh r0, [r2]
	lsls r0, r0, #0x10
	ldr r1, _080EE0A0 @ =0xFEA00000
	cmp r0, r1
	bge _080EE0C0
	ldr r0, _080EE0A4 @ =0x0000FEA0
	strh r0, [r2]
	b _080EE0C0
	.align 2, 0
_080EE0A0: .4byte 0xFEA00000
_080EE0A4: .4byte 0x0000FEA0
_080EE0A8:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #6
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #1
	cmp r0, r2
	ble _080EE0C0
	strh r2, [r1]
_080EE0C0:
	ldrb r5, [r3]
	cmp r5, #0
	bne _080EE0E6
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080EE110 @ =gUnk_08351530
	ldr r0, _080EE114 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x98
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080EE11C
_080EE0E6:
	ldr r1, [r4, #0x40]
	ldr r0, _080EE118 @ =0x000043FF
	cmp r1, r0
	bgt _080EE0FE
	movs r0, #1
	strb r0, [r6]
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
_080EE0FE:
	ldr r1, [r4, #0x40]
	movs r0, #0xc0
	lsls r0, r0, #8
	cmp r1, r0
	ble _080EE14C
	movs r0, #0
	strb r0, [r6]
	b _080EE140
	.align 2, 0
_080EE110: .4byte gUnk_08351530
_080EE114: .4byte gUnk_0203AD30
_080EE118: .4byte 0x000043FF
_080EE11C:
	ldr r1, [r4, #0x40]
	ldr r0, _080EE220 @ =0x00003BFF
	cmp r1, r0
	bgt _080EE134
	movs r0, #1
	strb r0, [r6]
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
_080EE134:
	ldr r1, [r4, #0x40]
	movs r0, #0xc8
	lsls r0, r0, #8
	cmp r1, r0
	ble _080EE14C
	strb r5, [r6]
_080EE140:
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
_080EE14C:
	ldr r1, [r4, #0x44]
	ldr r0, _080EE224 @ =0x000037FF
	cmp r1, r0
	bgt _080EE16E
	ldrb r0, [r7]
	cmp r0, #2
	bne _080EE16E
	movs r0, #1
	mov r5, r8
	strb r0, [r5]
	movs r0, #3
	strb r0, [r7]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
_080EE16E:
	ldr r1, [r4, #0x44]
	movs r0, #0x80
	lsls r0, r0, #7
	cmp r1, r0
	ble _080EE1FC
	ldrb r0, [r7]
	cmp r0, #0
	bne _080EE1FC
	mov r6, r8
	strb r0, [r6]
	movs r0, #1
	strb r0, [r7]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _080EE228 @ =gUnk_02020EE0
	ldr r0, _080EE22C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EE1FC
	ldrb r0, [r4]
	cmp r0, #0
	bne _080EE1BC
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080EE1FC
_080EE1BC:
	ldr r1, _080EE230 @ =gUnk_08D60FA4
	ldr r5, _080EE234 @ =gSongTable
	ldr r2, _080EE238 @ =0x00000C64
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080EE1E2
	movs r6, #0xc6
	lsls r6, r6, #4
	adds r0, r5, r6
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080EE1FC
_080EE1E2:
	cmp r3, #0
	beq _080EE1F4
	ldr r0, _080EE23C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080EE1FC
_080EE1F4:
	movs r0, #0xc6
	lsls r0, r0, #1
	bl m4aSongNumStart
_080EE1FC:
	adds r2, r7, #0
	ldrb r0, [r2]
	cmp r0, #1
	bne _080EE240
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EE25A
	strb r1, [r2]
	ldr r0, [r4, #8]
	subs r1, #5
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080F37B0
	b _080EE25A
	.align 2, 0
_080EE220: .4byte 0x00003BFF
_080EE224: .4byte 0x000037FF
_080EE228: .4byte gUnk_02020EE0
_080EE22C: .4byte gUnk_0203AD3C
_080EE230: .4byte gUnk_08D60FA4
_080EE234: .4byte gSongTable
_080EE238: .4byte 0x00000C64
_080EE23C: .4byte gUnk_0203AD10
_080EE240:
	cmp r0, #3
	bne _080EE25A
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080EE25A
	movs r0, #0
	strb r0, [r7]
	ldr r0, [r4, #8]
	subs r1, #5
	ands r0, r1
	str r0, [r4, #8]
_080EE25A:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080EE264
sub_080EE264: @ 0x080EE264
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0x9f
	ldrb r6, [r5]
	ldr r2, _080EE334 @ =sub_080EE358
	movs r1, #4
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #0x46
	strh r1, [r0]
	movs r2, #0xcf
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0x3c
	movs r3, #0x11
	bl sub_080F3974
	ldr r1, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #0x13
	orrs r1, r0
	str r1, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EE2B0
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r1, r0
	str r1, [r4, #8]
_080EE2B0:
	movs r0, #0x24
	strh r0, [r4, #4]
	strb r6, [r5]
	movs r0, #3
	adds r1, r4, #0
	bl sub_0806FE64
	ldr r1, _080EE338 @ =gUnk_02020EE0
	ldr r0, _080EE33C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EE326
	ldrb r0, [r4]
	cmp r0, #0
	bne _080EE2EA
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080EE326
_080EE2EA:
	ldr r1, _080EE340 @ =gUnk_08D60FA4
	ldr r5, _080EE344 @ =gSongTable
	ldr r2, _080EE348 @ =0x00000C7C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080EE30E
	ldr r1, _080EE34C @ =0x00000C78
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080EE326
_080EE30E:
	cmp r3, #0
	beq _080EE320
	ldr r0, _080EE350 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080EE326
_080EE320:
	ldr r0, _080EE354 @ =0x0000018F
	bl m4aSongNumStart
_080EE326:
	adds r0, r4, #0
	bl sub_0809E79C
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080EE334: .4byte sub_080EE358
_080EE338: .4byte gUnk_02020EE0
_080EE33C: .4byte gUnk_0203AD3C
_080EE340: .4byte gUnk_08D60FA4
_080EE344: .4byte gSongTable
_080EE348: .4byte 0x00000C7C
_080EE34C: .4byte 0x00000C78
_080EE350: .4byte gUnk_0203AD10
_080EE354: .4byte 0x0000018F

	thumb_func_start sub_080EE358
sub_080EE358: @ 0x080EE358
	push {r4, r5, r6, lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EE3F4
	adds r5, r2, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r3, [r2, #0x40]
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xa8
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r6, _080EE3AC @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080EE3B0
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #2
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r0, r3
	b _080EE474
	.align 2, 0
_080EE3AC: .4byte 0xFFFFF800
_080EE3B0:
	adds r5, r2, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r0, r3
	cmp r1, r0
	bgt _080EE478
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #1
	orrs r0, r1
	strb r0, [r3]
	movs r6, #0
	ldrsh r1, [r4, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080EE3F0 @ =0xFFFFF800
	adds r0, r0, r3
	b _080EE474
	.align 2, 0
_080EE3F0: .4byte 0xFFFFF800
_080EE3F4:
	adds r5, r2, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r3, [r2, #0x40]
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080EE438
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #2
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080EE434 @ =0xFFFFF800
	adds r0, r0, r3
	b _080EE474
	.align 2, 0
_080EE434: .4byte 0xFFFFF800
_080EE438:
	movs r0, #0x3e
	adds r0, r0, r2
	mov ip, r0
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xa8
	movs r3, #0
	ldrsh r0, [r4, r3]
	lsls r0, r0, #8
	ldr r3, _080EE4BC @ =0xFFFFF800
	adds r0, r0, r3
	cmp r1, r0
	blt _080EE478
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #1
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	mov r3, ip
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080EE474:
	subs r1, r1, r0
	str r1, [r2, #0x40]
_080EE478:
	adds r5, r2, #0
	adds r5, #0x3f
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r3, [r2, #0x44]
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xaa
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r6, _080EE4BC @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080EE4C0
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #4
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r0, r3
	subs r1, r1, r0
	str r1, [r2, #0x44]
	b _080EE4EA
	.align 2, 0
_080EE4BC: .4byte 0xFFFFF800
_080EE4C0:
	adds r0, r2, #0
	adds r0, #0x3d
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r3, r1
	adds r0, #0x69
	movs r6, #0
	ldrsh r0, [r0, r6]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r0, r3
	cmp r1, r0
	bgt _080EE4EA
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #8
	orrs r0, r1
	strb r0, [r3]
_080EE4EA:
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0x11
	orrs r0, r1
	str r0, [r2, #8]
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EE50C
	adds r0, r2, #0
	bl sub_080EE514
_080EE50C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EE514
sub_080EE514: @ 0x080EE514
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0x9f
	ldrb r6, [r5]
	ldr r2, _080EE570 @ =sub_080EE588
	movs r1, #4
	bl ObjectSetFunc
	ldr r1, [r4, #0x40]
	movs r0, #0x90
	lsls r0, r0, #6
	cmp r1, r0
	bgt _080EE53A
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xf8
	lsls r0, r0, #1
	strh r0, [r1]
_080EE53A:
	ldr r1, [r4, #0x40]
	ldr r0, _080EE574 @ =0x0000DFFF
	cmp r1, r0
	ble _080EE54A
	adds r1, r4, #0
	adds r1, #0x50
	ldr r0, _080EE578 @ =0x0000FE10
	strh r0, [r1]
_080EE54A:
	adds r0, r4, #0
	adds r0, #0x52
	movs r1, #0
	strh r1, [r0]
	adds r0, #0x46
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x80
	ldrh r0, [r1]
	subs r0, #0xa
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080EE57C
	adds r0, r4, #0
	bl sub_080EEC24
	b _080EE582
	.align 2, 0
_080EE570: .4byte sub_080EE588
_080EE574: .4byte 0x0000DFFF
_080EE578: .4byte 0x0000FE10
_080EE57C:
	movs r0, #4
	strh r0, [r4, #4]
	strb r6, [r5]
_080EE582:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080EE588
sub_080EE588: @ 0x080EE588
	push {r4, r5, r6, lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EE620
	adds r5, r2, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r3, [r2, #0x40]
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xa8
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r6, _080EE5D8 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080EE5DC
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #2
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r0, r3
	b _080EE6A0
	.align 2, 0
_080EE5D8: .4byte 0xFFFFF800
_080EE5DC:
	adds r5, r2, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r0, r3
	cmp r1, r0
	bgt _080EE6A4
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #1
	orrs r0, r1
	strb r0, [r3]
	movs r6, #0
	ldrsh r1, [r4, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080EE61C @ =0xFFFFF800
	adds r0, r0, r3
	b _080EE6A0
	.align 2, 0
_080EE61C: .4byte 0xFFFFF800
_080EE620:
	adds r5, r2, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r3, [r2, #0x40]
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080EE664
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #2
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080EE660 @ =0xFFFFF800
	adds r0, r0, r3
	b _080EE6A0
	.align 2, 0
_080EE660: .4byte 0xFFFFF800
_080EE664:
	movs r4, #0x3e
	adds r4, r4, r2
	mov ip, r4
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xa8
	movs r3, #0
	ldrsh r0, [r4, r3]
	lsls r0, r0, #8
	ldr r3, _080EE6E8 @ =0xFFFFF800
	adds r0, r0, r3
	cmp r1, r0
	blt _080EE6A4
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #1
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	mov r3, ip
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080EE6A0:
	subs r1, r1, r0
	str r1, [r2, #0x40]
_080EE6A4:
	adds r5, r2, #0
	adds r5, #0x3f
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r3, [r2, #0x44]
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xaa
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r6, _080EE6E8 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080EE6EC
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #4
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r0, r3
	subs r1, r1, r0
	str r1, [r2, #0x44]
	b _080EE716
	.align 2, 0
_080EE6E8: .4byte 0xFFFFF800
_080EE6EC:
	adds r0, r2, #0
	adds r0, #0x3d
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r3, r1
	adds r0, #0x69
	movs r4, #0
	ldrsh r0, [r0, r4]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080EE716
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #8
	orrs r0, r1
	strb r0, [r3]
_080EE716:
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0x11
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r3, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080EE744
	adds r0, r3, #2
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080EE752
	b _080EE74E
_080EE744:
	subs r0, r3, #2
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080EE752
_080EE74E:
	movs r0, #0
	strh r0, [r1]
_080EE752:
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EE764
	adds r0, r2, #0
	bl sub_080F566C
_080EE764:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EE76C
sub_080EE76C: @ 0x080EE76C
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EE800
	adds r4, r5, #0
	adds r4, #0x3e
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	ldr r2, [r5, #0x40]
	adds r1, r2, r1
	adds r3, r5, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r7, _080EE7B8 @ =0xFFFFF800
	adds r0, r0, r7
	cmp r1, r0
	blt _080EE7BC
	adds r2, r5, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	b _080EE83C
	.align 2, 0
_080EE7B8: .4byte 0xFFFFF800
_080EE7BC:
	adds r4, r5, #0
	adds r4, #0x3c
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r5, #0
	adds r2, #0xa4
	movs r6, #0
	ldrsh r0, [r2, r6]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	adds r3, r5, #0
	adds r3, #0x62
	cmp r1, r0
	bgt _080EE888
	ldrb r1, [r3]
	movs r0, #1
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	ldr r2, _080EE7FC @ =0xFFFFF800
	adds r0, r0, r2
	b _080EE884
	.align 2, 0
_080EE7FC: .4byte 0xFFFFF800
_080EE800:
	adds r4, r5, #0
	adds r4, #0x3c
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	ldr r2, [r5, #0x40]
	adds r1, r2, r1
	adds r3, r5, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080EE84C
	adds r2, r5, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r7, #0
	ldrsh r1, [r3, r7]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	ldr r3, _080EE848 @ =0xFFFFF800
_080EE83C:
	adds r0, r0, r3
	subs r1, r1, r0
	str r1, [r5, #0x40]
	adds r3, r2, #0
	b _080EE888
	.align 2, 0
_080EE848: .4byte 0xFFFFF800
_080EE84C:
	adds r4, r5, #0
	adds r4, #0x3e
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r5, #0
	adds r2, #0xa8
	movs r7, #0
	ldrsh r0, [r2, r7]
	lsls r0, r0, #8
	ldr r3, _080EE8C8 @ =0xFFFFF800
	adds r0, r0, r3
	adds r3, r5, #0
	adds r3, #0x62
	cmp r1, r0
	blt _080EE888
	ldrb r1, [r3]
	movs r0, #1
	orrs r0, r1
	strb r0, [r3]
	movs r7, #0
	ldrsh r1, [r2, r7]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080EE884:
	subs r1, r1, r0
	str r1, [r5, #0x40]
_080EE888:
	adds r6, r5, #0
	adds r6, #0x3f
	movs r1, #0
	ldrsb r1, [r6, r1]
	lsls r1, r1, #8
	ldr r2, [r5, #0x44]
	adds r1, r2, r1
	adds r4, r5, #0
	adds r4, #0xaa
	movs r7, #0
	ldrsh r0, [r4, r7]
	lsls r0, r0, #8
	ldr r7, _080EE8C8 @ =0xFFFFF800
	adds r0, r0, r7
	cmp r1, r0
	blt _080EE8CC
	ldrb r1, [r3]
	movs r0, #4
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r6, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	subs r1, r1, r0
	str r1, [r5, #0x44]
	b _080EE8F2
	.align 2, 0
_080EE8C8: .4byte 0xFFFFF800
_080EE8CC:
	adds r0, r5, #0
	adds r0, #0x3d
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r0, #0x69
	movs r6, #0
	ldrsh r0, [r0, r6]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	cmp r1, r0
	bgt _080EE8F2
	ldrb r1, [r3]
	movs r0, #8
	orrs r0, r1
	strb r0, [r3]
_080EE8F2:
	adds r0, r5, #0
	adds r0, #0x52
	ldrh r1, [r0]
	subs r1, #0x40
	movs r7, #0
	strh r1, [r0]
	lsls r1, r1, #0x10
	ldr r2, _080EE928 @ =0xFC800000
	adds r4, r0, #0
	cmp r1, r2
	bge _080EE90C
	ldr r0, _080EE92C @ =0x0000FC80
	strh r0, [r4]
_080EE90C:
	adds r0, r5, #0
	adds r0, #0x50
	ldrh r2, [r0]
	movs r6, #0
	ldrsh r1, [r0, r6]
	adds r6, r0, #0
	cmp r1, #0
	bge _080EE930
	adds r0, r2, #2
	strh r0, [r6]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080EE93C
	b _080EE93A
	.align 2, 0
_080EE928: .4byte 0xFC800000
_080EE92C: .4byte 0x0000FC80
_080EE930:
	subs r0, r2, #2
	strh r0, [r6]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080EE93C
_080EE93A:
	strh r7, [r6]
_080EE93C:
	ldrb r1, [r3]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080EEA08
	movs r0, #0
	strh r0, [r4]
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #6
	strb r0, [r1]
	movs r0, #4
	ldrsh r7, [r5, r0]
	cmp r7, #0
	bne _080EE9EC
	movs r0, #3
	adds r1, r5, #0
	bl sub_0806FE64
	movs r4, #0x10
	rsbs r4, r4, #0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xc
	movs r3, #1
	bl sub_08089864
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xc
	movs r3, #0
	bl sub_08089864
	strh r7, [r6]
	ldr r1, _080EEA10 @ =gUnk_02020EE0
	ldr r0, _080EEA14 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EE9EC
	ldrb r0, [r5]
	cmp r0, #0
	bne _080EE9AC
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080EE9EC
_080EE9AC:
	ldr r1, _080EEA18 @ =gUnk_08D60FA4
	ldr r4, _080EEA1C @ =gSongTable
	ldr r2, _080EEA20 @ =0x00000B24
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080EE9D2
	movs r6, #0xb2
	lsls r6, r6, #4
	adds r0, r4, r6
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080EE9EC
_080EE9D2:
	cmp r3, #0
	beq _080EE9E4
	ldr r0, _080EEA24 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080EE9EC
_080EE9E4:
	movs r0, #0xb2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080EE9EC:
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x18
	ble _080EEA08
	ldr r0, [r5, #8]
	ldr r1, _080EEA28 @ =0xFBFFFFFF
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	bl sub_080EDC94
_080EEA08:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080EEA10: .4byte gUnk_02020EE0
_080EEA14: .4byte gUnk_0203AD3C
_080EEA18: .4byte gUnk_08D60FA4
_080EEA1C: .4byte gSongTable
_080EEA20: .4byte 0x00000B24
_080EEA24: .4byte gUnk_0203AD10
_080EEA28: .4byte 0xFBFFFFFF

	thumb_func_start sub_080EEA2C
sub_080EEA2C: @ 0x080EEA2C
	push {r4, r5, r6, lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EEAC4
	adds r5, r2, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r3, [r2, #0x40]
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xa8
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r6, _080EEA7C @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080EEA80
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #2
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r0, r3
	b _080EEB44
	.align 2, 0
_080EEA7C: .4byte 0xFFFFF800
_080EEA80:
	adds r5, r2, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r0, r3
	cmp r1, r0
	bgt _080EEB48
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #1
	orrs r0, r1
	strb r0, [r3]
	movs r6, #0
	ldrsh r1, [r4, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080EEAC0 @ =0xFFFFF800
	adds r0, r0, r3
	b _080EEB44
	.align 2, 0
_080EEAC0: .4byte 0xFFFFF800
_080EEAC4:
	adds r5, r2, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r3, [r2, #0x40]
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080EEB08
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #2
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080EEB04 @ =0xFFFFF800
	adds r0, r0, r3
	b _080EEB44
	.align 2, 0
_080EEB04: .4byte 0xFFFFF800
_080EEB08:
	movs r4, #0x3e
	adds r4, r4, r2
	mov ip, r4
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xa8
	movs r3, #0
	ldrsh r0, [r4, r3]
	lsls r0, r0, #8
	ldr r3, _080EEB8C @ =0xFFFFF800
	adds r0, r0, r3
	cmp r1, r0
	blt _080EEB48
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #1
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	mov r3, ip
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080EEB44:
	subs r1, r1, r0
	str r1, [r2, #0x40]
_080EEB48:
	adds r5, r2, #0
	adds r5, #0x3f
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r3, [r2, #0x44]
	adds r1, r3, r1
	adds r4, r2, #0
	adds r4, #0xaa
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r6, _080EEB8C @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080EEB90
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #4
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r0, r3
	subs r1, r1, r0
	str r1, [r2, #0x44]
	b _080EEBBA
	.align 2, 0
_080EEB8C: .4byte 0xFFFFF800
_080EEB90:
	adds r0, r2, #0
	adds r0, #0x3d
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r3, r1
	adds r0, #0x69
	movs r4, #0
	ldrsh r0, [r0, r4]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080EEBBA
	adds r3, r2, #0
	adds r3, #0x62
	ldrb r1, [r3]
	movs r0, #8
	orrs r0, r1
	strb r0, [r3]
_080EEBBA:
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0x11
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r3, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080EEBE8
	adds r0, r3, #2
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080EEBF6
	b _080EEBF2
_080EEBE8:
	subs r0, r3, #2
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080EEBF6
_080EEBF2:
	movs r0, #0
	strh r0, [r1]
_080EEBF6:
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EEC14
	ldr r0, [r2, #8]
	ldr r1, _080EEC1C @ =0xFFFF7FFF
	ands r0, r1
	ldr r1, _080EEC20 @ =0xFEFFFFFF
	ands r0, r1
	str r0, [r2, #8]
	adds r0, r2, #0
	bl sub_080EDC94
_080EEC14:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080EEC1C: .4byte 0xFFFF7FFF
_080EEC20: .4byte 0xFEFFFFFF

	thumb_func_start sub_080EEC24
sub_080EEC24: @ 0x080EEC24
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r5, #0
	adds r0, #0x9e
	movs r4, #0
	strb r4, [r0]
	str r4, [r5, #0x7c]
	ldr r2, _080EED2C @ =sub_080EED48
	adds r0, r5, #0
	movs r1, #7
	bl ObjectSetFunc
	str r4, [r5, #0x68]
	ldr r0, [r5, #0x5c]
	movs r1, #0x80
	orrs r0, r1
	str r0, [r5, #0x5c]
	ldr r0, [r5, #8]
	movs r2, #0x80
	lsls r2, r2, #2
	orrs r0, r2
	subs r1, #0xa1
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	subs r1, #0x43
	ands r0, r1
	orrs r0, r2
	str r0, [r5, #8]
	movs r0, #0xf8
	lsls r0, r0, #3
	strh r0, [r5, #0x24]
	adds r0, r5, #0
	bl sub_08088528
	ldr r1, _080EED30 @ =gUnk_02020EE0
	ldr r0, _080EED34 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EECE4
	ldrb r0, [r5]
	cmp r0, #0
	bne _080EECA4
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080EECE4
_080EECA4:
	ldr r1, _080EED38 @ =gUnk_08D60FA4
	ldr r4, _080EED3C @ =gSongTable
	ldr r2, _080EED40 @ =0x00000BE4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080EECCA
	movs r1, #0xbe
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080EECE4
_080EECCA:
	cmp r3, #0
	beq _080EECDC
	ldr r0, _080EED44 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080EECE4
_080EECDC:
	movs r0, #0xbe
	lsls r0, r0, #1
	bl m4aSongNumStart
_080EECE4:
	movs r0, #0
	strh r0, [r6, #4]
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EECFC
	adds r1, r6, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
_080EECFC:
	adds r0, r5, #0
	adds r0, #0xb4
	ldr r0, [r0]
	bl sub_080F12A8
	adds r0, r5, #0
	adds r0, #0xb8
	ldr r0, [r0]
	bl sub_080F12A8
	adds r0, r5, #0
	adds r0, #0xbc
	ldr r0, [r0]
	bl sub_080F12A8
	adds r0, r5, #0
	adds r0, #0xc0
	ldr r0, [r0]
	bl sub_080F12A8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080EED2C: .4byte sub_080EED48
_080EED30: .4byte gUnk_02020EE0
_080EED34: .4byte gUnk_0203AD3C
_080EED38: .4byte gUnk_08D60FA4
_080EED3C: .4byte gSongTable
_080EED40: .4byte 0x00000BE4
_080EED44: .4byte gUnk_0203AD10

	thumb_func_start sub_080EED48
sub_080EED48: @ 0x080EED48
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EEDE0
	adds r4, r5, #0
	adds r4, #0x3e
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	ldr r2, [r5, #0x40]
	adds r1, r2, r1
	adds r3, r5, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080EED98 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080EED9C
	adds r2, r5, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	b _080EEE5C
	.align 2, 0
_080EED98: .4byte 0xFFFFF800
_080EED9C:
	adds r4, r5, #0
	adds r4, #0x3c
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r5, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	cmp r1, r0
	bgt _080EEE60
	adds r2, r5, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r6, #0
	ldrsh r1, [r3, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	ldr r2, _080EEDDC @ =0xFFFFF800
	adds r0, r0, r2
	b _080EEE5C
	.align 2, 0
_080EEDDC: .4byte 0xFFFFF800
_080EEDE0:
	adds r4, r5, #0
	adds r4, #0x3c
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	ldr r2, [r5, #0x40]
	adds r1, r2, r1
	adds r3, r5, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080EEE24
	adds r2, r5, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	ldr r2, _080EEE20 @ =0xFFFFF800
	adds r0, r0, r2
	b _080EEE5C
	.align 2, 0
_080EEE20: .4byte 0xFFFFF800
_080EEE24:
	adds r4, r5, #0
	adds r4, #0x3e
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r5, #0
	adds r3, #0xa8
	movs r2, #0
	ldrsh r0, [r3, r2]
	lsls r0, r0, #8
	ldr r2, _080EEEA4 @ =0xFFFFF800
	adds r0, r0, r2
	cmp r1, r0
	blt _080EEE60
	adds r2, r5, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080EEE5C:
	subs r1, r1, r0
	str r1, [r5, #0x40]
_080EEE60:
	adds r4, r5, #0
	adds r4, #0x3f
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	ldr r2, [r5, #0x44]
	adds r1, r2, r1
	adds r3, r5, #0
	adds r3, #0xaa
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080EEEA4 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080EEEA8
	adds r2, r5, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #4
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	subs r1, r1, r0
	str r1, [r5, #0x44]
	b _080EEED2
	.align 2, 0
_080EEEA4: .4byte 0xFFFFF800
_080EEEA8:
	adds r0, r5, #0
	adds r0, #0x3d
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r0, #0x69
	movs r6, #0
	ldrsh r0, [r0, r6]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	cmp r1, r0
	bgt _080EEED2
	adds r2, r5, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #8
	orrs r0, r1
	strb r0, [r2]
_080EEED2:
	adds r2, r5, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #7
	bne _080EEF1A
	ldr r0, [r5, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080EEEE8
	b _080EF00A
_080EEEE8:
	movs r0, #8
	strb r0, [r2]
	adds r0, r5, #0
	movs r1, #0
	bl sub_080F3D28
	adds r0, r5, #0
	movs r1, #1
	bl sub_080F3D28
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #0x10]
	adds r0, r5, #0
	bl sub_080F4484
	movs r2, #0xad
	lsls r2, r2, #2
	adds r0, r5, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	b _080EF00A
_080EEF1A:
	ldr r0, [r5, #8]
	movs r1, #0x20
	orrs r0, r1
	subs r1, #0x61
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080EF00A
	adds r1, r5, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	movs r0, #4
	ldrsh r6, [r5, r0]
	cmp r6, #0
	bne _080EEFDA
	movs r0, #3
	adds r1, r5, #0
	bl sub_0806FE64
	movs r4, #0x10
	rsbs r4, r4, #0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xc
	movs r3, #1
	bl sub_08089864
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xc
	movs r3, #0
	bl sub_08089864
	adds r0, r5, #0
	adds r0, #0x50
	strh r6, [r0]
	ldr r1, _080EEFEC @ =gUnk_02020EE0
	ldr r0, _080EEFF0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080EEFDA
	ldrb r0, [r5]
	cmp r0, #0
	bne _080EEF9A
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080EEFDA
_080EEF9A:
	ldr r1, _080EEFF4 @ =gUnk_08D60FA4
	ldr r4, _080EEFF8 @ =gSongTable
	ldr r2, _080EEFFC @ =0x00000B24
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080EEFC0
	movs r6, #0xb2
	lsls r6, r6, #4
	adds r0, r4, r6
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080EEFDA
_080EEFC0:
	cmp r3, #0
	beq _080EEFD2
	ldr r0, _080EF000 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080EEFDA
_080EEFD2:
	movs r0, #0xb2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080EEFDA:
	ldrh r1, [r5, #4]
	movs r2, #4
	ldrsh r0, [r5, r2]
	cmp r0, #0x3c
	bgt _080EF004
	adds r0, r1, #1
	strh r0, [r5, #4]
	b _080EF00A
	.align 2, 0
_080EEFEC: .4byte gUnk_02020EE0
_080EEFF0: .4byte gUnk_0203AD3C
_080EEFF4: .4byte gUnk_08D60FA4
_080EEFF8: .4byte gSongTable
_080EEFFC: .4byte 0x00000B24
_080EF000: .4byte gUnk_0203AD10
_080EF004:
	adds r0, r5, #0
	bl sub_080F56A8
_080EF00A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080EF010
sub_080EF010: @ 0x080EF010
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	str r5, [sp]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov ip, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov r8, r0
	movs r4, #0
	ldr r1, _080EF054 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _080EF058 @ =gUnk_020229E0
	movs r6, #0x56
	adds r6, r6, r5
	mov sb, r6
	ldr r6, [sp]
	adds r6, #0xb4
	b _080EF070
	.align 2, 0
_080EF054: .4byte gUnk_020229D4
_080EF058: .4byte gUnk_020229E0
_080EF05C:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080EF078
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080EF070:
	cmp r0, #0
	bne _080EF05C
	orrs r2, r3
	str r2, [r1]
_080EF078:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r7
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, ip
	strh r0, [r1, #6]
	mov r0, r8
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xbc
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sl
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, sb
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	str r0, [r6]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EF0DC
sub_080EF0DC: @ 0x080EF0DC
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _080EF110 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080EF114 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080EF118
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r6, r0, r1
	b _080EF120
	.align 2, 0
_080EF110: .4byte ObjectMain
_080EF114: .4byte ObjectDestroy
_080EF118:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
_080EF120:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r1, [r6, #8]
	movs r0, #0x40
	orrs r1, r0
	movs r0, #1
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r1, r0
	ldr r0, [r6, #0x5c]
	ldr r2, _080EF1A0 @ =0x001080A0
	orrs r0, r2
	str r0, [r6, #0x5c]
	movs r0, #0x80
	lsls r0, r0, #9
	orrs r1, r0
	str r1, [r6, #8]
	adds r1, r6, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080EF1A4 @ =sub_080F5744
	str r0, [r6, #0x7c]
	movs r4, #4
	rsbs r4, r4, #0
	movs r5, #8
	rsbs r5, r5, #0
	movs r0, #4
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #8
	bl sub_0803E2B0
	movs r0, #2
	rsbs r0, r0, #0
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #8
	bl sub_0803E308
	adds r0, r6, #0
	bl ObjectInitSprite
	adds r0, r6, #0
	bl sub_080EF1A8
	movs r0, #0xb4
	strh r0, [r6, #4]
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080EF1A0: .4byte 0x001080A0
_080EF1A4: .4byte sub_080F5744

	thumb_func_start sub_080EF1A8
sub_080EF1A8: @ 0x080EF1A8
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r4, #0
	movs r7, #0
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _080EF1C8
	cmp r0, #0xc
	bne _080EF1CA
_080EF1C8:
	movs r7, #0xc
_080EF1CA:
	adds r6, r5, #0
	adds r6, #0x83
	ldrb r0, [r6]
	cmp r0, #1
	bne _080EF1F6
	movs r0, #0xb
	strb r0, [r6]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xa
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xe
	bl sub_080F3974
	movs r4, #1
_080EF1F6:
	ldr r2, _080EF224 @ =sub_080EF2A0
	adds r0, r5, #0
	movs r1, #0xa
	bl ObjectSetFunc
	cmp r4, #0
	beq _080EF208
	movs r0, #0xb
	strb r0, [r6]
_080EF208:
	cmp r7, #0
	beq _080EF20E
	strb r7, [r6]
_080EF20E:
	movs r0, #0xd8
	lsls r0, r0, #3
	strh r0, [r5, #0x24]
	ldr r0, [r5, #0x70]
	adds r0, #0xc4
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EF228
	movs r0, #8
	b _080EF296
	.align 2, 0
_080EF224: .4byte sub_080EF2A0
_080EF228:
	ldr r2, _080EF24C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EF250 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EF254 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #7
	ands r1, r0
	cmp r1, #7
	bhi _080EF298
	lsls r0, r1, #2
	ldr r1, _080EF258 @ =_080EF25C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080EF24C: .4byte gRngVal
_080EF250: .4byte 0x00196225
_080EF254: .4byte 0x3C6EF35F
_080EF258: .4byte _080EF25C
_080EF25C: @ jump table
	.4byte _080EF27C @ case 0
	.4byte _080EF280 @ case 1
	.4byte _080EF294 @ case 2
	.4byte _080EF284 @ case 3
	.4byte _080EF288 @ case 4
	.4byte _080EF28C @ case 5
	.4byte _080EF290 @ case 6
	.4byte _080EF294 @ case 7
_080EF27C:
	movs r0, #0x78
	b _080EF296
_080EF280:
	movs r0, #0x5a
	b _080EF296
_080EF284:
	movs r0, #0x14
	b _080EF296
_080EF288:
	movs r0, #0x2d
	b _080EF296
_080EF28C:
	movs r0, #0x5a
	b _080EF296
_080EF290:
	movs r0, #0x2d
	b _080EF296
_080EF294:
	movs r0, #0x3c
_080EF296:
	strh r0, [r5, #4]
_080EF298:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EF2A0
sub_080EF2A0: @ 0x080EF2A0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r0, [r5, #0x70]
	mov sb, r0
	movs r2, #0xea
	movs r1, #0xe8
	mov ip, r1
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r4, r5, #0
	adds r4, #0xa0
	strh r0, [r4]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r3, r5, #0
	adds r3, #0xa2
	strh r0, [r3]
	adds r6, r5, #0
	adds r6, #0x83
	ldrb r0, [r6]
	cmp r0, #0xc
	bne _080EF350
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r2, r2, #0x18
	asrs r0, r2, #0x18
	adds r1, r1, r0
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	subs r4, r1, r0
	mov sl, r2
	cmp r4, #0
	blt _080EF300
	cmp r4, #5
	ble _080EF30E
	adds r7, r3, #0
	mov r8, r6
	mov r1, ip
	lsls r6, r1, #0x18
	b _080EF3AA
_080EF300:
	subs r0, r0, r1
	adds r7, r3, #0
	mov r8, r6
	mov r3, ip
	lsls r6, r3, #0x18
	cmp r0, #5
	bgt _080EF3AA
_080EF30E:
	adds r3, r5, #0
	adds r3, #0xa2
	movs r4, #0
	ldrsh r1, [r3, r4]
	mov r0, ip
	lsls r2, r0, #0x18
	asrs r0, r2, #0x18
	adds r1, r1, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	subs r4, r1, r0
	adds r7, r3, #0
	adds r6, r2, #0
	cmp r4, #0
	blt _080EF338
	cmp r4, #5
	ble _080EF344
	movs r1, #0x83
	adds r1, r1, r5
	mov r8, r1
	b _080EF3AA
_080EF338:
	subs r0, r0, r1
	movs r3, #0x83
	adds r3, r3, r5
	mov r8, r3
	cmp r0, #5
	bgt _080EF3AA
_080EF344:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #0xa
	strb r0, [r1]
	mov r8, r1
	b _080EF3AA
_080EF350:
	cmp r0, #0xa
	bne _080EF38E
	mov r0, sb
	adds r0, #0x83
	ldrb r0, [r0]
	adds r7, r3, #0
	mov r8, r6
	lsls r2, r2, #0x18
	mov sl, r2
	mov r4, ip
	lsls r6, r4, #0x18
	cmp r0, #1
	bne _080EF3AA
	movs r0, #0xb
	mov r1, r8
	strb r0, [r1]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xa
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xe
	bl sub_080F3974
	b _080EF3AA
_080EF38E:
	mov r0, sb
	adds r0, #0x83
	ldrb r0, [r0]
	adds r7, r3, #0
	mov r8, r6
	lsls r2, r2, #0x18
	mov sl, r2
	mov r3, ip
	lsls r6, r3, #0x18
	cmp r0, #3
	bne _080EF3AA
	movs r0, #0xa
	mov r4, r8
	strb r0, [r4]
_080EF3AA:
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #2
	beq _080EF3C0
	cmp r0, #0xc
	beq _080EF3C0
	b _080EF518
_080EF3C0:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	ldr r4, [r5, #0x44]
	ldr r2, _080EF3FC @ =0xFFFFFC00
	ands r4, r2
	movs r1, #0
	ldrsh r0, [r7, r1]
	asrs r1, r6, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	ble _080EF400
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080EF44A
	strh r2, [r1]
	b _080EF44A
	.align 2, 0
_080EF3FC: .4byte 0xFFFFFC00
_080EF400:
	cmp r4, r0
	bge _080EF420
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080EF41C @ =0xFFFFFE40
	cmp r0, r2
	bge _080EF44A
	strh r2, [r1]
	b _080EF44A
	.align 2, 0
_080EF41C: .4byte 0xFFFFFE40
_080EF420:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080EF43C
	adds r0, r2, #0
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080EF44A
	b _080EF448
_080EF43C:
	adds r0, r2, #0
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080EF44A
_080EF448:
	strh r3, [r1]
_080EF44A:
	ldr r4, [r5, #0x40]
	ldr r2, _080EF48C @ =0xFFFFFC00
	ands r4, r2
	adds r0, r5, #0
	adds r0, #0xa0
	movs r1, #0
	ldrsh r0, [r0, r1]
	mov r3, sl
	asrs r1, r3, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	bge _080EF494
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080EF4C4
	ldr r2, _080EF490 @ =0xFFFFFDC0
	b _080EF634
	.align 2, 0
_080EF48C: .4byte 0xFFFFFC00
_080EF490: .4byte 0xFFFFFDC0
_080EF494:
	cmp r4, r0
	ble _080EF4EC
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080EF4CC
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080EF4C8 @ =0xFFFFFDC0
	cmp r0, r2
	blt _080EF4C4
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080EF4C4
	b _080EF666
_080EF4C4:
	strh r2, [r1]
	b _080EF666
	.align 2, 0
_080EF4C8: .4byte 0xFFFFFDC0
_080EF4CC:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080EF4C4
	ldr r2, _080EF4E8 @ =0xFFFFFDC0
	b _080EF634
	.align 2, 0
_080EF4E8: .4byte 0xFFFFFDC0
_080EF4EC:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080EF50C
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080EF50A
	b _080EF666
_080EF50A:
	b _080EF662
_080EF50C:
	ldr r4, _080EF514 @ =0xFFFFFE80
	adds r0, r2, r4
	b _080EF65A
	.align 2, 0
_080EF514: .4byte 0xFFFFFE80
_080EF518:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	ldr r4, [r5, #0x44]
	ldr r2, _080EF554 @ =0xFFFFFC00
	ands r4, r2
	movs r1, #0
	ldrsh r0, [r7, r1]
	asrs r1, r6, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	ble _080EF558
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa8
	lsls r2, r2, #1
	cmp r0, r2
	ble _080EF5A4
	strh r2, [r1]
	b _080EF5A4
	.align 2, 0
_080EF554: .4byte 0xFFFFFC00
_080EF558:
	cmp r4, r0
	bge _080EF578
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080EF574 @ =0xFFFFFEB0
	cmp r0, r2
	bge _080EF5A4
	strh r2, [r1]
	b _080EF5A4
	.align 2, 0
_080EF574: .4byte 0xFFFFFEB0
_080EF578:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080EF596
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080EF5A4
	b _080EF5A2
_080EF596:
	ldr r4, _080EF5E0 @ =0xFFFFFF00
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080EF5A4
_080EF5A2:
	strh r3, [r1]
_080EF5A4:
	ldr r4, [r5, #0x40]
	ldr r2, _080EF5E4 @ =0xFFFFFC00
	ands r4, r2
	adds r0, r5, #0
	adds r0, #0xa0
	movs r1, #0
	ldrsh r0, [r0, r1]
	mov r3, sl
	asrs r1, r3, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	bge _080EF5E8
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080EF630
	movs r0, #0xe0
	b _080EF664
	.align 2, 0
_080EF5E0: .4byte 0xFFFFFF00
_080EF5E4: .4byte 0xFFFFFC00
_080EF5E8:
	cmp r4, r0
	ble _080EF63A
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080EF61A
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	rsbs r2, r2, #0
	cmp r0, r2
	bge _080EF612
	b _080EF4C4
_080EF612:
	cmp r0, #0xe0
	ble _080EF666
	movs r0, #0xe0
	b _080EF664
_080EF61A:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080EF630
	movs r0, #0xe0
	b _080EF664
_080EF630:
	movs r2, #0xe0
	rsbs r2, r2, #0
_080EF634:
	cmp r0, r2
	bge _080EF666
	b _080EF4C4
_080EF63A:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080EF656
	adds r0, r2, #0
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080EF666
	b _080EF662
_080EF656:
	adds r0, r2, #0
	subs r0, #0x40
_080EF65A:
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080EF666
_080EF662:
	movs r0, #0
_080EF664:
	strh r0, [r1]
_080EF666:
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	mov r1, sb
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EF684
	adds r0, r5, #0
	bl sub_080EF6E4
	b _080EF6D6
_080EF684:
	mov r4, r8
	ldrb r0, [r4]
	cmp r0, #0x12
	bne _080EF6BA
	adds r1, r5, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080EF6D6
	movs r0, #0xa
	strb r0, [r4]
	adds r0, r5, #0
	adds r0, #0x85
	ldrb r2, [r0]
	adds r1, r0, #0
	cmp r2, #2
	beq _080EF6B0
	cmp r2, #0xc
	bne _080EF6B4
_080EF6B0:
	movs r0, #0xc
	strb r0, [r4]
_080EF6B4:
	movs r0, #0
	strb r0, [r1]
	b _080EF6D6
_080EF6BA:
	cmp r0, #0xc
	beq _080EF6D6
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EF6D6
	movs r0, #0xa
	mov r3, r8
	strb r0, [r3]
	adds r0, r5, #0
	bl sub_080EFC18
_080EF6D6:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080EF6E4
sub_080EF6E4: @ 0x080EF6E4
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r4, #0
	movs r7, #0
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _080EF702
	cmp r0, #0xc
	bne _080EF704
_080EF702:
	movs r7, #2
_080EF704:
	adds r6, r5, #0
	adds r6, #0x83
	ldrb r0, [r6]
	cmp r0, #0xb
	bne _080EF730
	movs r0, #1
	strb r0, [r6]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	movs r3, #8
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xc
	bl sub_080F3974
	movs r4, #1
_080EF730:
	ldr r2, _080EF75C @ =sub_080EF7D8
	adds r0, r5, #0
	movs r1, #0
	bl ObjectSetFunc
	cmp r4, #0
	beq _080EF742
	movs r0, #1
	strb r0, [r6]
_080EF742:
	cmp r7, #0
	beq _080EF748
	strb r7, [r6]
_080EF748:
	movs r0, #0xf8
	lsls r0, r0, #3
	strh r0, [r5, #0x24]
	ldr r0, [r5, #0x70]
	adds r0, #0xc4
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EF760
	movs r0, #8
	b _080EF7CE
	.align 2, 0
_080EF75C: .4byte sub_080EF7D8
_080EF760:
	ldr r2, _080EF784 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EF788 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EF78C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #7
	ands r1, r0
	cmp r1, #7
	bhi _080EF7D0
	lsls r0, r1, #2
	ldr r1, _080EF790 @ =_080EF794
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080EF784: .4byte gRngVal
_080EF788: .4byte 0x00196225
_080EF78C: .4byte 0x3C6EF35F
_080EF790: .4byte _080EF794
_080EF794: @ jump table
	.4byte _080EF7B4 @ case 0
	.4byte _080EF7B8 @ case 1
	.4byte _080EF7CC @ case 2
	.4byte _080EF7BC @ case 3
	.4byte _080EF7C0 @ case 4
	.4byte _080EF7C4 @ case 5
	.4byte _080EF7C8 @ case 6
	.4byte _080EF7CC @ case 7
_080EF7B4:
	movs r0, #0x78
	b _080EF7CE
_080EF7B8:
	movs r0, #0x5a
	b _080EF7CE
_080EF7BC:
	movs r0, #0x14
	b _080EF7CE
_080EF7C0:
	movs r0, #0x2d
	b _080EF7CE
_080EF7C4:
	movs r0, #0x5a
	b _080EF7CE
_080EF7C8:
	movs r0, #0x2d
	b _080EF7CE
_080EF7CC:
	movs r0, #0x3c
_080EF7CE:
	strh r0, [r5, #4]
_080EF7D0:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080EF7D8
sub_080EF7D8: @ 0x080EF7D8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r0, [r5, #0x70]
	mov sb, r0
	movs r2, #0xe4
	movs r1, #0xf4
	mov ip, r1
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r4, r5, #0
	adds r4, #0xa0
	strh r0, [r4]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r3, r5, #0
	adds r3, #0xa2
	strh r0, [r3]
	adds r6, r5, #0
	adds r6, #0x83
	ldrb r0, [r6]
	cmp r0, #2
	bne _080EF888
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r2, r2, #0x18
	asrs r0, r2, #0x18
	adds r1, r1, r0
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	subs r4, r1, r0
	mov sl, r2
	cmp r4, #0
	blt _080EF838
	cmp r4, #5
	ble _080EF846
	adds r7, r3, #0
	mov r8, r6
	mov r1, ip
	lsls r6, r1, #0x18
	b _080EF8E0
_080EF838:
	subs r0, r0, r1
	adds r7, r3, #0
	mov r8, r6
	mov r2, ip
	lsls r6, r2, #0x18
	cmp r0, #5
	bgt _080EF8E0
_080EF846:
	adds r3, r5, #0
	adds r3, #0xa2
	movs r4, #0
	ldrsh r1, [r3, r4]
	mov r0, ip
	lsls r2, r0, #0x18
	asrs r0, r2, #0x18
	adds r1, r1, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	subs r4, r1, r0
	adds r7, r3, #0
	adds r6, r2, #0
	cmp r4, #0
	blt _080EF870
	cmp r4, #5
	ble _080EF87C
	movs r1, #0x83
	adds r1, r1, r5
	mov r8, r1
	b _080EF8E0
_080EF870:
	subs r0, r0, r1
	movs r2, #0x83
	adds r2, r2, r5
	mov r8, r2
	cmp r0, #5
	bgt _080EF8E0
_080EF87C:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #0
	strb r0, [r1]
	mov r8, r1
	b _080EF8E0
_080EF888:
	cmp r0, #0
	bne _080EF8C4
	mov r0, sb
	adds r0, #0x83
	ldrb r0, [r0]
	adds r7, r3, #0
	mov r8, r6
	lsls r2, r2, #0x18
	mov sl, r2
	mov r3, ip
	lsls r6, r3, #0x18
	cmp r0, #1
	bne _080EF8E0
	mov r4, r8
	strb r0, [r4]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	movs r3, #8
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xc
	bl sub_080F3974
	b _080EF8E0
_080EF8C4:
	mov r0, sb
	adds r0, #0x83
	ldrb r0, [r0]
	adds r7, r3, #0
	mov r8, r6
	lsls r2, r2, #0x18
	mov sl, r2
	mov r1, ip
	lsls r6, r1, #0x18
	cmp r0, #3
	bne _080EF8E0
	movs r0, #0
	mov r2, r8
	strb r0, [r2]
_080EF8E0:
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	mov r3, r8
	ldrb r0, [r3]
	cmp r0, #2
	beq _080EF8F6
	cmp r0, #0xc
	beq _080EF8F6
	b _080EFA50
_080EF8F6:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	ldr r4, [r5, #0x44]
	ldr r2, _080EF934 @ =0xFFFFFC00
	ands r4, r2
	movs r1, #0
	ldrsh r0, [r7, r1]
	asrs r1, r6, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	ble _080EF938
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080EF982
	strh r2, [r1]
	b _080EF982
	.align 2, 0
_080EF934: .4byte 0xFFFFFC00
_080EF938:
	cmp r4, r0
	bge _080EF958
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080EF954 @ =0xFFFFFE40
	cmp r0, r2
	bge _080EF982
	strh r2, [r1]
	b _080EF982
	.align 2, 0
_080EF954: .4byte 0xFFFFFE40
_080EF958:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080EF974
	adds r0, r2, #0
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080EF982
	b _080EF980
_080EF974:
	adds r0, r2, #0
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080EF982
_080EF980:
	strh r3, [r1]
_080EF982:
	ldr r4, [r5, #0x40]
	ldr r2, _080EF9C4 @ =0xFFFFFC00
	ands r4, r2
	adds r0, r5, #0
	adds r0, #0xa0
	movs r1, #0
	ldrsh r0, [r0, r1]
	mov r3, sl
	asrs r1, r3, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	bge _080EF9CC
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080EF9FC
	ldr r2, _080EF9C8 @ =0xFFFFFDC0
	b _080EFB6C
	.align 2, 0
_080EF9C4: .4byte 0xFFFFFC00
_080EF9C8: .4byte 0xFFFFFDC0
_080EF9CC:
	cmp r4, r0
	ble _080EFA24
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080EFA04
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080EFA00 @ =0xFFFFFDC0
	cmp r0, r2
	blt _080EF9FC
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080EF9FC
	b _080EFB9E
_080EF9FC:
	strh r2, [r1]
	b _080EFB9E
	.align 2, 0
_080EFA00: .4byte 0xFFFFFDC0
_080EFA04:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080EF9FC
	ldr r2, _080EFA20 @ =0xFFFFFDC0
	b _080EFB6C
	.align 2, 0
_080EFA20: .4byte 0xFFFFFDC0
_080EFA24:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080EFA44
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080EFA42
	b _080EFB9E
_080EFA42:
	b _080EFB9A
_080EFA44:
	ldr r4, _080EFA4C @ =0xFFFFFE80
	adds r0, r2, r4
	b _080EFB92
	.align 2, 0
_080EFA4C: .4byte 0xFFFFFE80
_080EFA50:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	ldr r4, [r5, #0x44]
	ldr r2, _080EFA8C @ =0xFFFFFC00
	ands r4, r2
	movs r1, #0
	ldrsh r0, [r7, r1]
	asrs r1, r6, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	ble _080EFA90
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa8
	lsls r2, r2, #1
	cmp r0, r2
	ble _080EFADC
	strh r2, [r1]
	b _080EFADC
	.align 2, 0
_080EFA8C: .4byte 0xFFFFFC00
_080EFA90:
	cmp r4, r0
	bge _080EFAB0
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080EFAAC @ =0xFFFFFEB0
	cmp r0, r2
	bge _080EFADC
	strh r2, [r1]
	b _080EFADC
	.align 2, 0
_080EFAAC: .4byte 0xFFFFFEB0
_080EFAB0:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080EFACE
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080EFADC
	b _080EFADA
_080EFACE:
	ldr r4, _080EFB18 @ =0xFFFFFF00
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080EFADC
_080EFADA:
	strh r3, [r1]
_080EFADC:
	ldr r4, [r5, #0x40]
	ldr r2, _080EFB1C @ =0xFFFFFC00
	ands r4, r2
	adds r0, r5, #0
	adds r0, #0xa0
	movs r1, #0
	ldrsh r0, [r0, r1]
	mov r3, sl
	asrs r1, r3, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	bge _080EFB20
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080EFB68
	movs r0, #0xe0
	b _080EFB9C
	.align 2, 0
_080EFB18: .4byte 0xFFFFFF00
_080EFB1C: .4byte 0xFFFFFC00
_080EFB20:
	cmp r4, r0
	ble _080EFB72
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080EFB52
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	rsbs r2, r2, #0
	cmp r0, r2
	bge _080EFB4A
	b _080EF9FC
_080EFB4A:
	cmp r0, #0xe0
	ble _080EFB9E
	movs r0, #0xe0
	b _080EFB9C
_080EFB52:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080EFB68
	movs r0, #0xe0
	b _080EFB9C
_080EFB68:
	movs r2, #0xe0
	rsbs r2, r2, #0
_080EFB6C:
	cmp r0, r2
	bge _080EFB9E
	b _080EF9FC
_080EFB72:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080EFB8E
	adds r0, r2, #0
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080EFB9E
	b _080EFB9A
_080EFB8E:
	adds r0, r2, #0
	subs r0, #0x40
_080EFB92:
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080EFB9E
_080EFB9A:
	movs r0, #0
_080EFB9C:
	strh r0, [r1]
_080EFB9E:
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	mov r2, sb
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	bne _080EFBB8
	adds r0, r5, #0
	bl sub_080EF1A8
	b _080EFC0A
_080EFBB8:
	mov r4, r8
	ldrb r0, [r4]
	cmp r0, #8
	bne _080EFBEE
	adds r1, r5, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080EFC0A
	strb r0, [r4]
	adds r0, r5, #0
	adds r0, #0x85
	ldrb r2, [r0]
	adds r1, r0, #0
	cmp r2, #2
	beq _080EFBE4
	cmp r2, #0xc
	bne _080EFBE8
_080EFBE4:
	movs r0, #2
	strb r0, [r4]
_080EFBE8:
	movs r0, #0
	strb r0, [r1]
	b _080EFC0A
_080EFBEE:
	cmp r0, #2
	beq _080EFC0A
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080EFC0A
	movs r0, #0
	mov r3, r8
	strb r0, [r3]
	adds r0, r5, #0
	bl sub_080EFC18
_080EFC0A:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080EFC18
sub_080EFC18: @ 0x080EFC18
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r3, [r5, #0x70]
	adds r0, r3, #0
	adds r0, #0xc4
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EFCFA
	adds r0, r3, #0
	adds r0, #0xb4
	ldr r2, [r0]
	adds r1, r2, #0
	adds r1, #0x83
	ldrb r1, [r1]
	adds r4, r0, #0
	cmp r1, #1
	bls _080EFC46
	adds r0, r1, #0
	subs r0, #0xa
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080EFC4E
_080EFC46:
	movs r1, #4
	ldrsh r0, [r2, r1]
	cmp r0, #1
	ble _080EFC58
_080EFC4E:
	ldr r0, [r4]
	ldr r1, [r0, #0x78]
	ldr r0, _080EFCF0 @ =sub_080F05CC
	cmp r1, r0
	bne _080EFCF4
_080EFC58:
	adds r0, r3, #0
	adds r0, #0xb8
	ldr r2, [r0]
	adds r1, r2, #0
	adds r1, #0x83
	ldrb r1, [r1]
	adds r4, r0, #0
	cmp r1, #1
	bls _080EFC76
	adds r0, r1, #0
	subs r0, #0xa
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080EFC7E
_080EFC76:
	movs r1, #4
	ldrsh r0, [r2, r1]
	cmp r0, #1
	ble _080EFC88
_080EFC7E:
	ldr r0, [r4]
	ldr r1, [r0, #0x78]
	ldr r0, _080EFCF0 @ =sub_080F05CC
	cmp r1, r0
	bne _080EFCF4
_080EFC88:
	adds r0, r3, #0
	adds r0, #0xbc
	ldr r2, [r0]
	adds r1, r2, #0
	adds r1, #0x83
	ldrb r1, [r1]
	adds r4, r0, #0
	cmp r1, #1
	bls _080EFCA6
	adds r0, r1, #0
	subs r0, #0xa
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080EFCAE
_080EFCA6:
	movs r1, #4
	ldrsh r0, [r2, r1]
	cmp r0, #1
	ble _080EFCB8
_080EFCAE:
	ldr r0, [r4]
	ldr r1, [r0, #0x78]
	ldr r0, _080EFCF0 @ =sub_080F05CC
	cmp r1, r0
	bne _080EFCF4
_080EFCB8:
	adds r0, r3, #0
	adds r0, #0xc0
	ldr r2, [r0]
	adds r1, r2, #0
	adds r1, #0x83
	ldrb r1, [r1]
	adds r3, r0, #0
	cmp r1, #1
	bls _080EFCD6
	adds r0, r1, #0
	subs r0, #0xa
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080EFCDE
_080EFCD6:
	movs r1, #4
	ldrsh r0, [r2, r1]
	cmp r0, #1
	ble _080EFCE8
_080EFCDE:
	ldr r0, [r3]
	ldr r1, [r0, #0x78]
	ldr r0, _080EFCF0 @ =sub_080F05CC
	cmp r1, r0
	bne _080EFCF4
_080EFCE8:
	adds r0, r5, #0
	bl sub_080F0554
	b _080EFD46
	.align 2, 0
_080EFCF0: .4byte sub_080F05CC
_080EFCF4:
	movs r0, #1
	strh r0, [r5, #4]
	b _080EFD46
_080EFCFA:
	ldr r2, _080EFD2C @ =gRngVal
	ldr r0, [r2]
	ldr r4, _080EFD30 @ =0x00196225
	muls r0, r4, r0
	ldr r3, _080EFD34 @ =0x3C6EF35F
	adds r1, r0, r3
	str r1, [r2]
	lsrs r0, r1, #0x10
	movs r3, #1
	ands r0, r3
	cmp r0, #0
	beq _080EFD40
	adds r0, r1, #0
	muls r0, r4, r0
	ldr r1, _080EFD34 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	ands r0, r3
	cmp r0, #0
	beq _080EFD38
	adds r0, r5, #0
	bl sub_080F0410
	b _080EFD46
	.align 2, 0
_080EFD2C: .4byte gRngVal
_080EFD30: .4byte 0x00196225
_080EFD34: .4byte 0x3C6EF35F
_080EFD38:
	adds r0, r5, #0
	bl sub_080F0CAC
	b _080EFD46
_080EFD40:
	adds r0, r5, #0
	bl sub_080EFD4C
_080EFD46:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080EFD4C
sub_080EFD4C: @ 0x080EFD4C
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080EFD7C @ =sub_080EFE9C
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x85
	strb r0, [r1]
	ldrb r0, [r2]
	cmp r0, #9
	bls _080EFD80
	movs r0, #0xd
	b _080EFD82
	.align 2, 0
_080EFD7C: .4byte sub_080EFE9C
_080EFD80:
	movs r0, #3
_080EFD82:
	strb r0, [r2]
	ldr r2, _080EFDB4 @ =gUnk_08351648
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x14
	adds r0, r0, r2
	adds r1, r4, #0
	adds r1, #0x83
	ldrb r1, [r1]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrb r0, [r1, #2]
	cmp r0, #0x25
	beq _080EFDD2
	cmp r0, #0x25
	bgt _080EFDB8
	cmp r0, #0x24
	beq _080EFDC2
	b _080EFE00
	.align 2, 0
_080EFDB4: .4byte gUnk_08351648
_080EFDB8:
	cmp r0, #0x26
	beq _080EFDE2
	cmp r0, #0x27
	beq _080EFDF2
	b _080EFE00
_080EFDC2:
	movs r2, #0xcf
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0x10
	movs r3, #0x28
	bl sub_080F3974
	b _080EFE00
_080EFDD2:
	movs r2, #0xcf
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0x10
	movs r3, #0x29
	bl sub_080F3974
	b _080EFE00
_080EFDE2:
	movs r2, #0xcf
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0x10
	movs r3, #0x2a
	bl sub_080F3974
	b _080EFE00
_080EFDF2:
	movs r2, #0xcf
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0x10
	movs r3, #0x2b
	bl sub_080F3974
_080EFE00:
	ldr r0, [r4, #8]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	ldr r1, _080EFE8C @ =0xFFFFFDFF
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #0
	movs r0, #0x18
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r1, [r0]
	movs r0, #0x2a
	adds r0, r0, r4
	mov ip, r0
	ldrb r3, [r0]
	cmp r3, #1
	bne _080EFE42
	ldr r2, _080EFE90 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EFE94 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EFE98 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	ands r0, r3
	adds r1, r4, #0
	adds r1, #0x9e
	strb r0, [r1]
_080EFE42:
	mov r1, ip
	ldrb r0, [r1]
	cmp r0, #2
	bne _080EFE66
	ldr r2, _080EFE90 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080EFE94 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080EFE98 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	adds r0, #2
	adds r1, r4, #0
	adds r1, #0x9e
	strb r0, [r1]
_080EFE66:
	mov r1, ip
	ldrb r0, [r1]
	cmp r0, #3
	bne _080EFE76
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #4
	strb r0, [r1]
_080EFE76:
	mov r1, ip
	ldrb r0, [r1]
	cmp r0, #4
	bne _080EFE86
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #5
	strb r0, [r1]
_080EFE86:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080EFE8C: .4byte 0xFFFFFDFF
_080EFE90: .4byte gRngVal
_080EFE94: .4byte 0x00196225
_080EFE98: .4byte 0x3C6EF35F

	thumb_func_start sub_080EFE9C
sub_080EFE9C: @ 0x080EFE9C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080EFF84
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0x54
	ldr r0, _080EFF60 @ =gUnk_0203AD40
	ldr r1, [r0]
	movs r0, #2
	ands r1, r0
	lsls r1, r1, #1
	ldrb r0, [r2]
	adds r0, r0, r1
	strb r0, [r2]
	adds r2, #1
	ldrb r0, [r2]
	adds r0, r0, r1
	strb r0, [r2]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080EFEEC
	b _080F03FE
_080EFEEC:
	ldr r1, _080EFF64 @ =gUnk_02020EE0
	ldr r0, _080EFF68 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _080EFF0A
	b _080F03FE
_080EFF0A:
	ldrb r0, [r4]
	cmp r0, #0
	bne _080EFF1C
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	beq _080EFF1C
	b _080F03FE
_080EFF1C:
	ldr r1, _080EFF6C @ =gUnk_08D60FA4
	ldr r4, _080EFF70 @ =gSongTable
	ldr r2, _080EFF74 @ =0x00000C6C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080EFF42
	ldr r1, _080EFF78 @ =0x00000C68
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bls _080EFF42
	b _080F03FE
_080EFF42:
	cmp r3, #0
	beq _080EFF56
	ldr r0, _080EFF7C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EFF56
	b _080F03FE
_080EFF56:
	ldr r0, _080EFF80 @ =0x0000018D
	bl m4aSongNumStart
	b _080F03FE
	.align 2, 0
_080EFF60: .4byte gUnk_0203AD40
_080EFF64: .4byte gUnk_02020EE0
_080EFF68: .4byte gUnk_0203AD3C
_080EFF6C: .4byte gUnk_08D60FA4
_080EFF70: .4byte gSongTable
_080EFF74: .4byte 0x00000C6C
_080EFF78: .4byte 0x00000C68
_080EFF7C: .4byte gUnk_0203AD10
_080EFF80: .4byte 0x0000018D
_080EFF84:
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #5
	bls _080EFF90
	b _080F028E
_080EFF90:
	lsls r0, r0, #2
	ldr r1, _080EFF9C @ =_080EFFA0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080EFF9C: .4byte _080EFFA0
_080EFFA0: @ jump table
	.4byte _080EFFB8 @ case 0
	.4byte _080F0034 @ case 1
	.4byte _080F00A8 @ case 2
	.4byte _080F0128 @ case 3
	.4byte _080F01A8 @ case 4
	.4byte _080F0220 @ case 5
_080EFFB8:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080EFFF4
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080EFFDC @ =0xFFFFFD9E
	cmp r2, r0
	bge _080EFFE4
	ldr r0, _080EFFE0 @ =0x0000FD9E
	strh r0, [r1]
	b _080F0010
	.align 2, 0
_080EFFDC: .4byte 0xFFFFFD9E
_080EFFE0: .4byte 0x0000FD9E
_080EFFE4:
	ldr r0, _080EFFF0 @ =0x00000262
	cmp r2, r0
	ble _080F0010
	strh r0, [r1]
	b _080F0010
	.align 2, 0
_080EFFF0: .4byte 0x00000262
_080EFFF4:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F002C @ =0x00000262
	cmp r0, r2
	bgt _080F000E
	ldr r2, _080F0030 @ =0xFFFFFD9E
	cmp r0, r2
	bge _080F0010
_080F000E:
	strh r2, [r1]
_080F0010:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x94
	bgt _080F0024
	b _080F028E
_080F0024:
	movs r0, #0x94
	strh r0, [r1]
	b _080F028E
	.align 2, 0
_080F002C: .4byte 0x00000262
_080F0030: .4byte 0xFFFFFD9E
_080F0034:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F0070
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080F0058 @ =0xFFFFFD17
	cmp r2, r0
	bge _080F0060
	ldr r0, _080F005C @ =0x0000FD17
	strh r0, [r1]
	b _080F008C
	.align 2, 0
_080F0058: .4byte 0xFFFFFD17
_080F005C: .4byte 0x0000FD17
_080F0060:
	ldr r0, _080F006C @ =0x000002E9
	cmp r2, r0
	ble _080F008C
	strh r0, [r1]
	b _080F008C
	.align 2, 0
_080F006C: .4byte 0x000002E9
_080F0070:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F00A0 @ =0x000002E9
	cmp r0, r2
	bgt _080F008A
	ldr r2, _080F00A4 @ =0xFFFFFD17
	cmp r0, r2
	bge _080F008C
_080F008A:
	strh r2, [r1]
_080F008C:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xd8
	lsls r2, r2, #1
	b _080F0210
	.align 2, 0
_080F00A0: .4byte 0x000002E9
_080F00A4: .4byte 0xFFFFFD17
_080F00A8:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F00E4
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080F00CC @ =0xFFFFFCAE
	cmp r2, r0
	bge _080F00D4
	ldr r0, _080F00D0 @ =0x0000FCAE
	strh r0, [r1]
	b _080F0100
	.align 2, 0
_080F00CC: .4byte 0xFFFFFCAE
_080F00D0: .4byte 0x0000FCAE
_080F00D4:
	ldr r0, _080F00E0 @ =0x00000352
	cmp r2, r0
	ble _080F0100
	strh r0, [r1]
	b _080F0100
	.align 2, 0
_080F00E0: .4byte 0x00000352
_080F00E4:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F0118 @ =0x00000352
	cmp r0, r2
	bgt _080F00FE
	ldr r2, _080F011C @ =0xFFFFFCAE
	cmp r0, r2
	bge _080F0100
_080F00FE:
	strh r2, [r1]
_080F0100:
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	adds r0, #0x18
	strh r0, [r2]
	lsls r0, r0, #0x10
	ldr r1, _080F0120 @ =0xFF6D0000
	cmp r0, r1
	bge _080F0114
	b _080F028E
_080F0114:
	ldr r0, _080F0124 @ =0x0000FF6C
	b _080F028C
	.align 2, 0
_080F0118: .4byte 0x00000352
_080F011C: .4byte 0xFFFFFCAE
_080F0120: .4byte 0xFF6D0000
_080F0124: .4byte 0x0000FF6C
_080F0128:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F0164
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080F014C @ =0xFFFFFCBF
	cmp r2, r0
	bge _080F0154
	ldr r0, _080F0150 @ =0x0000FCBF
	strh r0, [r1]
	b _080F0180
	.align 2, 0
_080F014C: .4byte 0xFFFFFCBF
_080F0150: .4byte 0x0000FCBF
_080F0154:
	ldr r0, _080F0160 @ =0x00000341
	cmp r2, r0
	ble _080F0180
	strh r0, [r1]
	b _080F0180
	.align 2, 0
_080F0160: .4byte 0x00000341
_080F0164:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F0198 @ =0x00000341
	cmp r0, r2
	bgt _080F017E
	ldr r2, _080F019C @ =0xFFFFFCBF
	cmp r0, r2
	bge _080F0180
_080F017E:
	strh r2, [r1]
_080F0180:
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	adds r0, #0x18
	strh r0, [r2]
	lsls r0, r0, #0x10
	ldr r1, _080F01A0 @ =0xFF230000
	cmp r0, r1
	bge _080F0194
	b _080F028E
_080F0194:
	ldr r0, _080F01A4 @ =0x0000FF22
	b _080F028C
	.align 2, 0
_080F0198: .4byte 0x00000341
_080F019C: .4byte 0xFFFFFCBF
_080F01A0: .4byte 0xFF230000
_080F01A4: .4byte 0x0000FF22
_080F01A8:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F01E4
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080F01CC @ =0xFFFFFD9E
	cmp r2, r0
	bge _080F01D4
	ldr r0, _080F01D0 @ =0x0000FD9E
	strh r0, [r1]
	b _080F0200
	.align 2, 0
_080F01CC: .4byte 0xFFFFFD9E
_080F01D0: .4byte 0x0000FD9E
_080F01D4:
	ldr r0, _080F01E0 @ =0x00000262
	cmp r2, r0
	ble _080F0200
	strh r0, [r1]
	b _080F0200
	.align 2, 0
_080F01E0: .4byte 0x00000262
_080F01E4:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F0218 @ =0x00000262
	cmp r0, r2
	bgt _080F01FE
	ldr r2, _080F021C @ =0xFFFFFD9E
	cmp r0, r2
	bge _080F0200
_080F01FE:
	strh r2, [r1]
_080F0200:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F0218 @ =0x00000262
_080F0210:
	cmp r0, r2
	ble _080F028E
	strh r2, [r1]
	b _080F028E
	.align 2, 0
_080F0218: .4byte 0x00000262
_080F021C: .4byte 0xFFFFFD9E
_080F0220:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F025C
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080F0244 @ =0xFFFFFCD6
	cmp r2, r0
	bge _080F024C
	ldr r0, _080F0248 @ =0x0000FCD6
	strh r0, [r1]
	b _080F0278
	.align 2, 0
_080F0244: .4byte 0xFFFFFCD6
_080F0248: .4byte 0x0000FCD6
_080F024C:
	ldr r0, _080F0258 @ =0x0000032A
	cmp r2, r0
	ble _080F0278
	strh r0, [r1]
	b _080F0278
	.align 2, 0
_080F0258: .4byte 0x0000032A
_080F025C:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F0360 @ =0x0000032A
	cmp r0, r2
	bgt _080F0276
	ldr r2, _080F0364 @ =0xFFFFFCD6
	cmp r0, r2
	bge _080F0278
_080F0276:
	strh r2, [r1]
_080F0278:
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	adds r0, #0x18
	strh r0, [r2]
	lsls r0, r0, #0x10
	ldr r1, _080F0368 @ =0xFF120000
	cmp r0, r1
	blt _080F028E
	ldr r0, _080F036C @ =0x0000FF11
_080F028C:
	strh r0, [r2]
_080F028E:
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #0xd
	ands r0, r1
	adds r7, r2, #0
	cmp r0, #0
	bne _080F02A0
	b _080F03FE
_080F02A0:
	ldr r2, [r4, #0x70]
	mov r8, r2
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #0x4d
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	bne _080F03B2
	subs r0, #0x1a
	ldrb r0, [r0]
	adds r0, #2
	adds r1, r4, #0
	adds r1, #0x83
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #1
	adds r1, r4, #0
	bl sub_0806FE64
	ldr r1, _080F0370 @ =gUnk_02020EE0
	ldr r0, _080F0374 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F0344
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F0304
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F0344
_080F0304:
	ldr r1, _080F0378 @ =gUnk_08D60FA4
	ldr r5, _080F037C @ =gSongTable
	ldr r2, _080F0380 @ =0x00000C74
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F032A
	movs r1, #0xc7
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F0344
_080F032A:
	cmp r3, #0
	beq _080F033C
	ldr r0, _080F0384 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F0344
_080F033C:
	movs r0, #0xc7
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F0344:
	ldrb r2, [r7]
	movs r1, #3
	ands r1, r2
	cmp r1, #0
	beq _080F0388
	movs r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x10
	movs r3, #3
	bl sub_080A8D18
	b _080F03B2
	.align 2, 0
_080F0360: .4byte 0x0000032A
_080F0364: .4byte 0xFFFFFCD6
_080F0368: .4byte 0xFF120000
_080F036C: .4byte 0x0000FF11
_080F0370: .4byte gUnk_02020EE0
_080F0374: .4byte gUnk_0203AD3C
_080F0378: .4byte gUnk_08D60FA4
_080F037C: .4byte gSongTable
_080F0380: .4byte 0x00000C74
_080F0384: .4byte gUnk_0203AD10
_080F0388:
	movs r0, #8
	ands r0, r2
	cmp r0, #0
	beq _080F03A0
	str r1, [sp]
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #0
	movs r3, #1
	bl sub_080A8D18
	b _080F03B2
_080F03A0:
	movs r0, #4
	ands r0, r2
	cmp r0, #0
	beq _080F03B2
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #0
	bl sub_080A8C28
_080F03B2:
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x18
	bls _080F03FE
	mov r2, r8
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F03E8
	ldr r0, _080F03E4 @ =gUnk_08357018
	adds r1, r4, #0
	adds r1, #0x82
	ldrb r1, [r1]
	subs r1, #0xbc
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r1, [r1]
	adds r0, r4, #0
	bl _call_via_r1
	b _080F03FE
	.align 2, 0
_080F03E4: .4byte gUnk_08357018
_080F03E8:
	ldr r0, _080F040C @ =gUnk_08357028
	adds r1, r4, #0
	adds r1, #0x82
	ldrb r1, [r1]
	subs r1, #0xbc
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r1, [r1]
	adds r0, r4, #0
	bl _call_via_r1
_080F03FE:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F040C: .4byte gUnk_08357028

	thumb_func_start sub_080F0410
sub_080F0410: @ 0x080F0410
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080F0440 @ =sub_080F0474
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x85
	strb r0, [r1]
	ldrb r0, [r2]
	cmp r0, #9
	bls _080F0444
	movs r0, #0xe
	b _080F0446
	.align 2, 0
_080F0440: .4byte sub_080F0474
_080F0444:
	movs r0, #4
_080F0446:
	strb r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #0
	movs r0, #4
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r1, [r0]
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080F0474
sub_080F0474: @ 0x080F0474
	push {r4, r5, lr}
	adds r3, r0, #0
	ldr r2, [r3, #8]
	movs r0, #4
	orrs r2, r0
	str r2, [r3, #8]
	adds r0, r3, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r3, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080F0494
	movs r0, #1
	orrs r2, r0
	b _080F049A
_080F0494:
	movs r0, #2
	rsbs r0, r0, #0
	ands r2, r0
_080F049A:
	str r2, [r3, #8]
	ldr r0, [r3, #0x44]
	movs r1, #0xc0
	lsls r1, r1, #3
	adds r2, r0, r1
	adds r1, r3, #0
	adds r1, #0xac
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	adds r4, r1, #0
	cmp r2, r0
	ble _080F04CC
	adds r2, r3, #0
	adds r2, #0x52
	ldrh r0, [r2]
	adds r0, #0x10
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xc0
	lsls r1, r1, #1
	cmp r0, r1
	ble _080F0518
	strh r1, [r2]
	b _080F0518
_080F04CC:
	cmp r2, r0
	bge _080F04EC
	adds r2, r3, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x10
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _080F04E8 @ =0xFFFFFE80
	cmp r0, r1
	bge _080F0518
	strh r1, [r2]
	b _080F0518
	.align 2, 0
_080F04E8: .4byte 0xFFFFFE80
_080F04EC:
	adds r2, r3, #0
	adds r2, #0x52
	ldrh r1, [r2]
	movs r5, #0
	ldrsh r0, [r2, r5]
	cmp r0, #0
	bge _080F0508
	adds r0, r1, #0
	adds r0, #0x20
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F0518
	b _080F0514
_080F0508:
	adds r0, r1, #0
	subs r0, #0x20
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F0518
_080F0514:
	movs r0, #0
	strh r0, [r2]
_080F0518:
	ldr r0, [r4]
	ldr r0, [r0, #0x44]
	ldr r1, [r3, #0x44]
	subs r2, r0, r1
	cmp r2, #0
	blt _080F0530
	ldr r0, _080F052C @ =0x000007FF
	cmp r2, r0
	ble _080F0538
	b _080F054A
	.align 2, 0
_080F052C: .4byte 0x000007FF
_080F0530:
	subs r1, r1, r0
	ldr r0, _080F0550 @ =0x000007FF
	cmp r1, r0
	bgt _080F054A
_080F0538:
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F054A
	adds r0, r3, #0
	bl sub_080F097C
_080F054A:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080F0550: .4byte 0x000007FF

	thumb_func_start sub_080F0554
sub_080F0554: @ 0x080F0554
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080F0588 @ =sub_080F05CC
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x85
	strb r0, [r1]
	ldrb r0, [r2]
	cmp r0, #9
	bls _080F058C
	movs r0, #0xe
	b _080F058E
	.align 2, 0
_080F0588: .4byte sub_080F05CC
_080F058C:
	movs r0, #4
_080F058E:
	strb r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x42
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, [r5, #8]
	movs r2, #1
	ands r1, r2
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #0
	movs r0, #0x20
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r1, [r0]
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F05CC
sub_080F05CC: @ 0x080F05CC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r0, [r5, #0x70]
	mov r8, r0
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	mov r1, r8
	adds r1, #0xc4
	ldrb r0, [r1]
	cmp r0, #0
	bne _080F05F0
	b _080F0880
_080F05F0:
	cmp r0, #3
	beq _080F0690
	cmp r0, #3
	bgt _080F05FE
	cmp r0, #2
	beq _080F0640
	b _080F0602
_080F05FE:
	cmp r0, #4
	beq _080F06D4
_080F0602:
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0xbd
	beq _080F0630
	cmp r0, #0xbd
	ble _080F0618
	cmp r0, #0xbe
	beq _080F061E
	cmp r0, #0xbf
	beq _080F0624
_080F0618:
	movs r6, #0x20
	movs r4, #0x28
	b _080F0666
_080F061E:
	movs r6, #0x30
	movs r4, #0x16
	b _080F0672
_080F0624:
	movs r6, #0x30
	ldr r4, _080F062C @ =0x0000FFEA
	b _080F0684
	.align 2, 0
_080F062C: .4byte 0x0000FFEA
_080F0630:
	movs r6, #0x20
	ldr r4, _080F063C @ =0x0000FFD8
	movs r7, #0xa2
	adds r7, r7, r5
	mov ip, r7
	b _080F0710
	.align 2, 0
_080F063C: .4byte 0x0000FFD8
_080F0640:
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0xbd
	beq _080F0680
	cmp r0, #0xbd
	ble _080F0656
	cmp r0, #0xbe
	beq _080F0662
	cmp r0, #0xbf
	beq _080F066E
_080F0656:
	movs r6, #0x20
	movs r4, #0x30
	movs r0, #0xa2
	adds r0, r0, r5
	mov ip, r0
	b _080F0710
_080F0662:
	movs r6, #0x30
	movs r4, #8
_080F0666:
	movs r1, #0xa2
	adds r1, r1, r5
	mov ip, r1
	b _080F0710
_080F066E:
	movs r6, #0x30
	ldr r4, _080F067C @ =0x0000FFF8
_080F0672:
	movs r2, #0xa2
	adds r2, r2, r5
	mov ip, r2
	b _080F0710
	.align 2, 0
_080F067C: .4byte 0x0000FFF8
_080F0680:
	movs r6, #0x20
	ldr r4, _080F068C @ =0x0000FFD0
_080F0684:
	movs r3, #0xa2
	adds r3, r3, r5
	mov ip, r3
	b _080F0710
	.align 2, 0
_080F068C: .4byte 0x0000FFD0
_080F0690:
	adds r1, r5, #0
	adds r1, #0xa2
	movs r0, #0x58
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r0, [r0]
	mov ip, r1
	cmp r0, #0xbd
	beq _080F06C8
	cmp r0, #0xbd
	ble _080F06B0
	cmp r0, #0xbe
	beq _080F06B6
	cmp r0, #0xbf
	beq _080F06BC
_080F06B0:
	movs r6, #0x20
	movs r4, #0x3c
	b _080F0710
_080F06B6:
	movs r6, #0x20
	movs r4, #0x18
	b _080F0710
_080F06BC:
	movs r6, #0x20
	ldr r4, _080F06C4 @ =0x0000FFE8
	b _080F0710
	.align 2, 0
_080F06C4: .4byte 0x0000FFE8
_080F06C8:
	movs r6, #0x20
	ldr r4, _080F06D0 @ =0x0000FFC4
	b _080F0710
	.align 2, 0
_080F06D0: .4byte 0x0000FFC4
_080F06D4:
	adds r1, r5, #0
	adds r1, #0xa2
	movs r0, #0x58
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r0, [r0]
	mov ip, r1
	cmp r0, #0xbd
	beq _080F070C
	cmp r0, #0xbd
	ble _080F06F4
	cmp r0, #0xbe
	beq _080F06FA
	cmp r0, #0xbf
	beq _080F0700
_080F06F4:
	movs r6, #0x10
	movs r4, #0x14
	b _080F0710
_080F06FA:
	movs r6, #0x10
	movs r4, #0x30
	b _080F0710
_080F0700:
	movs r6, #0x10
	ldr r4, _080F0708 @ =0x0000FFD0
	b _080F0710
	.align 2, 0
_080F0708: .4byte 0x0000FFD0
_080F070C:
	movs r6, #0x10
	ldr r4, _080F0764 @ =0x0000FFEC
_080F0710:
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F0720
	lsls r0, r6, #0x10
	rsbs r0, r0, #0
	lsrs r6, r0, #0x10
_080F0720:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r7, #0
	mov sb, r7
	strb r0, [r1]
	ldr r3, [r5, #0x44]
	ldr r2, _080F0768 @ =0xFFFFFC00
	ands r3, r2
	mov r0, ip
	movs r7, #0
	ldrsh r1, [r0, r7]
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r1, #8
	ands r0, r2
	cmp r3, r0
	ble _080F076C
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #2
	cmp r0, r2
	ble _080F07BE
	strh r2, [r1]
	b _080F07BE
	.align 2, 0
_080F0764: .4byte 0x0000FFEC
_080F0768: .4byte 0xFFFFFC00
_080F076C:
	cmp r3, r0
	bge _080F078C
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F0788 @ =0xFFFFFD80
	cmp r0, r2
	bge _080F07BE
	strh r2, [r1]
	b _080F07BE
	.align 2, 0
_080F0788: .4byte 0xFFFFFD80
_080F078C:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F07AE
	movs r4, #0xc0
	lsls r4, r4, #1
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F07BE
	mov r7, sb
	strh r7, [r1]
	b _080F07BE
_080F07AE:
	ldr r3, _080F07E8 @ =0xFFFFFE80
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F07BE
	mov r4, sb
	strh r4, [r1]
_080F07BE:
	ldr r3, [r5, #0x40]
	ldr r2, _080F07EC @ =0xFFFFFC00
	ands r3, r2
	adds r0, r5, #0
	adds r0, #0xa0
	movs r7, #0
	ldrsh r1, [r0, r7]
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r1, #8
	ands r0, r2
	cmp r3, r0
	bge _080F07F0
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	b _080F0828
	.align 2, 0
_080F07E8: .4byte 0xFFFFFE80
_080F07EC: .4byte 0xFFFFFC00
_080F07F0:
	cmp r3, r0
	ble _080F084C
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F0828
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F0824 @ =0xFFFFFD80
	cmp r0, r2
	blt _080F081E
	movs r2, #0xa0
	lsls r2, r2, #2
	cmp r0, r2
	ble _080F0882
_080F081E:
	strh r2, [r1]
	b _080F0882
	.align 2, 0
_080F0824: .4byte 0xFFFFFD80
_080F0828:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F081E
	ldr r2, _080F0848 @ =0xFFFFFD80
	cmp r0, r2
	bge _080F0882
	b _080F081E
	.align 2, 0
_080F0848: .4byte 0xFFFFFD80
_080F084C:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F086A
	movs r4, #0xc0
	lsls r4, r4, #1
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F0882
	b _080F0876
_080F086A:
	ldr r7, _080F087C @ =0xFFFFFE80
	adds r0, r2, r7
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F0882
_080F0876:
	movs r0, #0
	strh r0, [r1]
	b _080F0882
	.align 2, 0
_080F087C: .4byte 0xFFFFFE80
_080F0880:
	strh r0, [r5, #4]
_080F0882:
	ldrh r3, [r5, #4]
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bne _080F0932
	mov r0, r8
	adds r0, #0xc4
	ldrb r1, [r0]
	mov sl, r0
	cmp r1, #0
	beq _080F0928
	ldr r3, [r5, #8]
	movs r2, #1
	mov sb, r2
	ands r3, r2
	mov r4, r8
	adds r4, #0xb4
	ldr r1, [r4]
	ldr r0, [r1, #8]
	subs r2, #3
	ands r0, r2
	str r0, [r1, #8]
	mov r6, r8
	adds r6, #0xb8
	ldr r1, [r6]
	ldr r0, [r1, #8]
	ands r0, r2
	str r0, [r1, #8]
	mov r7, r8
	adds r7, #0xbc
	ldr r1, [r7]
	ldr r0, [r1, #8]
	ands r0, r2
	str r0, [r1, #8]
	movs r0, #0xc0
	add r0, r8
	mov ip, r0
	ldr r1, [r0]
	ldr r0, [r1, #8]
	ands r0, r2
	str r0, [r1, #8]
	mov r1, sl
	ldrb r0, [r1]
	cmp r0, #4
	beq _080F08FA
	ldr r1, [r4]
	ldr r0, [r1, #8]
	orrs r0, r3
	str r0, [r1, #8]
	ldr r1, [r6]
	ldr r0, [r1, #8]
	orrs r0, r3
	str r0, [r1, #8]
	ldr r1, [r7]
	ldr r0, [r1, #8]
	orrs r0, r3
	str r0, [r1, #8]
	mov r2, ip
	ldr r1, [r2]
	b _080F091C
_080F08FA:
	ldr r2, [r4]
	mvns r1, r3
	mov r4, sb
	ands r1, r4
	ldr r0, [r2, #8]
	orrs r0, r1
	str r0, [r2, #8]
	ldr r2, [r6]
	ldr r0, [r2, #8]
	orrs r0, r1
	str r0, [r2, #8]
	ldr r1, [r7]
	ldr r0, [r1, #8]
	orrs r0, r3
	str r0, [r1, #8]
	mov r7, ip
	ldr r1, [r7]
_080F091C:
	ldr r0, [r1, #8]
	orrs r0, r3
	str r0, [r1, #8]
	movs r0, #0
	mov r1, sl
	strb r0, [r1]
_080F0928:
	adds r0, r5, #0
	bl sub_080F097C
	movs r0, #0x20
	b _080F0966
_080F0932:
	mov r0, r8
	adds r0, #0xb4
	ldr r0, [r0]
	ldr r2, [r0, #0x78]
	ldr r0, _080F0978 @ =sub_080F05CC
	cmp r2, r0
	bne _080F0968
	mov r0, r8
	adds r0, #0xb8
	ldr r0, [r0]
	ldr r1, [r0, #0x78]
	cmp r1, r2
	bne _080F0968
	mov r0, r8
	adds r0, #0xbc
	ldr r0, [r0]
	ldr r2, [r0, #0x78]
	cmp r2, r1
	bne _080F0968
	mov r0, r8
	adds r0, #0xc0
	ldr r0, [r0]
	ldr r0, [r0, #0x78]
	cmp r0, r2
	bne _080F0968
	subs r0, r3, #1
_080F0966:
	strh r0, [r5, #4]
_080F0968:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F0978: .4byte sub_080F05CC

	thumb_func_start sub_080F097C
sub_080F097C: @ 0x080F097C
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080F09A4 @ =sub_080F09E4
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x83
	ldrb r0, [r1]
	cmp r0, #9
	bls _080F09A8
	movs r0, #0xf
	b _080F09AA
	.align 2, 0
_080F09A4: .4byte sub_080F09E4
_080F09A8:
	movs r0, #5
_080F09AA:
	strb r0, [r1]
	movs r2, #0xcf
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0xc
	movs r3, #0x30
	bl sub_080F3974
	ldr r0, [r4, #8]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	ldr r1, _080F09E0 @ =0xFFFFFDFF
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #0
	movs r0, #0x10
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080F09E0: .4byte 0xFFFFFDFF

	thumb_func_start sub_080F09E4
sub_080F09E4: @ 0x080F09E4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r4, r0, #0
	ldr r1, [r4, #8]
	movs r0, #4
	orrs r1, r0
	str r1, [r4, #8]
	movs r2, #4
	ldrsh r0, [r4, r2]
	cmp r0, #0
	beq _080F0ACC
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0x54
	ldr r0, _080F0AA8 @ =gUnk_0203AD40
	ldr r1, [r0]
	movs r0, #2
	ands r1, r0
	lsls r1, r1, #1
	ldrb r0, [r2]
	adds r0, r0, r1
	strb r0, [r2]
	adds r2, #1
	ldrb r0, [r2]
	adds r0, r0, r1
	strb r0, [r2]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080F0A34
	b _080F0C9A
_080F0A34:
	ldr r1, _080F0AAC @ =gUnk_02020EE0
	ldr r0, _080F0AB0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _080F0A52
	b _080F0C9A
_080F0A52:
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F0A64
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	beq _080F0A64
	b _080F0C9A
_080F0A64:
	ldr r1, _080F0AB4 @ =gUnk_08D60FA4
	ldr r4, _080F0AB8 @ =gSongTable
	ldr r2, _080F0ABC @ =0x00000C6C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F0A8A
	ldr r1, _080F0AC0 @ =0x00000C68
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bls _080F0A8A
	b _080F0C9A
_080F0A8A:
	cmp r3, #0
	beq _080F0A9E
	ldr r0, _080F0AC4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F0A9E
	b _080F0C9A
_080F0A9E:
	ldr r0, _080F0AC8 @ =0x0000018D
	bl m4aSongNumStart
	b _080F0C9A
	.align 2, 0
_080F0AA8: .4byte gUnk_0203AD40
_080F0AAC: .4byte gUnk_02020EE0
_080F0AB0: .4byte gUnk_0203AD3C
_080F0AB4: .4byte gUnk_08D60FA4
_080F0AB8: .4byte gSongTable
_080F0ABC: .4byte 0x00000C6C
_080F0AC0: .4byte 0x00000C68
_080F0AC4: .4byte gUnk_0203AD10
_080F0AC8: .4byte 0x0000018D
_080F0ACC:
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080F0AF8
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F0AF4 @ =0xFFFFFD00
	adds r3, r1, #0
	cmp r0, r2
	blt _080F0B10
	movs r1, #0xc0
	lsls r1, r1, #2
	cmp r0, r1
	ble _080F0B1C
	b _080F0B1A
	.align 2, 0
_080F0AF4: .4byte 0xFFFFFD00
_080F0AF8:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #2
	adds r3, r1, #0
	cmp r0, r2
	ble _080F0B14
_080F0B10:
	strh r2, [r3]
	b _080F0B1C
_080F0B14:
	ldr r1, _080F0B58 @ =0xFFFFFD00
	cmp r0, r1
	bge _080F0B1C
_080F0B1A:
	strh r1, [r3]
_080F0B1C:
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	ands r0, r1
	adds r7, r2, #0
	cmp r0, #0
	bne _080F0B2E
	b _080F0C9A
_080F0B2E:
	ldr r2, [r4, #0x70]
	mov r8, r2
	movs r0, #0
	strh r0, [r3]
	adds r1, r4, #0
	adds r1, #0x52
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	bne _080F0C3E
	adds r1, r4, #0
	adds r1, #0x83
	ldrb r0, [r1]
	cmp r0, #9
	bls _080F0B5C
	movs r0, #0xe
	b _080F0B5E
	.align 2, 0
_080F0B58: .4byte 0xFFFFFD00
_080F0B5C:
	movs r0, #4
_080F0B5E:
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #1
	adds r1, r4, #0
	bl sub_0806FE64
	ldr r1, _080F0BFC @ =gUnk_02020EE0
	ldr r0, _080F0C00 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F0BDE
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F0B9E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F0BDE
_080F0B9E:
	ldr r1, _080F0C04 @ =gUnk_08D60FA4
	ldr r5, _080F0C08 @ =gSongTable
	ldr r2, _080F0C0C @ =0x00000C74
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F0BC4
	movs r1, #0xc7
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F0BDE
_080F0BC4:
	cmp r3, #0
	beq _080F0BD6
	ldr r0, _080F0C10 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F0BDE
_080F0BD6:
	movs r0, #0xc7
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F0BDE:
	ldrb r2, [r7]
	movs r1, #3
	ands r1, r2
	cmp r1, #0
	beq _080F0C14
	movs r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x10
	movs r3, #3
	bl sub_080A8D18
	b _080F0C3E
	.align 2, 0
_080F0BFC: .4byte gUnk_02020EE0
_080F0C00: .4byte gUnk_0203AD3C
_080F0C04: .4byte gUnk_08D60FA4
_080F0C08: .4byte gSongTable
_080F0C0C: .4byte 0x00000C74
_080F0C10: .4byte gUnk_0203AD10
_080F0C14:
	movs r0, #8
	ands r0, r2
	cmp r0, #0
	beq _080F0C2C
	str r1, [sp]
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #0
	movs r3, #1
	bl sub_080A8D18
	b _080F0C3E
_080F0C2C:
	movs r0, #4
	ands r0, r2
	cmp r0, #0
	beq _080F0C3E
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #0
	bl sub_080A8C28
_080F0C3E:
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x18
	bls _080F0C9A
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	adds r0, #2
	adds r1, r4, #0
	adds r1, #0x83
	strb r0, [r1]
	mov r2, r8
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F0C84
	ldr r0, _080F0C80 @ =gUnk_08357018
	adds r1, r4, #0
	adds r1, #0x82
	ldrb r1, [r1]
	subs r1, #0xbc
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r1, [r1]
	adds r0, r4, #0
	bl _call_via_r1
	b _080F0C9A
	.align 2, 0
_080F0C80: .4byte gUnk_08357018
_080F0C84:
	ldr r0, _080F0CA8 @ =gUnk_08357028
	adds r1, r4, #0
	adds r1, #0x82
	ldrb r1, [r1]
	subs r1, #0xbc
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r1, [r1]
	adds r0, r4, #0
	bl _call_via_r1
_080F0C9A:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F0CA8: .4byte gUnk_08357028

	thumb_func_start sub_080F0CAC
sub_080F0CAC: @ 0x080F0CAC
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080F0CDC @ =sub_080F0D10
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x85
	strb r0, [r1]
	ldrb r0, [r2]
	cmp r0, #9
	bls _080F0CE0
	movs r0, #0x10
	b _080F0CE2
	.align 2, 0
_080F0CDC: .4byte sub_080F0D10
_080F0CE0:
	movs r0, #6
_080F0CE2:
	strb r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #0
	movs r0, #4
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r1, [r0]
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080F0D10
sub_080F0D10: @ 0x080F0D10
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x10
	movs r6, #0
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc0
	ble _080F0D34
	movs r0, #0xc0
	strh r0, [r1]
_080F0D34:
	ldr r5, [r3, #0x40]
	ldr r0, _080F0D5C @ =0xFFFFFA00
	adds r2, r5, r0
	adds r1, r3, #0
	adds r1, #0xac
	ldr r0, [r1]
	ldr r4, [r0, #0x40]
	adds r7, r1, #0
	cmp r2, r4
	ble _080F0D6A
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F0D60
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	b _080F0D86
	.align 2, 0
_080F0D5C: .4byte 0xFFFFFA00
_080F0D60:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	b _080F0DAC
_080F0D6A:
	movs r1, #0xc0
	lsls r1, r1, #3
	adds r0, r5, r1
	cmp r0, r4
	bge _080F0DC8
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F0DA4
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
_080F0D86:
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F0DA0 @ =0xFFFFFE80
	cmp r0, r2
	blt _080F0D9A
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F0DF2
_080F0D9A:
	strh r2, [r1]
	b _080F0DF2
	.align 2, 0
_080F0DA0: .4byte 0xFFFFFE80
_080F0DA4:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
_080F0DAC:
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080F0D9A
	ldr r2, _080F0DC4 @ =0xFFFFFE80
	cmp r0, r2
	bge _080F0DF2
	b _080F0D9A
	.align 2, 0
_080F0DC4: .4byte 0xFFFFFE80
_080F0DC8:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080F0DE4
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F0DF2
	b _080F0DF0
_080F0DE4:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F0DF2
_080F0DF0:
	strh r6, [r1]
_080F0DF2:
	ldr r0, [r7]
	ldr r0, [r0, #0x40]
	ldr r1, [r3, #0x40]
	subs r2, r0, r1
	cmp r2, #0
	blt _080F0E0C
	ldr r0, _080F0E08 @ =0x000007FF
	cmp r2, r0
	ble _080F0E14
	b _080F0E34
	.align 2, 0
_080F0E08: .4byte 0x000007FF
_080F0E0C:
	subs r1, r1, r0
	ldr r0, _080F0E3C @ =0x000007FF
	cmp r1, r0
	bgt _080F0E34
_080F0E14:
	ldr r0, [r7]
	ldr r1, [r3, #0x44]
	ldr r2, _080F0E40 @ =0xFFFFF800
	adds r1, r1, r2
	ldr r0, [r0, #0x44]
	cmp r0, r1
	blt _080F0E34
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F0E34
	adds r0, r3, #0
	bl sub_080F0E44
_080F0E34:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F0E3C: .4byte 0x000007FF
_080F0E40: .4byte 0xFFFFF800

	thumb_func_start sub_080F0E44
sub_080F0E44: @ 0x080F0E44
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080F0E6C @ =sub_080F0EAC
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x83
	ldrb r0, [r1]
	cmp r0, #9
	bls _080F0E70
	movs r0, #0x11
	b _080F0E72
	.align 2, 0
_080F0E6C: .4byte sub_080F0EAC
_080F0E70:
	movs r0, #7
_080F0E72:
	strb r0, [r1]
	movs r2, #0xcf
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0xc
	movs r3, #0x35
	bl sub_080F3974
	ldr r0, [r4, #8]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	ldr r1, _080F0EA8 @ =0xFFFFFDFF
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #0
	movs r0, #0x10
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080F0EA8: .4byte 0xFFFFFDFF

	thumb_func_start sub_080F0EAC
sub_080F0EAC: @ 0x080F0EAC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r6, #4
	orrs r0, r6
	str r0, [r4, #8]
	movs r0, #4
	ldrsh r5, [r4, r0]
	cmp r5, #0
	beq _080F0F94
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0x54
	ldr r0, _080F0F70 @ =gUnk_0203AD40
	ldr r1, [r0]
	movs r0, #2
	ands r1, r0
	lsls r1, r1, #1
	ldrb r0, [r2]
	adds r0, r0, r1
	strb r0, [r2]
	adds r2, #1
	ldrb r0, [r2]
	adds r0, r0, r1
	strb r0, [r2]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080F0EFC
	b _080F1122
_080F0EFC:
	ldr r1, _080F0F74 @ =gUnk_02020EE0
	ldr r0, _080F0F78 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _080F0F1A
	b _080F1122
_080F0F1A:
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F0F2C
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	beq _080F0F2C
	b _080F1122
_080F0F2C:
	ldr r1, _080F0F7C @ =gUnk_08D60FA4
	ldr r4, _080F0F80 @ =gSongTable
	ldr r2, _080F0F84 @ =0x00000C6C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F0F52
	ldr r1, _080F0F88 @ =0x00000C68
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bls _080F0F52
	b _080F1122
_080F0F52:
	cmp r3, #0
	beq _080F0F66
	ldr r0, _080F0F8C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F0F66
	b _080F1122
_080F0F66:
	ldr r0, _080F0F90 @ =0x0000018D
	bl m4aSongNumStart
	b _080F1122
	.align 2, 0
_080F0F70: .4byte gUnk_0203AD40
_080F0F74: .4byte gUnk_02020EE0
_080F0F78: .4byte gUnk_0203AD3C
_080F0F7C: .4byte gUnk_08D60FA4
_080F0F80: .4byte gSongTable
_080F0F84: .4byte 0x00000C6C
_080F0F88: .4byte 0x00000C68
_080F0F8C: .4byte gUnk_0203AD10
_080F0F90: .4byte 0x0000018D
_080F0F94:
	adds r3, r4, #0
	adds r3, #0x52
	ldrh r0, [r3]
	subs r0, #0x80
	strh r0, [r3]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _080F0FE0 @ =0xFFFFFD00
	cmp r0, r1
	bge _080F0FAA
	strh r1, [r3]
_080F0FAA:
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	adds r0, r6, #0
	ands r0, r1
	adds r7, r2, #0
	cmp r0, #0
	bne _080F0FBC
	b _080F1122
_080F0FBC:
	ldr r2, [r4, #0x70]
	mov r8, r2
	adds r0, r4, #0
	adds r0, #0x50
	strh r5, [r0]
	strh r5, [r3]
	adds r0, #0x4f
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	bne _080F10C6
	adds r1, r4, #0
	adds r1, #0x83
	ldrb r0, [r1]
	cmp r0, #9
	bls _080F0FE4
	movs r0, #0x10
	b _080F0FE6
	.align 2, 0
_080F0FE0: .4byte 0xFFFFFD00
_080F0FE4:
	movs r0, #6
_080F0FE6:
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #1
	adds r1, r4, #0
	bl sub_0806FE64
	ldr r1, _080F1084 @ =gUnk_02020EE0
	ldr r0, _080F1088 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F1066
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F1026
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F1066
_080F1026:
	ldr r1, _080F108C @ =gUnk_08D60FA4
	ldr r5, _080F1090 @ =gSongTable
	ldr r2, _080F1094 @ =0x00000C74
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F104C
	movs r1, #0xc7
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F1066
_080F104C:
	cmp r3, #0
	beq _080F105E
	ldr r0, _080F1098 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F1066
_080F105E:
	movs r0, #0xc7
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F1066:
	ldrb r2, [r7]
	movs r1, #3
	ands r1, r2
	cmp r1, #0
	beq _080F109C
	movs r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x10
	movs r3, #3
	bl sub_080A8D18
	b _080F10C6
	.align 2, 0
_080F1084: .4byte gUnk_02020EE0
_080F1088: .4byte gUnk_0203AD3C
_080F108C: .4byte gUnk_08D60FA4
_080F1090: .4byte gSongTable
_080F1094: .4byte 0x00000C74
_080F1098: .4byte gUnk_0203AD10
_080F109C:
	movs r0, #8
	ands r0, r2
	cmp r0, #0
	beq _080F10B4
	str r1, [sp]
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #0
	movs r3, #1
	bl sub_080A8D18
	b _080F10C6
_080F10B4:
	movs r0, #4
	ands r0, r2
	cmp r0, #0
	beq _080F10C6
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #0
	bl sub_080A8C28
_080F10C6:
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x18
	bls _080F1122
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	adds r0, #2
	adds r1, r4, #0
	adds r1, #0x83
	strb r0, [r1]
	mov r2, r8
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F110C
	ldr r0, _080F1108 @ =gUnk_08357018
	adds r1, r4, #0
	adds r1, #0x82
	ldrb r1, [r1]
	subs r1, #0xbc
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r1, [r1]
	adds r0, r4, #0
	bl _call_via_r1
	b _080F1122
	.align 2, 0
_080F1108: .4byte gUnk_08357018
_080F110C:
	ldr r0, _080F1130 @ =gUnk_08357028
	adds r1, r4, #0
	adds r1, #0x82
	ldrb r1, [r1]
	subs r1, #0xbc
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r1, [r1]
	adds r0, r4, #0
	bl _call_via_r1
_080F1122:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F1130: .4byte gUnk_08357028

	thumb_func_start sub_080F1134
sub_080F1134: @ 0x080F1134
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080F1158 @ =sub_080F118C
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r1, [r2]
	cmp r1, #9
	bhi _080F115C
	adds r0, r4, #0
	adds r0, #0x85
	strb r1, [r0]
	movs r0, #8
	b _080F1164
	.align 2, 0
_080F1158: .4byte sub_080F118C
_080F115C:
	adds r0, r4, #0
	adds r0, #0x85
	strb r1, [r0]
	movs r0, #0x12
_080F1164:
	strb r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	strh r0, [r4, #4]
	adds r1, #0x4d
	movs r0, #0x24
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F118C
sub_080F118C: @ 0x080F118C
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #4
	bne _080F11BA
	adds r0, r5, #0
	adds r0, #0x52
	ldrh r0, [r0]
	adds r2, r4, #0
	adds r2, #0x52
	movs r1, #0
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x50
	strh r1, [r0]
	b _080F129E
_080F11BA:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0xa0
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F11F0 @ =0xFFFFFB00
	cmp r0, r2
	bge _080F11D0
	strh r2, [r1]
_080F11D0:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080F11F8
	adds r1, r4, #0
	adds r1, #0x83
	ldrb r0, [r1]
	cmp r0, #8
	bne _080F11F4
	movs r0, #0
	b _080F11F6
	.align 2, 0
_080F11F0: .4byte 0xFFFFFB00
_080F11F4:
	movs r0, #0xa
_080F11F6:
	strb r0, [r1]
_080F11F8:
	ldr r0, [r4, #8]
	movs r1, #0x20
	orrs r0, r1
	subs r1, #0x61
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080F129E
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _080F1222
	movs r0, #1
	adds r1, r4, #0
	bl sub_0806FE64
_080F1222:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x10
	ble _080F129E
	ldr r0, [r4, #8]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r2, [r0]
	adds r1, r2, #0
	adds r3, r0, #0
	cmp r1, #2
	beq _080F124C
	cmp r1, #0xc
	bne _080F1254
_080F124C:
	adds r0, r4, #0
	adds r0, #0x83
	strb r2, [r0]
	b _080F125C
_080F1254:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #2
	strb r0, [r1]
_080F125C:
	movs r0, #0
	strb r0, [r3]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F1288
	ldr r0, _080F1284 @ =gUnk_08357018
	adds r1, r4, #0
	adds r1, #0x82
	ldrb r1, [r1]
	subs r1, #0xbc
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r1, [r1]
	adds r0, r4, #0
	bl _call_via_r1
	b _080F129E
	.align 2, 0
_080F1284: .4byte gUnk_08357018
_080F1288:
	ldr r0, _080F12A4 @ =gUnk_08357028
	adds r1, r4, #0
	adds r1, #0x82
	ldrb r1, [r1]
	subs r1, #0xbc
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r1, [r1]
	adds r0, r4, #0
	bl _call_via_r1
_080F129E:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080F12A4: .4byte gUnk_08357028

	thumb_func_start sub_080F12A8
sub_080F12A8: @ 0x080F12A8
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080F12C4 @ =sub_080F12F8
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x83
	ldrb r0, [r1]
	cmp r0, #9
	bhi _080F12C8
	movs r0, #9
	b _080F12CA
	.align 2, 0
_080F12C4: .4byte sub_080F12F8
_080F12C8:
	movs r0, #0x13
_080F12CA:
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x20
	orrs r0, r1
	subs r1, #0x61
	ands r0, r1
	str r0, [r4, #8]
	movs r1, #0
	movs r0, #0xf0
	lsls r0, r0, #3
	strh r0, [r4, #0x24]
	adds r0, r4, #0
	adds r0, #0x50
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	strh r1, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080F12F8
sub_080F12F8: @ 0x080F12F8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	movs r2, #0
	ldr r0, _080F1338 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r2, r0
	bhs _080F134A
	adds r5, r4, #0
	adds r5, #0x60
	adds r3, r0, #0
_080F130C:
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r1, r2, #0
	muls r1, r0, r1
	ldr r0, _080F133C @ =gUnk_02020EE0
	adds r1, r1, r0
	adds r0, r1, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r5]
	cmp r0, r6
	bne _080F1340
	ldr r0, [r1, #8]
	movs r1, #0x80
	lsls r1, r1, #0x11
	ands r0, r1
	cmp r0, #0
	beq _080F13E2
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	b _080F13DE
	.align 2, 0
_080F1338: .4byte gUnk_0203AD44
_080F133C: .4byte gUnk_02020EE0
_080F1340:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, r3
	blo _080F130C
_080F134A:
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _080F13E2
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080F13E2
	movs r0, #1
	adds r1, r4, #0
	bl sub_0806FE64
	ldr r1, _080F13E8 @ =gUnk_02020EE0
	ldr r0, _080F13EC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F13D4
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F1394
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F13D4
_080F1394:
	ldr r1, _080F13F0 @ =gUnk_08D60FA4
	ldr r5, _080F13F4 @ =gSongTable
	ldr r2, _080F13F8 @ =0x00000C74
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F13BA
	movs r6, #0xc7
	lsls r6, r6, #4
	adds r0, r5, r6
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F13D4
_080F13BA:
	cmp r3, #0
	beq _080F13CC
	ldr r0, _080F13FC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F13D4
_080F13CC:
	movs r0, #0xc7
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F13D4:
	movs r0, #1
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
_080F13DE:
	orrs r0, r1
	str r0, [r4, #8]
_080F13E2:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080F13E8: .4byte gUnk_02020EE0
_080F13EC: .4byte gUnk_0203AD3C
_080F13F0: .4byte gUnk_08D60FA4
_080F13F4: .4byte gSongTable
_080F13F8: .4byte 0x00000C74
_080F13FC: .4byte gUnk_0203AD10

	thumb_func_start sub_080F1400
sub_080F1400: @ 0x080F1400
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	str r5, [sp]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov ip, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov r8, r0
	movs r4, #0
	ldr r1, _080F1444 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _080F1448 @ =gUnk_020229E0
	movs r6, #0x56
	adds r6, r6, r5
	mov sb, r6
	ldr r6, [sp]
	adds r6, #0xbc
	b _080F1460
	.align 2, 0
_080F1444: .4byte gUnk_020229D4
_080F1448: .4byte gUnk_020229E0
_080F144C:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080F1468
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080F1460:
	cmp r0, #0
	bne _080F144C
	orrs r2, r3
	str r2, [r1]
_080F1468:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r7
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, ip
	strh r0, [r1, #6]
	mov r0, r8
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xbe
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sl
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, sb
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	str r0, [r6]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F14CC
sub_080F14CC: @ 0x080F14CC
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _080F1500 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080F1504 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080F1508
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r6, r0, r1
	b _080F1510
	.align 2, 0
_080F1500: .4byte ObjectMain
_080F1504: .4byte ObjectDestroy
_080F1508:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
_080F1510:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r1, [r6, #8]
	movs r0, #0x40
	orrs r1, r0
	movs r0, #1
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r1, r0
	ldr r0, [r6, #0x5c]
	ldr r2, _080F1590 @ =0x001080A0
	orrs r0, r2
	str r0, [r6, #0x5c]
	movs r0, #0x80
	lsls r0, r0, #9
	orrs r1, r0
	str r1, [r6, #8]
	adds r1, r6, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080F1594 @ =sub_080F5744
	str r0, [r6, #0x7c]
	movs r4, #4
	rsbs r4, r4, #0
	movs r5, #8
	rsbs r5, r5, #0
	movs r0, #4
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #8
	bl sub_0803E2B0
	movs r0, #2
	rsbs r0, r0, #0
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #8
	bl sub_0803E308
	adds r0, r6, #0
	bl ObjectInitSprite
	adds r0, r6, #0
	bl sub_080F1598
	movs r0, #0xb4
	strh r0, [r6, #4]
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080F1590: .4byte 0x001080A0
_080F1594: .4byte sub_080F5744

	thumb_func_start sub_080F1598
sub_080F1598: @ 0x080F1598
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r4, #0
	movs r7, #0
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _080F15B8
	cmp r0, #0xc
	bne _080F15BA
_080F15B8:
	movs r7, #0xc
_080F15BA:
	adds r6, r5, #0
	adds r6, #0x83
	ldrb r0, [r6]
	cmp r0, #1
	bne _080F15E6
	movs r0, #0xb
	strb r0, [r6]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	movs r3, #8
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xc
	bl sub_080F3974
	movs r4, #1
_080F15E6:
	ldr r2, _080F1614 @ =sub_080F1690
	adds r0, r5, #0
	movs r1, #0xa
	bl ObjectSetFunc
	cmp r4, #0
	beq _080F15F8
	movs r0, #0xb
	strb r0, [r6]
_080F15F8:
	cmp r7, #0
	beq _080F15FE
	strb r7, [r6]
_080F15FE:
	movs r0, #0xf8
	lsls r0, r0, #3
	strh r0, [r5, #0x24]
	ldr r0, [r5, #0x70]
	adds r0, #0xc4
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F1618
	movs r0, #8
	b _080F1686
	.align 2, 0
_080F1614: .4byte sub_080F1690
_080F1618:
	ldr r2, _080F163C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F1640 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F1644 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #7
	ands r1, r0
	cmp r1, #7
	bhi _080F1688
	lsls r0, r1, #2
	ldr r1, _080F1648 @ =_080F164C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080F163C: .4byte gRngVal
_080F1640: .4byte 0x00196225
_080F1644: .4byte 0x3C6EF35F
_080F1648: .4byte _080F164C
_080F164C: @ jump table
	.4byte _080F166C @ case 0
	.4byte _080F1670 @ case 1
	.4byte _080F1684 @ case 2
	.4byte _080F1674 @ case 3
	.4byte _080F1678 @ case 4
	.4byte _080F167C @ case 5
	.4byte _080F1680 @ case 6
	.4byte _080F1684 @ case 7
_080F166C:
	movs r0, #0x78
	b _080F1686
_080F1670:
	movs r0, #0x5a
	b _080F1686
_080F1674:
	movs r0, #0x14
	b _080F1686
_080F1678:
	movs r0, #0x2d
	b _080F1686
_080F167C:
	movs r0, #0x5a
	b _080F1686
_080F1680:
	movs r0, #0x2d
	b _080F1686
_080F1684:
	movs r0, #0x3c
_080F1686:
	strh r0, [r5, #4]
_080F1688:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F1690
sub_080F1690: @ 0x080F1690
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r0, [r5, #0x70]
	mov sl, r0
	movs r7, #0xf4
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r4, r5, #0
	adds r4, #0xa0
	strh r0, [r4]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r3, r5, #0
	adds r3, #0xa2
	strh r0, [r3]
	adds r2, r5, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #0xc
	bne _080F1736
	movs r1, #0
	ldrsh r0, [r4, r1]
	adds r1, r0, #0
	adds r1, #0x1c
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	subs r4, r1, r0
	cmp r4, #0
	blt _080F16E8
	cmp r4, #5
	ble _080F16F6
	adds r6, r3, #0
	mov sb, r2
	lsls r7, r7, #0x18
	mov r8, r7
	b _080F1784
_080F16E8:
	subs r0, r0, r1
	adds r6, r3, #0
	mov sb, r2
	lsls r2, r7, #0x18
	mov r8, r2
	cmp r0, #5
	bgt _080F1784
_080F16F6:
	adds r3, r5, #0
	adds r3, #0xa2
	movs r4, #0
	ldrsh r1, [r3, r4]
	lsls r2, r7, #0x18
	asrs r0, r2, #0x18
	adds r1, r1, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	subs r4, r1, r0
	adds r6, r3, #0
	mov r8, r2
	cmp r4, #0
	blt _080F171E
	cmp r4, #5
	ble _080F172A
	movs r0, #0x83
	adds r0, r0, r5
	mov sb, r0
	b _080F1784
_080F171E:
	subs r0, r0, r1
	movs r1, #0x83
	adds r1, r1, r5
	mov sb, r1
	cmp r0, #5
	bgt _080F1784
_080F172A:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #0xa
	strb r0, [r1]
	mov sb, r1
	b _080F1784
_080F1736:
	cmp r0, #0xa
	bne _080F176E
	mov r0, sl
	adds r0, #0x83
	ldrb r0, [r0]
	adds r6, r3, #0
	mov sb, r2
	lsls r7, r7, #0x18
	mov r8, r7
	cmp r0, #1
	bne _080F1784
	movs r0, #0xb
	strb r0, [r2]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	movs r3, #8
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xc
	bl sub_080F3974
	b _080F1784
_080F176E:
	mov r0, sl
	adds r0, #0x83
	ldrb r0, [r0]
	adds r6, r3, #0
	mov sb, r2
	lsls r7, r7, #0x18
	mov r8, r7
	cmp r0, #3
	bne _080F1784
	movs r0, #0xa
	strb r0, [r2]
_080F1784:
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	mov r2, sb
	ldrb r0, [r2]
	cmp r0, #2
	beq _080F179A
	cmp r0, #0xc
	beq _080F179A
	b _080F18F0
_080F179A:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	ldr r4, [r5, #0x44]
	ldr r2, _080F17D8 @ =0xFFFFFC00
	ands r4, r2
	movs r1, #0
	ldrsh r0, [r6, r1]
	mov r6, r8
	asrs r1, r6, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	ble _080F17DC
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F1826
	strh r2, [r1]
	b _080F1826
	.align 2, 0
_080F17D8: .4byte 0xFFFFFC00
_080F17DC:
	cmp r4, r0
	bge _080F17FC
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F17F8 @ =0xFFFFFE40
	cmp r0, r2
	bge _080F1826
	strh r2, [r1]
	b _080F1826
	.align 2, 0
_080F17F8: .4byte 0xFFFFFE40
_080F17FC:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080F1818
	adds r0, r2, #0
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F1826
	b _080F1824
_080F1818:
	adds r0, r2, #0
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F1826
_080F1824:
	strh r3, [r1]
_080F1826:
	ldr r4, [r5, #0x40]
	ldr r1, _080F1864 @ =0xFFFFFC00
	ands r4, r1
	adds r0, r5, #0
	adds r0, #0xa0
	movs r6, #0
	ldrsh r0, [r0, r6]
	adds r0, #0x1c
	lsls r0, r0, #8
	ands r0, r1
	cmp r4, r0
	bge _080F186C
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F189C
	ldr r2, _080F1868 @ =0xFFFFFDC0
	b _080F1A0C
	.align 2, 0
_080F1864: .4byte 0xFFFFFC00
_080F1868: .4byte 0xFFFFFDC0
_080F186C:
	cmp r4, r0
	ble _080F18C4
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F18A4
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F18A0 @ =0xFFFFFDC0
	cmp r0, r2
	blt _080F189C
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F189C
	b _080F1A3E
_080F189C:
	strh r2, [r1]
	b _080F1A3E
	.align 2, 0
_080F18A0: .4byte 0xFFFFFDC0
_080F18A4:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F189C
	ldr r2, _080F18C0 @ =0xFFFFFDC0
	b _080F1A0C
	.align 2, 0
_080F18C0: .4byte 0xFFFFFDC0
_080F18C4:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F18E4
	movs r4, #0xc0
	lsls r4, r4, #1
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080F18E2
	b _080F1A3E
_080F18E2:
	b _080F1A3A
_080F18E4:
	ldr r6, _080F18EC @ =0xFFFFFE80
	adds r0, r2, r6
	b _080F1A32
	.align 2, 0
_080F18EC: .4byte 0xFFFFFE80
_080F18F0:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	ldr r4, [r5, #0x44]
	ldr r2, _080F1930 @ =0xFFFFFC00
	ands r4, r2
	movs r1, #0
	ldrsh r0, [r6, r1]
	mov r6, r8
	asrs r1, r6, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	ble _080F1934
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa8
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F1980
	strh r2, [r1]
	b _080F1980
	.align 2, 0
_080F1930: .4byte 0xFFFFFC00
_080F1934:
	cmp r4, r0
	bge _080F1954
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F1950 @ =0xFFFFFEB0
	cmp r0, r2
	bge _080F1980
	strh r2, [r1]
	b _080F1980
	.align 2, 0
_080F1950: .4byte 0xFFFFFEB0
_080F1954:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080F1972
	movs r6, #0x80
	lsls r6, r6, #1
	adds r0, r2, r6
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F1980
	b _080F197E
_080F1972:
	ldr r4, _080F19B8 @ =0xFFFFFF00
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F1980
_080F197E:
	strh r3, [r1]
_080F1980:
	ldr r4, [r5, #0x40]
	ldr r1, _080F19BC @ =0xFFFFFC00
	ands r4, r1
	adds r0, r5, #0
	adds r0, #0xa0
	movs r6, #0
	ldrsh r0, [r0, r6]
	adds r0, #0x1c
	lsls r0, r0, #8
	ands r0, r1
	cmp r4, r0
	bge _080F19C0
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F1A08
	movs r0, #0xe0
	b _080F1A3C
	.align 2, 0
_080F19B8: .4byte 0xFFFFFF00
_080F19BC: .4byte 0xFFFFFC00
_080F19C0:
	cmp r4, r0
	ble _080F1A12
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F19F2
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	rsbs r2, r2, #0
	cmp r0, r2
	bge _080F19EA
	b _080F189C
_080F19EA:
	cmp r0, #0xe0
	ble _080F1A3E
	movs r0, #0xe0
	b _080F1A3C
_080F19F2:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F1A08
	movs r0, #0xe0
	b _080F1A3C
_080F1A08:
	movs r2, #0xe0
	rsbs r2, r2, #0
_080F1A0C:
	cmp r0, r2
	bge _080F1A3E
	b _080F189C
_080F1A12:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F1A2E
	adds r0, r2, #0
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F1A3E
	b _080F1A3A
_080F1A2E:
	adds r0, r2, #0
	subs r0, #0x40
_080F1A32:
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F1A3E
_080F1A3A:
	movs r0, #0
_080F1A3C:
	strh r0, [r1]
_080F1A3E:
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	mov r4, sl
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F1A5C
	adds r0, r5, #0
	bl sub_080F1ABC
	b _080F1AAE
_080F1A5C:
	mov r4, sb
	ldrb r0, [r4]
	cmp r0, #0x12
	bne _080F1A92
	adds r1, r5, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080F1AAE
	movs r0, #0xa
	strb r0, [r4]
	adds r0, r5, #0
	adds r0, #0x85
	ldrb r2, [r0]
	adds r1, r0, #0
	cmp r2, #2
	beq _080F1A88
	cmp r2, #0xc
	bne _080F1A8C
_080F1A88:
	movs r0, #0xc
	strb r0, [r4]
_080F1A8C:
	movs r0, #0
	strb r0, [r1]
	b _080F1AAE
_080F1A92:
	cmp r0, #0xc
	beq _080F1AAE
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F1AAE
	movs r0, #0xa
	mov r6, sb
	strb r0, [r6]
	adds r0, r5, #0
	bl sub_080EFC18
_080F1AAE:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F1ABC
sub_080F1ABC: @ 0x080F1ABC
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r4, #0
	movs r7, #0
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _080F1ADA
	cmp r0, #0xc
	bne _080F1ADC
_080F1ADA:
	movs r7, #2
_080F1ADC:
	adds r6, r5, #0
	adds r6, #0x83
	ldrb r0, [r6]
	cmp r0, #0xb
	bne _080F1B08
	movs r0, #1
	strb r0, [r6]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xa
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xe
	bl sub_080F3974
	movs r4, #1
_080F1B08:
	ldr r2, _080F1B34 @ =sub_080F1BB0
	adds r0, r5, #0
	movs r1, #0
	bl ObjectSetFunc
	cmp r4, #0
	beq _080F1B1A
	movs r0, #1
	strb r0, [r6]
_080F1B1A:
	cmp r7, #0
	beq _080F1B20
	strb r7, [r6]
_080F1B20:
	movs r0, #0xd8
	lsls r0, r0, #3
	strh r0, [r5, #0x24]
	ldr r0, [r5, #0x70]
	adds r0, #0xc4
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F1B38
	movs r0, #8
	b _080F1BA6
	.align 2, 0
_080F1B34: .4byte sub_080F1BB0
_080F1B38:
	ldr r2, _080F1B5C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F1B60 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F1B64 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #7
	ands r1, r0
	cmp r1, #7
	bhi _080F1BA8
	lsls r0, r1, #2
	ldr r1, _080F1B68 @ =_080F1B6C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080F1B5C: .4byte gRngVal
_080F1B60: .4byte 0x00196225
_080F1B64: .4byte 0x3C6EF35F
_080F1B68: .4byte _080F1B6C
_080F1B6C: @ jump table
	.4byte _080F1B8C @ case 0
	.4byte _080F1B90 @ case 1
	.4byte _080F1BA4 @ case 2
	.4byte _080F1B94 @ case 3
	.4byte _080F1B98 @ case 4
	.4byte _080F1B9C @ case 5
	.4byte _080F1BA0 @ case 6
	.4byte _080F1BA4 @ case 7
_080F1B8C:
	movs r0, #0x78
	b _080F1BA6
_080F1B90:
	movs r0, #0x5a
	b _080F1BA6
_080F1B94:
	movs r0, #0x14
	b _080F1BA6
_080F1B98:
	movs r0, #0x2d
	b _080F1BA6
_080F1B9C:
	movs r0, #0x5a
	b _080F1BA6
_080F1BA0:
	movs r0, #0x2d
	b _080F1BA6
_080F1BA4:
	movs r0, #0x3c
_080F1BA6:
	strh r0, [r5, #4]
_080F1BA8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F1BB0
sub_080F1BB0: @ 0x080F1BB0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r0, [r5, #0x70]
	mov sb, r0
	movs r1, #0x16
	mov sl, r1
	movs r2, #0xe8
	mov ip, r2
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r4, r5, #0
	adds r4, #0xa0
	strh r0, [r4]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r3, r5, #0
	adds r3, #0xa2
	strh r0, [r3]
	adds r2, r5, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #2
	bne _080F1C5E
	movs r1, #0
	ldrsh r0, [r4, r1]
	adds r1, r0, #0
	adds r1, #0x16
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	subs r4, r1, r0
	cmp r4, #0
	blt _080F1C0E
	cmp r4, #5
	ble _080F1C1C
	adds r6, r3, #0
	mov r8, r2
	mov r2, ip
	lsls r7, r2, #0x18
	b _080F1CAA
_080F1C0E:
	subs r0, r0, r1
	adds r6, r3, #0
	mov r8, r2
	mov r3, ip
	lsls r7, r3, #0x18
	cmp r0, #5
	bgt _080F1CAA
_080F1C1C:
	adds r3, r5, #0
	adds r3, #0xa2
	movs r4, #0
	ldrsh r1, [r3, r4]
	mov r0, ip
	lsls r2, r0, #0x18
	asrs r0, r2, #0x18
	adds r1, r1, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	subs r4, r1, r0
	adds r6, r3, #0
	adds r7, r2, #0
	cmp r4, #0
	blt _080F1C46
	cmp r4, #5
	ble _080F1C52
	movs r1, #0x83
	adds r1, r1, r5
	mov r8, r1
	b _080F1CAA
_080F1C46:
	subs r0, r0, r1
	movs r2, #0x83
	adds r2, r2, r5
	mov r8, r2
	cmp r0, #5
	bgt _080F1CAA
_080F1C52:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #0
	strb r0, [r1]
	mov r8, r1
	b _080F1CAA
_080F1C5E:
	cmp r0, #0
	bne _080F1C94
	mov r0, sb
	adds r0, #0x83
	ldrb r0, [r0]
	adds r6, r3, #0
	mov r8, r2
	mov r3, ip
	lsls r7, r3, #0x18
	cmp r0, #1
	bne _080F1CAA
	strb r0, [r2]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xa
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xe
	bl sub_080F3974
	b _080F1CAA
_080F1C94:
	mov r0, sb
	adds r0, #0x83
	ldrb r0, [r0]
	adds r6, r3, #0
	mov r8, r2
	mov r4, ip
	lsls r7, r4, #0x18
	cmp r0, #3
	bne _080F1CAA
	movs r0, #0
	strb r0, [r2]
_080F1CAA:
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #2
	beq _080F1CC0
	cmp r0, #0xc
	beq _080F1CC0
	b _080F1E14
_080F1CC0:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	ldr r4, [r5, #0x44]
	ldr r2, _080F1CFC @ =0xFFFFFC00
	ands r4, r2
	movs r1, #0
	ldrsh r0, [r6, r1]
	asrs r1, r7, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	ble _080F1D00
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F1D4A
	strh r2, [r1]
	b _080F1D4A
	.align 2, 0
_080F1CFC: .4byte 0xFFFFFC00
_080F1D00:
	cmp r4, r0
	bge _080F1D20
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F1D1C @ =0xFFFFFE40
	cmp r0, r2
	bge _080F1D4A
	strh r2, [r1]
	b _080F1D4A
	.align 2, 0
_080F1D1C: .4byte 0xFFFFFE40
_080F1D20:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080F1D3C
	adds r0, r2, #0
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F1D4A
	b _080F1D48
_080F1D3C:
	adds r0, r2, #0
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F1D4A
_080F1D48:
	strh r3, [r1]
_080F1D4A:
	ldr r4, [r5, #0x40]
	ldr r1, _080F1D88 @ =0xFFFFFC00
	ands r4, r1
	adds r0, r5, #0
	adds r0, #0xa0
	movs r2, #0
	ldrsh r0, [r0, r2]
	add r0, sl
	lsls r0, r0, #8
	ands r0, r1
	cmp r4, r0
	bge _080F1D90
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F1DC0
	ldr r2, _080F1D8C @ =0xFFFFFDC0
	b _080F1F2C
	.align 2, 0
_080F1D88: .4byte 0xFFFFFC00
_080F1D8C: .4byte 0xFFFFFDC0
_080F1D90:
	cmp r4, r0
	ble _080F1DE8
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F1DC8
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F1DC4 @ =0xFFFFFDC0
	cmp r0, r2
	blt _080F1DC0
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F1DC0
	b _080F1F5E
_080F1DC0:
	strh r2, [r1]
	b _080F1F5E
	.align 2, 0
_080F1DC4: .4byte 0xFFFFFDC0
_080F1DC8:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F1DC0
	ldr r2, _080F1DE4 @ =0xFFFFFDC0
	b _080F1F2C
	.align 2, 0
_080F1DE4: .4byte 0xFFFFFDC0
_080F1DE8:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F1E08
	movs r4, #0xc0
	lsls r4, r4, #1
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080F1E06
	b _080F1F5E
_080F1E06:
	b _080F1F5A
_080F1E08:
	ldr r3, _080F1E10 @ =0xFFFFFE80
	adds r0, r2, r3
	b _080F1F52
	.align 2, 0
_080F1E10: .4byte 0xFFFFFE80
_080F1E14:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	ldr r4, [r5, #0x44]
	ldr r2, _080F1E50 @ =0xFFFFFC00
	ands r4, r2
	movs r1, #0
	ldrsh r0, [r6, r1]
	asrs r1, r7, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	ble _080F1E54
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa8
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F1EA0
	strh r2, [r1]
	b _080F1EA0
	.align 2, 0
_080F1E50: .4byte 0xFFFFFC00
_080F1E54:
	cmp r4, r0
	bge _080F1E74
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F1E70 @ =0xFFFFFEB0
	cmp r0, r2
	bge _080F1EA0
	strh r2, [r1]
	b _080F1EA0
	.align 2, 0
_080F1E70: .4byte 0xFFFFFEB0
_080F1E74:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080F1E92
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F1EA0
	b _080F1E9E
_080F1E92:
	ldr r4, _080F1ED8 @ =0xFFFFFF00
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F1EA0
_080F1E9E:
	strh r3, [r1]
_080F1EA0:
	ldr r4, [r5, #0x40]
	ldr r1, _080F1EDC @ =0xFFFFFC00
	ands r4, r1
	adds r0, r5, #0
	adds r0, #0xa0
	movs r2, #0
	ldrsh r0, [r0, r2]
	add r0, sl
	lsls r0, r0, #8
	ands r0, r1
	cmp r4, r0
	bge _080F1EE0
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F1F28
	movs r0, #0xe0
	b _080F1F5C
	.align 2, 0
_080F1ED8: .4byte 0xFFFFFF00
_080F1EDC: .4byte 0xFFFFFC00
_080F1EE0:
	cmp r4, r0
	ble _080F1F32
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F1F12
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	rsbs r2, r2, #0
	cmp r0, r2
	bge _080F1F0A
	b _080F1DC0
_080F1F0A:
	cmp r0, #0xe0
	ble _080F1F5E
	movs r0, #0xe0
	b _080F1F5C
_080F1F12:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F1F28
	movs r0, #0xe0
	b _080F1F5C
_080F1F28:
	movs r2, #0xe0
	rsbs r2, r2, #0
_080F1F2C:
	cmp r0, r2
	bge _080F1F5E
	b _080F1DC0
_080F1F32:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F1F4E
	adds r0, r2, #0
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F1F5E
	b _080F1F5A
_080F1F4E:
	adds r0, r2, #0
	subs r0, #0x40
_080F1F52:
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F1F5E
_080F1F5A:
	movs r0, #0
_080F1F5C:
	strh r0, [r1]
_080F1F5E:
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	mov r4, sb
	ldr r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	bne _080F1F78
	adds r0, r5, #0
	bl sub_080F1598
	b _080F1FCA
_080F1F78:
	mov r4, r8
	ldrb r0, [r4]
	cmp r0, #8
	bne _080F1FAE
	adds r1, r5, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080F1FCA
	strb r0, [r4]
	adds r0, r5, #0
	adds r0, #0x85
	ldrb r2, [r0]
	adds r1, r0, #0
	cmp r2, #2
	beq _080F1FA4
	cmp r2, #0xc
	bne _080F1FA8
_080F1FA4:
	movs r0, #2
	strb r0, [r4]
_080F1FA8:
	movs r0, #0
	strb r0, [r1]
	b _080F1FCA
_080F1FAE:
	cmp r0, #2
	beq _080F1FCA
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F1FCA
	movs r0, #0
	mov r1, r8
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_080EFC18
_080F1FCA:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F1FD8
sub_080F1FD8: @ 0x080F1FD8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	str r5, [sp]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov ip, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov r8, r0
	movs r4, #0
	ldr r1, _080F201C @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _080F2020 @ =gUnk_020229E0
	movs r6, #0x56
	adds r6, r6, r5
	mov sb, r6
	ldr r6, [sp]
	adds r6, #0xb8
	b _080F2038
	.align 2, 0
_080F201C: .4byte gUnk_020229D4
_080F2020: .4byte gUnk_020229E0
_080F2024:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080F2040
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080F2038:
	cmp r0, #0
	bne _080F2024
	orrs r2, r3
	str r2, [r1]
_080F2040:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r7
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, ip
	strh r0, [r1, #6]
	mov r0, r8
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xbd
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sl
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, sb
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	str r0, [r6]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F20A4
sub_080F20A4: @ 0x080F20A4
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _080F20D8 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080F20DC @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080F20E0
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r5, r0, r1
	b _080F20E8
	.align 2, 0
_080F20D8: .4byte ObjectMain
_080F20DC: .4byte ObjectDestroy
_080F20E0:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
_080F20E8:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	ldr r1, [r5, #8]
	movs r0, #0x40
	orrs r1, r0
	movs r0, #1
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r1, r0
	ldr r0, [r5, #0x5c]
	ldr r2, _080F2168 @ =0x001080A0
	orrs r0, r2
	str r0, [r5, #0x5c]
	movs r0, #0x80
	lsls r0, r0, #9
	orrs r1, r0
	str r1, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080F216C @ =sub_080F5744
	str r0, [r5, #0x7c]
	movs r4, #4
	rsbs r4, r4, #0
	movs r2, #2
	rsbs r2, r2, #0
	movs r0, #6
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #8
	bl sub_0803E2B0
	movs r2, #8
	rsbs r2, r2, #0
	movs r0, #2
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #8
	bl sub_0803E308
	adds r0, r5, #0
	bl ObjectInitSprite
	adds r0, r5, #0
	bl sub_080F2170
	movs r0, #0xb4
	strh r0, [r5, #4]
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080F2168: .4byte 0x001080A0
_080F216C: .4byte sub_080F5744

	thumb_func_start sub_080F2170
sub_080F2170: @ 0x080F2170
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r4, #0
	movs r7, #0
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _080F2190
	cmp r0, #0xc
	bne _080F2192
_080F2190:
	movs r7, #0xc
_080F2192:
	adds r6, r5, #0
	adds r6, #0x83
	ldrb r0, [r6]
	cmp r0, #1
	bne _080F21BE
	movs r0, #0xb
	strb r0, [r6]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	movs r3, #0xb
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xf
	bl sub_080F3974
	movs r4, #1
_080F21BE:
	ldr r2, _080F21EC @ =sub_080F2268
	adds r0, r5, #0
	movs r1, #0xa
	bl ObjectSetFunc
	cmp r4, #0
	beq _080F21D0
	movs r0, #0xb
	strb r0, [r6]
_080F21D0:
	cmp r7, #0
	beq _080F21D6
	strb r7, [r6]
_080F21D6:
	movs r0, #0xd8
	lsls r0, r0, #3
	strh r0, [r5, #0x24]
	ldr r0, [r5, #0x70]
	adds r0, #0xc4
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F21F0
	movs r0, #8
	b _080F225E
	.align 2, 0
_080F21EC: .4byte sub_080F2268
_080F21F0:
	ldr r2, _080F2214 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F2218 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F221C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #7
	ands r1, r0
	cmp r1, #7
	bhi _080F2260
	lsls r0, r1, #2
	ldr r1, _080F2220 @ =_080F2224
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080F2214: .4byte gRngVal
_080F2218: .4byte 0x00196225
_080F221C: .4byte 0x3C6EF35F
_080F2220: .4byte _080F2224
_080F2224: @ jump table
	.4byte _080F2244 @ case 0
	.4byte _080F2248 @ case 1
	.4byte _080F225C @ case 2
	.4byte _080F224C @ case 3
	.4byte _080F2250 @ case 4
	.4byte _080F2254 @ case 5
	.4byte _080F2258 @ case 6
	.4byte _080F225C @ case 7
_080F2244:
	movs r0, #0x78
	b _080F225E
_080F2248:
	movs r0, #0x5a
	b _080F225E
_080F224C:
	movs r0, #0x14
	b _080F225E
_080F2250:
	movs r0, #0x2d
	b _080F225E
_080F2254:
	movs r0, #0x5a
	b _080F225E
_080F2258:
	movs r0, #0x2d
	b _080F225E
_080F225C:
	movs r0, #0x3c
_080F225E:
	strh r0, [r5, #4]
_080F2260:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F2268
sub_080F2268: @ 0x080F2268
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r0, [r5, #0x70]
	mov sb, r0
	movs r2, #0xec
	movs r1, #8
	mov ip, r1
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r4, r5, #0
	adds r4, #0xa0
	strh r0, [r4]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r3, r5, #0
	adds r3, #0xa2
	strh r0, [r3]
	adds r6, r5, #0
	adds r6, #0x83
	ldrb r0, [r6]
	cmp r0, #0xc
	bne _080F2318
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r2, r2, #0x18
	asrs r0, r2, #0x18
	adds r1, r1, r0
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	subs r4, r1, r0
	mov sl, r2
	cmp r4, #0
	blt _080F22C8
	cmp r4, #5
	ble _080F22D6
	adds r7, r3, #0
	mov r8, r6
	mov r1, ip
	lsls r6, r1, #0x18
	b _080F2372
_080F22C8:
	subs r0, r0, r1
	adds r7, r3, #0
	mov r8, r6
	mov r3, ip
	lsls r6, r3, #0x18
	cmp r0, #5
	bgt _080F2372
_080F22D6:
	adds r3, r5, #0
	adds r3, #0xa2
	movs r4, #0
	ldrsh r1, [r3, r4]
	mov r0, ip
	lsls r2, r0, #0x18
	asrs r0, r2, #0x18
	adds r1, r1, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	subs r4, r1, r0
	adds r7, r3, #0
	adds r6, r2, #0
	cmp r4, #0
	blt _080F2300
	cmp r4, #5
	ble _080F230C
	movs r1, #0x83
	adds r1, r1, r5
	mov r8, r1
	b _080F2372
_080F2300:
	subs r0, r0, r1
	movs r3, #0x83
	adds r3, r3, r5
	mov r8, r3
	cmp r0, #5
	bgt _080F2372
_080F230C:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #0xa
	strb r0, [r1]
	mov r8, r1
	b _080F2372
_080F2318:
	cmp r0, #0xa
	bne _080F2356
	mov r0, sb
	adds r0, #0x83
	ldrb r0, [r0]
	adds r7, r3, #0
	mov r8, r6
	lsls r2, r2, #0x18
	mov sl, r2
	mov r4, ip
	lsls r6, r4, #0x18
	cmp r0, #1
	bne _080F2372
	movs r0, #0xb
	mov r1, r8
	strb r0, [r1]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	movs r3, #0xb
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xf
	bl sub_080F3974
	b _080F2372
_080F2356:
	mov r0, sb
	adds r0, #0x83
	ldrb r0, [r0]
	adds r7, r3, #0
	mov r8, r6
	lsls r2, r2, #0x18
	mov sl, r2
	mov r3, ip
	lsls r6, r3, #0x18
	cmp r0, #3
	bne _080F2372
	movs r0, #0xa
	mov r4, r8
	strb r0, [r4]
_080F2372:
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #2
	beq _080F2388
	cmp r0, #0xc
	beq _080F2388
	b _080F24E0
_080F2388:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	ldr r4, [r5, #0x44]
	ldr r2, _080F23C4 @ =0xFFFFFC00
	ands r4, r2
	movs r1, #0
	ldrsh r0, [r7, r1]
	asrs r1, r6, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	ble _080F23C8
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F2412
	strh r2, [r1]
	b _080F2412
	.align 2, 0
_080F23C4: .4byte 0xFFFFFC00
_080F23C8:
	cmp r4, r0
	bge _080F23E8
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F23E4 @ =0xFFFFFE40
	cmp r0, r2
	bge _080F2412
	strh r2, [r1]
	b _080F2412
	.align 2, 0
_080F23E4: .4byte 0xFFFFFE40
_080F23E8:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080F2404
	adds r0, r2, #0
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F2412
	b _080F2410
_080F2404:
	adds r0, r2, #0
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F2412
_080F2410:
	strh r3, [r1]
_080F2412:
	ldr r4, [r5, #0x40]
	ldr r2, _080F2454 @ =0xFFFFFC00
	ands r4, r2
	adds r0, r5, #0
	adds r0, #0xa0
	movs r1, #0
	ldrsh r0, [r0, r1]
	mov r3, sl
	asrs r1, r3, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	bge _080F245C
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F248C
	ldr r2, _080F2458 @ =0xFFFFFDC0
	b _080F25FC
	.align 2, 0
_080F2454: .4byte 0xFFFFFC00
_080F2458: .4byte 0xFFFFFDC0
_080F245C:
	cmp r4, r0
	ble _080F24B4
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F2494
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F2490 @ =0xFFFFFDC0
	cmp r0, r2
	blt _080F248C
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F248C
	b _080F262E
_080F248C:
	strh r2, [r1]
	b _080F262E
	.align 2, 0
_080F2490: .4byte 0xFFFFFDC0
_080F2494:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F248C
	ldr r2, _080F24B0 @ =0xFFFFFDC0
	b _080F25FC
	.align 2, 0
_080F24B0: .4byte 0xFFFFFDC0
_080F24B4:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080F24D4
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080F24D2
	b _080F262E
_080F24D2:
	b _080F262A
_080F24D4:
	ldr r4, _080F24DC @ =0xFFFFFE80
	adds r0, r2, r4
	b _080F2622
	.align 2, 0
_080F24DC: .4byte 0xFFFFFE80
_080F24E0:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	ldr r4, [r5, #0x44]
	ldr r2, _080F251C @ =0xFFFFFC00
	ands r4, r2
	movs r1, #0
	ldrsh r0, [r7, r1]
	asrs r1, r6, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	ble _080F2520
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa8
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F256C
	strh r2, [r1]
	b _080F256C
	.align 2, 0
_080F251C: .4byte 0xFFFFFC00
_080F2520:
	cmp r4, r0
	bge _080F2540
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F253C @ =0xFFFFFEB0
	cmp r0, r2
	bge _080F256C
	strh r2, [r1]
	b _080F256C
	.align 2, 0
_080F253C: .4byte 0xFFFFFEB0
_080F2540:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080F255E
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F256C
	b _080F256A
_080F255E:
	ldr r4, _080F25A8 @ =0xFFFFFF00
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F256C
_080F256A:
	strh r3, [r1]
_080F256C:
	ldr r4, [r5, #0x40]
	ldr r2, _080F25AC @ =0xFFFFFC00
	ands r4, r2
	adds r0, r5, #0
	adds r0, #0xa0
	movs r1, #0
	ldrsh r0, [r0, r1]
	mov r3, sl
	asrs r1, r3, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	bge _080F25B0
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F25F8
	movs r0, #0xe0
	b _080F262C
	.align 2, 0
_080F25A8: .4byte 0xFFFFFF00
_080F25AC: .4byte 0xFFFFFC00
_080F25B0:
	cmp r4, r0
	ble _080F2602
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F25E2
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	rsbs r2, r2, #0
	cmp r0, r2
	bge _080F25DA
	b _080F248C
_080F25DA:
	cmp r0, #0xe0
	ble _080F262E
	movs r0, #0xe0
	b _080F262C
_080F25E2:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F25F8
	movs r0, #0xe0
	b _080F262C
_080F25F8:
	movs r2, #0xe0
	rsbs r2, r2, #0
_080F25FC:
	cmp r0, r2
	bge _080F262E
	b _080F248C
_080F2602:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080F261E
	adds r0, r2, #0
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F262E
	b _080F262A
_080F261E:
	adds r0, r2, #0
	subs r0, #0x40
_080F2622:
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F262E
_080F262A:
	movs r0, #0
_080F262C:
	strh r0, [r1]
_080F262E:
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	mov r1, sb
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F264C
	adds r0, r5, #0
	bl sub_080F26AC
	b _080F269E
_080F264C:
	mov r4, r8
	ldrb r0, [r4]
	cmp r0, #0x12
	bne _080F2682
	adds r1, r5, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080F269E
	movs r0, #0xa
	strb r0, [r4]
	adds r0, r5, #0
	adds r0, #0x85
	ldrb r2, [r0]
	adds r1, r0, #0
	cmp r2, #2
	beq _080F2678
	cmp r2, #0xc
	bne _080F267C
_080F2678:
	movs r0, #0xc
	strb r0, [r4]
_080F267C:
	movs r0, #0
	strb r0, [r1]
	b _080F269E
_080F2682:
	cmp r0, #0xc
	beq _080F269E
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F269E
	movs r0, #0xa
	mov r3, r8
	strb r0, [r3]
	adds r0, r5, #0
	bl sub_080EFC18
_080F269E:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F26AC
sub_080F26AC: @ 0x080F26AC
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r4, #0
	movs r7, #0
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _080F26CA
	cmp r0, #0xc
	bne _080F26CC
_080F26CA:
	movs r7, #2
_080F26CC:
	adds r6, r5, #0
	adds r6, #0x83
	ldrb r0, [r6]
	cmp r0, #0xb
	bne _080F26F8
	movs r0, #1
	strb r0, [r6]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	movs r3, #9
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xd
	bl sub_080F3974
	movs r4, #1
_080F26F8:
	ldr r2, _080F2724 @ =sub_080F27A0
	adds r0, r5, #0
	movs r1, #0
	bl ObjectSetFunc
	cmp r4, #0
	beq _080F270A
	movs r0, #1
	strb r0, [r6]
_080F270A:
	cmp r7, #0
	beq _080F2710
	strb r7, [r6]
_080F2710:
	movs r0, #0xf8
	lsls r0, r0, #3
	strh r0, [r5, #0x24]
	ldr r0, [r5, #0x70]
	adds r0, #0xc4
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F2728
	movs r0, #8
	b _080F2796
	.align 2, 0
_080F2724: .4byte sub_080F27A0
_080F2728:
	ldr r2, _080F274C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F2750 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F2754 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #7
	ands r1, r0
	cmp r1, #7
	bhi _080F2798
	lsls r0, r1, #2
	ldr r1, _080F2758 @ =_080F275C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080F274C: .4byte gRngVal
_080F2750: .4byte 0x00196225
_080F2754: .4byte 0x3C6EF35F
_080F2758: .4byte _080F275C
_080F275C: @ jump table
	.4byte _080F277C @ case 0
	.4byte _080F2780 @ case 1
	.4byte _080F2794 @ case 2
	.4byte _080F2784 @ case 3
	.4byte _080F2788 @ case 4
	.4byte _080F278C @ case 5
	.4byte _080F2790 @ case 6
	.4byte _080F2794 @ case 7
_080F277C:
	movs r0, #0x78
	b _080F2796
_080F2780:
	movs r0, #0x5a
	b _080F2796
_080F2784:
	movs r0, #0x14
	b _080F2796
_080F2788:
	movs r0, #0x2d
	b _080F2796
_080F278C:
	movs r0, #0x5a
	b _080F2796
_080F2790:
	movs r0, #0x2d
	b _080F2796
_080F2794:
	movs r0, #0x3c
_080F2796:
	strh r0, [r5, #4]
_080F2798:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F27A0
sub_080F27A0: @ 0x080F27A0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r0, [r5, #0x70]
	mov sb, r0
	movs r2, #0xe8
	movs r1, #0xa
	mov ip, r1
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r3, r5, #0
	adds r3, #0xa0
	strh r0, [r3]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r4, r5, #0
	adds r4, #0xa2
	strh r0, [r4]
	adds r6, r5, #0
	adds r6, #0x83
	ldrb r0, [r6]
	cmp r0, #2
	bne _080F284C
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r2, r2, #0x18
	asrs r0, r2, #0x18
	adds r1, r1, r0
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	subs r3, r1, r0
	mov sl, r2
	cmp r3, #0
	blt _080F2800
	cmp r3, #5
	ble _080F280E
	adds r7, r4, #0
	mov r8, r6
	mov r1, ip
	lsls r6, r1, #0x18
	b _080F28A4
_080F2800:
	subs r0, r0, r1
	adds r7, r4, #0
	mov r8, r6
	mov r2, ip
	lsls r6, r2, #0x18
	cmp r0, #5
	bgt _080F28A4
_080F280E:
	adds r0, r5, #0
	adds r0, #0xa2
	movs r3, #0
	ldrsh r1, [r0, r3]
	mov r4, ip
	adds r3, r4, r1
	ldr r1, [r5, #0x44]
	asrs r1, r1, #8
	subs r2, r3, r1
	adds r7, r0, #0
	lsls r6, r4, #0x18
	cmp r2, #0
	blt _080F2834
	cmp r2, #5
	ble _080F2840
	movs r0, #0x83
	adds r0, r0, r5
	mov r8, r0
	b _080F28A4
_080F2834:
	subs r0, r1, r3
	movs r1, #0x83
	adds r1, r1, r5
	mov r8, r1
	cmp r0, #5
	bgt _080F28A4
_080F2840:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #0
	strb r0, [r1]
	mov r8, r1
	b _080F28A4
_080F284C:
	cmp r0, #0
	bne _080F2888
	mov r0, sb
	adds r0, #0x83
	ldrb r0, [r0]
	adds r7, r4, #0
	mov r8, r6
	lsls r2, r2, #0x18
	mov sl, r2
	mov r2, ip
	lsls r6, r2, #0x18
	cmp r0, #1
	bne _080F28A4
	mov r3, r8
	strb r0, [r3]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	movs r3, #9
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xd
	bl sub_080F3974
	b _080F28A4
_080F2888:
	mov r0, sb
	adds r0, #0x83
	ldrb r0, [r0]
	adds r7, r4, #0
	mov r8, r6
	lsls r2, r2, #0x18
	mov sl, r2
	mov r4, ip
	lsls r6, r4, #0x18
	cmp r0, #3
	bne _080F28A4
	movs r0, #0
	mov r1, r8
	strb r0, [r1]
_080F28A4:
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	mov r2, r8
	ldrb r0, [r2]
	cmp r0, #2
	beq _080F28BA
	cmp r0, #0xc
	beq _080F28BA
	b _080F2A14
_080F28BA:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r4, #0
	strb r0, [r1]
	ldr r3, [r5, #0x44]
	ldr r2, _080F28F8 @ =0xFFFFFC00
	ands r3, r2
	movs r1, #0
	ldrsh r0, [r7, r1]
	asrs r1, r6, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r3, r0
	ble _080F28FC
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F2946
	strh r2, [r1]
	b _080F2946
	.align 2, 0
_080F28F8: .4byte 0xFFFFFC00
_080F28FC:
	cmp r3, r0
	bge _080F291C
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F2918 @ =0xFFFFFE40
	cmp r0, r2
	bge _080F2946
	strh r2, [r1]
	b _080F2946
	.align 2, 0
_080F2918: .4byte 0xFFFFFE40
_080F291C:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F2938
	adds r0, r2, #0
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F2946
	b _080F2944
_080F2938:
	adds r0, r2, #0
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F2946
_080F2944:
	strh r4, [r1]
_080F2946:
	ldr r3, [r5, #0x40]
	ldr r2, _080F2988 @ =0xFFFFFC00
	ands r3, r2
	adds r0, r5, #0
	adds r0, #0xa0
	movs r4, #0
	ldrsh r0, [r0, r4]
	mov r4, sl
	asrs r1, r4, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r3, r0
	bge _080F2990
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F29C0
	ldr r2, _080F298C @ =0xFFFFFDC0
	b _080F2B30
	.align 2, 0
_080F2988: .4byte 0xFFFFFC00
_080F298C: .4byte 0xFFFFFDC0
_080F2990:
	cmp r3, r0
	ble _080F29E8
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F29C8
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F29C4 @ =0xFFFFFDC0
	cmp r0, r2
	blt _080F29C0
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F29C0
	b _080F2B62
_080F29C0:
	strh r2, [r1]
	b _080F2B62
	.align 2, 0
_080F29C4: .4byte 0xFFFFFDC0
_080F29C8:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F29C0
	ldr r2, _080F29E4 @ =0xFFFFFDC0
	b _080F2B30
	.align 2, 0
_080F29E4: .4byte 0xFFFFFDC0
_080F29E8:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F2A08
	movs r4, #0xc0
	lsls r4, r4, #1
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080F2A06
	b _080F2B62
_080F2A06:
	b _080F2B5E
_080F2A08:
	ldr r3, _080F2A10 @ =0xFFFFFE80
	adds r0, r2, r3
	b _080F2B56
	.align 2, 0
_080F2A10: .4byte 0xFFFFFE80
_080F2A14:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r4, #0
	strb r0, [r1]
	ldr r3, [r5, #0x44]
	ldr r2, _080F2A50 @ =0xFFFFFC00
	ands r3, r2
	movs r1, #0
	ldrsh r0, [r7, r1]
	asrs r1, r6, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r3, r0
	ble _080F2A54
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa8
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F2AA0
	strh r2, [r1]
	b _080F2AA0
	.align 2, 0
_080F2A50: .4byte 0xFFFFFC00
_080F2A54:
	cmp r3, r0
	bge _080F2A74
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F2A70 @ =0xFFFFFEB0
	cmp r0, r2
	bge _080F2AA0
	strh r2, [r1]
	b _080F2AA0
	.align 2, 0
_080F2A70: .4byte 0xFFFFFEB0
_080F2A74:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F2A92
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F2AA0
	b _080F2A9E
_080F2A92:
	ldr r3, _080F2ADC @ =0xFFFFFF00
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F2AA0
_080F2A9E:
	strh r4, [r1]
_080F2AA0:
	ldr r3, [r5, #0x40]
	ldr r2, _080F2AE0 @ =0xFFFFFC00
	ands r3, r2
	adds r0, r5, #0
	adds r0, #0xa0
	movs r4, #0
	ldrsh r0, [r0, r4]
	mov r4, sl
	asrs r1, r4, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r3, r0
	bge _080F2AE4
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F2B2C
	movs r0, #0xe0
	b _080F2B60
	.align 2, 0
_080F2ADC: .4byte 0xFFFFFF00
_080F2AE0: .4byte 0xFFFFFC00
_080F2AE4:
	cmp r3, r0
	ble _080F2B36
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F2B16
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	rsbs r2, r2, #0
	cmp r0, r2
	bge _080F2B0E
	b _080F29C0
_080F2B0E:
	cmp r0, #0xe0
	ble _080F2B62
	movs r0, #0xe0
	b _080F2B60
_080F2B16:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F2B2C
	movs r0, #0xe0
	b _080F2B60
_080F2B2C:
	movs r2, #0xe0
	rsbs r2, r2, #0
_080F2B30:
	cmp r0, r2
	bge _080F2B62
	b _080F29C0
_080F2B36:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F2B52
	adds r0, r2, #0
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F2B62
	b _080F2B5E
_080F2B52:
	adds r0, r2, #0
	subs r0, #0x40
_080F2B56:
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F2B62
_080F2B5E:
	movs r0, #0
_080F2B60:
	strh r0, [r1]
_080F2B62:
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	mov r4, sb
	ldr r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	bne _080F2B7C
	adds r0, r5, #0
	bl sub_080F2170
	b _080F2BCE
_080F2B7C:
	mov r3, r8
	ldrb r0, [r3]
	cmp r0, #8
	bne _080F2BB2
	adds r1, r5, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080F2BCE
	strb r0, [r3]
	adds r0, r5, #0
	adds r0, #0x85
	ldrb r2, [r0]
	adds r1, r0, #0
	cmp r2, #2
	beq _080F2BA8
	cmp r2, #0xc
	bne _080F2BAC
_080F2BA8:
	movs r0, #2
	strb r0, [r3]
_080F2BAC:
	movs r0, #0
	strb r0, [r1]
	b _080F2BCE
_080F2BB2:
	cmp r0, #2
	beq _080F2BCE
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F2BCE
	movs r0, #0
	mov r1, r8
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_080EFC18
_080F2BCE:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F2BDC
sub_080F2BDC: @ 0x080F2BDC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	str r5, [sp]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov ip, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov r8, r0
	movs r4, #0
	ldr r1, _080F2C20 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _080F2C24 @ =gUnk_020229E0
	movs r6, #0x56
	adds r6, r6, r5
	mov sb, r6
	ldr r6, [sp]
	adds r6, #0xc0
	b _080F2C3C
	.align 2, 0
_080F2C20: .4byte gUnk_020229D4
_080F2C24: .4byte gUnk_020229E0
_080F2C28:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080F2C44
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080F2C3C:
	cmp r0, #0
	bne _080F2C28
	orrs r2, r3
	str r2, [r1]
_080F2C44:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r7
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, ip
	strh r0, [r1, #6]
	mov r0, r8
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xbf
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sl
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, sb
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	str r0, [r6]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F2CA8
sub_080F2CA8: @ 0x080F2CA8
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _080F2CDC @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080F2CE0 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080F2CE4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r5, r0, r1
	b _080F2CEC
	.align 2, 0
_080F2CDC: .4byte ObjectMain
_080F2CE0: .4byte ObjectDestroy
_080F2CE4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
_080F2CEC:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	ldr r1, [r5, #8]
	movs r0, #0x40
	orrs r1, r0
	movs r0, #1
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r1, r0
	ldr r0, [r5, #0x5c]
	ldr r2, _080F2D6C @ =0x001080A0
	orrs r0, r2
	str r0, [r5, #0x5c]
	movs r0, #0x80
	lsls r0, r0, #9
	orrs r1, r0
	str r1, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080F2D70 @ =sub_080F5744
	str r0, [r5, #0x7c]
	movs r4, #4
	rsbs r4, r4, #0
	movs r2, #2
	rsbs r2, r2, #0
	movs r0, #6
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #8
	bl sub_0803E2B0
	movs r2, #8
	rsbs r2, r2, #0
	movs r0, #2
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #8
	bl sub_0803E308
	adds r0, r5, #0
	bl ObjectInitSprite
	adds r0, r5, #0
	bl sub_080F2D74
	movs r0, #0xb4
	strh r0, [r5, #4]
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080F2D6C: .4byte 0x001080A0
_080F2D70: .4byte sub_080F5744

	thumb_func_start sub_080F2D74
sub_080F2D74: @ 0x080F2D74
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r4, #0
	movs r7, #0
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _080F2D94
	cmp r0, #0xc
	bne _080F2D96
_080F2D94:
	movs r7, #0xc
_080F2D96:
	adds r6, r5, #0
	adds r6, #0x83
	ldrb r0, [r6]
	cmp r0, #1
	bne _080F2DC2
	movs r0, #0xb
	strb r0, [r6]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	movs r3, #9
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xd
	bl sub_080F3974
	movs r4, #1
_080F2DC2:
	ldr r2, _080F2DF0 @ =sub_080F2E6C
	adds r0, r5, #0
	movs r1, #0xa
	bl ObjectSetFunc
	cmp r4, #0
	beq _080F2DD4
	movs r0, #0xb
	strb r0, [r6]
_080F2DD4:
	cmp r7, #0
	beq _080F2DDA
	strb r7, [r6]
_080F2DDA:
	movs r0, #0xf8
	lsls r0, r0, #3
	strh r0, [r5, #0x24]
	ldr r0, [r5, #0x70]
	adds r0, #0xc4
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F2DF4
	movs r0, #8
	b _080F2E62
	.align 2, 0
_080F2DF0: .4byte sub_080F2E6C
_080F2DF4:
	ldr r2, _080F2E18 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F2E1C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F2E20 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #7
	ands r1, r0
	cmp r1, #7
	bhi _080F2E64
	lsls r0, r1, #2
	ldr r1, _080F2E24 @ =_080F2E28
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080F2E18: .4byte gRngVal
_080F2E1C: .4byte 0x00196225
_080F2E20: .4byte 0x3C6EF35F
_080F2E24: .4byte _080F2E28
_080F2E28: @ jump table
	.4byte _080F2E48 @ case 0
	.4byte _080F2E4C @ case 1
	.4byte _080F2E60 @ case 2
	.4byte _080F2E50 @ case 3
	.4byte _080F2E54 @ case 4
	.4byte _080F2E58 @ case 5
	.4byte _080F2E5C @ case 6
	.4byte _080F2E60 @ case 7
_080F2E48:
	movs r0, #0x78
	b _080F2E62
_080F2E4C:
	movs r0, #0x5a
	b _080F2E62
_080F2E50:
	movs r0, #0x14
	b _080F2E62
_080F2E54:
	movs r0, #0x2d
	b _080F2E62
_080F2E58:
	movs r0, #0x5a
	b _080F2E62
_080F2E5C:
	movs r0, #0x2d
	b _080F2E62
_080F2E60:
	movs r0, #0x3c
_080F2E62:
	strh r0, [r5, #4]
_080F2E64:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F2E6C
sub_080F2E6C: @ 0x080F2E6C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r0, [r5, #0x70]
	mov sl, r0
	movs r6, #0xa
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r2, r5, #0
	adds r2, #0xa0
	strh r0, [r2]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r4, r5, #0
	adds r4, #0xa2
	strh r0, [r4]
	subs r1, #0x29
	ldrb r0, [r1]
	cmp r0, #0xc
	bne _080F2F0E
	movs r3, #0
	ldrsh r0, [r2, r3]
	adds r3, r0, #0
	adds r3, #0x18
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	subs r2, r3, r0
	cmp r2, #0
	blt _080F2EC2
	cmp r2, #5
	ble _080F2ED0
	adds r7, r4, #0
	mov sb, r1
	lsls r6, r6, #0x18
	mov r8, r6
	b _080F2F5C
_080F2EC2:
	subs r0, r0, r3
	adds r7, r4, #0
	mov sb, r1
	lsls r1, r6, #0x18
	mov r8, r1
	cmp r0, #5
	bgt _080F2F5C
_080F2ED0:
	adds r0, r5, #0
	adds r0, #0xa2
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r3, r6, r1
	ldr r1, [r5, #0x44]
	asrs r1, r1, #8
	subs r2, r3, r1
	adds r7, r0, #0
	lsls r6, r6, #0x18
	mov r8, r6
	cmp r2, #0
	blt _080F2EF6
	cmp r2, #5
	ble _080F2F02
	movs r3, #0x83
	adds r3, r3, r5
	mov sb, r3
	b _080F2F5C
_080F2EF6:
	subs r0, r1, r3
	movs r6, #0x83
	adds r6, r6, r5
	mov sb, r6
	cmp r0, #5
	bgt _080F2F5C
_080F2F02:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #0xa
	strb r0, [r1]
	mov sb, r1
	b _080F2F5C
_080F2F0E:
	cmp r0, #0xa
	bne _080F2F46
	mov r0, sl
	adds r0, #0x83
	ldrb r0, [r0]
	adds r7, r4, #0
	mov sb, r1
	lsls r6, r6, #0x18
	mov r8, r6
	cmp r0, #1
	bne _080F2F5C
	movs r0, #0xb
	strb r0, [r1]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	movs r3, #9
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xd
	bl sub_080F3974
	b _080F2F5C
_080F2F46:
	mov r0, sl
	adds r0, #0x83
	ldrb r0, [r0]
	adds r7, r4, #0
	mov sb, r1
	lsls r1, r6, #0x18
	mov r8, r1
	cmp r0, #3
	bne _080F2F5C
	mov r2, sb
	strb r6, [r2]
_080F2F5C:
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	mov r3, sb
	ldrb r0, [r3]
	cmp r0, #2
	beq _080F2F72
	cmp r0, #0xc
	beq _080F2F72
	b _080F30C8
_080F2F72:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r4, #0
	strb r0, [r1]
	ldr r3, [r5, #0x44]
	ldr r2, _080F2FB0 @ =0xFFFFFC00
	ands r3, r2
	movs r6, #0
	ldrsh r0, [r7, r6]
	mov r6, r8
	asrs r1, r6, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r3, r0
	ble _080F2FB4
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F2FFE
	strh r2, [r1]
	b _080F2FFE
	.align 2, 0
_080F2FB0: .4byte 0xFFFFFC00
_080F2FB4:
	cmp r3, r0
	bge _080F2FD4
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F2FD0 @ =0xFFFFFE40
	cmp r0, r2
	bge _080F2FFE
	strh r2, [r1]
	b _080F2FFE
	.align 2, 0
_080F2FD0: .4byte 0xFFFFFE40
_080F2FD4:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F2FF0
	adds r0, r2, #0
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F2FFE
	b _080F2FFC
_080F2FF0:
	adds r0, r2, #0
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F2FFE
_080F2FFC:
	strh r4, [r1]
_080F2FFE:
	ldr r3, [r5, #0x40]
	ldr r1, _080F303C @ =0xFFFFFC00
	ands r3, r1
	adds r0, r5, #0
	adds r0, #0xa0
	movs r6, #0
	ldrsh r0, [r0, r6]
	adds r0, #0x18
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	bge _080F3044
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F3074
	ldr r2, _080F3040 @ =0xFFFFFDC0
	b _080F31E4
	.align 2, 0
_080F303C: .4byte 0xFFFFFC00
_080F3040: .4byte 0xFFFFFDC0
_080F3044:
	cmp r3, r0
	ble _080F309C
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F307C
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F3078 @ =0xFFFFFDC0
	cmp r0, r2
	blt _080F3074
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F3074
	b _080F3216
_080F3074:
	strh r2, [r1]
	b _080F3216
	.align 2, 0
_080F3078: .4byte 0xFFFFFDC0
_080F307C:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F3074
	ldr r2, _080F3098 @ =0xFFFFFDC0
	b _080F31E4
	.align 2, 0
_080F3098: .4byte 0xFFFFFDC0
_080F309C:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F30BC
	movs r6, #0xc0
	lsls r6, r6, #1
	adds r0, r2, r6
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080F30BA
	b _080F3216
_080F30BA:
	b _080F3212
_080F30BC:
	ldr r3, _080F30C4 @ =0xFFFFFE80
	adds r0, r2, r3
	b _080F320A
	.align 2, 0
_080F30C4: .4byte 0xFFFFFE80
_080F30C8:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r4, #0
	strb r0, [r1]
	ldr r3, [r5, #0x44]
	ldr r2, _080F3108 @ =0xFFFFFC00
	ands r3, r2
	movs r6, #0
	ldrsh r0, [r7, r6]
	mov r6, r8
	asrs r1, r6, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r3, r0
	ble _080F310C
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa8
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F3158
	strh r2, [r1]
	b _080F3158
	.align 2, 0
_080F3108: .4byte 0xFFFFFC00
_080F310C:
	cmp r3, r0
	bge _080F312C
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F3128 @ =0xFFFFFEB0
	cmp r0, r2
	bge _080F3158
	strh r2, [r1]
	b _080F3158
	.align 2, 0
_080F3128: .4byte 0xFFFFFEB0
_080F312C:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F314A
	movs r6, #0x80
	lsls r6, r6, #1
	adds r0, r2, r6
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F3158
	b _080F3156
_080F314A:
	ldr r3, _080F3190 @ =0xFFFFFF00
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F3158
_080F3156:
	strh r4, [r1]
_080F3158:
	ldr r3, [r5, #0x40]
	ldr r1, _080F3194 @ =0xFFFFFC00
	ands r3, r1
	adds r0, r5, #0
	adds r0, #0xa0
	movs r6, #0
	ldrsh r0, [r0, r6]
	adds r0, #0x18
	lsls r0, r0, #8
	ands r0, r1
	cmp r3, r0
	bge _080F3198
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F31E0
	movs r0, #0xe0
	b _080F3214
	.align 2, 0
_080F3190: .4byte 0xFFFFFF00
_080F3194: .4byte 0xFFFFFC00
_080F3198:
	cmp r3, r0
	ble _080F31EA
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F31CA
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	rsbs r2, r2, #0
	cmp r0, r2
	bge _080F31C2
	b _080F3074
_080F31C2:
	cmp r0, #0xe0
	ble _080F3216
	movs r0, #0xe0
	b _080F3214
_080F31CA:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F31E0
	movs r0, #0xe0
	b _080F3214
_080F31E0:
	movs r2, #0xe0
	rsbs r2, r2, #0
_080F31E4:
	cmp r0, r2
	bge _080F3216
	b _080F3074
_080F31EA:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F3206
	adds r0, r2, #0
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F3216
	b _080F3212
_080F3206:
	adds r0, r2, #0
	subs r0, #0x40
_080F320A:
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F3216
_080F3212:
	movs r0, #0
_080F3214:
	strh r0, [r1]
_080F3216:
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	mov r6, sl
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F3234
	adds r0, r5, #0
	bl sub_080F3294
	b _080F3286
_080F3234:
	mov r3, sb
	ldrb r0, [r3]
	cmp r0, #0x12
	bne _080F326A
	adds r1, r5, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080F3286
	movs r0, #0xa
	strb r0, [r3]
	adds r0, r5, #0
	adds r0, #0x85
	ldrb r2, [r0]
	adds r1, r0, #0
	cmp r2, #2
	beq _080F3260
	cmp r2, #0xc
	bne _080F3264
_080F3260:
	movs r0, #0xc
	strb r0, [r3]
_080F3264:
	movs r0, #0
	strb r0, [r1]
	b _080F3286
_080F326A:
	cmp r0, #0xc
	beq _080F3286
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F3286
	movs r0, #0xa
	mov r1, sb
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_080EFC18
_080F3286:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F3294
sub_080F3294: @ 0x080F3294
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r4, #0
	movs r7, #0
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _080F32B2
	cmp r0, #0xc
	bne _080F32B4
_080F32B2:
	movs r7, #2
_080F32B4:
	adds r6, r5, #0
	adds r6, #0x83
	ldrb r0, [r6]
	cmp r0, #0xb
	bne _080F32E0
	movs r0, #1
	strb r0, [r6]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	movs r3, #0xb
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xf
	bl sub_080F3974
	movs r4, #1
_080F32E0:
	ldr r2, _080F330C @ =sub_080F3388
	adds r0, r5, #0
	movs r1, #0
	bl ObjectSetFunc
	cmp r4, #0
	beq _080F32F2
	movs r0, #1
	strb r0, [r6]
_080F32F2:
	cmp r7, #0
	beq _080F32F8
	strb r7, [r6]
_080F32F8:
	movs r0, #0xd8
	lsls r0, r0, #3
	strh r0, [r5, #0x24]
	ldr r0, [r5, #0x70]
	adds r0, #0xc4
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F3310
	movs r0, #8
	b _080F337E
	.align 2, 0
_080F330C: .4byte sub_080F3388
_080F3310:
	ldr r2, _080F3334 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F3338 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F333C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #7
	ands r1, r0
	cmp r1, #7
	bhi _080F3380
	lsls r0, r1, #2
	ldr r1, _080F3340 @ =_080F3344
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080F3334: .4byte gRngVal
_080F3338: .4byte 0x00196225
_080F333C: .4byte 0x3C6EF35F
_080F3340: .4byte _080F3344
_080F3344: @ jump table
	.4byte _080F3364 @ case 0
	.4byte _080F3368 @ case 1
	.4byte _080F337C @ case 2
	.4byte _080F336C @ case 3
	.4byte _080F3370 @ case 4
	.4byte _080F3374 @ case 5
	.4byte _080F3378 @ case 6
	.4byte _080F337C @ case 7
_080F3364:
	movs r0, #0x78
	b _080F337E
_080F3368:
	movs r0, #0x5a
	b _080F337E
_080F336C:
	movs r0, #0x14
	b _080F337E
_080F3370:
	movs r0, #0x2d
	b _080F337E
_080F3374:
	movs r0, #0x5a
	b _080F337E
_080F3378:
	movs r0, #0x2d
	b _080F337E
_080F337C:
	movs r0, #0x3c
_080F337E:
	strh r0, [r5, #4]
_080F3380:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F3388
sub_080F3388: @ 0x080F3388
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r0, [r5, #0x70]
	mov sb, r0
	movs r1, #0x14
	mov sl, r1
	movs r2, #8
	mov ip, r2
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r4, r5, #0
	adds r4, #0xa0
	strh r0, [r4]
	ldr r0, [r1]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	adds r3, r5, #0
	adds r3, #0xa2
	strh r0, [r3]
	adds r2, r5, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #2
	bne _080F3436
	movs r1, #0
	ldrsh r0, [r4, r1]
	adds r1, r0, #0
	adds r1, #0x14
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	subs r4, r1, r0
	cmp r4, #0
	blt _080F33E6
	cmp r4, #5
	ble _080F33F4
	adds r6, r3, #0
	mov r8, r2
	mov r2, ip
	lsls r7, r2, #0x18
	b _080F3482
_080F33E6:
	subs r0, r0, r1
	adds r6, r3, #0
	mov r8, r2
	mov r3, ip
	lsls r7, r3, #0x18
	cmp r0, #5
	bgt _080F3482
_080F33F4:
	adds r3, r5, #0
	adds r3, #0xa2
	movs r4, #0
	ldrsh r1, [r3, r4]
	mov r0, ip
	lsls r2, r0, #0x18
	asrs r0, r2, #0x18
	adds r1, r1, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	subs r4, r1, r0
	adds r6, r3, #0
	adds r7, r2, #0
	cmp r4, #0
	blt _080F341E
	cmp r4, #5
	ble _080F342A
	movs r1, #0x83
	adds r1, r1, r5
	mov r8, r1
	b _080F3482
_080F341E:
	subs r0, r0, r1
	movs r2, #0x83
	adds r2, r2, r5
	mov r8, r2
	cmp r0, #5
	bgt _080F3482
_080F342A:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #0
	strb r0, [r1]
	mov r8, r1
	b _080F3482
_080F3436:
	cmp r0, #0
	bne _080F346C
	mov r0, sb
	adds r0, #0x83
	ldrb r0, [r0]
	adds r6, r3, #0
	mov r8, r2
	mov r3, ip
	lsls r7, r3, #0x18
	cmp r0, #1
	bne _080F3482
	strb r0, [r2]
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	movs r3, #0xb
	bl sub_080F3974
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	movs r3, #0xf
	bl sub_080F3974
	b _080F3482
_080F346C:
	mov r0, sb
	adds r0, #0x83
	ldrb r0, [r0]
	adds r6, r3, #0
	mov r8, r2
	mov r4, ip
	lsls r7, r4, #0x18
	cmp r0, #3
	bne _080F3482
	movs r0, #0
	strb r0, [r2]
_080F3482:
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #2
	beq _080F3498
	cmp r0, #0xc
	beq _080F3498
	b _080F35EC
_080F3498:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	ldr r4, [r5, #0x44]
	ldr r2, _080F34D4 @ =0xFFFFFC00
	ands r4, r2
	movs r1, #0
	ldrsh r0, [r6, r1]
	asrs r1, r7, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	ble _080F34D8
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F3522
	strh r2, [r1]
	b _080F3522
	.align 2, 0
_080F34D4: .4byte 0xFFFFFC00
_080F34D8:
	cmp r4, r0
	bge _080F34F8
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F34F4 @ =0xFFFFFE40
	cmp r0, r2
	bge _080F3522
	strh r2, [r1]
	b _080F3522
	.align 2, 0
_080F34F4: .4byte 0xFFFFFE40
_080F34F8:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080F3514
	adds r0, r2, #0
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F3522
	b _080F3520
_080F3514:
	adds r0, r2, #0
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F3522
_080F3520:
	strh r3, [r1]
_080F3522:
	ldr r4, [r5, #0x40]
	ldr r1, _080F3560 @ =0xFFFFFC00
	ands r4, r1
	adds r0, r5, #0
	adds r0, #0xa0
	movs r2, #0
	ldrsh r0, [r0, r2]
	add r0, sl
	lsls r0, r0, #8
	ands r0, r1
	cmp r4, r0
	bge _080F3568
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F3598
	ldr r2, _080F3564 @ =0xFFFFFDC0
	b _080F3704
	.align 2, 0
_080F3560: .4byte 0xFFFFFC00
_080F3564: .4byte 0xFFFFFDC0
_080F3568:
	cmp r4, r0
	ble _080F35C0
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F35A0
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F359C @ =0xFFFFFDC0
	cmp r0, r2
	blt _080F3598
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F3598
	b _080F3736
_080F3598:
	strh r2, [r1]
	b _080F3736
	.align 2, 0
_080F359C: .4byte 0xFFFFFDC0
_080F35A0:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _080F3598
	ldr r2, _080F35BC @ =0xFFFFFDC0
	b _080F3704
	.align 2, 0
_080F35BC: .4byte 0xFFFFFDC0
_080F35C0:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F35E0
	movs r4, #0xc0
	lsls r4, r4, #1
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080F35DE
	b _080F3736
_080F35DE:
	b _080F3732
_080F35E0:
	ldr r3, _080F35E8 @ =0xFFFFFE80
	adds r0, r2, r3
	b _080F372A
	.align 2, 0
_080F35E8: .4byte 0xFFFFFE80
_080F35EC:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	ldr r4, [r5, #0x44]
	ldr r2, _080F3628 @ =0xFFFFFC00
	ands r4, r2
	movs r1, #0
	ldrsh r0, [r6, r1]
	asrs r1, r7, #0x18
	adds r0, r0, r1
	lsls r0, r0, #8
	ands r0, r2
	cmp r4, r0
	ble _080F362C
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa8
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F3678
	strh r2, [r1]
	b _080F3678
	.align 2, 0
_080F3628: .4byte 0xFFFFFC00
_080F362C:
	cmp r4, r0
	bge _080F364C
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F3648 @ =0xFFFFFEB0
	cmp r0, r2
	bge _080F3678
	strh r2, [r1]
	b _080F3678
	.align 2, 0
_080F3648: .4byte 0xFFFFFEB0
_080F364C:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080F366A
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F3678
	b _080F3676
_080F366A:
	ldr r4, _080F36B0 @ =0xFFFFFF00
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F3678
_080F3676:
	strh r3, [r1]
_080F3678:
	ldr r4, [r5, #0x40]
	ldr r1, _080F36B4 @ =0xFFFFFC00
	ands r4, r1
	adds r0, r5, #0
	adds r0, #0xa0
	movs r2, #0
	ldrsh r0, [r0, r2]
	add r0, sl
	lsls r0, r0, #8
	ands r0, r1
	cmp r4, r0
	bge _080F36B8
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F3700
	movs r0, #0xe0
	b _080F3734
	.align 2, 0
_080F36B0: .4byte 0xFFFFFF00
_080F36B4: .4byte 0xFFFFFC00
_080F36B8:
	cmp r4, r0
	ble _080F370A
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F36EA
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	rsbs r2, r2, #0
	cmp r0, r2
	bge _080F36E2
	b _080F3598
_080F36E2:
	cmp r0, #0xe0
	ble _080F3736
	movs r0, #0xe0
	b _080F3734
_080F36EA:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F3700
	movs r0, #0xe0
	b _080F3734
_080F3700:
	movs r2, #0xe0
	rsbs r2, r2, #0
_080F3704:
	cmp r0, r2
	bge _080F3736
	b _080F3598
_080F370A:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080F3726
	adds r0, r2, #0
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080F3736
	b _080F3732
_080F3726:
	adds r0, r2, #0
	subs r0, #0x40
_080F372A:
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080F3736
_080F3732:
	movs r0, #0
_080F3734:
	strh r0, [r1]
_080F3736:
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	mov r4, sb
	ldr r0, [r4, #8]
	ands r0, r1
	cmp r0, #0
	bne _080F3750
	adds r0, r5, #0
	bl sub_080F2D74
	b _080F37A2
_080F3750:
	mov r4, r8
	ldrb r0, [r4]
	cmp r0, #8
	bne _080F3786
	adds r1, r5, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080F37A2
	strb r0, [r4]
	adds r0, r5, #0
	adds r0, #0x85
	ldrb r2, [r0]
	adds r1, r0, #0
	cmp r2, #2
	beq _080F377C
	cmp r2, #0xc
	bne _080F3780
_080F377C:
	movs r0, #2
	strb r0, [r4]
_080F3780:
	movs r0, #0
	strb r0, [r1]
	b _080F37A2
_080F3786:
	cmp r0, #2
	beq _080F37A2
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F37A2
	movs r0, #0
	mov r1, r8
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_080EFC18
_080F37A2:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F37B0
sub_080F37B0: @ 0x080F37B0
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, _080F37E0 @ =sub_080F388C
	movs r2, #0xd4
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080F37E4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080F37EC
	.align 2, 0
_080F37E0: .4byte sub_080F388C
_080F37E4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080F37EC:
	adds r4, r0, #0
	bl sub_0803E380
	movs r1, #0
	movs r0, #2
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	str r5, [r4, #0x70]
	strh r1, [r4, #4]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x60
	strh r1, [r0]
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _080F3864 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r3, #1
	adds r0, r3, #0
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080F383C
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
_080F383C:
	adds r0, r4, #0
	adds r0, #0x63
	strb r3, [r0]
	ldr r2, _080F3868 @ =0x10000400
	str r2, [r4, #8]
	ldr r0, _080F386C @ =0x20000103
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r5, #8]
	ands r0, r3
	cmp r0, #0
	beq _080F3870
	adds r0, r3, #0
	orrs r0, r2
	str r0, [r4, #8]
	b _080F3872
	.align 2, 0
_080F3864: .4byte gUnk_03000510
_080F3868: .4byte 0x10000400
_080F386C: .4byte 0x20000103
_080F3870:
	str r2, [r4, #8]
_080F3872:
	movs r1, #6
	rsbs r1, r1, #0
	movs r0, #0x18
	str r0, [sp]
	adds r0, r4, #0
	movs r2, #0xc
	movs r3, #6
	bl sub_0803E2B0
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080F388C
sub_080F388C: @ 0x080F388C
	push {r4, r5, r6, r7, lr}
	ldr r0, _080F38A8 @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080F38AC
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080F38B4
	.align 2, 0
_080F38A8: .4byte gCurTask
_080F38AC:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080F38B4:
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	ldr r0, [r5, #8]
	movs r7, #0x80
	lsls r7, r7, #5
	ands r0, r7
	cmp r0, #0
	beq _080F38CA
	ldr r0, [r4, #8]
	orrs r0, r7
	str r0, [r4, #8]
_080F38CA:
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r6, r4, #0
	adds r6, #0x56
	strb r0, [r6]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	adds r0, r4, #0
	bl sub_0806F780
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F3966
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _080F38FC
	ldr r0, [r4, #8]
	orrs r0, r7
	str r0, [r4, #8]
	b _080F3966
_080F38FC:
	ldr r0, [r4, #8]
	movs r1, #0x90
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	bne _080F3966
	ldrb r0, [r6]
	cmp r0, #0xff
	beq _080F392C
	ldr r2, _080F3924 @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080F3928 @ =0x0000065E
	adds r0, r0, r1
	ldrb r1, [r0]
	b _080F392E
	.align 2, 0
_080F3924: .4byte gCurLevelInfo
_080F3928: .4byte 0x0000065E
_080F392C:
	movs r1, #0xff
_080F392E:
	cmp r1, #0xff
	beq _080F3966
	lsls r3, r1, #6
	ldrb r0, [r4]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _080F396C @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r2, [r4]
	adds r1, r1, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080F3970 @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r4, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_080F3966:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F396C: .4byte gUnk_02022EB0
_080F3970: .4byte gUnk_02022F50

	thumb_func_start sub_080F3974
sub_080F3974: @ 0x080F3974
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r6, r0, #0
	adds r7, r1, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r3, r3, #0x18
	lsrs r5, r3, #0x18
	ldr r0, _080F39B4 @ =sub_080F3A98
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080F39B8 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080F39BC
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080F39C4
	.align 2, 0
_080F39B4: .4byte sub_080F3A98
_080F39B8: .4byte sub_0803DCCC
_080F39BC:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080F39C4:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r6, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r6, #0x44]
	str r0, [r4, #0x38]
	str r6, [r4, #0x44]
	adds r0, r6, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x42
	strh r0, [r1]
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F39F4
	ldrh r0, [r4, #6]
	orrs r0, r1
	strh r0, [r4, #6]
_080F39F4:
	ldrh r0, [r6, #0x24]
	movs r1, #0xf8
	lsls r1, r1, #3
	ands r1, r0
	lsls r1, r1, #0xa
	ldr r0, _080F3A74 @ =0xFFFF0000
	adds r1, r1, r0
	lsrs r2, r1, #0x10
	adds r0, r5, #0
	subs r0, #0xc
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bls _080F3A14
	cmp r5, #0x27
	bls _080F3A1A
_080F3A14:
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
_080F3A1A:
	adds r1, r4, #0
	adds r1, #0xc
	str r5, [sp]
	str r2, [sp, #4]
	adds r0, r4, #0
	adds r2, r7, #0
	mov r3, r8
	bl sub_080709F8
	movs r3, #0
	strh r7, [r4, #8]
	adds r5, r4, #0
	adds r5, #0x2b
	strb r3, [r5]
	ldr r2, _080F3A78 @ =gUnk_02020EE0
	ldr r0, _080F3A7C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F3A80
	movs r7, #0xcf
	lsls r7, r7, #2
	adds r0, r7, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080F3A82
	adds r0, r7, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080F3A82
	.align 2, 0
_080F3A74: .4byte 0xFFFF0000
_080F3A78: .4byte gUnk_02020EE0
_080F3A7C: .4byte gUnk_0203AD3C
_080F3A80:
	strb r3, [r5]
_080F3A82:
	adds r0, r6, #0
	adds r0, #0x83
	ldrb r0, [r0]
	strh r0, [r4, #4]
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F3A98
sub_080F3A98: @ 0x080F3A98
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r2, _080F3ABC @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080F3AC0
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080F3AC8
	.align 2, 0
_080F3ABC: .4byte gCurTask
_080F3AC0:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080F3AC8:
	adds r5, r0, #0
	ldr r0, [r5, #0x44]
	mov r8, r0
	ldrh r4, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r4
	cmp r0, #0
	beq _080F3AE4
	ldr r0, [r2]
	bl TaskDestroy
	b _080F3D1A
_080F3AE4:
	mov r6, r8
	ldr r3, [r6, #8]
	ands r3, r1
	cmp r3, #0
	beq _080F3AF6
	adds r0, r1, #0
	orrs r0, r4
	strh r0, [r5, #6]
	b _080F3D1A
_080F3AF6:
	ldr r2, _080F3B40 @ =gUnk_02020EE0
	ldr r0, _080F3B44 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r1, [r7]
	cmp r0, r1
	bne _080F3B48
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F3B4E
	movs r6, #0xcf
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080F3B4E
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080F3B4E
	.align 2, 0
_080F3B40: .4byte gUnk_02020EE0
_080F3B44: .4byte gUnk_0203AD3C
_080F3B48:
	adds r0, r5, #0
	adds r0, #0x2b
	strb r3, [r0]
_080F3B4E:
	ldr r2, _080F3BB4 @ =gUnk_02020EE0
	ldr r0, _080F3BB8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r7]
	cmp r0, r6
	bne _080F3BFC
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r1
	cmp r0, #0
	beq _080F3BC4
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080F3C24
	movs r1, #8
	ldrsh r0, [r5, r1]
	ldrh r1, [r5, #0x18]
	adds r2, r5, #0
	adds r2, #0x26
	ldrb r2, [r2]
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080F3BBC @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080F3BC0 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080F3C24
	.align 2, 0
_080F3BB4: .4byte gUnk_02020EE0
_080F3BB8: .4byte gUnk_0203AD3C
_080F3BBC: .4byte 0xFFF7FFFF
_080F3BC0: .4byte 0x0400000A
_080F3BC4:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080F3C24
	movs r6, #8
	ldrsh r0, [r5, r6]
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080F3BF4 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080F3BF8 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080F3C24
	.align 2, 0
_080F3BF4: .4byte 0xFFF7FFFF
_080F3BF8: .4byte 0x0400000A
_080F3BFC:
	ldr r2, [r5, #0xc]
	cmp r2, #0
	beq _080F3C1A
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080F3C1A
	adds r0, r2, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080F3C1A:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080F3C24:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080F3C78
	ldrb r0, [r3]
	cmp r0, #0
	beq _080F3C42
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080F3C42
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080F3C42:
	cmp r3, #0
	beq _080F3C78
	ldr r0, _080F3C74 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080F3CE4
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080F3CE4
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080F3D1A
	.align 2, 0
_080F3C74: .4byte gUnk_03000510
_080F3C78:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080F3CDC @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _080F3CB6
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080F3CB6
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080F3CB6
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080F3CB6
	movs r3, #4
_080F3CB6:
	ldr r0, _080F3CE0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080F3CE4
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080F3CE4
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080F3D1A
	.align 2, 0
_080F3CDC: .4byte gUnk_02020EE0
_080F3CE0: .4byte gUnk_03000510
_080F3CE4:
	ldrh r1, [r5, #6]
	movs r0, #4
	movs r3, #0
	adds r2, r0, #0
	orrs r2, r1
	strh r2, [r5, #6]
	mov r1, r8
	ldr r0, [r1, #0x40]
	str r0, [r5, #0x34]
	ldr r0, [r1, #0x44]
	str r0, [r5, #0x38]
	movs r6, #4
	ldrsh r1, [r5, r6]
	mov r0, r8
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r1, r0
	beq _080F3D14
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	orrs r2, r0
	strh r2, [r5, #6]
	b _080F3D1A
_080F3D14:
	adds r0, r5, #0
	bl sub_0806FAC8
_080F3D1A:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F3D28
sub_080F3D28: @ 0x080F3D28
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	ldr r0, _080F3D5C @ =sub_080F3E40
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080F3D60 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080F3D64
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080F3D6C
	.align 2, 0
_080F3D5C: .4byte sub_080F3E40
_080F3D60: .4byte sub_0803DCCC
_080F3D64:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080F3D6C:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x42
	strh r0, [r1]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F3D9C
	ldrh r0, [r4, #6]
	orrs r0, r1
	strh r0, [r4, #6]
_080F3D9C:
	cmp r6, #0
	beq _080F3DC4
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r4, #0x3c]
	adds r0, #0x80
	strh r0, [r4, #0x3e]
	adds r1, r4, #0
	adds r1, #0xc
	movs r3, #0xcf
	lsls r3, r3, #2
	movs r0, #0x22
	str r0, [sp]
	movs r0, #0x17
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #9
	bl sub_080709F8
	b _080F3DE8
_080F3DC4:
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r4, #0x3c]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r4, #0x3e]
	adds r1, r4, #0
	adds r1, #0xc
	movs r3, #0xcf
	lsls r3, r3, #2
	movs r0, #0x23
	str r0, [sp]
	movs r0, #0x17
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #6
	bl sub_080709F8
_080F3DE8:
	adds r5, r4, #0
	adds r5, #0x2b
	movs r3, #0
	strb r3, [r5]
	ldr r2, _080F3E2C @ =gUnk_02020EE0
	ldr r0, _080F3E30 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F3E34
	movs r4, #0xcf
	lsls r4, r4, #2
	adds r0, r4, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080F3E36
	adds r0, r4, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080F3E36
	.align 2, 0
_080F3E2C: .4byte gUnk_02020EE0
_080F3E30: .4byte gUnk_0203AD3C
_080F3E34:
	strb r3, [r5]
_080F3E36:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F3E40
sub_080F3E40: @ 0x080F3E40
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r2, _080F3E64 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080F3E68
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080F3E70
	.align 2, 0
_080F3E64: .4byte gCurTask
_080F3E68:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080F3E70:
	adds r5, r0, #0
	ldr r0, [r5, #0x44]
	mov r8, r0
	ldrh r4, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r4
	cmp r0, #0
	beq _080F3E8C
	ldr r0, [r2]
	bl TaskDestroy
	b _080F4184
_080F3E8C:
	mov r2, r8
	ldr r3, [r2, #8]
	ands r3, r1
	cmp r3, #0
	beq _080F3E9E
	adds r0, r1, #0
	orrs r0, r4
	strh r0, [r5, #6]
	b _080F4184
_080F3E9E:
	ldr r2, _080F3EE8 @ =gUnk_02020EE0
	ldr r0, _080F3EEC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r6, [r7]
	cmp r0, r6
	bne _080F3EF0
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F3EF6
	movs r6, #0xcf
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080F3EF6
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080F3EF6
	.align 2, 0
_080F3EE8: .4byte gUnk_02020EE0
_080F3EEC: .4byte gUnk_0203AD3C
_080F3EF0:
	adds r0, r5, #0
	adds r0, #0x2b
	strb r3, [r0]
_080F3EF6:
	ldr r2, _080F3F5C @ =gUnk_02020EE0
	ldr r0, _080F3F60 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	bne _080F3FA4
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r1
	cmp r0, #0
	beq _080F3F6C
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080F3FCC
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #9
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080F3F64 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080F3F68 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080F3FCC
	.align 2, 0
_080F3F5C: .4byte gUnk_02020EE0
_080F3F60: .4byte gUnk_0203AD3C
_080F3F64: .4byte 0xFFF7FFFF
_080F3F68: .4byte 0x0400000A
_080F3F6C:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080F3FCC
	movs r0, #9
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080F3F9C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080F3FA0 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080F3FCC
	.align 2, 0
_080F3F9C: .4byte 0xFFF7FFFF
_080F3FA0: .4byte 0x0400000A
_080F3FA4:
	ldr r2, [r5, #0xc]
	cmp r2, #0
	beq _080F3FC2
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080F3FC2
	adds r0, r2, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080F3FC2:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080F3FCC:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080F4020
	ldrb r0, [r3]
	cmp r0, #0
	beq _080F3FEA
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080F3FEA
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080F3FEA:
	cmp r3, #0
	beq _080F4020
	ldr r0, _080F401C @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080F408C
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080F408C
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080F4184
	.align 2, 0
_080F401C: .4byte gUnk_03000510
_080F4020:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080F4084 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _080F405E
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080F405E
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080F405E
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080F405E
	movs r3, #4
_080F405E:
	ldr r0, _080F4088 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080F408C
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080F408C
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080F4184
	.align 2, 0
_080F4084: .4byte gUnk_02020EE0
_080F4088: .4byte gUnk_03000510
_080F408C:
	movs r0, #4
	ldrsh r2, [r5, r0]
	cmp r2, #0
	bne _080F417E
	ldr r0, [r5, #0x34]
	ldr r1, _080F412C @ =0xFFFFEFFF
	adds r0, r0, r1
	ldr r1, _080F4130 @ =0x0000DAFE
	cmp r0, r1
	bls _080F40A2
	strh r2, [r5, #0x3c]
_080F40A2:
	ldr r1, [r5, #0x38]
	ldr r0, _080F4134 @ =0x00008BFF
	cmp r1, r0
	ble _080F4150
	strh r2, [r5, #0x3c]
	strh r2, [r5, #0x3e]
	movs r0, #1
	mov r1, r8
	bl sub_0806FE64
	ldr r1, _080F4138 @ =gUnk_02020EE0
	ldr r0, _080F413C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	mov r1, r8
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F4124
	mov r6, r8
	ldrb r0, [r6]
	cmp r0, #0
	bne _080F40E4
	mov r0, r8
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F4124
_080F40E4:
	ldr r1, _080F4140 @ =gUnk_08D60FA4
	ldr r4, _080F4144 @ =gSongTable
	ldr r2, _080F4148 @ =0x00000C74
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F410A
	movs r6, #0xc7
	lsls r6, r6, #4
	adds r0, r4, r6
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F4124
_080F410A:
	cmp r3, #0
	beq _080F411C
	ldr r0, _080F414C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F4124
_080F411C:
	movs r0, #0xc7
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F4124:
	movs r0, #1
	strh r0, [r5, #4]
	b _080F415E
	.align 2, 0
_080F412C: .4byte 0xFFFFEFFF
_080F4130: .4byte 0x0000DAFE
_080F4134: .4byte 0x00008BFF
_080F4138: .4byte gUnk_02020EE0
_080F413C: .4byte gUnk_0203AD3C
_080F4140: .4byte gUnk_08D60FA4
_080F4144: .4byte gSongTable
_080F4148: .4byte 0x00000C74
_080F414C: .4byte gUnk_0203AD10
_080F4150:
	ldrh r0, [r5, #6]
	movs r1, #4
	orrs r1, r0
	strh r1, [r5, #6]
	ldrh r0, [r5, #0x3e]
	subs r0, #0x15
	strh r0, [r5, #0x3e]
_080F415E:
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080F417E
	movs r0, #0x3c
	ldrsh r1, [r5, r0]
	ldr r0, [r5, #0x34]
	adds r0, r0, r1
	str r0, [r5, #0x34]
	movs r2, #0x3e
	ldrsh r1, [r5, r2]
	ldr r0, [r5, #0x38]
	subs r0, r0, r1
	str r0, [r5, #0x38]
_080F417E:
	adds r0, r5, #0
	bl sub_0806FAC8
_080F4184:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F4190
sub_080F4190: @ 0x080F4190
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	adds r6, r7, #0
	ldr r0, _080F42A8 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r7, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080F41B6
	b _080F446A
_080F41B6:
	adds r1, r7, #0
	adds r1, #0x98
	ldr r0, [r1]
	cmp r0, #0
	beq _080F429C
	adds r4, r7, #0
	adds r4, #0xb4
	ldr r3, [r4]
	adds r0, r3, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _080F41F6
	cmp r0, #0xc
	beq _080F41F6
	ldr r2, [r3, #0x78]
	ldr r0, _080F42AC @ =sub_080EF2A0
	cmp r2, r0
	beq _080F41E2
	ldr r0, _080F42B0 @ =sub_080EF6E4
	cmp r2, r0
	bne _080F41F6
_080F41E2:
	ldrh r1, [r1]
	adds r0, r3, #0
	adds r0, #0x98
	strh r1, [r0]
	ldr r0, [r4]
	adds r1, r7, #0
	adds r1, #0x9a
	ldrh r1, [r1]
	adds r0, #0x9a
	strh r1, [r0]
_080F41F6:
	adds r3, r7, #0
	adds r3, #0xb8
	ldr r2, [r3]
	adds r0, r2, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _080F4230
	cmp r0, #0xc
	beq _080F4230
	ldr r1, [r2, #0x78]
	ldr r0, _080F42B4 @ =sub_080F2268
	cmp r1, r0
	beq _080F4218
	ldr r0, _080F42B8 @ =sub_080F26AC
	cmp r1, r0
	bne _080F4230
_080F4218:
	adds r0, r6, #0
	adds r0, #0x98
	ldrh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x98
	strh r1, [r0]
	ldr r0, [r3]
	adds r1, r6, #0
	adds r1, #0x9a
	ldrh r1, [r1]
	adds r0, #0x9a
	strh r1, [r0]
_080F4230:
	adds r4, r7, #0
	adds r4, #0xbc
	ldr r3, [r4]
	adds r0, r3, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _080F4266
	cmp r0, #0xc
	beq _080F4266
	ldr r1, [r3, #0x78]
	ldr r0, _080F42BC @ =sub_080F1690
	cmp r1, r0
	beq _080F4252
	ldr r0, _080F42C0 @ =sub_080F1ABC
	cmp r1, r0
	bne _080F4266
_080F4252:
	adds r2, r6, #0
	adds r2, #0x98
	ldrh r1, [r2]
	adds r0, r3, #0
	adds r0, #0x98
	strh r1, [r0]
	ldr r0, [r4]
	ldrh r1, [r2]
	adds r0, #0x98
	strh r1, [r0]
_080F4266:
	adds r4, r7, #0
	adds r4, #0xc0
	ldr r3, [r4]
	adds r0, r3, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _080F429C
	cmp r0, #0xc
	beq _080F429C
	ldr r1, [r3, #0x78]
	ldr r0, _080F42C4 @ =sub_080F2E6C
	cmp r1, r0
	beq _080F4288
	ldr r0, _080F42C8 @ =sub_080F3294
	cmp r1, r0
	bne _080F429C
_080F4288:
	adds r2, r6, #0
	adds r2, #0x98
	ldrh r1, [r2]
	adds r0, r3, #0
	adds r0, #0x98
	strh r1, [r0]
	ldr r0, [r4]
	ldrh r1, [r2]
	adds r0, #0x98
	strh r1, [r0]
_080F429C:
	ldr r1, [r6, #0x40]
	ldr r0, _080F42CC @ =0x000023FF
	cmp r1, r0
	bgt _080F42D0
	adds r0, #1
	b _080F42D8
	.align 2, 0
_080F42A8: .4byte gUnk_03000510
_080F42AC: .4byte sub_080EF2A0
_080F42B0: .4byte sub_080EF6E4
_080F42B4: .4byte sub_080F2268
_080F42B8: .4byte sub_080F26AC
_080F42BC: .4byte sub_080F1690
_080F42C0: .4byte sub_080F1ABC
_080F42C4: .4byte sub_080F2E6C
_080F42C8: .4byte sub_080F3294
_080F42CC: .4byte 0x000023FF
_080F42D0:
	movs r0, #0xe0
	lsls r0, r0, #8
	cmp r1, r0
	ble _080F42DA
_080F42D8:
	str r0, [r6, #0x40]
_080F42DA:
	ldr r0, [r6, #0x44]
	cmp r0, #0
	bge _080F42E6
	movs r0, #0
	str r0, [r6, #0x44]
	b _080F42F0
_080F42E6:
	movs r1, #0x80
	lsls r1, r1, #9
	cmp r0, r1
	ble _080F42F0
	str r1, [r6, #0x44]
_080F42F0:
	ldr r1, [r6, #0x78]
	ldr r0, _080F4374 @ =sub_080EE358
	cmp r1, r0
	bne _080F42FA
	b _080F446A
_080F42FA:
	ldr r0, _080F4378 @ =sub_080EE588
	cmp r1, r0
	bne _080F4302
	b _080F446A
_080F4302:
	adds r0, r6, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #4
	beq _080F430E
	b _080F4422
_080F430E:
	ldr r2, _080F437C @ =sub_080EEA2C
	cmp r1, r2
	bne _080F4316
	b _080F446A
_080F4316:
	movs r0, #0x9f
	adds r0, r0, r6
	mov sb, r0
	ldrb r5, [r0]
	movs r1, #0x9e
	adds r1, r1, r6
	mov r8, r1
	ldrb r4, [r1]
	adds r0, r6, #0
	movs r1, #4
	bl ObjectSetFunc
	adds r0, r6, #0
	movs r1, #0x3c
	movs r2, #0xcf
	lsls r2, r2, #2
	movs r3, #0x11
	bl sub_080F3974
	movs r0, #0x10
	strh r0, [r6, #4]
	mov r0, sb
	strb r5, [r0]
	mov r1, r8
	strb r4, [r1]
	movs r0, #3
	adds r1, r6, #0
	bl sub_0806FE64
	adds r0, r7, #0
	adds r0, #0xb4
	ldr r3, [r0]
	ldr r1, [r3, #0x78]
	ldr r0, _080F4380 @ =sub_080EFE9C
	cmp r1, r0
	beq _080F4390
	adds r2, r3, #0
	adds r2, #0x83
	ldrb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x85
	strb r0, [r1]
	ldrb r0, [r2]
	cmp r0, #9
	bhi _080F4384
	movs r0, #8
	b _080F4386
	.align 2, 0
_080F4374: .4byte sub_080EE358
_080F4378: .4byte sub_080EE588
_080F437C: .4byte sub_080EEA2C
_080F4380: .4byte sub_080EFE9C
_080F4384:
	movs r0, #0x12
_080F4386:
	strb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x9f
	movs r0, #0xe
	strb r0, [r1]
_080F4390:
	adds r0, r7, #0
	adds r0, #0xb8
	ldr r3, [r0]
	ldr r0, [r3, #0x78]
	ldr r4, _080F43B4 @ =sub_080EFE9C
	cmp r0, r4
	beq _080F43C4
	adds r2, r3, #0
	adds r2, #0x83
	ldrb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x85
	strb r0, [r1]
	ldrb r0, [r2]
	cmp r0, #9
	bhi _080F43B8
	movs r0, #8
	b _080F43BA
	.align 2, 0
_080F43B4: .4byte sub_080EFE9C
_080F43B8:
	movs r0, #0x12
_080F43BA:
	strb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x9f
	movs r0, #0xe
	strb r0, [r1]
_080F43C4:
	adds r0, r7, #0
	adds r0, #0xbc
	ldr r3, [r0]
	ldr r0, [r3, #0x78]
	cmp r0, r4
	beq _080F43F2
	adds r2, r3, #0
	adds r2, #0x83
	ldrb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x85
	strb r0, [r1]
	ldrb r0, [r2]
	cmp r0, #9
	bhi _080F43E6
	movs r0, #8
	b _080F43E8
_080F43E6:
	movs r0, #0x12
_080F43E8:
	strb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x9f
	movs r0, #0xe
	strb r0, [r1]
_080F43F2:
	adds r0, r7, #0
	adds r0, #0xc0
	ldr r3, [r0]
	ldr r0, [r3, #0x78]
	cmp r0, r4
	beq _080F446A
	adds r2, r3, #0
	adds r2, #0x83
	ldrb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x85
	strb r0, [r1]
	ldrb r0, [r2]
	cmp r0, #9
	bhi _080F4414
	movs r0, #8
	b _080F4416
_080F4414:
	movs r0, #0x12
_080F4416:
	strb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x9f
	movs r0, #0xe
	strb r0, [r1]
	b _080F446A
_080F4422:
	ldr r0, [r6, #0x40]
	ldr r1, _080F4478 @ =0xFFFFDBFF
	adds r0, r0, r1
	ldr r1, _080F447C @ =0x0000BBFE
	cmp r0, r1
	bls _080F446A
	ldr r0, [r6, #0x44]
	ldr r1, _080F4480 @ =0xFFFFD800
	adds r0, r0, r1
	movs r1, #0xa0
	lsls r1, r1, #7
	cmp r0, r1
	bhi _080F446A
	adds r0, r6, #0
	bl sub_080EE264
	adds r0, r7, #0
	adds r0, #0xb4
	ldr r0, [r0]
	bl sub_080F1134
	adds r0, r7, #0
	adds r0, #0xb8
	ldr r0, [r0]
	bl sub_080F1134
	adds r0, r7, #0
	adds r0, #0xbc
	ldr r0, [r0]
	bl sub_080F1134
	adds r0, r7, #0
	adds r0, #0xc0
	ldr r0, [r0]
	bl sub_080F1134
_080F446A:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F4478: .4byte 0xFFFFDBFF
_080F447C: .4byte 0x0000BBFE
_080F4480: .4byte 0xFFFFD800

	thumb_func_start sub_080F4484
sub_080F4484: @ 0x080F4484
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r3, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r3, #0x40]
	asrs r7, r0, #8
	ldr r0, [r3, #0x44]
	asrs r0, r0, #8
	mov ip, r0
	movs r4, #0
	ldr r1, _080F44C0 @ =gUnk_020229D4
	movs r5, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r5
	ldr r6, _080F44C4 @ =gUnk_020229E0
	adds r3, #0x56
	mov r8, r3
	cmp r0, #0
	bne _080F44C8
	orrs r2, r5
	b _080F44E2
	.align 2, 0
_080F44C0: .4byte gUnk_020229D4
_080F44C4: .4byte gUnk_020229E0
_080F44C8:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080F44E4
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	cmp r0, #0
	bne _080F44C8
	orrs r2, r3
_080F44E2:
	str r2, [r1]
_080F44E4:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	strh r7, [r1, #6]
	mov r0, ip
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0x4c
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sb
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F453C
sub_080F453C: @ 0x080F453C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _080F4570 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080F4574 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xc8
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080F4578
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080F4580
	.align 2, 0
_080F4570: .4byte ObjectMain
_080F4574: .4byte ObjectDestroy
_080F4578:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080F4580:
	adds r5, r0, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r5, #0xc]
	movs r3, #1
	orrs r0, r3
	str r0, [r5, #0xc]
	ldr r2, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r2, r0
	movs r0, #0x40
	orrs r2, r0
	subs r0, #0x61
	ands r2, r0
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r2, r0
	movs r0, #0x80
	lsls r0, r0, #1
	orrs r2, r0
	str r2, [r5, #8]
	adds r0, r5, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r5, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080F45C2
	orrs r2, r3
	b _080F45C8
_080F45C2:
	movs r0, #2
	rsbs r0, r0, #0
	ands r2, r0
_080F45C8:
	str r2, [r5, #8]
	ldr r0, [r5, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	ldr r1, _080F4628 @ =0x001080A0
	orrs r0, r1
	str r0, [r5, #0x5c]
	movs r4, #0xa
	rsbs r4, r4, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #0xa
	bl sub_0803E2B0
	movs r2, #0x10
	rsbs r2, r2, #0
	movs r0, #6
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0xa
	bl sub_0803E308
	adds r0, r5, #0
	bl ObjectInitSprite
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	str r0, [r5, #0x7c]
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_080F462C
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080F4628: .4byte 0x001080A0

	thumb_func_start sub_080F462C
sub_080F462C: @ 0x080F462C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080F46B8 @ =sub_080F5778
	movs r1, #1
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x52
	movs r1, #0
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x85
	strb r1, [r0]
	ldr r1, _080F46BC @ =gUnk_02020EE0
	ldr r0, _080F46C0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F46B2
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F4676
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F46B2
_080F4676:
	ldr r1, _080F46C4 @ =gUnk_08D60FA4
	ldr r4, _080F46C8 @ =gSongTable
	ldr r2, _080F46CC @ =0x00000C6C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F469A
	ldr r1, _080F46D0 @ =0x00000C68
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F46B2
_080F469A:
	cmp r3, #0
	beq _080F46AC
	ldr r0, _080F46D4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F46B2
_080F46AC:
	ldr r0, _080F46D8 @ =0x0000018D
	bl m4aSongNumStart
_080F46B2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080F46B8: .4byte sub_080F5778
_080F46BC: .4byte gUnk_02020EE0
_080F46C0: .4byte gUnk_0203AD3C
_080F46C4: .4byte gUnk_08D60FA4
_080F46C8: .4byte gSongTable
_080F46CC: .4byte 0x00000C6C
_080F46D0: .4byte 0x00000C68
_080F46D4: .4byte gUnk_0203AD10
_080F46D8: .4byte 0x0000018D

	thumb_func_start sub_080F46DC
sub_080F46DC: @ 0x080F46DC
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r2, _080F4708 @ =sub_080F4818
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080F470C
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080F4714
	.align 2, 0
_080F4708: .4byte sub_080F4818
_080F470C:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080F4714:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x85
	movs r5, #0
	strb r5, [r0]
	adds r0, r4, #0
	bl sub_08034E14
	cmp r0, #0
	beq _080F472A
	strb r5, [r0, #9]
_080F472A:
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r6, [r0]
	adds r3, r6, #0
	subs r3, #0x38
	ldr r2, _080F4800 @ =gCurLevelInfo
	subs r0, #0x2c
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080F4804 @ =0x0000065E
	adds r0, r0, r1
	ldrb r5, [r0]
	lsls r3, r3, #0x10
	asrs r1, r3, #0x10
	cmp r1, #0
	blt _080F47F8
	ldr r0, _080F4808 @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080F47F8
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080F47F8
	adds r0, r6, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r6, r3, #0
	adds r7, r4, #0
	adds r7, #0x60
	cmp r0, #0xf
	bls _080F47B8
	movs r4, #1
_080F4780:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r5, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _080F4780
	adds r0, r5, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0
	bl sub_08002A44
_080F47B8:
	ldr r1, _080F4808 @ =gUnk_08352D80
	asrs r0, r6, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r5, #0
	bl sub_08002A1C
	ldr r2, _080F480C @ =gUnk_02020EE0
	ldr r0, _080F4810 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _080F47F8
	ldr r0, _080F4814 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080F47F8
	adds r0, r5, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080F47F8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F4800: .4byte gCurLevelInfo
_080F4804: .4byte 0x0000065E
_080F4808: .4byte gUnk_08352D80
_080F480C: .4byte gUnk_02020EE0
_080F4810: .4byte gUnk_0203AD3C
_080F4814: .4byte gUnk_0203AD20

	thumb_func_start sub_080F4818
sub_080F4818: @ 0x080F4818
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	adds r3, r2, #0
	adds r3, #0x52
	ldrh r0, [r3]
	subs r0, #0x40
	strh r0, [r3]
	lsls r0, r0, #0x10
	ldr r1, _080F485C @ =0xFE400000
	cmp r0, r1
	bge _080F483A
	ldr r0, _080F4860 @ =0x0000FE40
	strh r0, [r3]
_080F483A:
	ldr r1, [r2, #0x44]
	movs r0, #0xb0
	lsls r0, r0, #7
	cmp r1, r0
	ble _080F4856
	ldr r0, [r2, #8]
	ldr r1, _080F4864 @ =0xFFFFFDFF
	ands r0, r1
	ldr r1, _080F4868 @ =0xFFFFFEFF
	ands r0, r1
	str r0, [r2, #8]
	adds r0, r2, #0
	bl sub_080F486C
_080F4856:
	pop {r0}
	bx r0
	.align 2, 0
_080F485C: .4byte 0xFE400000
_080F4860: .4byte 0x0000FE40
_080F4864: .4byte 0xFFFFFDFF
_080F4868: .4byte 0xFFFFFEFF

	thumb_func_start sub_080F486C
sub_080F486C: @ 0x080F486C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	adds r7, r4, #0
	adds r7, #0x9f
	ldrb r0, [r7]
	mov r8, r0
	adds r6, r4, #0
	adds r6, #0x9e
	ldrb r5, [r6]
	adds r0, r4, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _080F4896
	adds r0, r4, #0
	bl sub_080F521C
	b _080F491A
_080F4896:
	ldr r2, _080F48EC @ =sub_080F4924
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	movs r3, #0x40
	orrs r0, r3
	ldr r1, _080F48F0 @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r4, #8]
	mov r0, r8
	strb r0, [r7]
	strb r5, [r6]
	cmp r5, #0
	bne _080F48C4
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #1
	strb r0, [r1]
_080F48C4:
	ldr r2, _080F48F4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F48F8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F48FC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #3
	ands r1, r0
	cmp r1, #1
	beq _080F4906
	cmp r1, #1
	blo _080F4900
	cmp r1, #2
	beq _080F490C
	movs r0, #0x58
	strh r0, [r4, #4]
	b _080F490E
	.align 2, 0
_080F48EC: .4byte sub_080F4924
_080F48F0: .4byte 0xFFFFFDFF
_080F48F4: .4byte gRngVal
_080F48F8: .4byte 0x00196225
_080F48FC: .4byte 0x3C6EF35F
_080F4900:
	movs r0, #0x20
	strh r0, [r4, #4]
	b _080F490E
_080F4906:
	movs r0, #0x30
	strh r0, [r4, #4]
	b _080F490E
_080F490C:
	strh r3, [r4, #4]
_080F490E:
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
_080F491A:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F4924
sub_080F4924: @ 0x080F4924
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r1, [r4, #8]
	movs r0, #4
	orrs r1, r0
	str r1, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r0, #1
	beq _080F4990
	cmp r0, #1
	bgt _080F4944
	cmp r0, #0
	beq _080F494A
	b _080F4A1C
_080F4944:
	cmp r0, #3
	beq _080F49D0
	b _080F4A1C
_080F494A:
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080F4972
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	rsbs r2, r2, #0
	cmp r0, r2
	bge _080F496A
	b _080F4A70
_080F496A:
	cmp r0, #0xc0
	bgt _080F4970
	b _080F4A72
_080F4970:
	b _080F4984
_080F4972:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc0
	ble _080F498A
_080F4984:
	movs r0, #0xc0
	strh r0, [r1]
	b _080F4A72
_080F498A:
	movs r2, #0xc0
	rsbs r2, r2, #0
	b _080F4A6C
_080F4990:
	ands r1, r0
	cmp r1, #0
	beq _080F49B2
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	rsbs r2, r2, #0
	cmp r0, r2
	blt _080F4A70
	cmp r0, #0xe0
	ble _080F4A72
	b _080F49C4
_080F49B2:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F49CA
_080F49C4:
	movs r0, #0xe0
	strh r0, [r1]
	b _080F4A72
_080F49CA:
	movs r2, #0xe0
	rsbs r2, r2, #0
	b _080F4A6C
_080F49D0:
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080F49FC
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F49F8 @ =0xFFFFFEE0
	cmp r0, r2
	blt _080F4A70
	movs r2, #0x90
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F4A72
	b _080F4A70
	.align 2, 0
_080F49F8: .4byte 0xFFFFFEE0
_080F49FC:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080F4A70
	ldr r2, _080F4A18 @ =0xFFFFFEE0
	b _080F4A6C
	.align 2, 0
_080F4A18: .4byte 0xFFFFFEE0
_080F4A1C:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F4A54
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080F4A44 @ =0xFFFFFF00
	cmp r2, r0
	bge _080F4A48
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1]
	b _080F4A72
	.align 2, 0
_080F4A44: .4byte 0xFFFFFF00
_080F4A48:
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r2, r0
	ble _080F4A72
	strh r0, [r1]
	b _080F4A72
_080F4A54:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080F4A70
	ldr r2, _080F4AB8 @ =0xFFFFFF00
_080F4A6C:
	cmp r0, r2
	bge _080F4A72
_080F4A70:
	strh r2, [r1]
_080F4A72:
	ldr r2, [r4, #0x40]
	ldr r0, _080F4ABC @ =0x00003BFF
	cmp r2, r0
	bgt _080F4A84
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
_080F4A84:
	movs r0, #0xc8
	lsls r0, r0, #8
	cmp r2, r0
	ble _080F4A94
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080F4A94:
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0
	beq _080F4AC4
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F4AC0 @ =0xFFFFFE40
	cmp r0, r2
	bge _080F4ADC
	b _080F4ADA
	.align 2, 0
_080F4AB8: .4byte 0xFFFFFF00
_080F4ABC: .4byte 0x00003BFF
_080F4AC0: .4byte 0xFFFFFE40
_080F4AC4:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x15
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F4ADC
_080F4ADA:
	strh r2, [r1]
_080F4ADC:
	ldr r1, [r4, #0x44]
	ldr r0, _080F4B3C @ =0x00003BFF
	cmp r1, r0
	bgt _080F4AFE
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r1, [r2]
	cmp r1, #1
	bne _080F4AFE
	movs r0, #0
	strb r1, [r7]
	strb r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
_080F4AFE:
	ldr r1, [r4, #0x44]
	movs r0, #0xf0
	lsls r0, r0, #7
	cmp r1, r0
	bgt _080F4B0A
	b _080F4C66
_080F4B0A:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	beq _080F4B18
	b _080F4C66
_080F4B18:
	adds r0, #4
	ldrb r5, [r0]
	cmp r5, #0
	beq _080F4B4C
	ldr r2, _080F4B40 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F4B44 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F4B48 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	adds r1, r4, #0
	adds r1, #0x9f
	strb r0, [r1]
	b _080F4BBE
	.align 2, 0
_080F4B3C: .4byte 0x00003BFF
_080F4B40: .4byte gRngVal
_080F4B44: .4byte 0x00196225
_080F4B48: .4byte 0x3C6EF35F
_080F4B4C:
	ldr r1, _080F4B7C @ =gRngVal
	ldr r2, [r1]
	ldr r0, _080F4B80 @ =0x00196225
	muls r0, r2, r0
	ldr r2, _080F4B84 @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r1]
	lsrs r3, r0, #0x10
	ldr r0, _080F4B88 @ =0x00005554
	adds r2, r1, #0
	cmp r3, r0
	bls _080F4B90
	ldr r0, _080F4B8C @ =0x0000AAA9
	movs r1, #2
	cmp r3, r0
	bhi _080F4B6E
	movs r1, #1
_080F4B6E:
	cmp r1, #0
	beq _080F4B90
	adds r0, r4, #0
	adds r0, #0x9f
	strb r5, [r0]
	b _080F4BBE
	.align 2, 0
_080F4B7C: .4byte gRngVal
_080F4B80: .4byte 0x00196225
_080F4B84: .4byte 0x3C6EF35F
_080F4B88: .4byte 0x00005554
_080F4B8C: .4byte 0x0000AAA9
_080F4B90:
	ldr r1, [r2]
	ldr r0, _080F4BB0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F4BB4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F4BB8
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	b _080F4BBE
	.align 2, 0
_080F4BB0: .4byte 0x00196225
_080F4BB4: .4byte 0x3C6EF35F
_080F4BB8:
	adds r0, r4, #0
	adds r0, #0x9f
	strb r1, [r0]
_080F4BBE:
	ldr r1, [r2]
	ldr r0, _080F4C80 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F4C84 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080F4C88 @ =0x00005554
	cmp r2, r0
	bls _080F4BE0
	ldr r0, _080F4C8C @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080F4BDC
	movs r1, #1
_080F4BDC:
	cmp r1, #0
	bne _080F4BE8
_080F4BE0:
	ldr r0, [r4, #8]
	movs r1, #1
	eors r0, r1
	str r0, [r4, #8]
_080F4BE8:
	movs r0, #0
	strb r0, [r7]
	movs r0, #1
	strb r0, [r6]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _080F4C90 @ =gUnk_02020EE0
	ldr r0, _080F4C94 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F4C66
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F4C26
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F4C66
_080F4C26:
	ldr r1, _080F4C98 @ =gUnk_08D60FA4
	ldr r5, _080F4C9C @ =gSongTable
	ldr r2, _080F4CA0 @ =0x00000C64
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F4C4C
	movs r1, #0xc6
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F4C66
_080F4C4C:
	cmp r3, #0
	beq _080F4C5E
	ldr r0, _080F4CA4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F4C66
_080F4C5E:
	movs r0, #0xc6
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F4C66:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F4C78
	adds r0, r4, #0
	bl sub_080F4CA8
_080F4C78:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F4C80: .4byte 0x00196225
_080F4C84: .4byte 0x3C6EF35F
_080F4C88: .4byte 0x00005554
_080F4C8C: .4byte 0x0000AAA9
_080F4C90: .4byte gUnk_02020EE0
_080F4C94: .4byte gUnk_0203AD3C
_080F4C98: .4byte gUnk_08D60FA4
_080F4C9C: .4byte gSongTable
_080F4CA0: .4byte 0x00000C64
_080F4CA4: .4byte gUnk_0203AD10

	thumb_func_start sub_080F4CA8
sub_080F4CA8: @ 0x080F4CA8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	adds r7, r4, #0
	adds r7, #0x9f
	ldrb r0, [r7]
	mov r8, r0
	adds r6, r4, #0
	adds r6, #0x9e
	ldrb r0, [r6]
	adds r5, r0, #0
	cmp r5, #0
	bne _080F4CCC
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #1
	strb r0, [r1]
_080F4CCC:
	ldr r2, _080F4D20 @ =sub_080F4DC4
	adds r0, r4, #0
	movs r1, #2
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	ldr r1, _080F4D24 @ =0xFFFFFDFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	mov r1, r8
	strb r1, [r7]
	strb r5, [r6]
	movs r0, #0x14
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r5, #1
	ands r0, r5
	adds r1, r4, #0
	adds r1, #0x85
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080F4D28
	ldr r0, [r4, #8]
	orrs r0, r5
	b _080F4D30
	.align 2, 0
_080F4D20: .4byte sub_080F4DC4
_080F4D24: .4byte 0xFFFFFDFF
_080F4D28:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080F4D30:
	str r0, [r4, #8]
	ldr r1, _080F4DA4 @ =gUnk_02020EE0
	ldr r0, _080F4DA8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F4D9A
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F4D5E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F4D9A
_080F4D5E:
	ldr r1, _080F4DAC @ =gUnk_08D60FA4
	ldr r4, _080F4DB0 @ =gSongTable
	ldr r2, _080F4DB4 @ =0x00000B3C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F4D82
	ldr r1, _080F4DB8 @ =0x00000B38
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F4D9A
_080F4D82:
	cmp r3, #0
	beq _080F4D94
	ldr r0, _080F4DBC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F4D9A
_080F4D94:
	ldr r0, _080F4DC0 @ =0x00000167
	bl m4aSongNumStart
_080F4D9A:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F4DA4: .4byte gUnk_02020EE0
_080F4DA8: .4byte gUnk_0203AD3C
_080F4DAC: .4byte gUnk_08D60FA4
_080F4DB0: .4byte gSongTable
_080F4DB4: .4byte 0x00000B3C
_080F4DB8: .4byte 0x00000B38
_080F4DBC: .4byte gUnk_0203AD10
_080F4DC0: .4byte 0x00000167

	thumb_func_start sub_080F4DC4
sub_080F4DC4: @ 0x080F4DC4
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r1, [r4, #8]
	movs r2, #1
	adds r3, r1, #0
	ands r3, r2
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x85
	ldrb r1, [r1]
	orrs r1, r0
	str r1, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r0, #1
	beq _080F4E40
	cmp r0, #1
	bgt _080F4DF6
	cmp r0, #0
	beq _080F4DFC
	b _080F4EC8
_080F4DF6:
	cmp r0, #3
	beq _080F4E80
	b _080F4EC8
_080F4DFC:
	ands r1, r2
	cmp r1, #0
	beq _080F4E22
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	rsbs r2, r2, #0
	cmp r0, r2
	bge _080F4E1A
	b _080F4F1C
_080F4E1A:
	cmp r0, #0xc0
	bgt _080F4E20
	b _080F4F1E
_080F4E20:
	b _080F4E34
_080F4E22:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc0
	ble _080F4E3A
_080F4E34:
	movs r0, #0xc0
	strh r0, [r1]
	b _080F4F1E
_080F4E3A:
	movs r2, #0xc0
	rsbs r2, r2, #0
	b _080F4F18
_080F4E40:
	ands r1, r2
	cmp r1, #0
	beq _080F4E62
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	rsbs r2, r2, #0
	cmp r0, r2
	blt _080F4F1C
	cmp r0, #0xe0
	ble _080F4F1E
	b _080F4E74
_080F4E62:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe0
	ble _080F4E7A
_080F4E74:
	movs r0, #0xe0
	strh r0, [r1]
	b _080F4F1E
_080F4E7A:
	movs r2, #0xe0
	rsbs r2, r2, #0
	b _080F4F18
_080F4E80:
	ands r1, r2
	cmp r1, #0
	beq _080F4EA8
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F4EA4 @ =0xFFFFFEE0
	cmp r0, r2
	blt _080F4F1C
	movs r2, #0x90
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F4F1E
	b _080F4F1C
	.align 2, 0
_080F4EA4: .4byte 0xFFFFFEE0
_080F4EA8:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080F4F1C
	ldr r2, _080F4EC4 @ =0xFFFFFEE0
	b _080F4F18
	.align 2, 0
_080F4EC4: .4byte 0xFFFFFEE0
_080F4EC8:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F4F00
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080F4EF0 @ =0xFFFFFF00
	cmp r2, r0
	bge _080F4EF4
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1]
	b _080F4F1E
	.align 2, 0
_080F4EF0: .4byte 0xFFFFFF00
_080F4EF4:
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r2, r0
	ble _080F4F1E
	strh r0, [r1]
	b _080F4F1E
_080F4F00:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #1
	cmp r0, r2
	bgt _080F4F1C
	ldr r2, _080F4F78 @ =0xFFFFFF00
_080F4F18:
	cmp r0, r2
	bge _080F4F1E
_080F4F1C:
	strh r2, [r1]
_080F4F1E:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	orrs r0, r3
	str r0, [r4, #8]
	ldr r1, [r4, #0x40]
	ldr r0, _080F4F7C @ =0x00003BFF
	cmp r1, r0
	bgt _080F4F3E
	adds r2, r4, #0
	adds r2, #0x85
	ldrb r1, [r2]
	movs r0, #0xfe
	ands r0, r1
	strb r0, [r2]
_080F4F3E:
	ldr r1, [r4, #0x40]
	movs r0, #0xc8
	lsls r0, r0, #8
	cmp r1, r0
	ble _080F4F54
	adds r2, r4, #0
	adds r2, #0x85
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
_080F4F54:
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	beq _080F4F84
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F4F80 @ =0xFFFFFE40
	cmp r0, r2
	bge _080F4F9C
	b _080F4F9A
	.align 2, 0
_080F4F78: .4byte 0xFFFFFF00
_080F4F7C: .4byte 0x00003BFF
_080F4F80: .4byte 0xFFFFFE40
_080F4F84:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x15
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F4F9C
_080F4F9A:
	strh r2, [r1]
_080F4F9C:
	ldr r1, [r4, #0x44]
	ldr r0, _080F5008 @ =0x00003BFF
	cmp r1, r0
	bgt _080F4FAE
	ldrb r0, [r5]
	cmp r0, #0
	bne _080F4FAE
	movs r0, #1
	strb r0, [r5]
_080F4FAE:
	ldr r1, [r4, #0x44]
	movs r0, #0xf0
	lsls r0, r0, #7
	cmp r1, r0
	bgt _080F4FBA
	b _080F50C4
_080F4FBA:
	ldrb r0, [r5]
	cmp r0, #0
	bne _080F4FC2
	b _080F50C4
_080F4FC2:
	ldr r1, _080F500C @ =gRngVal
	ldr r2, [r1]
	ldr r0, _080F5010 @ =0x00196225
	muls r0, r2, r0
	ldr r2, _080F5014 @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r1]
	lsrs r2, r0, #0x10
	ldr r0, _080F5018 @ =0x00005554
	adds r3, r1, #0
	cmp r2, r0
	bls _080F4FE8
	ldr r0, _080F501C @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080F4FE4
	movs r1, #1
_080F4FE4:
	cmp r1, #0
	bne _080F4FFE
_080F4FE8:
	ldr r1, [r3]
	ldr r0, _080F5010 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F5014 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r3]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F5020
_080F4FFE:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	b _080F5026
	.align 2, 0
_080F5008: .4byte 0x00003BFF
_080F500C: .4byte gRngVal
_080F5010: .4byte 0x00196225
_080F5014: .4byte 0x3C6EF35F
_080F5018: .4byte 0x00005554
_080F501C: .4byte 0x0000AAA9
_080F5020:
	adds r0, r4, #0
	adds r0, #0x9f
	strb r1, [r0]
_080F5026:
	ldr r1, [r3]
	ldr r0, _080F50DC @ =0x00196225
	muls r0, r1, r0
	ldr r2, _080F50E0 @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r3]
	lsrs r2, r0, #0x10
	ldr r0, _080F50E4 @ =0x00005554
	cmp r2, r0
	bls _080F5048
	ldr r0, _080F50E8 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080F5044
	movs r1, #1
_080F5044:
	cmp r1, #0
	bne _080F5054
_080F5048:
	adds r2, r4, #0
	adds r2, #0x85
	ldrb r0, [r2]
	movs r1, #1
	eors r0, r1
	strb r0, [r2]
_080F5054:
	movs r0, #0
	strb r0, [r5]
	ldr r1, _080F50EC @ =gUnk_02020EE0
	ldr r0, _080F50F0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F50C4
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F5084
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F50C4
_080F5084:
	ldr r1, _080F50F4 @ =gUnk_08D60FA4
	ldr r5, _080F50F8 @ =gSongTable
	ldr r2, _080F50FC @ =0x00000C64
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F50AA
	movs r1, #0xc6
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F50C4
_080F50AA:
	cmp r3, #0
	beq _080F50BC
	ldr r0, _080F5100 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F50C4
_080F50BC:
	movs r0, #0xc6
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F50C4:
	adds r5, r4, #0
	adds r5, #0x83
	ldrb r0, [r5]
	adds r6, r5, #0
	cmp r0, #3
	beq _080F51B0
	cmp r0, #3
	bgt _080F5104
	cmp r0, #2
	beq _080F510C
	b _080F5214
	.align 2, 0
_080F50DC: .4byte 0x00196225
_080F50E0: .4byte 0x3C6EF35F
_080F50E4: .4byte 0x00005554
_080F50E8: .4byte 0x0000AAA9
_080F50EC: .4byte gUnk_02020EE0
_080F50F0: .4byte gUnk_0203AD3C
_080F50F4: .4byte gUnk_08D60FA4
_080F50F8: .4byte gSongTable
_080F50FC: .4byte 0x00000C64
_080F5100: .4byte gUnk_0203AD10
_080F5104:
	cmp r0, #4
	bne _080F510A
	b _080F5204
_080F510A:
	b _080F5214
_080F510C:
	ldrb r0, [r4, #1]
	cmp r0, #0x20
	bne _080F517E
	ldr r1, _080F5198 @ =gUnk_02020EE0
	ldr r0, _080F519C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F517E
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F513E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F517E
_080F513E:
	ldr r1, _080F51A0 @ =gUnk_08D60FA4
	ldr r5, _080F51A4 @ =gSongTable
	ldr r2, _080F51A8 @ =0x00000B44
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F5164
	movs r1, #0xb4
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F517E
_080F5164:
	cmp r3, #0
	beq _080F5176
	ldr r0, _080F51AC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F517E
_080F5176:
	movs r0, #0xb4
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F517E:
	ldr r1, [r4, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080F5214
	movs r0, #3
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r4, #8]
	movs r0, #3
	strb r0, [r6]
	b _080F5214
	.align 2, 0
_080F5198: .4byte gUnk_02020EE0
_080F519C: .4byte gUnk_0203AD3C
_080F51A0: .4byte gUnk_08D60FA4
_080F51A4: .4byte gSongTable
_080F51A8: .4byte 0x00000B44
_080F51AC: .4byte gUnk_0203AD10
_080F51B0:
	movs r2, #4
	ldrsh r0, [r4, r2]
	cmp r0, #0xa
	bne _080F51C6
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #0x10]
	adds r0, r4, #0
	bl sub_080F53A0
_080F51C6:
	ldrh r0, [r4, #4]
	subs r0, #0xa
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bhi _080F51E4
	ldr r1, _080F5200 @ =gUnk_08357038
	movs r2, #4
	ldrsh r0, [r4, r2]
	subs r0, #0xa
	adds r0, r0, r1
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x54
	strb r1, [r0]
_080F51E4:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F5214
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #4
	strb r0, [r5]
	b _080F5214
	.align 2, 0
_080F5200: .4byte gUnk_08357038
_080F5204:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080F5214
	adds r0, r4, #0
	bl sub_080F486C
_080F5214:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F521C
sub_080F521C: @ 0x080F521C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080F527C @ =sub_080F5284
	movs r1, #5
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	subs r1, #2
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0xa0
	ble _080F523E
	movs r0, #0xa0
	strh r0, [r1]
_080F523E:
	movs r2, #0
	ldrsh r0, [r1, r2]
	movs r2, #0xa0
	rsbs r2, r2, #0
	cmp r0, r2
	bge _080F524C
	strh r2, [r1]
_080F524C:
	ldr r0, [r4, #8]
	movs r1, #0x20
	orrs r0, r1
	adds r1, #0xe0
	orrs r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	ldr r1, _080F5280 @ =0xFFFFF7FF
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	subs r1, #1
	movs r0, #0xc
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080F527C: .4byte sub_080F5284
_080F5280: .4byte 0xFFFFF7FF

	thumb_func_start sub_080F5284
sub_080F5284: @ 0x080F5284
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r6, r0, #0
	ldrh r0, [r6, #4]
	adds r2, r0, #1
	strh r2, [r6, #4]
	movs r1, #7
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _080F5316
	ldr r7, _080F5368 @ =gRngVal
	ldr r0, [r7]
	ldr r1, _080F536C @ =0x00196225
	mov sb, r1
	mov r1, sb
	muls r1, r0, r1
	adds r0, r1, #0
	ldr r1, _080F5370 @ =0x3C6EF35F
	mov r8, r1
	add r0, r8
	str r0, [r7]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F52CA
	adds r0, r2, #1
	strh r0, [r6, #4]
	movs r1, #0xf
	ands r0, r1
	cmp r0, #0
	bne _080F5316
_080F52CA:
	ldr r2, _080F5374 @ =0x00000292
	ldr r0, [r7]
	mov r3, sb
	muls r3, r0, r3
	add r3, r8
	str r3, [r7]
	lsrs r3, r3, #0x10
	movs r0, #3
	ands r3, r0
	adds r0, r6, #0
	movs r1, #0
	bl sub_0808AE30
	ldr r1, [r7]
	mov r3, sb
	muls r3, r1, r3
	add r3, r8
	str r3, [r7]
	lsrs r2, r3, #0x10
	movs r5, #0x1f
	ands r2, r5
	movs r4, #0x10
	subs r2, r4, r2
	lsls r2, r2, #8
	ldr r1, [r0, #0x34]
	adds r1, r1, r2
	str r1, [r0, #0x34]
	mov r1, sb
	muls r1, r3, r1
	add r1, r8
	str r1, [r7]
	lsrs r1, r1, #0x10
	ands r1, r5
	subs r4, r4, r1
	lsls r4, r4, #8
	ldr r1, [r0, #0x38]
	adds r1, r1, r4
	str r1, [r0, #0x38]
_080F5316:
	adds r1, r6, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r1, #0xff
	ands r0, r1
	movs r1, #0x1f
	ands r0, r1
	adds r3, r6, #0
	adds r3, #0x9f
	cmp r0, #0
	bne _080F5334
	movs r0, #0x10
	strb r0, [r3]
_080F5334:
	ldrb r0, [r3]
	cmp r0, #0
	beq _080F5378
	ldr r0, [r6, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r6, #8]
	adds r1, r6, #0
	adds r1, #0x83
	movs r0, #1
	strb r0, [r1]
	subs r1, #0x31
	ldrh r0, [r1]
	adds r0, #0x25
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xe0
	lsls r2, r2, #1
	cmp r0, r2
	ble _080F5360
	strh r2, [r1]
_080F5360:
	ldrb r0, [r3]
	subs r0, #1
	strb r0, [r3]
	b _080F5380
	.align 2, 0
_080F5368: .4byte gRngVal
_080F536C: .4byte 0x00196225
_080F5370: .4byte 0x3C6EF35F
_080F5374: .4byte 0x00000292
_080F5378:
	adds r1, r6, #0
	adds r1, #0x83
	movs r0, #5
	strb r0, [r1]
_080F5380:
	ldr r1, [r6, #0x44]
	movs r0, #0x80
	lsls r0, r0, #9
	cmp r1, r0
	ble _080F5394
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r6, #8]
_080F5394:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F53A0
sub_080F53A0: @ 0x080F53A0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F53C4
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	subs r0, #0x10
	b _080F53CA
_080F53C4:
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	adds r0, #0x10
_080F53CA:
	mov sl, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	subs r0, #6
	mov ip, r0
	movs r4, #0
	ldr r1, _080F53EC @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _080F53F0 @ =gUnk_020229E0
	movs r7, #0x56
	adds r7, r7, r5
	mov r8, r7
	b _080F5408
	.align 2, 0
_080F53EC: .4byte gUnk_020229D4
_080F53F0: .4byte gUnk_020229E0
_080F53F4:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080F5410
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080F5408:
	cmp r0, #0
	bne _080F53F4
	orrs r2, r3
	str r2, [r1]
_080F5410:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, sl
	strh r0, [r1, #6]
	mov r7, ip
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xc0
	strb r0, [r1, #0xc]
	ldr r0, [r5, #8]
	ands r0, r4
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r0, sb
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F5474
sub_080F5474: @ 0x080F5474
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _080F54A8 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080F54AC @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080F54B0
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080F54B8
	.align 2, 0
_080F54A8: .4byte ObjectMain
_080F54AC: .4byte ObjectDestroy
_080F54B0:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080F54B8:
	adds r5, r0, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r5, #0xc]
	movs r1, #2
	orrs r0, r1
	str r0, [r5, #0xc]
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080F5584 @ =sub_0809F840
	str r0, [r5, #0x7c]
	movs r1, #5
	rsbs r1, r1, #0
	movs r4, #6
	rsbs r4, r4, #0
	movs r0, #5
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	movs r2, #7
	rsbs r2, r2, #0
	movs r0, #7
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #6
	bl sub_0803E308
	adds r0, r5, #0
	bl ObjectInitSprite
	adds r0, r5, #0
	bl sub_080F55A8
	ldr r1, _080F5588 @ =gUnk_02020EE0
	ldr r0, _080F558C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F557A
	ldrb r0, [r5]
	cmp r0, #0
	bne _080F553E
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F557A
_080F553E:
	ldr r1, _080F5590 @ =gUnk_08D60FA4
	ldr r4, _080F5594 @ =gSongTable
	ldr r2, _080F5598 @ =0x00000C6C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F5562
	ldr r1, _080F559C @ =0x00000C68
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F557A
_080F5562:
	cmp r3, #0
	beq _080F5574
	ldr r0, _080F55A0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F557A
_080F5574:
	ldr r0, _080F55A4 @ =0x0000018D
	bl m4aSongNumStart
_080F557A:
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080F5584: .4byte sub_0809F840
_080F5588: .4byte gUnk_02020EE0
_080F558C: .4byte gUnk_0203AD3C
_080F5590: .4byte gUnk_08D60FA4
_080F5594: .4byte gSongTable
_080F5598: .4byte 0x00000C6C
_080F559C: .4byte 0x00000C68
_080F55A0: .4byte gUnk_0203AD10
_080F55A4: .4byte 0x0000018D

	thumb_func_start sub_080F55A8
sub_080F55A8: @ 0x080F55A8
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	ldr r2, _080F55DC @ =sub_080F57B4
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080F55CA
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_080F55CA:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F55E0
	cmp r0, #1
	beq _080F55EA
	b _080F55F4
	.align 2, 0
_080F55DC: .4byte sub_080F57B4
_080F55E0:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xe0
	lsls r0, r0, #1
	b _080F55F2
_080F55EA:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #2
_080F55F2:
	strh r0, [r1]
_080F55F4:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F5608
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
_080F5608:
	ldr r2, _080F5634 @ =0x000002A1
	ldr r0, _080F5638 @ =sub_08072B98
	str r0, [sp]
	ldr r0, _080F563C @ =sub_08084AA0
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r1, #0
	movs r3, #1
	bl sub_080706A0
	movs r2, #0xad
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080F5634: .4byte 0x000002A1
_080F5638: .4byte sub_08072B98
_080F563C: .4byte sub_08084AA0

	thumb_func_start sub_080F5640
sub_080F5640: @ 0x080F5640
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080F5668 @ =sub_080EDAD0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080F5668: .4byte sub_080EDAD0

	thumb_func_start sub_080F566C
sub_080F566C: @ 0x080F566C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	adds r6, #0x9f
	ldrb r5, [r6]
	ldr r2, _080F569C @ =sub_080EE76C
	movs r1, #5
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x20
	orrs r0, r1
	subs r1, #0x61
	ands r0, r1
	ldr r1, _080F56A0 @ =0xFFFF7FFF
	ands r0, r1
	ldr r1, _080F56A4 @ =0xFEFFFFFF
	ands r0, r1
	str r0, [r4, #8]
	strb r5, [r6]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080F569C: .4byte sub_080EE76C
_080F56A0: .4byte 0xFFFF7FFF
_080F56A4: .4byte 0xFEFFFFFF

	thumb_func_start sub_080F56A8
sub_080F56A8: @ 0x080F56A8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080F56E4 @ =sub_080F56E8
	movs r1, #8
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080F56E4: .4byte sub_080F56E8

	thumb_func_start sub_080F56E8
sub_080F56E8: @ 0x080F56E8
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	movs r2, #0
	ldr r0, _080F572C @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r2, r0
	bhs _080F573E
	adds r5, r3, #0
	adds r5, #0x60
	adds r4, r0, #0
	ldr r6, _080F5730 @ =gUnk_02020EE0
_080F56FE:
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r1, r0, r6
	adds r0, r1, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r5]
	cmp r0, r7
	bne _080F5734
	ldr r0, [r1, #8]
	movs r1, #0x80
	lsls r1, r1, #0x11
	ands r0, r1
	cmp r0, #0
	beq _080F573E
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r3, #8]
	b _080F573E
	.align 2, 0
_080F572C: .4byte gUnk_0203AD44
_080F5730: .4byte gUnk_02020EE0
_080F5734:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, r4
	blo _080F56FE
_080F573E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F5744
sub_080F5744: @ 0x080F5744
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #0x70]
	ldr r0, [r0, #8]
	movs r3, #0x80
	lsls r3, r3, #5
	ands r0, r3
	cmp r0, #0
	beq _080F5774
	ldr r1, [r2, #0xc]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r1, r0
	cmp r1, #0
	bne _080F5774
	adds r0, r2, #0
	adds r0, #0x80
	strh r1, [r0]
	ldr r0, [r2, #8]
	orrs r0, r3
	str r0, [r2, #8]
	adds r0, r2, #0
	bl sub_0809DA30
_080F5774:
	pop {r0}
	bx r0

	thumb_func_start sub_080F5778
sub_080F5778: @ 0x080F5778
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	ldr r0, [r2, #0x44]
	ldr r3, _080F57B0 @ =0xFFFFF000
	cmp r0, r3
	bgt _080F57AA
	adds r1, r2, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x60
	ble _080F57AA
	str r3, [r2, #0x44]
	adds r0, r2, #0
	bl sub_080F46DC
_080F57AA:
	pop {r0}
	bx r0
	.align 2, 0
_080F57B0: .4byte 0xFFFFF000

	thumb_func_start sub_080F57B4
sub_080F57B4: @ 0x080F57B4
	push {lr}
	adds r2, r0, #0
	ldr r1, [r2, #8]
	movs r0, #4
	orrs r1, r0
	str r1, [r2, #8]
	adds r0, r2, #0
	adds r0, #0x62
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F57D8
	movs r0, #0x80
	lsls r0, r0, #5
	orrs r1, r0
	str r1, [r2, #8]
	adds r0, r2, #0
	bl sub_0809DA30
_080F57D8:
	pop {r0}
	bx r0

	thumb_func_start CreateDarkMetaKnight
CreateDarkMetaKnight: @ 0x080F57DC
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _080F5810 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080F5814 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xd0
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080F5818
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080F5820
	.align 2, 0
_080F5810: .4byte ObjectMain
_080F5814: .4byte ObjectDestroy
_080F5818:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080F5820:
	adds r5, r0, #0
	adds r7, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r5, #0xc]
	movs r3, #1
	orrs r0, r3
	str r0, [r5, #0xc]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #0x12
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0xc0
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #3
	strb r1, [r0]
	subs r0, #1
	strb r1, [r0]
	subs r0, #1
	strb r1, [r0]
	subs r0, #0x48
	ldrh r2, [r0]
	adds r0, #0x4c
	strh r2, [r0]
	subs r0, #0x14
	str r1, [r0]
	adds r0, #4
	str r1, [r0]
	ldr r0, [r5, #8]
	orrs r0, r3
	movs r1, #0x40
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r5, #0x5c]
	movs r2, #8
	rsbs r2, r2, #0
	ands r0, r2
	movs r1, #3
	orrs r0, r1
	ldr r1, _080F5958 @ =0x001080A0
	orrs r0, r1
	str r0, [r5, #0x5c]
	movs r4, #6
	str r4, [sp]
	adds r0, r5, #0
	adds r1, r2, #0
	movs r3, #8
	bl sub_0803E2B0
	movs r1, #0xa
	rsbs r1, r1, #0
	movs r2, #6
	rsbs r2, r2, #0
	str r4, [sp]
	adds r0, r5, #0
	movs r3, #0xa
	bl sub_0803E308
	adds r0, r5, #0
	bl ObjectInitSprite
	ldr r2, _080F595C @ =gCurLevelInfo
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080F5960 @ =0x0000065E
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r4, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	movs r2, #0
	bl sub_08002A44
	adds r0, r4, #0
	movs r1, #0
	bl sub_08002A1C
	ldr r2, _080F5964 @ =gUnk_02020EE0
	ldr r0, _080F5968 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F592E
	ldr r0, _080F596C @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080F592E
	adds r0, r4, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080F592E:
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080F5970 @ =sub_080FB504
	str r0, [r5, #0x7c]
	adds r0, r5, #0
	bl sub_080FFF60
	adds r0, r5, #0
	bl sub_080FBFE8
	adds r1, r7, #0
	adds r1, #0xb4
	str r0, [r1]
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080F5958: .4byte 0x001080A0
_080F595C: .4byte gCurLevelInfo
_080F5960: .4byte 0x0000065E
_080F5964: .4byte gUnk_02020EE0
_080F5968: .4byte gUnk_0203AD3C
_080F596C: .4byte gUnk_0203AD20
_080F5970: .4byte sub_080FB504

	thumb_func_start sub_080F5974
sub_080F5974: @ 0x080F5974
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r5, r0, #0
	bl sub_0803D368
	adds r6, r0, #0
	adds r7, r5, #0
	adds r7, #0xac
	str r6, [r7]
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r6, #0xc]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _080F5A5E
	adds r0, r5, #0
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F5A5E
	ldr r1, [r5, #0x40]
	ldr r2, [r5, #0x44]
	movs r0, #0xb0
	adds r0, r0, r5
	mov r8, r0
	ldr r4, [r0]
	movs r0, #0x1a
	ldrsh r3, [r4, r0]
	mov ip, r3
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	adds r0, r6, #0
	mov r3, ip
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080F5A5E
	ldr r3, _080F5A54 @ =gCurLevelInfo
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	movs r2, #0xcd
	lsls r2, r2, #3
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa0
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa4
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa4
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa6
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa8
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xac
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r2, r5, #0
	adds r2, #0xaa
	strh r0, [r2]
	mov r1, r8
	ldr r0, [r1]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080F5A58
	adds r0, r5, #0
	bl sub_080F5A6C
	b _080F5A5E
	.align 2, 0
_080F5A54: .4byte gCurLevelInfo
_080F5A58:
	adds r0, r5, #0
	bl sub_080F704C
_080F5A5E:
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F5A6C
sub_080F5A6C: @ 0x080F5A6C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	mov r8, r0
	movs r0, #0
	mov sb, r0
	mov r2, r8
	adds r1, r2, #0
	str r1, [sp, #0x28]
	movs r5, #0
	ldr r0, _080F5AE8 @ =gUnk_0203AD44
	adds r2, r0, #0
	ldrb r4, [r2]
	cmp r5, r4
	bhs _080F5B7C
	ldr r6, _080F5AEC @ =gUnk_083571C0
	ldr r7, _080F5AF0 @ =gCurLevelInfo
	movs r3, #0xcd
	lsls r3, r3, #3
	movs r0, #0x10
	adds r0, r0, r7
	mov sl, r0
_080F5A9E:
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r1, r5, #0
	muls r1, r0, r1
	ldr r0, _080F5AF4 @ =gUnk_02020EE0
	adds r4, r1, r0
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080F5B70
	adds r0, r4, #0
	adds r0, #0x60
	mov r1, r8
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F5B70
	adds r0, r4, #0
	str r3, [sp, #0x2c]
	bl sub_0804BAD8
	ldr r2, _080F5AF8 @ =0x00000103
	adds r0, r4, r2
	ldrb r0, [r0]
	ldr r3, [sp, #0x2c]
	cmp r0, #0xe
	beq _080F5AFC
	adds r1, r4, #0
	adds r1, #0xd4
	movs r0, #0xb
	b _080F5B02
	.align 2, 0
_080F5AE8: .4byte gUnk_0203AD44
_080F5AEC: .4byte gUnk_083571C0
_080F5AF0: .4byte gCurLevelInfo
_080F5AF4: .4byte gUnk_02020EE0
_080F5AF8: .4byte 0x00000103
_080F5AFC:
	adds r1, r4, #0
	adds r1, #0xd4
	movs r0, #0x25
_080F5B02:
	strh r0, [r1]
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	mov r0, sb
	lsls r1, r0, #3
	adds r0, r1, r6
	ldr r0, [r0]
	str r0, [r4, #0x40]
	adds r0, r6, #4
	adds r1, r1, r0
	ldr r0, [r1]
	str r0, [r4, #0x44]
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	adds r2, r4, #0
	adds r2, #0x56
	ldrb r0, [r2]
	adds r1, r0, #0
	muls r1, r3, r1
	movs r4, #0xf6
	lsls r4, r4, #1
	adds r0, r7, r4
	adds r1, r1, r0
	movs r0, #3
	str r0, [r1]
	ldrb r0, [r2]
	adds r1, r0, #0
	muls r1, r3, r1
	adds r0, r7, #0
	adds r0, #0xc
	adds r1, r1, r0
	ldr r0, [r6]
	ldr r4, _080F5BA0 @ =0xFFFF9400
	adds r0, r0, r4
	str r0, [r1]
	ldrb r0, [r2]
	adds r1, r0, #0
	muls r1, r3, r1
	add r1, sl
	ldr r0, [r6, #4]
	ldr r2, _080F5BA4 @ =0xFFFF8000
	adds r0, r0, r2
	str r0, [r1]
	ldr r2, _080F5BA8 @ =gUnk_0203AD44
_080F5B70:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldrb r4, [r2]
	cmp r5, r4
	blo _080F5A9E
_080F5B7C:
	ldr r0, _080F5BAC @ =gUnk_0203AD10
	ldr r1, [r0]
	movs r2, #0x80
	orrs r1, r2
	str r1, [r0]
	movs r0, #1
	movs r1, #0xa
	movs r2, #0
	bl sub_08002888
	ldr r7, [r0]
	cmp r7, #0
	beq _080F5BB0
	mov r0, r8
	movs r1, #1
	bl sub_080F6AEC
	b _080F5CAE
	.align 2, 0
_080F5BA0: .4byte 0xFFFF9400
_080F5BA4: .4byte 0xFFFF8000
_080F5BA8: .4byte gUnk_0203AD44
_080F5BAC: .4byte gUnk_0203AD10
_080F5BB0:
	movs r4, #1
	str r4, [r0]
	movs r0, #0x18
	bl m4aSongNumStartOrChange
	ldr r2, _080F5CC0 @ =sub_080F5DA0
	mov r0, r8
	movs r1, #0x1f
	bl ObjectSetFunc
	movs r0, #0xe0
	lsls r0, r0, #9
	mov r1, r8
	str r0, [r1, #0x40]
	ldr r0, _080F5CC4 @ =0x000119FF
	str r0, [r1, #0x44]
	mov r0, r8
	adds r0, #0x50
	movs r2, #0
	strh r7, [r0]
	adds r0, #2
	strh r7, [r0]
	ldr r0, [r1, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	mov r1, r8
	str r0, [r1, #8]
	movs r0, #0x9f
	add r0, r8
	mov sl, r0
	strb r2, [r0]
	mov r0, r8
	adds r0, #0x9e
	strb r2, [r0]
	ldr r2, _080F5CC8 @ =gUnk_02020EE0
	ldr r0, _080F5CCC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	mov r1, r8
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F5CA8
	movs r1, #0xc0
	lsls r1, r1, #0x13
	mov sb, r1
	str r1, [sp]
	mov r0, sp
	movs r5, #0xe5
	lsls r5, r5, #2
	strh r5, [r0, #0xc]
	strb r4, [r0, #0x1a]
	mov r1, sp
	movs r0, #0xff
	strb r0, [r1, #0x1b]
	mov r0, sp
	strh r7, [r0, #0x10]
	strh r7, [r0, #0x12]
	strh r7, [r0, #0x14]
	strh r7, [r0, #0x16]
	movs r6, #0x10
	strb r6, [r0, #0x1c]
	mov r2, sp
	mov r0, r8
	adds r0, #0x2f
	ldrb r1, [r0]
	movs r4, #0xf
	adds r0, r4, #0
	ands r0, r1
	strb r0, [r2, #0x1f]
	movs r2, #0x80
	lsls r2, r2, #0xc
	mov r8, r2
	str r2, [sp, #8]
	mov r0, sp
	bl sub_08155128
	mov r0, sp
	ldrb r0, [r0, #0x1f]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	movs r1, #0x10
	bl sub_0803D280
	mov r0, sb
	str r0, [sp]
	mov r0, sp
	strh r5, [r0, #0xc]
	mov r1, sp
	movs r0, #3
	strb r0, [r1, #0x1a]
	subs r0, #4
	strb r0, [r1, #0x1b]
	mov r0, sp
	strh r7, [r0, #0x10]
	strh r7, [r0, #0x12]
	strh r7, [r0, #0x14]
	strh r7, [r0, #0x16]
	strb r6, [r0, #0x1c]
	ldr r0, [sp, #0x28]
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x2f
	ldrb r0, [r0]
	ands r4, r0
	strb r4, [r1, #0x1f]
	mov r1, r8
	str r1, [sp, #8]
	mov r0, sp
	bl sub_08155128
	mov r0, sp
	ldrb r0, [r0, #0x1f]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	movs r1, #0x10
	bl sub_0803D280
_080F5CA8:
	movs r0, #0x36
	mov r2, sl
	strb r0, [r2]
_080F5CAE:
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F5CC0: .4byte sub_080F5DA0
_080F5CC4: .4byte 0x000119FF
_080F5CC8: .4byte gUnk_02020EE0
_080F5CCC: .4byte gUnk_0203AD3C

	thumb_func_start sub_080F5CD0
sub_080F5CD0: @ 0x080F5CD0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	ldr r0, _080F5D10 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r6, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	bne _080F5D84
	adds r0, r6, #0
	adds r0, #0xc7
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0
	beq _080F5D14
	subs r0, r1, #1
	strb r0, [r7]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080F5D84
	adds r0, r6, #0
	movs r1, #0
	bl sub_080F6AEC
	b _080F5D84
	.align 2, 0
_080F5D10: .4byte gUnk_03000510
_080F5D14:
	movs r4, #0
	b _080F5D7C
_080F5D18:
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r1, r4, #0
	muls r1, r0, r1
	ldr r0, _080F5D90 @ =gUnk_02020EE0
	adds r1, r1, r0
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080F5D76
	adds r0, r1, #0
	adds r0, #0x60
	adds r2, r6, #0
	adds r2, #0x60
	ldrh r0, [r0]
	ldrh r3, [r2]
	cmp r0, r3
	bne _080F5D76
	movs r3, #0x8d
	lsls r3, r3, #1
	adds r0, r1, r3
	ldrh r1, [r0]
	movs r5, #8
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080F5D76
	ldrh r1, [r2]
	movs r0, #5
	bl sub_0803C83C
	movs r1, #1
	strb r1, [r0]
	movs r1, #0x80
	lsls r1, r1, #4
	strh r1, [r0, #0xa]
	movs r1, #0x20
	strb r1, [r0, #2]
	ldr r1, _080F5D94 @ =0x0000FFFF
	strh r1, [r0, #4]
	ldr r1, _080F5D98 @ =0x00003FFF
	strh r1, [r0, #6]
	strb r5, [r7]
_080F5D76:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_080F5D7C:
	ldr r0, _080F5D9C @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r4, r0
	blo _080F5D18
_080F5D84:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F5D90: .4byte gUnk_02020EE0
_080F5D94: .4byte 0x0000FFFF
_080F5D98: .4byte 0x00003FFF
_080F5D9C: .4byte gUnk_0203AD44

	thumb_func_start sub_080F5DA0
sub_080F5DA0: @ 0x080F5DA0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r6, r0, #0
	mov r8, r6
	adds r1, r6, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	cmp r0, #0
	beq _080F5DBE
	subs r0, #1
	strb r0, [r1]
_080F5DBE:
	movs r5, #0
	ldr r0, _080F5E24 @ =gUnk_0203AD44
	mov ip, r0
	movs r0, #0x83
	adds r0, r0, r6
	mov sb, r0
	mov r1, ip
	ldrb r1, [r1]
	cmp r5, r1
	bhs _080F5E92
	ldr r2, _080F5E28 @ =gCurLevelInfo
	mov sl, r2
_080F5DD6:
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r5, r0
	ldr r4, _080F5E2C @ =gUnk_02020EE0
	adds r2, r0, r4
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r2, r7
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080F5E84
	adds r0, r2, #0
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F5E84
	adds r0, r6, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #0
	bne _080F5E30
	adds r3, r2, #0
	adds r3, #0x50
	movs r7, #0
	ldrsh r0, [r3, r7]
	cmp r0, #0x3f
	bgt _080F5E40
	adds r0, r2, #0
	adds r0, #0xd4
	strh r1, [r0]
	strh r1, [r3]
	b _080F5E40
	.align 2, 0
_080F5E24: .4byte gUnk_0203AD44
_080F5E28: .4byte gCurLevelInfo
_080F5E2C: .4byte gUnk_02020EE0
_080F5E30:
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	adds r0, r2, #0
	adds r0, #0x50
	adds r1, #0xfc
	strh r1, [r0]
_080F5E40:
	ldrb r0, [r4]
	cmp r0, #0x17
	bhi _080F5E84
	adds r0, r2, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	mov r4, sl
	adds r2, r0, r4
	ldr r7, _080F5EA8 @ =0x00000662
	adds r1, r2, r7
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0xc0
	lsls r4, r4, #0x11
	asrs r3, r4, #0x10
	cmp r0, r3
	ble _080F5E70
	strh r3, [r1]
_080F5E70:
	movs r7, #0
	ldrsh r1, [r1, r7]
	ldr r0, [r2, #0xc]
	adds r0, r0, r1
	str r0, [r2, #0xc]
	movs r1, #0xf8
	lsls r1, r1, #8
	cmp r0, r1
	ble _080F5E84
	str r1, [r2, #0xc]
_080F5E84:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	mov r0, ip
	ldrb r0, [r0]
	cmp r5, r0
	blo _080F5DD6
_080F5E92:
	mov r4, sb
	ldrb r0, [r4]
	cmp r0, #2
	beq _080F5F88
	cmp r0, #2
	bgt _080F5EAC
	cmp r0, #0
	bne _080F5EA4
	b _080F6054
_080F5EA4:
	b _080F606E
	.align 2, 0
_080F5EA8: .4byte 0x00000662
_080F5EAC:
	cmp r0, #0x1f
	beq _080F5EB6
	cmp r0, #0x20
	beq _080F5F54
	b _080F606E
_080F5EB6:
	ldr r0, [r6, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r6, #8]
	adds r2, r6, #0
	adds r2, #0x9e
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _080F5EE0
	movs r0, #0x20
	strb r0, [r4]
	ldr r0, [r6, #8]
	subs r1, #7
	ands r0, r1
	str r0, [r6, #8]
	movs r0, #0
	strb r0, [r2]
_080F5EE0:
	ldrb r0, [r2]
	cmp r0, #0xc
	beq _080F5EE8
	b _080F606E
_080F5EE8:
	movs r0, #2
	movs r1, #0x13
	movs r2, #0
	bl sub_08002888
	adds r1, r0, #0
	ldr r0, [r1]
	cmp r0, #0
	beq _080F5EFE
	ldr r0, _080F5F2C @ =sub_080F5CD0
	str r0, [r6, #0x7c]
_080F5EFE:
	movs r0, #1
	str r0, [r1]
	ldr r0, _080F5F30 @ =gUnk_0203AD10
	ldr r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080F5F10
	b _080F606E
_080F5F10:
	movs r0, #2
	ands r1, r0
	cmp r1, #0
	beq _080F5F3C
	ldr r0, _080F5F34 @ =gUnk_0203AD3C
	ldr r1, _080F5F38 @ =gUnk_0203AD24
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	beq _080F5F3C
	movs r0, #8
	bl sub_08031CE4
	b _080F606E
	.align 2, 0
_080F5F2C: .4byte sub_080F5CD0
_080F5F30: .4byte gUnk_0203AD10
_080F5F34: .4byte gUnk_0203AD3C
_080F5F38: .4byte gUnk_0203AD24
_080F5F3C:
	ldr r2, _080F5F50 @ =gUnk_0203AD48
	ldrh r0, [r2]
	movs r1, #0
	cmp r0, #2
	bhi _080F5F48
	adds r1, r0, #0
_080F5F48:
	movs r0, #1
	bl sub_0800ACD4
	b _080F606E
	.align 2, 0
_080F5F50: .4byte gUnk_0203AD48
_080F5F54:
	ldrb r0, [r6, #1]
	cmp r0, #0xe
	bne _080F5F66
	adds r0, r6, #0
	bl sub_080FC5F8
	mov r1, r8
	adds r1, #0xbc
	str r0, [r1]
_080F5F66:
	ldrb r0, [r6, #1]
	cmp r0, #0x2a
	beq _080F5F6E
	b _080F606E
_080F5F6E:
	movs r1, #0
	movs r0, #2
	strb r0, [r4]
	adds r0, r6, #0
	adds r0, #0x9e
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x50
	ldr r0, _080F5F84 @ =0x0000FF80
	strh r0, [r1]
	b _080F606E
	.align 2, 0
_080F5F84: .4byte 0x0000FF80
_080F5F88:
	ldr r0, [r6, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r6, #8]
	adds r4, r6, #0
	adds r4, #0x9e
	ldrb r0, [r4]
	adds r0, #1
	movs r5, #0
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x40
	bls _080F606E
	movs r0, #0x18
	bl m4aSongNumStop
	adds r0, r6, #0
	bl sub_080FD8B4
	mov r1, r8
	adds r1, #0xb8
	str r0, [r1]
	strb r5, [r4]
	mov r1, sb
	strb r5, [r1]
	strb r5, [r4]
	adds r0, r6, #0
	adds r0, #0x50
	strh r5, [r0]
	ldr r1, _080F6034 @ =gUnk_02020EE0
	ldr r0, _080F6038 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _080F5FE2
	b _080F60F4
_080F5FE2:
	ldrb r0, [r6]
	cmp r0, #0
	bne _080F5FF4
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	beq _080F5FF4
	b _080F60F4
_080F5FF4:
	ldr r1, _080F603C @ =gUnk_08D60FA4
	ldr r4, _080F6040 @ =gSongTable
	ldr r2, _080F6044 @ =0x000010BC
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F6018
	ldr r7, _080F6048 @ =0x000010B8
	adds r0, r4, r7
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F60F4
_080F6018:
	cmp r3, #0
	beq _080F602A
	ldr r0, _080F604C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F60F4
_080F602A:
	ldr r0, _080F6050 @ =0x00000217
	bl m4aSongNumStart
	b _080F60F4
	.align 2, 0
_080F6034: .4byte gUnk_02020EE0
_080F6038: .4byte gUnk_0203AD3C
_080F603C: .4byte gUnk_08D60FA4
_080F6040: .4byte gSongTable
_080F6044: .4byte 0x000010BC
_080F6048: .4byte 0x000010B8
_080F604C: .4byte gUnk_0203AD10
_080F6050: .4byte 0x00000217
_080F6054:
	adds r1, r6, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x38
	bls _080F606E
	adds r0, r6, #0
	bl sub_080FFEF4
	b _080F60F4
_080F606E:
	adds r1, r6, #0
	adds r1, #0x85
	ldrb r0, [r1]
	cmp r0, #0x96
	bls _080F60F0
	ldr r2, _080F60E4 @ =gUnk_02020EE0
	ldr r0, _080F60E8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F60CC
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	movs r5, #0xe5
	lsls r5, r5, #2
	movs r3, #0xe4
	lsls r3, r3, #2
	movs r4, #0
	str r4, [sp]
	ldrh r1, [r6, #4]
	str r1, [sp, #4]
	adds r1, r5, #0
	movs r2, #1
	bl sub_0803CD98
	mov r0, r8
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x2f
	ldrb r0, [r0]
	ldr r3, _080F60EC @ =0x00000391
	str r4, [sp]
	ldrh r1, [r6, #4]
	str r1, [sp, #4]
	adds r1, r5, #0
	movs r2, #3
	bl sub_0803CD98
_080F60CC:
	ldrh r0, [r6, #4]
	adds r0, #2
	strh r0, [r6, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #1
	cmp r0, r1
	ble _080F60F4
	strh r1, [r6, #4]
	b _080F60F4
	.align 2, 0
_080F60E4: .4byte gUnk_02020EE0
_080F60E8: .4byte gUnk_0203AD3C
_080F60EC: .4byte 0x00000391
_080F60F0:
	adds r0, #1
	strb r0, [r1]
_080F60F4:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F6104
sub_080F6104: @ 0x080F6104
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov ip, r0
	movs r5, #0
	ldr r0, _080F61EC @ =gUnk_0203AD44
	adds r6, r0, #0
	ldrb r0, [r6]
	cmp r5, r0
	bhs _080F61DA
	movs r1, #0xa0
	lsls r1, r1, #0x13
	mov r8, r1
	movs r2, #0x80
	lsls r2, r2, #0x13
	mov sb, r2
_080F6126:
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r1, r5, #0
	muls r1, r0, r1
	ldr r0, _080F61F0 @ =gUnk_02020EE0
	adds r2, r1, r0
	adds r0, r2, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r1, r0, r1
	ldr r0, _080F61F4 @ =gCurLevelInfo
	adds r4, r1, r0
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r2, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080F61CE
	adds r0, r2, #0
	adds r0, #0x60
	mov r1, ip
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F61CE
	ldr r7, _080F61F8 @ =0x00000662
	adds r2, r4, r7
	ldrh r0, [r2]
	adds r0, #0x80
	strh r0, [r2]
	ldr r0, _080F61FC @ =0x00000664
	adds r1, r4, r0
	ldrh r0, [r1]
	adds r0, #0x80
	strh r0, [r1]
	movs r3, #0
	ldrsh r0, [r2, r3]
	mov r7, r8
	asrs r3, r7, #0x10
	cmp r0, r3
	ble _080F6184
	strh r3, [r2]
_080F6184:
	movs r3, #0
	ldrsh r0, [r1, r3]
	mov r7, sb
	asrs r3, r7, #0x10
	cmp r0, r3
	ble _080F6192
	strh r3, [r1]
_080F6192:
	movs r3, #0
	ldrsh r0, [r2, r3]
	ldr r2, [r4, #0xc]
	subs r2, r2, r0
	str r2, [r4, #0xc]
	movs r7, #0
	ldrsh r1, [r1, r7]
	ldr r0, [r4, #0x10]
	subs r0, r0, r1
	str r0, [r4, #0x10]
	ldr r0, _080F6200 @ =0x000047FF
	cmp r2, r0
	bgt _080F61B0
	adds r0, #1
	str r0, [r4, #0xc]
_080F61B0:
	ldr r1, [r4, #0x10]
	ldr r0, _080F6204 @ =0x000007FF
	cmp r1, r0
	bgt _080F61BC
	adds r0, #1
	str r0, [r4, #0x10]
_080F61BC:
	mov r2, ip
	adds r2, #0x85
	ldrb r0, [r2]
	cmp r0, #0
	bne _080F61CE
	ldr r1, [r4, #0x10]
	ldr r0, _080F6208 @ =0x00005FFF
	cmp r1, r0
	ble _080F62B4
_080F61CE:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldrb r0, [r6]
	cmp r5, r0
	blo _080F6126
_080F61DA:
	mov r2, ip
	adds r2, #0x85
	ldrb r1, [r2]
	cmp r1, #1
	beq _080F620C
	cmp r1, #2
	beq _080F62D6
	b _080F62F2
	.align 2, 0
_080F61EC: .4byte gUnk_0203AD44
_080F61F0: .4byte gUnk_02020EE0
_080F61F4: .4byte gCurLevelInfo
_080F61F8: .4byte 0x00000662
_080F61FC: .4byte 0x00000664
_080F6200: .4byte 0x000047FF
_080F6204: .4byte 0x000007FF
_080F6208: .4byte 0x00005FFF
_080F620C:
	mov r1, ip
	ldrh r0, [r1, #4]
	subs r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F62F2
	adds r1, #0x83
	movs r0, #0x29
	strb r0, [r1]
	movs r0, #2
	strb r0, [r2]
	movs r0, #8
	mov r2, ip
	strh r0, [r2, #4]
	ldr r1, _080F629C @ =gUnk_02020EE0
	ldr r0, _080F62A0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	mov r1, ip
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F62F2
	mov r3, ip
	ldrb r0, [r3]
	cmp r0, #0
	bne _080F6258
	mov r0, ip
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F62F2
_080F6258:
	ldr r1, _080F62A4 @ =gUnk_08D60FA4
	ldr r4, _080F62A8 @ =gSongTable
	ldr r7, _080F62AC @ =0x00000E24
	adds r0, r4, r7
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F627E
	movs r1, #0xe2
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F62F2
_080F627E:
	cmp r3, #0
	beq _080F6290
	ldr r0, _080F62B0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F62F2
_080F6290:
	movs r0, #0xe2
	lsls r0, r0, #1
	bl m4aSongNumStart
	b _080F62F2
	.align 2, 0
_080F629C: .4byte gUnk_02020EE0
_080F62A0: .4byte gUnk_0203AD3C
_080F62A4: .4byte gUnk_08D60FA4
_080F62A8: .4byte gSongTable
_080F62AC: .4byte 0x00000E24
_080F62B0: .4byte gUnk_0203AD10
_080F62B4:
	movs r1, #1
	strb r1, [r2]
	mov r2, ip
	adds r2, #0x83
	movs r0, #0x28
	strb r0, [r2]
	movs r0, #0xc0
	lsls r0, r0, #7
	mov r2, ip
	str r0, [r2, #0x40]
	movs r0, #0x80
	lsls r0, r0, #7
	str r0, [r2, #0x44]
	ldr r0, [r2, #8]
	eors r0, r1
	str r0, [r2, #8]
	b _080F62F2
_080F62D6:
	mov r3, ip
	ldr r0, [r3, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F62F2
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F62F2
	mov r0, ip
	bl sub_080FFF2C
_080F62F2:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F6300
sub_080F6300: @ 0x080F6300
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov ip, r0
	movs r0, #1
	str r0, [sp]
	movs r5, #0
	ldr r0, _080F63B8 @ =gUnk_0203AD44
	mov sb, r0
	ldrb r1, [r0]
	cmp r5, r1
	blo _080F6320
	b _080F6438
_080F6320:
	movs r6, #0x80
	lsls r6, r6, #1
	movs r3, #0x80
	lsls r3, r3, #0x14
	mov sl, r3
	movs r7, #1
	mov r8, r7
_080F632E:
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r1, r5, #0
	muls r1, r0, r1
	ldr r0, _080F63BC @ =gUnk_02020EE0
	adds r2, r1, r0
	adds r0, r2, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r1, r0, r1
	ldr r0, _080F63C0 @ =gCurLevelInfo
	adds r4, r1, r0
	adds r0, r2, r6
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080F6428
	adds r0, r2, #0
	adds r0, #0x60
	mov r1, ip
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F6428
	ldr r0, _080F63C4 @ =0x00000662
	adds r2, r4, r0
	ldrh r0, [r2]
	adds r0, r0, r6
	strh r0, [r2]
	ldr r3, _080F63C8 @ =0x00000664
	adds r1, r4, r3
	ldrh r0, [r1]
	adds r0, r0, r6
	strh r0, [r1]
	movs r7, #0
	ldrsh r0, [r2, r7]
	movs r7, #0xa0
	lsls r7, r7, #0x14
	asrs r3, r7, #0x10
	cmp r0, r3
	ble _080F638A
	strh r3, [r2]
_080F638A:
	movs r3, #0
	ldrsh r0, [r1, r3]
	mov r7, sl
	asrs r3, r7, #0x10
	cmp r0, r3
	ble _080F6398
	strh r3, [r1]
_080F6398:
	movs r3, #0
	ldrsh r0, [r2, r3]
	ldr r2, [r4, #0xc]
	adds r2, r2, r0
	str r2, [r4, #0xc]
	movs r7, #0
	ldrsh r1, [r1, r7]
	ldr r0, [r4, #0x10]
	adds r0, r0, r1
	str r0, [r4, #0x10]
	ldr r0, _080F63CC @ =0x0000F7FF
	cmp r2, r0
	ble _080F63D0
	adds r0, #1
	str r0, [r4, #0xc]
	b _080F63D4
	.align 2, 0
_080F63B8: .4byte gUnk_0203AD44
_080F63BC: .4byte gUnk_02020EE0
_080F63C0: .4byte gCurLevelInfo
_080F63C4: .4byte 0x00000662
_080F63C8: .4byte 0x00000664
_080F63CC: .4byte 0x0000F7FF
_080F63D0:
	movs r0, #0
	str r0, [sp]
_080F63D4:
	ldr r1, [r4, #0x10]
	ldr r0, _080F63E4 @ =0x000097FF
	cmp r1, r0
	ble _080F63E8
	adds r0, #1
	str r0, [r4, #0x10]
	b _080F63EC
	.align 2, 0
_080F63E4: .4byte 0x000097FF
_080F63E8:
	movs r1, #0
	str r1, [sp]
_080F63EC:
	mov r3, ip
	adds r3, #0x85
	ldrb r2, [r3]
	cmp r2, #0
	bne _080F6428
	ldr r1, [r4, #0x10]
	movs r0, #0x94
	lsls r0, r0, #7
	cmp r1, r0
	ble _080F6428
	mov r7, r8
	strb r7, [r3]
	mov r0, ip
	adds r0, #0x83
	strb r2, [r0]
	mov r1, ip
	ldr r0, [r1, #8]
	mov r3, r8
	eors r0, r3
	str r0, [r1, #8]
	ldr r0, _080F6420 @ =0x0001B300
	str r0, [r1, #0x40]
	ldr r0, _080F6424 @ =0x000119FF
	str r0, [r1, #0x44]
	b _080F6444
	.align 2, 0
_080F6420: .4byte 0x0001B300
_080F6424: .4byte 0x000119FF
_080F6428:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	mov r7, sb
	ldrb r7, [r7]
	cmp r5, r7
	bhs _080F6438
	b _080F632E
_080F6438:
	ldr r0, [sp]
	cmp r0, #0
	beq _080F6444
	mov r0, ip
	bl sub_080F6454
_080F6444:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F6454
sub_080F6454: @ 0x080F6454
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	ldr r2, _080F6520 @ =sub_080F6544
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r3, #0
	movs r2, #0
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	strh r2, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r3, [r0]
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0x38
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x85
	strb r3, [r0]
	ldr r0, _080F6524 @ =0x0001B300
	str r0, [r4, #0x40]
	ldr r0, _080F6528 @ =0x000119FF
	str r0, [r4, #0x44]
	movs r3, #0
	ldr r0, _080F652C @ =gUnk_0203AD44
	ldrb r1, [r0]
	cmp r3, r1
	bhs _080F650E
	adds r5, r4, #0
	adds r5, #0x60
	movs r4, #0
	ldr r2, _080F6530 @ =gUnk_02020EE0
	mov ip, r2
	ldr r7, _080F6534 @ =gCurLevelInfo
	mov r8, r7
	adds r6, r0, #0
_080F64B4:
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r3, r0
	mov r1, ip
	adds r2, r0, r1
	adds r0, r2, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	mov r7, r8
	adds r1, r0, r7
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r2, r7
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080F6502
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r2, [r5]
	cmp r0, r2
	bne _080F6502
	ldr r7, _080F6538 @ =0x00000662
	adds r0, r1, r7
	strh r4, [r0]
	ldr r2, _080F653C @ =0x00000664
	adds r0, r1, r2
	strh r4, [r0]
	movs r0, #0xf8
	lsls r0, r0, #8
	str r0, [r1, #0xc]
	movs r0, #0x98
	lsls r0, r0, #8
	str r0, [r1, #0x10]
_080F6502:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldrb r7, [r6]
	cmp r3, r7
	blo _080F64B4
_080F650E:
	ldr r0, _080F6540 @ =gUnk_030016A0
	movs r1, #8
	bl m4aMPlayFadeIn
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F6520: .4byte sub_080F6544
_080F6524: .4byte 0x0001B300
_080F6528: .4byte 0x000119FF
_080F652C: .4byte gUnk_0203AD44
_080F6530: .4byte gUnk_02020EE0
_080F6534: .4byte gCurLevelInfo
_080F6538: .4byte 0x00000662
_080F653C: .4byte 0x00000664
_080F6540: .4byte gUnk_030016A0

	thumb_func_start sub_080F6544
sub_080F6544: @ 0x080F6544
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r5, r0, #0
	mov r8, r5
	adds r2, r5, #0
	adds r2, #0x85
	ldrb r1, [r2]
	cmp r1, #1
	beq _080F659A
	cmp r1, #1
	bgt _080F6564
	cmp r1, #0
	beq _080F656E
	b _080F6710
_080F6564:
	cmp r1, #2
	beq _080F65C0
	cmp r1, #3
	beq _080F65D8
	b _080F6710
_080F656E:
	adds r1, r5, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080F6580
	b _080F6710
_080F6580:
	movs r0, #1
	strb r0, [r2]
	subs r1, #0x1c
	movs r0, #0xb
	strb r0, [r1]
	subs r1, #0x33
	movs r0, #0xa0
	strh r0, [r1]
	adds r1, #2
	movs r0, #0xa0
	lsls r0, r0, #2
	strh r0, [r1]
	b _080F6710
_080F659A:
	adds r0, r5, #0
	adds r0, #0x52
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x3f
	ble _080F65A8
	b _080F6710
_080F65A8:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #0xc
	strb r0, [r1]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	movs r0, #2
	strb r0, [r2]
	b _080F6710
_080F65C0:
	ldr r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	bne _080F65CA
	b _080F6710
_080F65CA:
	adds r0, r5, #0
	adds r0, #0x83
	movs r1, #0xd
	strb r1, [r0]
	movs r0, #3
	strb r0, [r2]
	b _080F6710
_080F65D8:
	adds r0, r5, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080F65E8
	b _080F6710
_080F65E8:
	adds r2, r5, #0
	adds r2, #0x83
	ldrb r0, [r2]
	adds r7, r2, #0
	cmp r0, #0xd
	bne _080F6680
	ldr r1, _080F6668 @ =gUnk_02020EE0
	ldr r0, _080F666C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	adds r6, r1, #0
	ldrh r1, [r6]
	cmp r0, r1
	bne _080F6662
	ldrb r0, [r5]
	cmp r0, #0
	bne _080F6622
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F6662
_080F6622:
	ldr r1, _080F6670 @ =gUnk_08D60FA4
	ldr r4, _080F6674 @ =gSongTable
	ldr r2, _080F6678 @ =0x000010C4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F6648
	movs r1, #0x86
	lsls r1, r1, #5
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F6662
_080F6648:
	cmp r3, #0
	beq _080F665A
	ldr r0, _080F667C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F6662
_080F665A:
	movs r0, #0x86
	lsls r0, r0, #2
	bl m4aSongNumStart
_080F6662:
	movs r0, #0xe
	strb r0, [r7]
	b _080F669E
	.align 2, 0
_080F6668: .4byte gUnk_02020EE0
_080F666C: .4byte gUnk_0203AD3C
_080F6670: .4byte gUnk_08D60FA4
_080F6674: .4byte gSongTable
_080F6678: .4byte 0x000010C4
_080F667C: .4byte gUnk_0203AD10
_080F6680:
	adds r6, r5, #0
	adds r6, #0x60
	cmp r0, #0xe
	bne _080F669E
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x10
	bls _080F669E
	movs r0, #0
	strb r0, [r2]
_080F669E:
	adds r0, r5, #0
	adds r0, #0x50
	movs r3, #0
	strh r3, [r0]
	ldr r2, _080F671C @ =gUnk_02020EE0
	ldr r0, _080F6720 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r6]
	cmp r0, r6
	bne _080F66F6
	adds r0, r5, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	movs r1, #0xe4
	lsls r1, r1, #2
	movs r4, #0xe5
	lsls r4, r4, #2
	str r3, [sp]
	ldrh r2, [r5, #4]
	str r2, [sp, #4]
	movs r2, #0
	adds r3, r4, #0
	bl sub_0803CD98
	mov r0, r8
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x2f
	ldrb r0, [r0]
	ldr r1, _080F6724 @ =0x00000391
	movs r2, #2
	str r2, [sp]
	ldrh r2, [r5, #4]
	str r2, [sp, #4]
	movs r2, #0
	adds r3, r4, #0
	bl sub_0803CD98
_080F66F6:
	ldrh r0, [r5, #4]
	adds r0, #2
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #1
	cmp r0, r1
	ble _080F6710
	strh r1, [r5, #4]
	adds r0, r5, #0
	bl sub_080F6728
_080F6710:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F671C: .4byte gUnk_02020EE0
_080F6720: .4byte gUnk_0203AD3C
_080F6724: .4byte 0x00000391

	thumb_func_start sub_080F6728
sub_080F6728: @ 0x080F6728
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x2c
	adds r7, r0, #0
	ldr r2, _080F6818 @ =sub_080F6824
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r7, #0
	adds r0, #0x50
	movs r4, #0
	movs r3, #0
	strh r3, [r0]
	adds r0, #2
	strh r3, [r0]
	movs r0, #0x20
	strh r0, [r7, #4]
	adds r0, r7, #0
	adds r0, #0x85
	strb r4, [r0]
	ldr r2, _080F681C @ =gUnk_02020EE0
	ldr r0, _080F6820 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F680A
	movs r0, #0xc0
	lsls r0, r0, #0x13
	mov sb, r0
	str r0, [sp]
	mov r0, sp
	movs r5, #0xe5
	lsls r5, r5, #2
	strh r5, [r0, #0xc]
	strb r4, [r0, #0x1a]
	mov r1, sp
	movs r0, #0xff
	strb r0, [r1, #0x1b]
	mov r0, sp
	strh r3, [r0, #0x10]
	strh r3, [r0, #0x12]
	strh r3, [r0, #0x14]
	strh r3, [r0, #0x16]
	movs r6, #0x10
	strb r6, [r0, #0x1c]
	mov r2, sp
	adds r0, r7, #0
	adds r0, #0x2f
	ldrb r1, [r0]
	movs r4, #0xf
	adds r0, r4, #0
	ands r0, r1
	strb r0, [r2, #0x1f]
	movs r0, #0x80
	lsls r0, r0, #0xc
	mov r8, r0
	str r0, [sp, #8]
	mov r0, sp
	str r3, [sp, #0x28]
	bl sub_08155128
	mov r0, sp
	ldrb r0, [r0, #0x1f]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	movs r1, #0x10
	bl sub_0803D280
	mov r0, sb
	str r0, [sp]
	mov r0, sp
	strh r5, [r0, #0xc]
	mov r1, sp
	movs r0, #2
	strb r0, [r1, #0x1a]
	subs r0, #3
	strb r0, [r1, #0x1b]
	mov r0, sp
	ldr r3, [sp, #0x28]
	strh r3, [r0, #0x10]
	strh r3, [r0, #0x12]
	strh r3, [r0, #0x14]
	strh r3, [r0, #0x16]
	strb r6, [r0, #0x1c]
	adds r0, r7, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x2f
	ldrb r0, [r0]
	ands r4, r0
	strb r4, [r1, #0x1f]
	mov r0, r8
	str r0, [sp, #8]
	mov r0, sp
	bl sub_08155128
	mov r0, sp
	ldrb r0, [r0, #0x1f]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	movs r1, #0x10
	bl sub_0803D280
_080F680A:
	add sp, #0x2c
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F6818: .4byte sub_080F6824
_080F681C: .4byte gUnk_02020EE0
_080F6820: .4byte gUnk_0203AD3C

	thumb_func_start sub_080F6824
sub_080F6824: @ 0x080F6824
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0x85
	ldrb r1, [r2]
	cmp r1, #1
	beq _080F686E
	cmp r1, #1
	bgt _080F683C
	cmp r1, #0
	beq _080F6848
	b _080F6AE4
_080F683C:
	cmp r1, #3
	beq _080F6924
	cmp r1, #4
	bne _080F6846
	b _080F6968
_080F6846:
	b _080F6AE4
_080F6848:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080F6856
	b _080F6AE4
_080F6856:
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0x17
	strb r0, [r1]
	movs r0, #1
	strb r0, [r2]
	b _080F6AE4
_080F686E:
	ldrb r0, [r4, #1]
	cmp r0, #8
	beq _080F6878
	cmp r0, #0x16
	bne _080F68EC
_080F6878:
	ldr r1, _080F6908 @ =gUnk_0835719C
	adds r0, r4, #0
	bl sub_080860A8
	ldr r1, _080F690C @ =gUnk_02020EE0
	ldr r0, _080F6910 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F68EC
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F68AC
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F68EC
_080F68AC:
	ldr r1, _080F6914 @ =gUnk_08D60FA4
	ldr r5, _080F6918 @ =gSongTable
	ldr r2, _080F691C @ =0x00000D24
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F68D2
	movs r1, #0xd2
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F68EC
_080F68D2:
	cmp r3, #0
	beq _080F68E4
	ldr r0, _080F6920 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F68EC
_080F68E4:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F68EC:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080F68F8
	b _080F6AE4
_080F68F8:
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #3
	strb r0, [r1]
	movs r0, #4
	strh r0, [r4, #4]
	b _080F6AE4
	.align 2, 0
_080F6908: .4byte gUnk_0835719C
_080F690C: .4byte gUnk_02020EE0
_080F6910: .4byte gUnk_0203AD3C
_080F6914: .4byte gUnk_08D60FA4
_080F6918: .4byte gSongTable
_080F691C: .4byte 0x00000D24
_080F6920: .4byte gUnk_0203AD10
_080F6924:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	cmp r3, #0
	beq _080F6934
	b _080F6AE4
_080F6934:
	movs r0, #4
	strb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #2
	strb r0, [r1]
	adds r2, r4, #0
	adds r2, #0x50
	strh r3, [r2]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xb
	strb r0, [r1]
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r2]
	subs r1, #0x31
	movs r0, #0xc0
	lsls r0, r0, #2
	strh r0, [r1]
	b _080F6AE4
_080F6968:
	movs r2, #0x83
	adds r2, r2, r4
	mov ip, r2
	ldrb r0, [r2]
	cmp r0, #0xb
	bne _080F6A20
	adds r0, r4, #0
	adds r0, #0x52
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x3f
	ble _080F6982
	b _080F6AE4
_080F6982:
	movs r0, #0x10
	strb r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _080F6A00 @ =gUnk_02020EE0
	ldr r0, _080F6A04 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _080F69AE
	b _080F6AE4
_080F69AE:
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F69C0
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	beq _080F69C0
	b _080F6AE4
_080F69C0:
	ldr r1, _080F6A08 @ =gUnk_08D60FA4
	ldr r4, _080F6A0C @ =gSongTable
	ldr r2, _080F6A10 @ =0x000010B4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F69E6
	ldr r1, _080F6A14 @ =0x000010B0
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bls _080F69E6
	b _080F6AE4
_080F69E6:
	cmp r3, #0
	beq _080F69F8
	ldr r0, _080F6A18 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F6AE4
_080F69F8:
	ldr r0, _080F6A1C @ =0x00000216
	bl m4aSongNumStart
	b _080F6AE4
	.align 2, 0
_080F6A00: .4byte gUnk_02020EE0
_080F6A04: .4byte gUnk_0203AD3C
_080F6A08: .4byte gUnk_08D60FA4
_080F6A0C: .4byte gSongTable
_080F6A10: .4byte 0x000010B4
_080F6A14: .4byte 0x000010B0
_080F6A18: .4byte gUnk_0203AD10
_080F6A1C: .4byte 0x00000216
_080F6A20:
	cmp r0, #0x10
	bne _080F6A58
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0
	bne _080F6AE4
	movs r0, #0x11
	mov r1, ip
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x50
	strh r2, [r0]
	ldr r0, _080F6A54 @ =sub_080FB504
	str r0, [r4, #0x7c]
	b _080F6AE4
	.align 2, 0
_080F6A54: .4byte sub_080FB504
_080F6A58:
	cmp r0, #0x11
	bne _080F6AD0
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x66
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _080F6AC0 @ =0xFFFFF700
	cmp r0, r3
	bge _080F6A72
	strh r3, [r2]
_080F6A72:
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r0, [r0]
	ands r1, r0
	cmp r1, #0
	beq _080F6AE4
	movs r0, #8
	strh r0, [r4, #4]
	movs r0, #0x12
	mov r2, ip
	strb r0, [r2]
	ldr r2, _080F6AC4 @ =0x000002AD
	adds r0, r4, #0
	movs r1, #0
	movs r3, #2
	bl sub_0808AE30
	movs r0, #1
	adds r1, r4, #0
	bl sub_0806FE64
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r1, [r0]
	movs r0, #5
	bl sub_0803C83C
	movs r1, #1
	strb r1, [r0]
	movs r1, #0x80
	lsls r1, r1, #4
	strh r1, [r0, #0xa]
	movs r1, #0x20
	strb r1, [r0, #2]
	ldr r1, _080F6AC8 @ =0x0000FFFF
	strh r1, [r0, #4]
	ldr r1, _080F6ACC @ =0x00003FFF
	strh r1, [r0, #6]
	b _080F6AE4
	.align 2, 0
_080F6AC0: .4byte 0xFFFFF700
_080F6AC4: .4byte 0x000002AD
_080F6AC8: .4byte 0x0000FFFF
_080F6ACC: .4byte 0x00003FFF
_080F6AD0:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F6AE4
	adds r0, r4, #0
	movs r1, #0
	bl sub_080F6AEC
_080F6AE4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F6AEC
sub_080F6AEC: @ 0x080F6AEC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	adds r7, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #0x28]
	movs r0, #0
	mov sl, r0
	ldr r2, _080F6DF0 @ =sub_080F6ED8
	adds r0, r7, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r7, #0
	adds r0, #0x85
	mov r1, sl
	strb r1, [r0]
	ldr r0, _080F6DF4 @ =sub_080FB504
	str r0, [r7, #0x7c]
	adds r0, r7, #0
	adds r0, #0xb8
	ldr r2, [r0]
	cmp r2, #0
	beq _080F6B30
	ldrh r1, [r2, #6]
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2, #6]
_080F6B30:
	adds r0, r7, #0
	adds r0, #0xbc
	ldr r2, [r0]
	cmp r2, #0
	beq _080F6B46
	ldrh r1, [r2, #6]
	movs r6, #0x80
	lsls r6, r6, #5
	adds r0, r6, #0
	orrs r0, r1
	strh r0, [r2, #6]
_080F6B46:
	ldr r2, _080F6DF8 @ =gUnk_02020EE0
	ldr r0, _080F6DFC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x60
	ldrh r0, [r0]
	str r1, [sp, #0x30]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F6C00
	movs r2, #0xc0
	lsls r2, r2, #0x13
	mov sb, r2
	str r2, [sp]
	mov r0, sp
	movs r1, #0
	movs r5, #0xe5
	lsls r5, r5, #2
	strh r5, [r0, #0xc]
	strb r1, [r0, #0x1a]
	mov r1, sp
	movs r0, #0xff
	strb r0, [r1, #0x1b]
	mov r0, sp
	mov r3, sl
	strh r3, [r0, #0x10]
	strh r3, [r0, #0x12]
	strh r3, [r0, #0x14]
	strh r3, [r0, #0x16]
	movs r6, #0x10
	strb r6, [r0, #0x1c]
	mov r2, sp
	adds r0, r7, #0
	adds r0, #0x2f
	ldrb r1, [r0]
	movs r4, #0xf
	adds r0, r4, #0
	ands r0, r1
	strb r0, [r2, #0x1f]
	movs r0, #0x80
	lsls r0, r0, #0xc
	mov r8, r0
	str r0, [sp, #8]
	mov r0, sp
	bl sub_08155128
	mov r0, sp
	ldrb r0, [r0, #0x1f]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	movs r1, #0x10
	bl sub_0803D280
	mov r1, sb
	str r1, [sp]
	mov r0, sp
	strh r5, [r0, #0xc]
	mov r1, sp
	movs r0, #2
	strb r0, [r1, #0x1a]
	subs r0, #3
	strb r0, [r1, #0x1b]
	mov r0, sp
	mov r2, sl
	strh r2, [r0, #0x10]
	strh r2, [r0, #0x12]
	strh r2, [r0, #0x14]
	strh r2, [r0, #0x16]
	strb r6, [r0, #0x1c]
	adds r0, r7, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x2f
	ldrb r0, [r0]
	ands r4, r0
	strb r4, [r1, #0x1f]
	mov r3, r8
	str r3, [sp, #8]
	mov r0, sp
	bl sub_08155128
	mov r0, sp
	ldrb r0, [r0, #0x1f]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	movs r1, #0x10
	bl sub_0803D280
_080F6C00:
	ldr r0, [r7, #8]
	movs r1, #1
	orrs r0, r1
	subs r1, #0xa
	ands r0, r1
	str r0, [r7, #8]
	adds r0, r7, #0
	adds r0, #0x50
	mov r6, sl
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	ldr r0, _080F6E00 @ =0x0001B300
	str r0, [r7, #0x40]
	ldr r0, _080F6E04 @ =0x000119FF
	str r0, [r7, #0x44]
	movs r0, #0x40
	strh r0, [r7, #4]
	adds r0, r7, #0
	bl sub_08034E14
	adds r1, r0, #0
	cmp r1, #0
	beq _080F6C34
	movs r0, #0
	strb r0, [r1, #9]
_080F6C34:
	adds r0, r7, #0
	adds r0, #0x82
	ldrb r5, [r0]
	adds r4, r5, #0
	subs r4, #0x38
	ldr r2, _080F6E08 @ =gCurLevelInfo
	adds r3, r7, #0
	adds r3, #0x56
	ldrb r1, [r3]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080F6E0C @ =0x0000065E
	adds r0, r0, r1
	ldrb r6, [r0]
	lsls r4, r4, #0x10
	asrs r1, r4, #0x10
	str r3, [sp, #0x2c]
	cmp r1, #0
	blt _080F6D02
	ldr r0, _080F6E10 @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080F6D02
	adds r0, r7, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080F6D02
	adds r0, r5, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xf
	bls _080F6CC0
	movs r5, #1
_080F6C88:
	subs r1, r5, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	adds r2, r5, #0
	bl sub_08002A44
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #1
	bls _080F6C88
	adds r0, r6, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	movs r2, #0
	bl sub_08002A44
_080F6CC0:
	ldr r1, _080F6E10 @ =gUnk_08352D80
	asrs r0, r4, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r6, #0
	bl sub_08002A1C
	ldr r2, _080F6DF8 @ =gUnk_02020EE0
	ldr r0, _080F6DFC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r2, [sp, #0x30]
	ldrh r2, [r2]
	cmp r0, r2
	bne _080F6D02
	ldr r0, _080F6E14 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080F6D02
	adds r0, r6, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_080F6D02:
	ldr r3, [sp, #0x28]
	cmp r3, #0
	bne _080F6D32
	ldr r6, [sp, #0x30]
	ldrh r1, [r6]
	movs r0, #5
	bl sub_0803C83C
	movs r1, #1
	strb r1, [r0]
	movs r2, #0
	movs r1, #0xf8
	lsls r1, r1, #8
	strh r1, [r0, #0xa]
	movs r1, #0x80
	lsls r1, r1, #6
	strh r1, [r0, #0xc]
	movs r1, #0x20
	strb r1, [r0, #1]
	strb r2, [r0, #2]
	ldr r1, _080F6E18 @ =0x0000FFFF
	strh r1, [r0, #4]
	ldr r1, _080F6E1C @ =0x00003FFF
	strh r1, [r0, #6]
_080F6D32:
	movs r3, #0
	ldr r0, _080F6E20 @ =gUnk_0203AD44
	mov ip, r0
	ldr r0, _080F6E24 @ =gUnk_020229D4
	mov r8, r0
	mov r1, ip
	ldrb r1, [r1]
	cmp r3, r1
	bhs _080F6DDA
	movs r5, #0
	ldr r2, _080F6E28 @ =gUnk_083571C0
	mov sb, r2
	ldr r4, _080F6E08 @ =gCurLevelInfo
_080F6D4C:
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r3, r0
	ldr r6, _080F6DF8 @ =gUnk_02020EE0
	adds r2, r0, r6
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r2, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080F6DCC
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r6, [sp, #0x30]
	ldrh r6, [r6]
	cmp r0, r6
	bne _080F6DCC
	adds r0, r2, #0
	adds r0, #0xd4
	strh r5, [r0]
	subs r0, #0x84
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	mov r0, sl
	lsls r1, r0, #3
	mov r6, sb
	adds r0, r1, r6
	ldr r0, [r0]
	movs r6, #0xec
	lsls r6, r6, #6
	adds r0, r0, r6
	str r0, [r2, #0x40]
	ldr r0, _080F6E2C @ =gUnk_083571C4
	adds r1, r1, r0
	ldr r0, [r1]
	str r0, [r2, #0x44]
	mov r0, sl
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	adds r2, #0x56
	ldrb r0, [r2]
	movs r6, #0xcd
	lsls r6, r6, #3
	adds r1, r0, #0
	muls r1, r6, r1
	adds r0, r4, #0
	adds r0, #0xc
	adds r1, r1, r0
	movs r0, #0xf8
	lsls r0, r0, #8
	str r0, [r1]
	ldrb r0, [r2]
	muls r0, r6, r0
	ldr r1, _080F6E30 @ =gUnk_02023540
	adds r0, r0, r1
	movs r1, #0x98
	lsls r1, r1, #8
	str r1, [r0]
_080F6DCC:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	mov r2, ip
	ldrb r2, [r2]
	cmp r3, r2
	blo _080F6D4C
_080F6DDA:
	movs r3, #0
	movs r2, #1
	mov r6, r8
	ldr r1, [r6]
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _080F6E34
	orrs r1, r2
	str r1, [r6]
	b _080F6E54
	.align 2, 0
_080F6DF0: .4byte sub_080F6ED8
_080F6DF4: .4byte sub_080FB504
_080F6DF8: .4byte gUnk_02020EE0
_080F6DFC: .4byte gUnk_0203AD3C
_080F6E00: .4byte 0x0001B300
_080F6E04: .4byte 0x000119FF
_080F6E08: .4byte gCurLevelInfo
_080F6E0C: .4byte 0x0000065E
_080F6E10: .4byte gUnk_08352D80
_080F6E14: .4byte gUnk_0203AD20
_080F6E18: .4byte 0x0000FFFF
_080F6E1C: .4byte 0x00003FFF
_080F6E20: .4byte gUnk_0203AD44
_080F6E24: .4byte gUnk_020229D4
_080F6E28: .4byte gUnk_083571C0
_080F6E2C: .4byte gUnk_083571C4
_080F6E30: .4byte gUnk_02023540
_080F6E34:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x1f
	bhi _080F6E54
	movs r2, #1
	lsls r2, r3
	mov r0, r8
	ldr r1, [r0]
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _080F6E34
	orrs r1, r2
	mov r2, r8
	str r1, [r2]
_080F6E54:
	lsls r1, r3, #3
	adds r1, r1, r3
	lsls r1, r1, #2
	ldr r3, _080F6EC8 @ =gUnk_020229E0
	adds r1, r1, r3
	movs r3, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	ldr r0, [r7, #0x40]
	asrs r0, r0, #8
	movs r2, #0
	strh r0, [r1, #6]
	ldr r0, [r7, #0x44]
	asrs r0, r0, #8
	strh r0, [r1, #8]
	strb r2, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r2, [r1, #4]
	strb r2, [r1, #5]
	movs r0, #0x77
	strb r0, [r1, #0xc]
	strb r2, [r1, #0xe]
	strb r2, [r1, #0xf]
	strb r2, [r1, #0x10]
	movs r0, #0x16
	strh r0, [r1, #0x22]
	ldr r0, _080F6ECC @ =0x0000FE0C
	strh r0, [r1, #0x1a]
	ldr r0, _080F6ED0 @ =0x0000FF38
	strh r0, [r1, #0x1c]
	movs r0, #0xfa
	lsls r0, r0, #2
	strh r0, [r1, #0x1e]
	movs r0, #0xc8
	lsls r0, r0, #1
	strh r0, [r1, #0x20]
	strb r2, [r1, #0x11]
	ldr r0, _080F6ED4 @ =0x00000F0A
	strh r0, [r1, #0x12]
	subs r0, #1
	strh r0, [r1, #0x14]
	strh r3, [r1, #0x16]
	strh r3, [r1, #0x18]
	ldr r6, [sp, #0x2c]
	ldrb r0, [r6]
	bl CreateObject
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F6EC8: .4byte gUnk_020229E0
_080F6ECC: .4byte 0x0000FE0C
_080F6ED0: .4byte 0x0000FF38
_080F6ED4: .4byte 0x00000F0A

	thumb_func_start sub_080F6ED8
sub_080F6ED8: @ 0x080F6ED8
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080F6EEA
	b _080F7042
_080F6EEA:
	ldr r0, _080F6F7C @ =gCurLevelInfo
	mov ip, r0
	adds r3, r4, #0
	adds r3, #0xac
	ldr r0, [r3]
	adds r0, #0x56
	ldrb r0, [r0]
	movs r2, #0xcd
	lsls r2, r2, #3
	muls r0, r2, r0
	mov r1, ip
	adds r1, #0x6c
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa4
	strh r0, [r1]
	ldr r0, [r3]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	mov r1, ip
	adds r1, #0x70
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa6
	strh r0, [r1]
	ldr r0, [r3]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	mov r1, ip
	adds r1, #0x74
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r3]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	mov r1, ip
	adds r1, #0x78
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r2, r4, #0
	adds r2, #0xaa
	strh r0, [r2]
	ldr r0, [r4, #8]
	ldr r1, _080F6F80 @ =0xFFFFFDFF
	ands r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080F7B34
	ldr r2, _080F6F84 @ =gUnk_0203AD10
	ldr r0, [r2]
	movs r1, #0x81
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
	movs r5, #0
	b _080F703A
	.align 2, 0
_080F6F7C: .4byte gCurLevelInfo
_080F6F80: .4byte 0xFFFFFDFF
_080F6F84: .4byte gUnk_0203AD10
_080F6F88:
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r1, r5, #0
	muls r1, r0, r1
	ldr r0, _080F6FD0 @ =gUnk_02020EE0
	adds r3, r1, r0
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r3, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080F7034
	adds r0, r3, #0
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F7034
	ldr r2, [r3, #8]
	ldr r0, _080F6FD4 @ =0xFEFFFFFF
	ands r2, r0
	str r2, [r3, #8]
	ldr r1, _080F6FD8 @ =0x00000103
	adds r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #0xb
	bne _080F6FDC
	adds r0, r3, #0
	bl sub_080641FC
	b _080F7034
	.align 2, 0
_080F6FD0: .4byte gUnk_02020EE0
_080F6FD4: .4byte 0xFEFFFFFF
_080F6FD8: .4byte 0x00000103
_080F6FDC:
	cmp r0, #0xe
	bne _080F6FE8
	adds r0, r3, #0
	bl sub_0806A798
	b _080F7034
_080F6FE8:
	cmp r0, #0x13
	bne _080F700C
	movs r0, #0x40
	ands r0, r2
	cmp r0, #0
	beq _080F6FFC
	adds r0, r3, #0
	bl sub_08047EF0
	b _080F7034
_080F6FFC:
	movs r0, #0x60
	ands r2, r0
	cmp r2, #0
	bne _080F7026
	adds r0, r3, #0
	bl sub_0803FE74
	b _080F7034
_080F700C:
	ldr r0, [r3, #0x58]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080F701E
	adds r0, r3, #0
	bl sub_08059810
	b _080F7034
_080F701E:
	movs r0, #0x60
	ands r2, r0
	cmp r2, #0
	beq _080F702E
_080F7026:
	adds r0, r3, #0
	bl sub_08044EA8
	b _080F7034
_080F702E:
	adds r0, r3, #0
	bl sub_0803FE74
_080F7034:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_080F703A:
	ldr r0, _080F7048 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r5, r0
	blo _080F6F88
_080F7042:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080F7048: .4byte gUnk_0203AD44

	thumb_func_start sub_080F704C
sub_080F704C: @ 0x080F704C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x2c
	adds r7, r0, #0
	ldr r2, _080F7140 @ =sub_080F714C
	movs r1, #0x1f
	bl ObjectSetFunc
	adds r0, r7, #0
	adds r0, #0x50
	movs r1, #0
	movs r3, #0
	strh r3, [r0]
	adds r0, #2
	strh r3, [r0]
	adds r0, #0x4c
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	ldr r2, _080F7144 @ =gUnk_02020EE0
	ldr r0, _080F7148 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F7130
	movs r0, #0xc0
	lsls r0, r0, #0x13
	mov sb, r0
	str r0, [sp]
	mov r0, sp
	movs r1, #0xe5
	lsls r1, r1, #2
	mov r8, r1
	mov r1, r8
	strh r1, [r0, #0xc]
	mov r1, sp
	movs r0, #1
	strb r0, [r1, #0x1a]
	movs r0, #0xff
	strb r0, [r1, #0x1b]
	mov r0, sp
	strh r3, [r0, #0x10]
	strh r3, [r0, #0x12]
	strh r3, [r0, #0x14]
	strh r3, [r0, #0x16]
	movs r5, #0x10
	strb r5, [r0, #0x1c]
	mov r2, sp
	adds r0, r7, #0
	adds r0, #0x2f
	ldrb r1, [r0]
	movs r4, #0xf
	adds r0, r4, #0
	ands r0, r1
	strb r0, [r2, #0x1f]
	movs r6, #0x80
	lsls r6, r6, #0xc
	str r6, [sp, #8]
	mov r0, sp
	str r3, [sp, #0x28]
	bl sub_08155128
	mov r0, sp
	ldrb r0, [r0, #0x1f]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	movs r1, #0x10
	bl sub_0803D280
	mov r0, sb
	str r0, [sp]
	mov r0, sp
	mov r1, r8
	strh r1, [r0, #0xc]
	mov r1, sp
	movs r0, #3
	strb r0, [r1, #0x1a]
	subs r0, #4
	strb r0, [r1, #0x1b]
	mov r0, sp
	ldr r3, [sp, #0x28]
	strh r3, [r0, #0x10]
	strh r3, [r0, #0x12]
	strh r3, [r0, #0x14]
	strh r3, [r0, #0x16]
	strb r5, [r0, #0x1c]
	adds r0, r7, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x2f
	ldrb r0, [r0]
	ands r4, r0
	strb r4, [r1, #0x1f]
	str r6, [sp, #8]
	mov r0, sp
	bl sub_08155128
	mov r0, sp
	ldrb r0, [r0, #0x1f]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	movs r1, #0x10
	bl sub_0803D280
_080F7130:
	add sp, #0x2c
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F7140: .4byte sub_080F714C
_080F7144: .4byte gUnk_02020EE0
_080F7148: .4byte gUnk_0203AD3C

	thumb_func_start sub_080F714C
sub_080F714C: @ 0x080F714C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r6, r0, #0
	mov sb, r6
	adds r4, r6, #0
	adds r4, #0x83
	ldrb r0, [r4]
	cmp r0, #0x20
	beq _080F71A4
	cmp r0, #0x20
	bgt _080F716E
	cmp r0, #0x1f
	beq _080F7176
	b _080F72F8
_080F716E:
	cmp r0, #0x21
	bne _080F7174
	b _080F72C4
_080F7174:
	b _080F72F8
_080F7176:
	ldr r0, [r6, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r6, #8]
	adds r2, r6, #0
	adds r2, #0x9e
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x5a
	bhi _080F7192
	b _080F72F8
_080F7192:
	movs r0, #0x20
	strb r0, [r4]
	ldr r0, [r6, #8]
	subs r1, #7
	ands r0, r1
	str r0, [r6, #8]
	movs r0, #0
	strb r0, [r2]
	b _080F72F8
_080F71A4:
	ldrb r0, [r6, #1]
	cmp r0, #0xe
	bne _080F71B0
	adds r0, r6, #0
	bl sub_080FC5F8
_080F71B0:
	ldr r0, [r6, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080F71BC
	b _080F72F8
_080F71BC:
	movs r5, #0
	movs r0, #0x21
	strb r0, [r4]
	adds r0, r6, #0
	adds r0, #0x9e
	strb r5, [r0]
	adds r0, r6, #0
	bl sub_08034E14
	cmp r0, #0
	beq _080F71D4
	strb r5, [r0, #9]
_080F71D4:
	adds r0, r6, #0
	adds r0, #0x82
	ldrb r4, [r0]
	adds r3, r4, #0
	subs r3, #0x38
	ldr r2, _080F72AC @ =gCurLevelInfo
	subs r0, #0x2c
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080F72B0 @ =0x0000065E
	adds r0, r0, r1
	ldrb r5, [r0]
	lsls r3, r3, #0x10
	asrs r1, r3, #0x10
	cmp r1, #0
	bge _080F71FC
	b _080F72F8
_080F71FC:
	ldr r0, _080F72B4 @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080F72F8
	adds r0, r6, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080F72F8
	adds r0, r4, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r7, r3, #0
	movs r2, #0x60
	adds r2, r2, r6
	mov r8, r2
	cmp r0, #0xf
	bls _080F7266
	movs r4, #1
_080F722E:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r5, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _080F722E
	adds r0, r5, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0
	bl sub_08002A44
_080F7266:
	ldr r1, _080F72B4 @ =gUnk_08352D80
	asrs r0, r7, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r5, #0
	bl sub_08002A1C
	ldr r2, _080F72B8 @ =gUnk_02020EE0
	ldr r0, _080F72BC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, r8
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F72F8
	ldr r0, _080F72C0 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080F72F8
	adds r0, r5, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
	b _080F72F8
	.align 2, 0
_080F72AC: .4byte gCurLevelInfo
_080F72B0: .4byte 0x0000065E
_080F72B4: .4byte gUnk_08352D80
_080F72B8: .4byte gUnk_02020EE0
_080F72BC: .4byte gUnk_0203AD3C
_080F72C0: .4byte gUnk_0203AD20
_080F72C4:
	ldr r0, [r6, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r6, #8]
	adds r1, r6, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x5a
	bls _080F72F8
	ldr r0, [r6, #8]
	ldr r1, _080F72F4 @ =0xFFFFFDFF
	ands r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r6, #8]
	adds r0, r6, #0
	bl sub_080F7B34
	b _080F737C
	.align 2, 0
_080F72F4: .4byte 0xFFFFFDFF
_080F72F8:
	adds r1, r6, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	cmp r0, #0x3c
	bls _080F7378
	ldr r2, _080F736C @ =gUnk_02020EE0
	ldr r0, _080F7370 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F7356
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	movs r5, #0xe5
	lsls r5, r5, #2
	movs r3, #0xe4
	lsls r3, r3, #2
	movs r4, #0
	str r4, [sp]
	ldrh r1, [r6, #4]
	str r1, [sp, #4]
	adds r1, r5, #0
	movs r2, #1
	bl sub_0803CD98
	mov r0, sb
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x2f
	ldrb r0, [r0]
	ldr r3, _080F7374 @ =0x00000391
	str r4, [sp]
	ldrh r1, [r6, #4]
	str r1, [sp, #4]
	adds r1, r5, #0
	movs r2, #3
	bl sub_0803CD98
_080F7356:
	ldrh r0, [r6, #4]
	adds r0, #2
	strh r0, [r6, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #1
	cmp r0, r1
	ble _080F737C
	strh r1, [r6, #4]
	b _080F737C
	.align 2, 0
_080F736C: .4byte gUnk_02020EE0
_080F7370: .4byte gUnk_0203AD3C
_080F7374: .4byte 0x00000391
_080F7378:
	adds r0, #1
	strb r0, [r1]
_080F737C:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F738C
sub_080F738C: @ 0x080F738C
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	movs r5, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080F7488
	ldr r2, _080F73F0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F73F4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F73F8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r0, #7
	ands r3, r0
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080F740A
	adds r0, r4, #0
	adds r0, #0xc9
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F740A
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080F73FC @ =gUnk_08351530
	ldr r0, _080F7400 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r5, #0
	ldrsh r1, [r2, r5]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080F7404
	movs r1, #1
	movs r5, #2
	b _080F743A
	.align 2, 0
_080F73F0: .4byte gRngVal
_080F73F4: .4byte 0x00196225
_080F73F8: .4byte 0x3C6EF35F
_080F73FC: .4byte gUnk_08351530
_080F7400: .4byte gUnk_0203AD30
_080F7404:
	movs r1, #3
	movs r5, #1
	b _080F743A
_080F740A:
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080F7430 @ =gUnk_08351530
	ldr r0, _080F7434 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r7, #0
	ldrsh r1, [r2, r7]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080F7438
	movs r1, #3
	b _080F743A
	.align 2, 0
_080F7430: .4byte gUnk_08351530
_080F7434: .4byte gUnk_0203AD30
_080F7438:
	movs r1, #4
_080F743A:
	movs r2, #1
	subs r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _080F744E
	adds r0, r4, #0
	bl sub_080FB1CC
	b _080F7488
_080F744E:
	subs r0, r3, r1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _080F7468
	adds r1, r6, #0
	adds r1, #0xc4
	movs r0, #1
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_080F8490
	b _080F7488
_080F7468:
	subs r0, r3, r5
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _080F747A
	adds r0, r4, #0
	bl sub_080FA2EC
	b _080F7488
_080F747A:
	subs r0, r3, r2
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _080F7488
	adds r0, r4, #0
	bl sub_080F8B70
_080F7488:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F7490
sub_080F7490: @ 0x080F7490
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r7, r4, #0
	ldr r2, _080F74EC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F74F0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F74F4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r0, #7
	ands r3, r0
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080F750A
	adds r0, r4, #0
	adds r0, #0xc9
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F750A
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080F74F8 @ =gUnk_08351530
	ldr r0, _080F74FC @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r5, #0
	ldrsh r1, [r2, r5]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080F7500
	movs r2, #3
	movs r6, #2
	movs r1, #1
	movs r5, #2
	b _080F7544
	.align 2, 0
_080F74EC: .4byte gRngVal
_080F74F0: .4byte 0x00196225
_080F74F4: .4byte 0x3C6EF35F
_080F74F8: .4byte gUnk_08351530
_080F74FC: .4byte gUnk_0203AD30
_080F7500:
	movs r2, #2
	movs r6, #1
	movs r1, #3
	movs r5, #1
	b _080F7544
_080F750A:
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080F7534 @ =gUnk_08351530
	ldr r0, _080F7538 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r5, #0
	ldrsh r1, [r2, r5]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080F753C
	movs r2, #4
	movs r6, #3
	movs r1, #1
	b _080F7542
	.align 2, 0
_080F7534: .4byte gUnk_08351530
_080F7538: .4byte gUnk_0203AD30
_080F753C:
	movs r2, #2
	movs r6, #1
	movs r1, #3
_080F7542:
	movs r5, #0
_080F7544:
	adds r0, r7, #0
	adds r0, #0xc8
	ldrb r0, [r0]
	cmp r0, #6
	bls _080F755A
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
_080F755A:
	subs r0, r3, r2
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _080F756E
	adds r0, r4, #0
	movs r1, #0
	bl sub_080FFFB8
	b _080F75AC
_080F756E:
	subs r0, r3, r1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _080F7582
	adds r0, r4, #0
	movs r1, #2
	bl sub_080FFFB8
	b _080F75AC
_080F7582:
	subs r0, r3, r6
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _080F7596
	adds r0, r4, #0
	movs r1, #1
	bl sub_080FFFB8
	b _080F75AC
_080F7596:
	subs r0, r3, r5
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _080F75A6
	adds r0, r4, #0
	bl sub_080FA2EC
	b _080F75AC
_080F75A6:
	adds r0, r4, #0
	bl sub_080F8B70
_080F75AC:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F75B4
sub_080F75B4: @ 0x080F75B4
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	mov ip, r3
	movs r7, #0
	ldr r2, _080F75E0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F75E4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F75E8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r4, r0, #0x10
	movs r0, #7
	ands r4, r0
	adds r1, r3, #0
	adds r1, #0xc4
	ldrb r0, [r1]
	cmp r0, #0
	beq _080F75EC
	strb r7, [r1]
	b _080F769A
	.align 2, 0
_080F75E0: .4byte gRngVal
_080F75E4: .4byte 0x00196225
_080F75E8: .4byte 0x3C6EF35F
_080F75EC:
	adds r1, r3, #0
	adds r1, #0xc3
	ldrb r0, [r1]
	cmp r0, #0
	beq _080F75FA
	strb r7, [r1]
	b _080F76BE
_080F75FA:
	adds r0, r3, #0
	adds r0, #0xac
	ldr r2, [r0]
	ldr r1, [r3, #0x44]
	ldr r0, [r2, #0x44]
	cmp r1, r0
	ble _080F763E
	movs r5, #0
	movs r7, #1
	ldr r1, [r3, #0x40]
	ldr r0, [r2, #0x40]
	subs r2, r1, r0
	cmp r2, #0
	blt _080F7624
	ldr r0, _080F7620 @ =0x000013FF
	cmp r2, r0
	ble _080F762C
	b _080F7638
	.align 2, 0
_080F7620: .4byte 0x000013FF
_080F7624:
	subs r1, r0, r1
	ldr r0, _080F7634 @ =0x000013FF
	cmp r1, r0
	bgt _080F7638
_080F762C:
	movs r6, #4
	movs r2, #3
	b _080F7674
	.align 2, 0
_080F7634: .4byte 0x000013FF
_080F7638:
	movs r6, #1
	movs r2, #6
	b _080F7674
_080F763E:
	ldr r1, [r3, #0x40]
	ldr r0, [r2, #0x40]
	subs r2, r1, r0
	cmp r2, #0
	blt _080F7654
	ldr r0, _080F7650 @ =0x00000FFF
	cmp r2, r0
	ble _080F765C
	b _080F766C
	.align 2, 0
_080F7650: .4byte 0x00000FFF
_080F7654:
	subs r1, r0, r1
	ldr r0, _080F7668 @ =0x00000FFF
	cmp r1, r0
	bgt _080F766C
_080F765C:
	movs r5, #6
	movs r6, #0
	movs r7, #0
	movs r2, #0
	b _080F7674
	.align 2, 0
_080F7668: .4byte 0x00000FFF
_080F766C:
	movs r5, #0
	movs r6, #0
	movs r7, #2
	movs r2, #2
_080F7674:
	mov r1, ip
	adds r1, #0xc8
	ldrb r0, [r1]
	cmp r0, #6
	bls _080F7690
	adds r1, r0, #0
	subs r1, #6
	asrs r1, r1, #1
	adds r1, #1
	lsls r0, r5, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_080F7690:
	subs r0, r4, r5
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r0, #0
	bge _080F76A2
_080F769A:
	adds r0, r3, #0
	bl sub_080F9310
	b _080F76D4
_080F76A2:
	subs r0, r4, r2
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r0, #0
	bge _080F76B4
	adds r0, r3, #0
	bl sub_080F87C8
	b _080F76D4
_080F76B4:
	subs r0, r4, r6
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r0, #0
	bge _080F76C6
_080F76BE:
	adds r0, r3, #0
	bl sub_080F95D4
	b _080F76D4
_080F76C6:
	subs r0, r4, r7
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _080F76D4
	adds r0, r3, #0
	bl sub_080F8FD0
_080F76D4:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F76DC
sub_080F76DC: @ 0x080F76DC
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r7, r4, #0
	movs r3, #0
	ldr r2, _080F7708 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F770C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F7710 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r5, r0, #0x10
	movs r0, #7
	ands r5, r0
	adds r1, r4, #0
	adds r1, #0xc4
	ldrb r0, [r1]
	cmp r0, #0
	beq _080F7714
	strb r3, [r1]
	b _080F77A0
	.align 2, 0
_080F7708: .4byte gRngVal
_080F770C: .4byte 0x00196225
_080F7710: .4byte 0x3C6EF35F
_080F7714:
	adds r1, r4, #0
	adds r1, #0xc3
	ldrb r0, [r1]
	cmp r0, #0
	beq _080F7722
	strb r3, [r1]
	b _080F77B2
_080F7722:
	adds r1, r4, #0
	adds r1, #0xac
	ldr r0, [r1]
	ldr r3, [r4, #0x44]
	ldr r0, [r0, #0x44]
	subs r2, r3, r0
	adds r6, r1, #0
	cmp r2, #0
	blt _080F7740
	ldr r0, _080F773C @ =0x00001DFF
	cmp r2, r0
	ble _080F7748
	b _080F7754
	.align 2, 0
_080F773C: .4byte 0x00001DFF
_080F7740:
	subs r1, r0, r3
	ldr r0, _080F7750 @ =0x00001DFF
	cmp r1, r0
	bgt _080F7754
_080F7748:
	movs r1, #0
	movs r2, #0
	movs r3, #8
	b _080F7786
	.align 2, 0
_080F7750: .4byte 0x00001DFF
_080F7754:
	ldr r0, [r6]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	subs r2, r1, r0
	cmp r2, #0
	blt _080F776C
	ldr r0, _080F7768 @ =0x00000FFF
	cmp r2, r0
	ble _080F7774
	b _080F7780
	.align 2, 0
_080F7768: .4byte 0x00000FFF
_080F776C:
	subs r1, r0, r1
	ldr r0, _080F777C @ =0x00000FFF
	cmp r1, r0
	bgt _080F7780
_080F7774:
	movs r1, #6
	movs r2, #0
	movs r3, #1
	b _080F7786
	.align 2, 0
_080F777C: .4byte 0x00000FFF
_080F7780:
	movs r1, #2
	movs r2, #0
	movs r3, #4
_080F7786:
	adds r0, r7, #0
	adds r0, #0xc8
	ldrb r0, [r0]
	cmp r0, #6
	bls _080F7796
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
_080F7796:
	subs r0, r5, r1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r0, #0
	bge _080F77A8
_080F77A0:
	adds r0, r4, #0
	bl sub_080F9310
	b _080F77C8
_080F77A8:
	subs r0, r5, r2
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r0, #0
	bge _080F77BA
_080F77B2:
	adds r0, r4, #0
	bl sub_080F95D4
	b _080F77C8
_080F77BA:
	subs r0, r5, r3
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _080F77C8
	adds r0, r4, #0
	bl sub_080F8FD0
_080F77C8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F77D0
sub_080F77D0: @ 0x080F77D0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	mov r8, r4
	movs r5, #0
	movs r7, #0
	movs r0, #0
	mov ip, r0
	mov sb, r0
	movs r6, #0
	movs r1, #5
	mov sl, r1
	ldr r2, _080F7830 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F7834 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F7838 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	movs r0, #0xf
	ands r2, r0
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080F7866
	adds r0, r4, #0
	adds r0, #0xc9
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F7866
	adds r3, r4, #0
	adds r3, #0xc0
	ldrb r0, [r3]
	cmp r0, #0
	beq _080F783C
	movs r1, #6
	movs r5, #4
	movs r7, #2
	mov sl, r5
	strb r6, [r3]
	b _080F78A4
	.align 2, 0
_080F7830: .4byte gRngVal
_080F7834: .4byte 0x00196225
_080F7838: .4byte 0x3C6EF35F
_080F783C:
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #8]
	movs r1, #0x60
	ands r0, r1
	cmp r0, #0
	beq _080F785E
	movs r0, #3
	mov sb, r0
	movs r1, #3
	mov ip, r1
	movs r6, #3
	movs r7, #3
	movs r0, #1
	mov sl, r0
	b _080F78A4
_080F785E:
	movs r6, #2
	movs r1, #4
	movs r5, #5
	b _080F78A4
_080F7866:
	mov r3, r8
	adds r3, #0xc0
	ldrb r0, [r3]
	cmp r0, #0
	beq _080F787C
	movs r1, #0xa
	movs r5, #4
	movs r7, #2
	movs r0, #0
	strb r0, [r3]
	b _080F78A4
_080F787C:
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #8]
	movs r1, #0x60
	ands r0, r1
	cmp r0, #0
	beq _080F789A
	movs r1, #3
	mov sb, r1
	mov ip, r1
	movs r6, #3
	movs r1, #4
	movs r7, #3
	b _080F78A4
_080F789A:
	movs r6, #3
	movs r0, #1
	mov ip, r0
	movs r1, #6
	movs r5, #6
_080F78A4:
	mov r0, r8
	adds r0, #0xc8
	ldrb r0, [r0]
	cmp r0, #6
	bls _080F78BA
	adds r0, r5, #2
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r1, #2
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
_080F78BA:
	subs r0, r2, r5
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r0, #0
	bge _080F78CC
	adds r0, r4, #0
	bl sub_080F8204
	b _080F7942
_080F78CC:
	subs r0, r2, r1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r0, #0
	bge _080F78DE
	adds r0, r4, #0
	bl sub_080F8490
	b _080F7942
_080F78DE:
	subs r0, r2, r7
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r0, #0
	bge _080F78F0
	adds r0, r4, #0
	bl sub_080F7CD8
	b _080F7942
_080F78F0:
	mov r1, ip
	subs r0, r2, r1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r0, #0
	bge _080F7904
	adds r0, r4, #0
	bl sub_080FFFA0
	b _080F7942
_080F7904:
	mov r1, sb
	subs r0, r2, r1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r0, #0
	bge _080F7920
	adds r0, r4, #0
	bl sub_080F8490
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	b _080F7942
_080F7920:
	subs r0, r2, r6
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r0, #0
	bge _080F7932
	adds r0, r4, #0
	bl sub_080F7D4C
	b _080F7942
_080F7932:
	mov r1, sl
	subs r0, r2, r1
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _080F7942
	adds r0, r4, #0
	bl sub_080FA2EC
_080F7942:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F7950
sub_080F7950: @ 0x080F7950
	push {lr}
	adds r3, r0, #0
	ldr r2, _080F7978 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F797C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F7980 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	subs r0, #0xe
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _080F7984
	adds r0, r3, #0
	bl sub_080F95D4
	b _080F79A8
	.align 2, 0
_080F7978: .4byte gRngVal
_080F797C: .4byte 0x00196225
_080F7980: .4byte 0x3C6EF35F
_080F7984:
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080F799A
	adds r1, r3, #0
	adds r1, #0xc3
	movs r0, #1
	strb r0, [r1]
	adds r0, r3, #0
	bl sub_080F8490
	b _080F79A8
_080F799A:
	subs r0, r1, #2
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _080F79A8
	adds r0, r3, #0
	bl sub_080F7CD8
_080F79A8:
	pop {r0}
	bx r0

	thumb_func_start sub_080F79AC
sub_080F79AC: @ 0x080F79AC
	push {r4, lr}
	mov ip, r0
	movs r4, #0
	ldr r2, _080F79E0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F79E4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F79E8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r0, #7
	ands r3, r0
	mov r0, ip
	ldr r1, [r0, #0x44]
	ldr r0, _080F79EC @ =0xFFFFC000
	adds r1, r1, r0
	mov r0, ip
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #0x44]
	cmp r1, r0
	ble _080F79F0
	movs r0, #8
	adds r1, r4, #0
	b _080F7A26
	.align 2, 0
_080F79E0: .4byte gRngVal
_080F79E4: .4byte 0x00196225
_080F79E8: .4byte 0x3C6EF35F
_080F79EC: .4byte 0xFFFFC000
_080F79F0:
	mov r2, ip
	adds r2, #0x80
	ldr r1, _080F7A18 @ =gUnk_08351530
	ldr r0, _080F7A1C @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r4, #0
	ldrsh r1, [r2, r4]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080F7A20
	movs r0, #3
	movs r1, #2
	movs r4, #3
	b _080F7A26
	.align 2, 0
_080F7A18: .4byte gUnk_08351530
_080F7A1C: .4byte gUnk_0203AD30
_080F7A20:
	movs r0, #3
	movs r1, #4
	movs r4, #1
_080F7A26:
	subs r0, r3, r0
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _080F7A38
	mov r1, ip
	adds r1, #0xca
	movs r0, #2
	b _080F7A58
_080F7A38:
	subs r0, r3, r1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _080F7A4A
	mov r1, ip
	adds r1, #0xca
	movs r0, #0
	b _080F7A58
_080F7A4A:
	subs r0, r3, r4
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _080F7A5A
	mov r1, ip
	adds r1, #0xca
	movs r0, #1
_080F7A58:
	strb r0, [r1]
_080F7A5A:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080F7A60
sub_080F7A60: @ 0x080F7A60
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	adds r7, r3, #0
	ldr r2, _080F7A9C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F7AA0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F7AA4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #0xf
	ands r1, r0
	adds r0, r3, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080F7AB6
	adds r0, r3, #0
	adds r0, #0xc9
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F7AA8
	movs r6, #4
	movs r5, #5
	movs r2, #3
	movs r4, #2
	mov ip, r4
	b _080F7AC0
	.align 2, 0
_080F7A9C: .4byte gRngVal
_080F7AA0: .4byte 0x00196225
_080F7AA4: .4byte 0x3C6EF35F
_080F7AA8:
	movs r6, #0
	movs r5, #6
	movs r2, #4
	movs r4, #4
	movs r0, #2
	mov ip, r0
	b _080F7AC0
_080F7AB6:
	movs r6, #0
	movs r5, #4
	movs r2, #2
	movs r4, #8
	mov ip, r2
_080F7AC0:
	adds r0, r7, #0
	adds r0, #0xc8
	ldrb r0, [r0]
	cmp r0, #6
	bls _080F7AD6
	adds r0, r2, #2
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r0, r5, #2
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_080F7AD6:
	subs r0, r1, r4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080F7AE8
	adds r0, r3, #0
	bl sub_080F7B34
	b _080F7B2E
_080F7AE8:
	subs r0, r1, r2
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080F7AFA
	adds r0, r3, #0
	bl sub_080F8204
	b _080F7B2E
_080F7AFA:
	subs r0, r1, r5
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080F7B0C
	adds r0, r3, #0
	bl sub_080F8490
	b _080F7B2E
_080F7B0C:
	subs r0, r1, r6
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _080F7B1E
	adds r0, r3, #0
	bl sub_080FA2EC
	b _080F7B2E
_080F7B1E:
	mov r2, ip
	subs r0, r1, r2
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _080F7B2E
	adds r0, r3, #0
	bl sub_080F8B70
_080F7B2E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080F7B34
sub_080F7B34: @ 0x080F7B34
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	mov r8, r4
	adds r1, r4, #0
	adds r1, #0xc2
	movs r0, #0
	strb r0, [r1]
	ldr r1, [r4, #0x78]
	ldr r0, _080F7B84 @ =sub_080FB2CC
	cmp r1, r0
	beq _080F7B5C
	adds r0, r4, #0
	adds r0, #0x80
	ldrh r1, [r0]
	adds r0, #0x4c
	strh r1, [r0]
_080F7B5C:
	ldr r2, _080F7B88 @ =sub_080F7DB8
	adds r0, r4, #0
	movs r1, #2
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r2, [r4, #0x40]
	ldr r0, [r0, #0x40]
	mov sl, r1
	cmp r2, r0
	ble _080F7B8C
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080F7B94
	.align 2, 0
_080F7B84: .4byte sub_080FB2CC
_080F7B88: .4byte sub_080F7DB8
_080F7B8C:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080F7B94:
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x50
	movs r1, #0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x52
	strh r1, [r0]
	ldr r1, _080F7C10 @ =gRngVal
	ldr r0, [r1]
	ldr r7, _080F7C14 @ =0x00196225
	muls r0, r7, r0
	ldr r3, _080F7C18 @ =0x3C6EF35F
	mov ip, r3
	adds r3, r0, r3
	str r3, [r1]
	lsrs r5, r3, #0x10
	ldr r0, _080F7C1C @ =0x00005554
	mov sb, r2
	adds r6, r1, #0
	cmp r5, r0
	bls _080F7C3E
	ldr r0, _080F7C20 @ =0x0000AAA9
	movs r1, #2
	cmp r5, r0
	bhi _080F7BCE
	movs r1, #1
_080F7BCE:
	cmp r1, #0
	beq _080F7C3E
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080F7C24 @ =gUnk_08351530
	ldr r0, _080F7C28 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r5, #0
	ldrsh r1, [r2, r5]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080F7C2C
	adds r0, r3, #0
	muls r0, r7, r0
	add r0, ip
	muls r0, r7, r0
	add r0, ip
	str r0, [r6]
	lsrs r0, r0, #0x10
	movs r1, #0x3f
	ands r1, r0
	movs r2, #0xf
	ands r0, r2
	adds r0, #0x30
	adds r1, r1, r0
	strh r1, [r4, #4]
	b _080F7C54
	.align 2, 0
_080F7C10: .4byte gRngVal
_080F7C14: .4byte 0x00196225
_080F7C18: .4byte 0x3C6EF35F
_080F7C1C: .4byte 0x00005554
_080F7C20: .4byte 0x0000AAA9
_080F7C24: .4byte gUnk_08351530
_080F7C28: .4byte gUnk_0203AD30
_080F7C2C:
	adds r0, r3, #0
	muls r0, r7, r0
	add r0, ip
	str r0, [r6]
	lsrs r0, r0, #0x10
	movs r1, #0x3f
	ands r0, r1
	adds r0, #0x18
	b _080F7C52
_080F7C3E:
	ldr r1, [r6]
	ldr r0, _080F7C80 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F7C84 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r6]
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	adds r0, #8
_080F7C52:
	strh r0, [r4, #4]
_080F7C54:
	ldr r0, [r4, #8]
	movs r2, #1
	ands r0, r2
	cmp r0, #0
	beq _080F7C88
	mov r2, sl
	ldr r0, [r2]
	ldr r0, [r0, #0x40]
	movs r3, #0xc0
	lsls r3, r3, #6
	adds r0, r0, r3
	asrs r0, r0, #8
	adds r2, r4, #0
	adds r2, #0xa0
	movs r1, #0
	strh r0, [r2]
	mov r0, r8
	adds r0, #0xc1
	strb r1, [r0]
	adds r1, r2, #0
	b _080F7CA0
	.align 2, 0
_080F7C80: .4byte 0x00196225
_080F7C84: .4byte 0x3C6EF35F
_080F7C88:
	mov r5, sl
	ldr r0, [r5]
	ldr r0, [r0, #0x40]
	ldr r1, _080F7CD4 @ =0xFFFFD000
	adds r0, r0, r1
	asrs r0, r0, #8
	adds r1, r4, #0
	adds r1, #0xa0
	strh r0, [r1]
	mov r0, r8
	adds r0, #0xc1
	strb r2, [r0]
_080F7CA0:
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #8
	ldr r1, [r4, #0x40]
	cmp r1, r0
	bge _080F7CB4
	mov r3, sb
	ldrh r0, [r3]
	rsbs r0, r0, #0
	strh r0, [r3]
_080F7CB4:
	mov r0, r8
	adds r0, #0xc0
	movs r1, #0
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r1, [r0]
	subs r0, #1
	strb r1, [r0]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F7CD4: .4byte 0xFFFFD000

	thumb_func_start sub_080F7CD8
sub_080F7CD8: @ 0x080F7CD8
	push {r4, lr}
	adds r3, r0, #0
	adds r4, r3, #0
	adds r1, r3, #0
	adds r1, #0xc2
	movs r0, #0
	strb r0, [r1]
	movs r0, #0xc1
	adds r0, r0, r3
	mov ip, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F7D14
	adds r0, r3, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #0x40]
	ldr r1, _080F7D10 @ =0xFFFFD000
	adds r0, r0, r1
	asrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0xa0
	strh r0, [r1]
	movs r0, #1
	mov r1, ip
	strb r0, [r1]
	b _080F7D30
	.align 2, 0
_080F7D10: .4byte 0xFFFFD000
_080F7D14:
	adds r0, r3, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #0x40]
	movs r1, #0xc0
	lsls r1, r1, #6
	adds r0, r0, r1
	asrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0xa0
	movs r2, #0
	strh r0, [r1]
	mov r0, ip
	strb r2, [r0]
_080F7D30:
	adds r1, r3, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0xc0
	strb r0, [r1]
	adds r1, r3, #0
	adds r1, #0x9e
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F7D4C
sub_080F7D4C: @ 0x080F7D4C
	push {lr}
	adds r3, r0, #0
	mov ip, r3
	adds r1, r3, #0
	adds r1, #0xc2
	movs r0, #0
	strb r0, [r1]
	ldr r0, [r3, #8]
	movs r2, #1
	ands r0, r2
	cmp r0, #0
	beq _080F7D7C
	adds r0, r3, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #0x40]
	movs r1, #0xc0
	lsls r1, r1, #6
	adds r0, r0, r1
	asrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0xa0
	movs r2, #0
	b _080F7D8E
_080F7D7C:
	adds r0, r3, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #0x40]
	ldr r1, _080F7DB4 @ =0xFFFFD000
	adds r0, r0, r1
	asrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0xa0
_080F7D8E:
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0xc1
	strb r2, [r0]
	movs r1, #0
	movs r0, #0x24
	strh r0, [r3, #4]
	adds r0, r3, #0
	adds r0, #0x9f
	strb r1, [r0]
	mov r0, ip
	adds r0, #0xc0
	strb r1, [r0]
	adds r0, r3, #0
	adds r0, #0x9e
	strb r1, [r0]
	pop {r0}
	bx r0
	.align 2, 0
_080F7DB4: .4byte 0xFFFFD000

	thumb_func_start sub_080F7DB8
sub_080F7DB8: @ 0x080F7DB8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r3, r0, #0
	mov r8, r3
	movs r0, #0x3e
	adds r0, r0, r3
	mov ip, r0
	ldrb r0, [r0]
	movs r6, #0
	mov r1, ip
	strb r0, [r1]
	adds r4, r3, #0
	adds r4, #0x3c
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F7E60
	mov r2, ip
	movs r1, #0
	ldrsb r1, [r2, r1]
	lsls r1, r1, #8
	ldr r2, [r3, #0x40]
	adds r1, r2, r1
	adds r5, r3, #0
	adds r5, #0xa8
	movs r7, #0
	ldrsh r0, [r5, r7]
	lsls r0, r0, #8
	ldr r7, _080F7E20 @ =0xFFFFF800
	adds r0, r0, r7
	cmp r1, r0
	blt _080F7E24
	adds r2, r3, #0
	adds r2, #0x62
	ldrb r0, [r2]
	movs r1, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r1, r1, #8
	mov r4, ip
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r0, r5
	b _080F7E9A
	.align 2, 0
_080F7E20: .4byte 0xFFFFF800
_080F7E24:
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r3, #0
	adds r2, #0xa4
	movs r7, #0
	ldrsh r0, [r2, r7]
	lsls r0, r0, #8
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r0, r5
	adds r5, r3, #0
	adds r5, #0x62
	cmp r1, r0
	bgt _080F7EE4
	ldrb r0, [r5]
	movs r1, #1
	orrs r0, r1
	strb r0, [r5]
	movs r6, #0
	ldrsh r1, [r2, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	ldr r7, _080F7E5C @ =0xFFFFF800
	b _080F7EDE
	.align 2, 0
_080F7E5C: .4byte 0xFFFFF800
_080F7E60:
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	ldr r2, [r3, #0x40]
	adds r1, r2, r1
	adds r5, r3, #0
	adds r5, #0xa4
	movs r7, #0
	ldrsh r0, [r5, r7]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	cmp r1, r0
	bgt _080F7EA8
	adds r2, r3, #0
	adds r2, #0x62
	ldrb r0, [r2]
	movs r1, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	ldr r4, _080F7EA4 @ =0xFFFFF800
	adds r0, r0, r4
_080F7E9A:
	subs r1, r1, r0
	str r1, [r3, #0x40]
	adds r5, r2, #0
	b _080F7EE4
	.align 2, 0
_080F7EA4: .4byte 0xFFFFF800
_080F7EA8:
	mov r5, ip
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r3, #0
	adds r2, #0xa8
	movs r4, #0
	ldrsh r0, [r2, r4]
	lsls r0, r0, #8
	ldr r5, _080F7EFC @ =0xFFFFF800
	adds r0, r0, r5
	adds r5, r3, #0
	adds r5, #0x62
	cmp r1, r0
	blt _080F7EE4
	ldrb r0, [r5]
	movs r1, #1
	orrs r0, r1
	strb r0, [r5]
	movs r6, #0
	ldrsh r1, [r2, r6]
	lsls r1, r1, #8
	mov r2, ip
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
_080F7EDE:
	adds r0, r0, r7
	subs r1, r1, r0
	str r1, [r3, #0x40]
_080F7EE4:
	mov r0, r8
	adds r0, #0xc2
	ldrb r1, [r0]
	mov sb, r0
	cmp r1, #0
	beq _080F7F00
	adds r2, r3, #0
	adds r2, #0xac
	ldr r0, [r2]
	ldr r0, [r0, #0x40]
	b _080F7F2A
	.align 2, 0
_080F7EFC: .4byte 0xFFFFF800
_080F7F00:
	mov r0, r8
	adds r0, #0xc1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F7F1C
	adds r2, r3, #0
	adds r2, #0xac
	ldr r0, [r2]
	ldr r0, [r0, #0x40]
	ldr r4, _080F7F18 @ =0xFFFFD000
	adds r0, r0, r4
	b _080F7F2A
	.align 2, 0
_080F7F18: .4byte 0xFFFFD000
_080F7F1C:
	adds r2, r3, #0
	adds r2, #0xac
	ldr r0, [r2]
	ldr r0, [r0, #0x40]
	movs r6, #0xc0
	lsls r6, r6, #6
	adds r0, r0, r6
_080F7F2A:
	asrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0xa0
	strh r0, [r1]
	adds r7, r2, #0
	adds r6, r1, #0
	adds r2, r3, #0
	adds r2, #0x9f
	ldrb r1, [r2]
	movs r0, #0xf
	ands r0, r1
	mov ip, r2
	cmp r0, #0
	bne _080F8034
	ldr r0, [r7]
	ldr r4, [r3, #0x40]
	ldr r1, [r0, #0x40]
	subs r2, r4, r1
	cmp r2, #0
	blt _080F7F60
	ldr r0, _080F7F5C @ =0x00001BFF
	cmp r2, r0
	ble _080F7F70
	b _080F7F68
	.align 2, 0
_080F7F5C: .4byte 0x00001BFF
_080F7F60:
	subs r1, r1, r4
	ldr r0, _080F7F90 @ =0x00001BFF
	cmp r1, r0
	ble _080F7F70
_080F7F68:
	mov r1, sb
	ldrb r0, [r1]
	cmp r0, #0
	beq _080F7F9E
_080F7F70:
	adds r0, r3, #0
	adds r0, #0x83
	movs r1, #2
	strb r1, [r0]
	adds r1, r3, #0
	adds r1, #0x87
	ldrb r1, [r1]
	adds r2, r0, #0
	cmp r1, #0
	beq _080F7F94
	adds r1, r3, #0
	adds r1, #0x50
	movs r0, #0xc0
	lsls r0, r0, #1
	b _080F7FC4
	.align 2, 0
_080F7F90: .4byte 0x00001BFF
_080F7F94:
	adds r1, r3, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #1
	b _080F7FC4
_080F7F9E:
	adds r0, r3, #0
	adds r0, #0x83
	movs r1, #3
	strb r1, [r0]
	adds r1, r3, #0
	adds r1, #0x87
	ldrb r1, [r1]
	adds r2, r0, #0
	cmp r1, #0
	beq _080F7FBC
	adds r1, r3, #0
	adds r1, #0x50
	movs r0, #0x98
	lsls r0, r0, #2
	b _080F7FC4
_080F7FBC:
	adds r1, r3, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #2
_080F7FC4:
	strh r0, [r1]
	adds r4, r1, #0
	movs r1, #0
	ldrsh r0, [r6, r1]
	lsls r0, r0, #8
	ldr r1, [r3, #0x40]
	cmp r1, r0
	ble _080F7FEA
	ldrb r0, [r2]
	cmp r0, #3
	bne _080F7FE2
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r3, #8]
_080F7FE2:
	ldrh r0, [r4]
	rsbs r0, r0, #0
	strh r0, [r4]
	b _080F7FFA
_080F7FEA:
	ldrb r0, [r2]
	cmp r0, #3
	bne _080F7FFA
	ldr r0, [r3, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r3, #8]
_080F7FFA:
	ldr r0, [r7]
	ldr r1, [r3, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080F800C
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	b _080F8014
_080F800C:
	ldr r0, [r3, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080F8014:
	str r0, [r3, #8]
	ldr r0, [r3, #0x40]
	asrs r2, r0, #8
	movs r1, #0
	ldrsh r0, [r6, r1]
	subs r1, r2, r0
	cmp r1, #0
	blt _080F802A
	cmp r1, #2
	ble _080F8030
	b _080F8034
_080F802A:
	subs r0, r0, r2
	cmp r0, #2
	bgt _080F8034
_080F8030:
	movs r0, #0
	strh r0, [r4]
_080F8034:
	ldr r0, [r3, #0x40]
	asrs r1, r0, #8
	movs r2, #0
	ldrsh r0, [r6, r2]
	subs r2, r1, r0
	cmp r2, #0
	blt _080F8048
	cmp r2, #3
	ble _080F804E
	b _080F8056
_080F8048:
	subs r0, r0, r1
	cmp r0, #3
	bgt _080F8056
_080F804E:
	adds r1, r3, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080F8056:
	mov r4, ip
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	mov r0, r8
	adds r0, #0xc0
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #0
	beq _080F8070
	movs r0, #1
	mov r6, ip
	strb r0, [r6]
_080F8070:
	ldrb r2, [r5]
	movs r0, #3
	ands r0, r2
	cmp r0, #0
	beq _080F80E2
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F80DA
	movs r0, #2
	ands r0, r2
	cmp r0, #0
	beq _080F809C
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F80B8
	adds r1, r3, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #1
	b _080F80C0
_080F809C:
	movs r1, #1
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _080F80C2
	ldr r0, [r3, #8]
	ands r0, r1
	cmp r0, #0
	beq _080F80B8
	adds r1, r3, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #1
	b _080F80C0
_080F80B8:
	adds r1, r3, #0
	adds r1, #0x50
	movs r0, #0xff
	lsls r0, r0, #8
_080F80C0:
	strh r0, [r1]
_080F80C2:
	ldr r2, _080F8100 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080F8104 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080F8108 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0x1f
	ands r0, r1
	adds r0, #0x1e
	strh r0, [r3, #4]
_080F80DA:
	movs r0, #1
	strb r0, [r4]
	mov r2, ip
	strb r0, [r2]
_080F80E2:
	mov r4, sb
	ldrb r0, [r4]
	cmp r0, #0
	beq _080F8124
	ldr r0, [r7]
	ldr r2, [r3, #0x40]
	ldr r0, [r0, #0x40]
	subs r1, r2, r0
	cmp r1, #0
	blt _080F8110
	ldr r0, _080F810C @ =0x000005FF
	cmp r1, r0
	ble _080F8118
	b _080F8124
	.align 2, 0
_080F8100: .4byte gRngVal
_080F8104: .4byte 0x00196225
_080F8108: .4byte 0x3C6EF35F
_080F810C: .4byte 0x000005FF
_080F8110:
	subs r1, r0, r2
	ldr r0, _080F8120 @ =0x000005FF
	cmp r1, r0
	bgt _080F8124
_080F8118:
	adds r0, r3, #0
	bl sub_080F7950
	b _080F81EE
	.align 2, 0
_080F8120: .4byte 0x000005FF
_080F8124:
	adds r0, r3, #0
	adds r0, #0x50
	movs r5, #0
	ldrsh r2, [r0, r5]
	cmp r2, #0
	bne _080F8150
	ldr r1, [r3, #0x48]
	ldr r0, [r3, #0x40]
	cmp r1, r0
	bne _080F8146
	adds r1, r3, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r4, r1, #0
	b _080F815C
_080F8146:
	adds r0, r3, #0
	adds r0, #0x9e
	strb r2, [r0]
	adds r4, r0, #0
	b _080F815C
_080F8150:
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	adds r4, r3, #0
	adds r4, #0x9e
_080F815C:
	ldrb r5, [r4]
	cmp r5, #0
	beq _080F81C0
	adds r0, r3, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080F8198
	adds r2, r3, #0
	adds r2, #0x80
	ldr r1, _080F8190 @ =gUnk_08351530
	ldr r0, _080F8194 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r6, #0
	ldrsh r1, [r2, r6]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080F81C0
	b _080F81BC
	.align 2, 0
_080F8190: .4byte gUnk_08351530
_080F8194: .4byte gUnk_0203AD30
_080F8198:
	adds r0, r3, #0
	adds r0, #0x80
	movs r7, #0
	ldrsh r2, [r0, r7]
	ldr r1, _080F81FC @ =gUnk_08351530
	ldr r0, _080F8200 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x11
	asrs r0, r0, #0x12
	subs r1, r1, r0
	cmp r2, r1
	bge _080F81C0
_080F81BC:
	adds r0, r5, #1
	strb r0, [r4]
_080F81C0:
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080F81E8
	ldrb r0, [r4]
	cmp r0, #0x1e
	bhi _080F81E8
	mov r0, r8
	adds r0, #0xcc
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r1, r3, #0
	adds r1, #0x80
	movs r2, #0
	ldrsh r1, [r1, r2]
	subs r0, r0, r1
	cmp r0, #0xc
	ble _080F81EE
_080F81E8:
	adds r0, r3, #0
	bl sub_080F77D0
_080F81EE:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F81FC: .4byte gUnk_08351530
_080F8200: .4byte gUnk_0203AD30

	thumb_func_start sub_080F8204
sub_080F8204: @ 0x080F8204
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080F822C @ =sub_080F8300
	movs r1, #4
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080F8230
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080F8238
	.align 2, 0
_080F822C: .4byte sub_080F8300
_080F8230:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080F8238:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080F8250
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xd0
	lsls r0, r0, #2
	b _080F8258
_080F8250:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0x98
	lsls r0, r0, #2
_080F8258:
	strh r0, [r1]
	adds r2, r1, #0
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F8274
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080F8274:
	ldr r1, _080F82E8 @ =gUnk_02020EE0
	ldr r0, _080F82EC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F82E0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F82A0
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F82E0
_080F82A0:
	ldr r1, _080F82F0 @ =gUnk_08D60FA4
	ldr r4, _080F82F4 @ =gSongTable
	ldr r2, _080F82F8 @ =0x00000B14
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F82C6
	movs r1, #0xb1
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F82E0
_080F82C6:
	cmp r3, #0
	beq _080F82D8
	ldr r0, _080F82FC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F82E0
_080F82D8:
	movs r0, #0xb1
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F82E0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080F82E8: .4byte gUnk_02020EE0
_080F82EC: .4byte gUnk_0203AD3C
_080F82F0: .4byte gUnk_08D60FA4
_080F82F4: .4byte gSongTable
_080F82F8: .4byte 0x00000B14
_080F82FC: .4byte gUnk_0203AD10

	thumb_func_start sub_080F8300
sub_080F8300: @ 0x080F8300
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F839C
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080F8354 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080F8358
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	b _080F83D8
	.align 2, 0
_080F8354: .4byte 0xFFFFF800
_080F8358:
	adds r3, r4, #0
	adds r3, #0x3c
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa4
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	adds r5, r4, #0
	adds r5, #0x62
	cmp r1, r0
	bgt _080F8424
	ldrb r1, [r5]
	movs r0, #1
	orrs r0, r1
	strb r0, [r5]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	ldr r2, _080F8398 @ =0xFFFFF800
	adds r0, r0, r2
	b _080F8420
	.align 2, 0
_080F8398: .4byte 0xFFFFF800
_080F839C:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080F83E8
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080F83E4 @ =0xFFFFF800
_080F83D8:
	adds r0, r0, r3
	subs r1, r1, r0
	str r1, [r4, #0x40]
	adds r5, r2, #0
	b _080F8424
	.align 2, 0
_080F83E4: .4byte 0xFFFFF800
_080F83E8:
	adds r3, r4, #0
	adds r3, #0x3e
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa8
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	ldr r5, _080F8458 @ =0xFFFFF800
	adds r0, r0, r5
	adds r5, r4, #0
	adds r5, #0x62
	cmp r1, r0
	blt _080F8424
	ldrb r1, [r5]
	movs r0, #1
	orrs r0, r1
	strb r0, [r5]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080F8420:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080F8424:
	ldrb r1, [r4, #1]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _080F843E
	adds r0, r4, #0
	bl sub_08099AC4
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r0, [r0]
	bl sub_08099AC4
_080F843E:
	ldrb r1, [r5]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080F845C
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_080F7490
	b _080F8486
	.align 2, 0
_080F8458: .4byte 0xFFFFF800
_080F845C:
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r3, [r4, #0x40]
	ldr r1, [r0, #0x40]
	subs r2, r3, r1
	cmp r2, #0
	blt _080F8478
	ldr r0, _080F8474 @ =0x00002BFF
	cmp r2, r0
	ble _080F8480
	b _080F8486
	.align 2, 0
_080F8474: .4byte 0x00002BFF
_080F8478:
	subs r1, r1, r3
	ldr r0, _080F848C @ =0x00002BFF
	cmp r1, r0
	bgt _080F8486
_080F8480:
	adds r0, r4, #0
	bl sub_080F7490
_080F8486:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080F848C: .4byte 0x00002BFF

	thumb_func_start sub_080F8490
sub_080F8490: @ 0x080F8490
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080F84B4 @ =sub_080F850C
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080F84B8
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080F84C0
	.align 2, 0
_080F84B4: .4byte sub_080F850C
_080F84B8:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080F84C0:
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x61
	ands r0, r1
	adds r1, #0x18
	ands r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x50
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r2]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x84
	lsls r0, r0, #3
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F84F4
	ldr r0, _080F8508 @ =0x0000FE80
	strh r0, [r2]
_080F84F4:
	movs r0, #0xc
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080F8508: .4byte 0x0000FE80

	thumb_func_start sub_080F850C
sub_080F850C: @ 0x080F850C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x28
	strh r0, [r2]
	lsls r0, r0, #0x10
	ldr r1, _080F8578 @ =0xFB600000
	cmp r0, r1
	bge _080F852C
	ldr r0, _080F857C @ =0x0000FB60
	strh r0, [r2]
_080F852C:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F85C8
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080F8580 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080F8584
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	b _080F8644
	.align 2, 0
_080F8578: .4byte 0xFB600000
_080F857C: .4byte 0x0000FB60
_080F8580: .4byte 0xFFFFF800
_080F8584:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	cmp r1, r0
	bgt _080F8648
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r6, #0
	ldrsh r1, [r3, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _080F85C4 @ =0xFFFFF800
	adds r0, r0, r2
	b _080F8644
	.align 2, 0
_080F85C4: .4byte 0xFFFFF800
_080F85C8:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080F860C
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _080F8608 @ =0xFFFFF800
	adds r0, r0, r2
	b _080F8644
	.align 2, 0
_080F8608: .4byte 0xFFFFF800
_080F860C:
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r2, #0
	ldrsh r0, [r3, r2]
	lsls r0, r0, #8
	ldr r2, _080F8694 @ =0xFFFFF800
	adds r0, r0, r2
	cmp r1, r0
	blt _080F8648
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080F8644:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080F8648:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0xc
	bne _080F8662
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080F8662
	movs r0, #0xd
	strb r0, [r7]
_080F8662:
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	movs r2, #0x52
	adds r2, r2, r4
	mov r8, r2
	cmp r0, #0
	bne _080F8698
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0x3f
	bgt _080F8698
	movs r0, #1
	strb r0, [r1]
	movs r0, #0xc
	strb r0, [r7]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080F75B4
	b _080F87BA
	.align 2, 0
_080F8694: .4byte 0xFFFFF800
_080F8698:
	mov r6, r8
	movs r1, #0
	ldrsh r0, [r6, r1]
	movs r2, #0x62
	adds r2, r2, r4
	mov sb, r2
	cmp r0, #0
	bgt _080F879C
	ldrb r1, [r2]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080F879C
	ldrb r0, [r7]
	cmp r0, #0xe
	beq _080F8724
	ldr r1, _080F875C @ =gUnk_02020EE0
	ldr r0, _080F8760 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F8724
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F86E4
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F8724
_080F86E4:
	ldr r1, _080F8764 @ =gUnk_08D60FA4
	ldr r5, _080F8768 @ =gSongTable
	ldr r3, _080F876C @ =0x00001264
	adds r0, r5, r3
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F870A
	movs r6, #0x93
	lsls r6, r6, #5
	adds r0, r5, r6
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F8724
_080F870A:
	cmp r3, #0
	beq _080F871C
	ldr r0, _080F8770 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F8724
_080F871C:
	movs r0, #0x93
	lsls r0, r0, #2
	bl m4aSongNumStart
_080F8724:
	adds r6, r4, #0
	adds r6, #0x50
	movs r0, #0
	strh r0, [r6]
	movs r0, #0xe
	strb r0, [r7]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _080F879C
	ldr r0, [r4, #8]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _080F8774
	adds r0, r4, #0
	bl sub_080FB694
	b _080F8792
	.align 2, 0
_080F875C: .4byte gUnk_02020EE0
_080F8760: .4byte gUnk_0203AD3C
_080F8764: .4byte gUnk_08D60FA4
_080F8768: .4byte gSongTable
_080F876C: .4byte 0x00001264
_080F8770: .4byte gUnk_0203AD10
_080F8774:
	ldr r2, _080F8798 @ =sub_080FFF84
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	strh r5, [r6]
	mov r2, r8
	strh r5, [r2]
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x20
	strh r0, [r4, #4]
_080F8792:
	movs r0, #0x12
	strh r0, [r4, #4]
	b _080F87BA
	.align 2, 0
_080F8798: .4byte sub_080FFF84
_080F879C:
	mov r3, sb
	ldrb r1, [r3]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080F87BA
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	eors r0, r1
	str r0, [r4, #8]
_080F87BA:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F87C8
sub_080F87C8: @ 0x080F87C8
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _080F87EC @ =sub_080F88C0
	movs r1, #0xf
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080F87F0
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080F87F8
	.align 2, 0
_080F87EC: .4byte sub_080F88C0
_080F87F0:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080F87F8:
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x61
	ands r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x50
	movs r5, #0x80
	lsls r5, r5, #1
	strh r5, [r2]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xf0
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F882A
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r2]
_080F882A:
	movs r0, #0xc
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	ldr r1, _080F88A0 @ =gUnk_02020EE0
	ldr r0, _080F88A4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F889A
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F8862
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F889A
_080F8862:
	ldr r1, _080F88A8 @ =gUnk_08D60FA4
	ldr r4, _080F88AC @ =gSongTable
	ldr r2, _080F88B0 @ =0x00000E2C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F8886
	ldr r1, _080F88B4 @ =0x00000E28
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F889A
_080F8886:
	cmp r3, #0
	beq _080F8894
	ldr r0, _080F88B8 @ =gUnk_0203AD10
	ldr r0, [r0]
	ands r0, r5
	cmp r0, #0
	bne _080F889A
_080F8894:
	ldr r0, _080F88BC @ =0x000001C5
	bl m4aSongNumStart
_080F889A:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080F88A0: .4byte gUnk_02020EE0
_080F88A4: .4byte gUnk_0203AD3C
_080F88A8: .4byte gUnk_08D60FA4
_080F88AC: .4byte gSongTable
_080F88B0: .4byte 0x00000E2C
_080F88B4: .4byte 0x00000E28
_080F88B8: .4byte gUnk_0203AD10
_080F88BC: .4byte 0x000001C5

	thumb_func_start sub_080F88C0
sub_080F88C0: @ 0x080F88C0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x28
	strh r0, [r2]
	lsls r0, r0, #0x10
	ldr r1, _080F892C @ =0xFB600000
	cmp r0, r1
	bge _080F88E0
	ldr r0, _080F8930 @ =0x0000FB60
	strh r0, [r2]
_080F88E0:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F897C
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080F8934 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080F8938
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	b _080F89F8
	.align 2, 0
_080F892C: .4byte 0xFB600000
_080F8930: .4byte 0x0000FB60
_080F8934: .4byte 0xFFFFF800
_080F8938:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	cmp r1, r0
	bgt _080F89FC
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r6, #0
	ldrsh r1, [r3, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _080F8978 @ =0xFFFFF800
	adds r0, r0, r2
	b _080F89F8
	.align 2, 0
_080F8978: .4byte 0xFFFFF800
_080F897C:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080F89C0
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _080F89BC @ =0xFFFFF800
	adds r0, r0, r2
	b _080F89F8
	.align 2, 0
_080F89BC: .4byte 0xFFFFF800
_080F89C0:
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r2, #0
	ldrsh r0, [r3, r2]
	lsls r0, r0, #8
	ldr r2, _080F8A3C @ =0xFFFFF800
	adds r0, r0, r2
	cmp r1, r0
	blt _080F89FC
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080F89F8:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080F89FC:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0xf
	bne _080F8A16
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080F8A16
	movs r0, #0xd
	strb r0, [r7]
_080F8A16:
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	movs r2, #0x52
	adds r2, r2, r4
	mov r8, r2
	cmp r0, #0
	bne _080F8A40
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0x3f
	bgt _080F8A40
	movs r0, #1
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_080F76DC
	b _080F8B62
	.align 2, 0
_080F8A3C: .4byte 0xFFFFF800
_080F8A40:
	mov r6, r8
	movs r1, #0
	ldrsh r0, [r6, r1]
	movs r2, #0x62
	adds r2, r2, r4
	mov sb, r2
	cmp r0, #0
	bgt _080F8B44
	ldrb r1, [r2]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080F8B44
	ldrb r0, [r7]
	cmp r0, #0xe
	beq _080F8ACC
	ldr r1, _080F8B04 @ =gUnk_02020EE0
	ldr r0, _080F8B08 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F8ACC
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F8A8C
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F8ACC
_080F8A8C:
	ldr r1, _080F8B0C @ =gUnk_08D60FA4
	ldr r5, _080F8B10 @ =gSongTable
	ldr r3, _080F8B14 @ =0x00001264
	adds r0, r5, r3
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F8AB2
	movs r6, #0x93
	lsls r6, r6, #5
	adds r0, r5, r6
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F8ACC
_080F8AB2:
	cmp r3, #0
	beq _080F8AC4
	ldr r0, _080F8B18 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F8ACC
_080F8AC4:
	movs r0, #0x93
	lsls r0, r0, #2
	bl m4aSongNumStart
_080F8ACC:
	adds r6, r4, #0
	adds r6, #0x50
	movs r0, #0
	strh r0, [r6]
	movs r0, #0xe
	strb r0, [r7]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _080F8B44
	ldr r0, [r4, #8]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _080F8B1C
	adds r0, r4, #0
	bl sub_080FB694
	b _080F8B3A
	.align 2, 0
_080F8B04: .4byte gUnk_02020EE0
_080F8B08: .4byte gUnk_0203AD3C
_080F8B0C: .4byte gUnk_08D60FA4
_080F8B10: .4byte gSongTable
_080F8B14: .4byte 0x00001264
_080F8B18: .4byte gUnk_0203AD10
_080F8B1C:
	ldr r2, _080F8B40 @ =sub_080FFF84
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	strh r5, [r6]
	mov r2, r8
	strh r5, [r2]
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x20
	strh r0, [r4, #4]
_080F8B3A:
	movs r0, #0x12
	strh r0, [r4, #4]
	b _080F8B62
	.align 2, 0
_080F8B40: .4byte sub_080FFF84
_080F8B44:
	mov r3, sb
	ldrb r1, [r3]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080F8B62
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	eors r0, r1
	str r0, [r4, #8]
_080F8B62:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F8B70
sub_080F8B70: @ 0x080F8B70
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080F8B94 @ =sub_080F8C84
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080F8B98
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080F8BA0
	.align 2, 0
_080F8B94: .4byte sub_080F8C84
_080F8B98:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080F8BA0:
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080F8BC2
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xfc
	lsls r0, r0, #8
	b _080F8BC8
_080F8BC2:
	adds r1, r4, #0
	adds r1, #0x50
	ldr r0, _080F8C68 @ =0x0000FD80
_080F8BC8:
	strh r0, [r1]
	adds r2, r1, #0
	adds r1, r4, #0
	adds r1, #0x52
	movs r3, #0
	movs r0, #0x90
	lsls r0, r0, #1
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F8BE8
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080F8BE8:
	movs r0, #0xc
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r3, [r0]
	subs r0, #1
	strb r3, [r0]
	ldr r1, _080F8C6C @ =gUnk_02020EE0
	ldr r0, _080F8C70 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F8C62
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F8C22
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F8C62
_080F8C22:
	ldr r1, _080F8C74 @ =gUnk_08D60FA4
	ldr r4, _080F8C78 @ =gSongTable
	ldr r2, _080F8C7C @ =0x00000B14
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F8C48
	movs r1, #0xb1
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F8C62
_080F8C48:
	cmp r3, #0
	beq _080F8C5A
	ldr r0, _080F8C80 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F8C62
_080F8C5A:
	movs r0, #0xb1
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F8C62:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080F8C68: .4byte 0x0000FD80
_080F8C6C: .4byte gUnk_02020EE0
_080F8C70: .4byte gUnk_0203AD3C
_080F8C74: .4byte gUnk_08D60FA4
_080F8C78: .4byte gSongTable
_080F8C7C: .4byte 0x00000B14
_080F8C80: .4byte gUnk_0203AD10

	thumb_func_start sub_080F8C84
sub_080F8C84: @ 0x080F8C84
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F8D24
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080F8CDC @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080F8CE0
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	b _080F8DA0
	.align 2, 0
_080F8CDC: .4byte 0xFFFFF800
_080F8CE0:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	cmp r1, r0
	bgt _080F8DA4
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r6, #0
	ldrsh r1, [r3, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _080F8D20 @ =0xFFFFF800
	adds r0, r0, r2
	b _080F8DA0
	.align 2, 0
_080F8D20: .4byte 0xFFFFF800
_080F8D24:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080F8D68
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _080F8D64 @ =0xFFFFF800
	adds r0, r0, r2
	b _080F8DA0
	.align 2, 0
_080F8D64: .4byte 0xFFFFF800
_080F8D68:
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r2, #0
	ldrsh r0, [r3, r2]
	lsls r0, r0, #8
	ldr r2, _080F8E10 @ =0xFFFFF800
	adds r0, r0, r2
	cmp r1, r0
	blt _080F8DA4
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080F8DA0:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080F8DA4:
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r1, #0xff
	ands r0, r1
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	bne _080F8DCA
	adds r0, r4, #0
	bl sub_08099AC4
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r0, [r0]
	bl sub_08099AC4
_080F8DCA:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0xc
	bne _080F8DE4
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080F8DE4
	movs r0, #0xd
	strb r0, [r7]
_080F8DE4:
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	movs r2, #0x52
	adds r2, r2, r4
	mov r8, r2
	cmp r0, #0
	bne _080F8E14
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0x3f
	bgt _080F8E14
	movs r0, #1
	strb r0, [r1]
	movs r0, #0xc
	strb r0, [r7]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	b _080F8FA8
	.align 2, 0
_080F8E10: .4byte 0xFFFFF800
_080F8E14:
	mov r6, r8
	movs r1, #0
	ldrsh r0, [r6, r1]
	movs r2, #0x62
	adds r2, r2, r4
	mov sb, r2
	cmp r0, #0
	bgt _080F8F18
	ldrb r1, [r2]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080F8F18
	ldrb r0, [r7]
	cmp r0, #0xe
	beq _080F8EA0
	ldr r1, _080F8ED8 @ =gUnk_02020EE0
	ldr r0, _080F8EDC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F8EA0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F8E60
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F8EA0
_080F8E60:
	ldr r1, _080F8EE0 @ =gUnk_08D60FA4
	ldr r5, _080F8EE4 @ =gSongTable
	ldr r3, _080F8EE8 @ =0x00001264
	adds r0, r5, r3
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F8E86
	movs r6, #0x93
	lsls r6, r6, #5
	adds r0, r5, r6
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F8EA0
_080F8E86:
	cmp r3, #0
	beq _080F8E98
	ldr r0, _080F8EEC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F8EA0
_080F8E98:
	movs r0, #0x93
	lsls r0, r0, #2
	bl m4aSongNumStart
_080F8EA0:
	adds r6, r4, #0
	adds r6, #0x50
	movs r0, #0
	strh r0, [r6]
	movs r0, #0xe
	strb r0, [r7]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _080F8F18
	ldr r0, [r4, #8]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _080F8EF0
	adds r0, r4, #0
	bl sub_080FB694
	b _080F8F0E
	.align 2, 0
_080F8ED8: .4byte gUnk_02020EE0
_080F8EDC: .4byte gUnk_0203AD3C
_080F8EE0: .4byte gUnk_08D60FA4
_080F8EE4: .4byte gSongTable
_080F8EE8: .4byte 0x00001264
_080F8EEC: .4byte gUnk_0203AD10
_080F8EF0:
	ldr r2, _080F8F14 @ =sub_080FFF84
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	strh r5, [r6]
	mov r2, r8
	strh r5, [r2]
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x20
	strh r0, [r4, #4]
_080F8F0E:
	movs r0, #0x12
	strh r0, [r4, #4]
	b _080F8FA8
	.align 2, 0
_080F8F14: .4byte sub_080FFF84
_080F8F18:
	mov r3, sb
	ldrb r1, [r3]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080F8FA8
	ldr r1, _080F8FB8 @ =gUnk_02020EE0
	ldr r0, _080F8FBC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F8F90
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F8F50
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F8F90
_080F8F50:
	ldr r1, _080F8FC0 @ =gUnk_08D60FA4
	ldr r5, _080F8FC4 @ =gSongTable
	ldr r6, _080F8FC8 @ =0x00001264
	adds r0, r5, r6
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F8F76
	movs r1, #0x93
	lsls r1, r1, #5
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F8F90
_080F8F76:
	cmp r3, #0
	beq _080F8F88
	ldr r0, _080F8FCC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F8F90
_080F8F88:
	movs r0, #0x93
	lsls r0, r0, #2
	bl m4aSongNumStart
_080F8F90:
	movs r1, #8
	rsbs r1, r1, #0
	movs r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r2, #8
	movs r3, #0
	bl sub_080A8D18
	adds r0, r4, #0
	bl sub_080F8490
_080F8FA8:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F8FB8: .4byte gUnk_02020EE0
_080F8FBC: .4byte gUnk_0203AD3C
_080F8FC0: .4byte gUnk_08D60FA4
_080F8FC4: .4byte gSongTable
_080F8FC8: .4byte 0x00001264
_080F8FCC: .4byte gUnk_0203AD10

	thumb_func_start sub_080F8FD0
sub_080F8FD0: @ 0x080F8FD0
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0xc8
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r2, _080F9024 @ =sub_080F90CC
	adds r0, r4, #0
	movs r1, #0x15
	bl ObjectSetFunc
	ldr r1, [r4, #8]
	movs r0, #3
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r4, #8]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080F900C
	movs r0, #0x40
	orrs r1, r0
	subs r0, #0x61
	ands r1, r0
	str r1, [r4, #8]
_080F900C:
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r3, [r4, #0x44]
	ldr r1, [r0, #0x44]
	subs r2, r3, r1
	cmp r2, #0
	blt _080F902C
	ldr r0, _080F9028 @ =0x00002FFF
	cmp r2, r0
	ble _080F9034
	b _080F903C
	.align 2, 0
_080F9024: .4byte sub_080F90CC
_080F9028: .4byte 0x00002FFF
_080F902C:
	subs r1, r1, r3
	ldr r0, _080F9038 @ =0x00002FFF
	cmp r1, r0
	bgt _080F903C
_080F9034:
	movs r0, #2
	b _080F903E
	.align 2, 0
_080F9038: .4byte 0x00002FFF
_080F903C:
	movs r0, #4
_080F903E:
	strh r0, [r4, #4]
	ldr r1, _080F90B4 @ =gUnk_02020EE0
	ldr r0, _080F90B8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F90AC
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F906C
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F90AC
_080F906C:
	ldr r1, _080F90BC @ =gUnk_08D60FA4
	ldr r4, _080F90C0 @ =gSongTable
	ldr r2, _080F90C4 @ =0x00000D24
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F9092
	movs r1, #0xd2
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F90AC
_080F9092:
	cmp r3, #0
	beq _080F90A4
	ldr r0, _080F90C8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F90AC
_080F90A4:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F90AC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080F90B4: .4byte gUnk_02020EE0
_080F90B8: .4byte gUnk_0203AD3C
_080F90BC: .4byte gUnk_08D60FA4
_080F90C0: .4byte gSongTable
_080F90C4: .4byte 0x00000D24
_080F90C8: .4byte gUnk_0203AD10

	thumb_func_start sub_080F90CC
sub_080F90CC: @ 0x080F90CC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F9168
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080F9120 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080F9124
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	b _080F91E8
	.align 2, 0
_080F9120: .4byte 0xFFFFF800
_080F9124:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	cmp r1, r0
	bgt _080F91EC
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r6, #0
	ldrsh r1, [r3, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _080F9164 @ =0xFFFFF800
	adds r0, r0, r2
	b _080F91E8
	.align 2, 0
_080F9164: .4byte 0xFFFFF800
_080F9168:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080F91AC
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _080F91A8 @ =0xFFFFF800
	adds r0, r0, r2
	b _080F91E8
	.align 2, 0
_080F91A8: .4byte 0xFFFFF800
_080F91AC:
	movs r0, #0x3e
	adds r0, r0, r4
	mov ip, r0
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r2, #0
	ldrsh r0, [r3, r2]
	lsls r0, r0, #8
	ldr r2, _080F9228 @ =0xFFFFF800
	adds r0, r0, r2
	cmp r1, r0
	blt _080F91EC
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	mov r2, ip
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080F91E8:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080F91EC:
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x48
	strh r0, [r2]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _080F9206
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r2]
_080F9206:
	ldr r1, [r4, #8]
	movs r0, #2
	ands r0, r1
	adds r3, r1, #0
	cmp r0, #0
	bne _080F922C
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0
	beq _080F92FC
	b _080F9238
	.align 2, 0
_080F9228: .4byte 0xFFFFF800
_080F922C:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F930A
_080F9238:
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080F92DC
	ldr r1, _080F92C4 @ =gUnk_02020EE0
	ldr r0, _080F92C8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F92B2
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F9272
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F92B2
_080F9272:
	ldr r1, _080F92CC @ =gUnk_08D60FA4
	ldr r5, _080F92D0 @ =gSongTable
	ldr r6, _080F92D4 @ =0x00001264
	adds r0, r5, r6
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F9298
	movs r1, #0x93
	lsls r1, r1, #5
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F92B2
_080F9298:
	cmp r3, #0
	beq _080F92AA
	ldr r0, _080F92D8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F92B2
_080F92AA:
	movs r0, #0x93
	lsls r0, r0, #2
	bl m4aSongNumStart
_080F92B2:
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080F7B34
	b _080F930A
	.align 2, 0
_080F92C4: .4byte gUnk_02020EE0
_080F92C8: .4byte gUnk_0203AD3C
_080F92CC: .4byte gUnk_08D60FA4
_080F92D0: .4byte gSongTable
_080F92D4: .4byte 0x00001264
_080F92D8: .4byte gUnk_0203AD10
_080F92DC:
	movs r0, #0x41
	rsbs r0, r0, #0
	ands r0, r3
	str r0, [r4, #8]
	ldr r0, _080F92F8 @ =sub_080F850C
	str r0, [r4, #0x78]
	movs r0, #0xc
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xd
	strb r0, [r1]
	b _080F930A
	.align 2, 0
_080F92F8: .4byte sub_080F850C
_080F92FC:
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080F930A
	adds r0, r4, #0
	adds r0, #0x50
	strh r2, [r0]
_080F930A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080F9310
sub_080F9310: @ 0x080F9310
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r0, #0xc8
	movs r4, #0
	strb r4, [r0]
	adds r1, r5, #0
	adds r1, #0xc9
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r2, _080F93C4 @ =sub_080F93E0
	adds r0, r5, #0
	movs r1, #0x10
	bl ObjectSetFunc
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x61
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0xc
	strb r0, [r1]
	strh r0, [r5, #4]
	ldr r1, _080F93C8 @ =gUnk_02020EE0
	ldr r0, _080F93CC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F93BC
	ldrb r0, [r5]
	cmp r0, #0
	bne _080F937C
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F93BC
_080F937C:
	ldr r1, _080F93D0 @ =gUnk_08D60FA4
	ldr r4, _080F93D4 @ =gSongTable
	ldr r2, _080F93D8 @ =0x00000D24
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F93A2
	movs r1, #0xd2
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F93BC
_080F93A2:
	cmp r3, #0
	beq _080F93B4
	ldr r0, _080F93DC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F93BC
_080F93B4:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F93BC:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080F93C4: .4byte sub_080F93E0
_080F93C8: .4byte gUnk_02020EE0
_080F93CC: .4byte gUnk_0203AD3C
_080F93D0: .4byte gUnk_08D60FA4
_080F93D4: .4byte gSongTable
_080F93D8: .4byte 0x00000D24
_080F93DC: .4byte gUnk_0203AD10

	thumb_func_start sub_080F93E0
sub_080F93E0: @ 0x080F93E0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r6, #0
	adds r4, #0x83
	ldrb r0, [r4]
	cmp r0, #0x10
	bne _080F9438
	adds r3, r6, #0
	adds r3, #0x52
	movs r0, #0
	strh r0, [r3]
	adds r2, r6, #0
	adds r2, #0x54
	ldr r0, _080F9434 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r6, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x54
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080F9428
	b _080F95C8
_080F9428:
	movs r0, #0x11
	strb r0, [r4]
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r3]
	b _080F95C8
	.align 2, 0
_080F9434: .4byte gUnk_0203AD40
_080F9438:
	cmp r0, #0x11
	beq _080F943E
	b _080F9554
_080F943E:
	adds r0, r6, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080F9454
	adds r1, r6, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x48
	b _080F945C
_080F9454:
	adds r1, r6, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x33
_080F945C:
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F9530 @ =0xFFFFFB80
	cmp r0, r2
	bge _080F946A
	strh r2, [r1]
_080F946A:
	adds r0, r6, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080F947A
	b _080F95C8
_080F947A:
	ldr r1, _080F9534 @ =gUnk_02020EE0
	ldr r0, _080F9538 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F94E6
	ldrb r0, [r6]
	cmp r0, #0
	bne _080F94A6
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F94E6
_080F94A6:
	ldr r1, _080F953C @ =gUnk_08D60FA4
	ldr r4, _080F9540 @ =gSongTable
	ldr r2, _080F9544 @ =0x00000B24
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F94CC
	movs r1, #0xb2
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F94E6
_080F94CC:
	cmp r3, #0
	beq _080F94DE
	ldr r0, _080F9548 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F94E6
_080F94DE:
	movs r0, #0xb2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F94E6:
	adds r0, r6, #0
	adds r0, #0x83
	movs r4, #0x12
	strb r4, [r0]
	ldr r2, _080F954C @ =0x000002AD
	adds r0, r6, #0
	movs r1, #0
	movs r3, #2
	bl sub_0808AE30
	ldr r0, _080F9550 @ =0x00000201
	adds r1, r6, #0
	bl sub_0806FE64
	str r4, [sp]
	adds r0, r6, #0
	movs r1, #0x1e
	movs r2, #8
	movs r3, #0
	bl sub_080A8D18
	ldr r0, [r6, #8]
	movs r5, #1
	eors r0, r5
	str r0, [r6, #8]
	str r4, [sp]
	adds r0, r6, #0
	movs r1, #0x1e
	movs r2, #8
	movs r3, #0
	bl sub_080A8D18
	ldr r0, [r6, #8]
	eors r0, r5
	str r0, [r6, #8]
	b _080F95C8
	.align 2, 0
_080F9530: .4byte 0xFFFFFB80
_080F9534: .4byte gUnk_02020EE0
_080F9538: .4byte gUnk_0203AD3C
_080F953C: .4byte gUnk_08D60FA4
_080F9540: .4byte gSongTable
_080F9544: .4byte 0x00000B24
_080F9548: .4byte gUnk_0203AD10
_080F954C: .4byte 0x000002AD
_080F9550: .4byte 0x00000201
_080F9554:
	adds r5, r6, #0
	adds r5, #0x52
	ldrh r0, [r5]
	subs r0, #0x28
	strh r0, [r5]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _080F95A4 @ =0xFFFFFB60
	cmp r0, r1
	bge _080F956A
	strh r1, [r5]
_080F956A:
	adds r0, r6, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080F95C8
	ldrh r0, [r6, #4]
	subs r0, #1
	strh r0, [r6, #4]
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _080F95C8
	ldr r0, [r6, #8]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r6, #8]
	adds r0, r6, #0
	adds r0, #0x80
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #0
	bgt _080F95A8
	adds r0, r6, #0
	bl sub_080FB694
	b _080F95C8
	.align 2, 0
_080F95A4: .4byte 0xFFFFFB60
_080F95A8:
	ldr r2, _080F95D0 @ =sub_080FFF84
	adds r0, r6, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r6, #0
	adds r0, #0x50
	strh r4, [r0]
	strh r4, [r5]
	ldr r0, [r6, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r6, #8]
	movs r0, #0x20
	strh r0, [r6, #4]
_080F95C8:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080F95D0: .4byte sub_080FFF84

	thumb_func_start sub_080F95D4
sub_080F95D4: @ 0x080F95D4
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0xc8
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r2, _080F9614 @ =sub_080F96B4
	adds r0, r4, #0
	movs r1, #0x1a
	bl ObjectSetFunc
	ldr r1, [r4, #8]
	movs r0, #3
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r4, #8]
	movs r2, #0x20
	ands r2, r1
	cmp r2, #0
	beq _080F9618
	movs r0, #0x40
	orrs r1, r0
	subs r0, #0x61
	ands r1, r0
	str r1, [r4, #8]
	b _080F961E
	.align 2, 0
_080F9614: .4byte sub_080F96B4
_080F9618:
	adds r0, r4, #0
	adds r0, #0x50
	strh r2, [r0]
_080F961E:
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #2
	strb r0, [r1]
	movs r0, #0xc
	strh r0, [r4, #4]
	ldr r1, _080F969C @ =gUnk_02020EE0
	ldr r0, _080F96A0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F9696
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F9656
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F9696
_080F9656:
	ldr r1, _080F96A4 @ =gUnk_08D60FA4
	ldr r4, _080F96A8 @ =gSongTable
	ldr r2, _080F96AC @ =0x00000D24
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F967C
	movs r1, #0xd2
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F9696
_080F967C:
	cmp r3, #0
	beq _080F968E
	ldr r0, _080F96B0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F9696
_080F968E:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F9696:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080F969C: .4byte gUnk_02020EE0
_080F96A0: .4byte gUnk_0203AD3C
_080F96A4: .4byte gUnk_08D60FA4
_080F96A8: .4byte gSongTable
_080F96AC: .4byte 0x00000D24
_080F96B0: .4byte gUnk_0203AD10

	thumb_func_start sub_080F96B4
sub_080F96B4: @ 0x080F96B4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F974C
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080F9704 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080F9708
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	b _080F9788
	.align 2, 0
_080F9704: .4byte 0xFFFFF800
_080F9708:
	adds r3, r4, #0
	adds r3, #0x3c
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa4
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	adds r6, r4, #0
	adds r6, #0x62
	cmp r1, r0
	bgt _080F97D4
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	ldr r2, _080F9748 @ =0xFFFFF800
	adds r0, r0, r2
	b _080F97D0
	.align 2, 0
_080F9748: .4byte 0xFFFFF800
_080F974C:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	cmp r1, r0
	bgt _080F9798
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080F9794 @ =0xFFFFF800
_080F9788:
	adds r0, r0, r3
	subs r1, r1, r0
	str r1, [r4, #0x40]
	adds r6, r2, #0
	b _080F97D4
	.align 2, 0
_080F9794: .4byte 0xFFFFF800
_080F9798:
	adds r3, r4, #0
	adds r3, #0x3e
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa8
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	ldr r6, _080F97FC @ =0xFFFFF800
	adds r0, r0, r6
	adds r6, r4, #0
	adds r6, #0x62
	cmp r1, r0
	blt _080F97D4
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	adds r0, r0, r7
_080F97D0:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080F97D4:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0x1a
	bne _080F9800
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080F97EC
	b _080F9994
_080F97EC:
	movs r0, #0x1b
	strb r0, [r7]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r1]
	b _080F9994
	.align 2, 0
_080F97FC: .4byte 0xFFFFF800
_080F9800:
	cmp r1, #0x1b
	bne _080F989A
	ldrb r0, [r4, #1]
	cmp r0, #1
	bhi _080F9820
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080F9890 @ =0xFFFFFB80
	cmp r0, r2
	bge _080F9820
	strh r2, [r1]
_080F9820:
	ldrb r0, [r4, #1]
	cmp r0, #2
	bne _080F982E
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
_080F982E:
	ldrb r0, [r4, #1]
	cmp r0, #9
	bne _080F983E
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xfc
	lsls r0, r0, #8
	strh r0, [r1]
_080F983E:
	ldrb r0, [r4, #1]
	subs r0, #9
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080F9862
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x80
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #3
	cmp r0, r2
	ble _080F9862
	strh r2, [r1]
_080F9862:
	ldr r1, [r4, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080F986E
	b _080F9994
_080F986E:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080F987E
	movs r0, #0x41
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r4, #8]
_080F987E:
	ldrb r1, [r6]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080F9894
	adds r0, r4, #0
	bl sub_080F7B34
	b _080F9994
	.align 2, 0
_080F9890: .4byte 0xFFFFFB80
_080F9894:
	movs r0, #0xd
	strb r0, [r7]
	b _080F9994
_080F989A:
	ldrb r1, [r6]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080F9994
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	ldrb r1, [r7]
	mov r8, r0
	cmp r1, #0xe
	beq _080F9920
	ldr r1, _080F9950 @ =gUnk_02020EE0
	ldr r0, _080F9954 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F9920
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F98E0
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F9920
_080F98E0:
	ldr r1, _080F9958 @ =gUnk_08D60FA4
	ldr r5, _080F995C @ =gSongTable
	ldr r2, _080F9960 @ =0x00001264
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F9906
	movs r1, #0x93
	lsls r1, r1, #5
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F9920
_080F9906:
	cmp r3, #0
	beq _080F9918
	ldr r0, _080F9964 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F9920
_080F9918:
	movs r0, #0x93
	lsls r0, r0, #2
	bl m4aSongNumStart
_080F9920:
	movs r0, #0xe
	strb r0, [r7]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _080F9994
	ldr r0, [r4, #8]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x80
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #0
	bgt _080F9968
	adds r0, r4, #0
	bl sub_080FB694
	b _080F998A
	.align 2, 0
_080F9950: .4byte gUnk_02020EE0
_080F9954: .4byte gUnk_0203AD3C
_080F9958: .4byte gUnk_08D60FA4
_080F995C: .4byte gSongTable
_080F9960: .4byte 0x00001264
_080F9964: .4byte gUnk_0203AD10
_080F9968:
	ldr r2, _080F9990 @ =sub_080FFF84
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	mov r3, r8
	strh r5, [r3]
	adds r0, r4, #0
	adds r0, #0x52
	strh r5, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x20
	strh r0, [r4, #4]
_080F998A:
	movs r0, #0x12
	strh r0, [r4, #4]
	b _080F99B0
	.align 2, 0
_080F9990: .4byte sub_080FFF84
_080F9994:
	ldrb r1, [r6]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080F99B0
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	eors r0, r1
	str r0, [r4, #8]
_080F99B0:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F99BC
sub_080F99BC: @ 0x080F99BC
	push {lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #8
	orrs r0, r1
	str r0, [r3, #8]
	adds r2, r3, #0
	adds r2, #0x54
	ldr r0, _080F9A14 @ =gUnk_0203AD40
	ldr r1, [r0]
	movs r0, #2
	ands r1, r0
	ldrb r0, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r3, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x54
	strb r1, [r0]
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080F9A26
	ldr r0, [r3, #8]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r3, #8]
	adds r0, r3, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #1
	beq _080F9A18
	cmp r0, #1
	ble _080F9A0C
	cmp r0, #2
	beq _080F9A20
_080F9A0C:
	adds r0, r3, #0
	bl sub_080F9DA8
	b _080F9A26
	.align 2, 0
_080F9A14: .4byte gUnk_0203AD40
_080F9A18:
	adds r0, r3, #0
	bl sub_080FA048
	b _080F9A26
_080F9A20:
	adds r0, r3, #0
	bl sub_080FFFE8
_080F9A26:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080F9A2C
sub_080F9A2C: @ 0x080F9A2C
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F9AC8
	movs r0, #0x3e
	adds r0, r0, r4
	mov ip, r0
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r5, #0
	ldrsh r0, [r3, r5]
	lsls r0, r0, #8
	ldr r6, _080F9A80 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080F9A84
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	mov r3, ip
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r0, r5
	b _080F9B06
	.align 2, 0
_080F9A80: .4byte 0xFFFFF800
_080F9A84:
	adds r3, r4, #0
	adds r3, #0x3c
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa4
	movs r6, #0
	ldrsh r0, [r2, r6]
	lsls r0, r0, #8
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r0, r5
	adds r6, r4, #0
	adds r6, #0x62
	cmp r1, r0
	bgt _080F9B50
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	ldr r2, _080F9AC4 @ =0xFFFFF800
	adds r0, r0, r2
	b _080F9B4C
	.align 2, 0
_080F9AC4: .4byte 0xFFFFF800
_080F9AC8:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	cmp r1, r0
	bgt _080F9B14
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080F9B10 @ =0xFFFFF800
	adds r0, r0, r3
_080F9B06:
	subs r1, r1, r0
	str r1, [r4, #0x40]
	adds r6, r2, #0
	b _080F9B50
	.align 2, 0
_080F9B10: .4byte 0xFFFFF800
_080F9B14:
	adds r3, r4, #0
	adds r3, #0x3e
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa8
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	ldr r6, _080F9C98 @ =0xFFFFF800
	adds r0, r0, r6
	adds r6, r4, #0
	adds r6, #0x62
	cmp r1, r0
	blt _080F9B50
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	adds r0, r0, r7
_080F9B4C:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080F9B50:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0x17
	beq _080F9B5E
	b _080F9CB4
_080F9B5E:
	ldrb r0, [r4, #1]
	cmp r0, #4
	bne _080F9BE2
	movs r1, #8
	rsbs r1, r1, #0
	ldr r3, [r4, #8]
	movs r0, #1
	ands r3, r0
	adds r0, r4, #0
	movs r2, #8
	bl sub_08089864
	ldr r1, _080F9C9C @ =gUnk_02020EE0
	ldr r0, _080F9CA0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F9BE2
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F9BA2
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F9BE2
_080F9BA2:
	ldr r1, _080F9CA4 @ =gUnk_08D60FA4
	ldr r5, _080F9CA8 @ =gSongTable
	ldr r2, _080F9CAC @ =0x00000D24
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F9BC8
	movs r1, #0xd2
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F9BE2
_080F9BC8:
	cmp r3, #0
	beq _080F9BDA
	ldr r0, _080F9CB0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F9BE2
_080F9BDA:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F9BE2:
	ldrb r0, [r4, #1]
	cmp r0, #0x16
	bne _080F9C64
	movs r0, #0x12
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0x1e
	movs r2, #8
	movs r3, #0
	bl sub_080A8D18
	ldr r1, _080F9C9C @ =gUnk_02020EE0
	ldr r0, _080F9CA0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F9C64
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F9C24
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F9C64
_080F9C24:
	ldr r1, _080F9CA4 @ =gUnk_08D60FA4
	ldr r5, _080F9CA8 @ =gSongTable
	ldr r2, _080F9CAC @ =0x00000D24
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F9C4A
	movs r1, #0xd2
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F9C64
_080F9C4A:
	cmp r3, #0
	beq _080F9C5C
	ldr r0, _080F9CB0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F9C64
_080F9C5C:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F9C64:
	ldr r1, [r4, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080F9C70
	b _080F9D74
_080F9C70:
	movs r0, #3
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r4, #8]
	movs r0, #5
	strb r0, [r7]
	adds r2, r4, #0
	adds r2, #0x50
	movs r3, #0x80
	lsls r3, r3, #2
	strh r3, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F9D74
	rsbs r0, r3, #0
	strh r0, [r2]
	b _080F9D74
	.align 2, 0
_080F9C98: .4byte 0xFFFFF800
_080F9C9C: .4byte gUnk_02020EE0
_080F9CA0: .4byte gUnk_0203AD3C
_080F9CA4: .4byte gUnk_08D60FA4
_080F9CA8: .4byte gSongTable
_080F9CAC: .4byte 0x00000D24
_080F9CB0: .4byte gUnk_0203AD10
_080F9CB4:
	ldrb r0, [r4, #1]
	cmp r0, #8
	bne _080F9D3E
	adds r2, r4, #0
	adds r2, #0x50
	movs r3, #0xff
	lsls r3, r3, #8
	strh r3, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F9CD2
	rsbs r0, r3, #0
	strh r0, [r2]
_080F9CD2:
	ldr r1, _080F9D90 @ =gUnk_02020EE0
	ldr r0, _080F9D94 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F9D3E
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F9CFE
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F9D3E
_080F9CFE:
	ldr r1, _080F9D98 @ =gUnk_08D60FA4
	ldr r5, _080F9D9C @ =gSongTable
	ldr r2, _080F9DA0 @ =0x00000D24
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F9D24
	movs r1, #0xd2
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F9D3E
_080F9D24:
	cmp r3, #0
	beq _080F9D36
	ldr r0, _080F9DA4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080F9D3E
_080F9D36:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F9D3E:
	ldrb r0, [r4, #1]
	cmp r0, #0xc
	bne _080F9D4C
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080F9D4C:
	ldrb r0, [r4, #1]
	cmp r0, #4
	bne _080F9D64
	movs r1, #8
	rsbs r1, r1, #0
	ldr r3, [r4, #8]
	movs r0, #1
	ands r3, r0
	adds r0, r4, #0
	movs r2, #8
	bl sub_08089864
_080F9D64:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080F9D74
	adds r0, r4, #0
	bl sub_080F7B34
_080F9D74:
	ldrb r1, [r6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080F9D86
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080F9D86:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080F9D90: .4byte gUnk_02020EE0
_080F9D94: .4byte gUnk_0203AD3C
_080F9D98: .4byte gUnk_08D60FA4
_080F9D9C: .4byte gSongTable
_080F9DA0: .4byte 0x00000D24
_080F9DA4: .4byte gUnk_0203AD10

	thumb_func_start sub_080F9DA8
sub_080F9DA8: @ 0x080F9DA8
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0xc8
	movs r0, #0
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r2, _080F9DEC @ =sub_080F9E18
	adds r0, r4, #0
	movs r1, #0x18
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080F9DF0
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080F9DF8
	.align 2, 0
_080F9DEC: .4byte sub_080F9E18
_080F9DF0:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080F9DF8:
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x50
	movs r3, #0x80
	lsls r3, r3, #2
	strh r3, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F9E12
	rsbs r0, r3, #0
	strh r0, [r2]
_080F9E12:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080F9E18
sub_080F9E18: @ 0x080F9E18
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080F9EB4
	adds r4, r5, #0
	adds r4, #0x3e
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	ldr r2, [r5, #0x40]
	adds r1, r2, r1
	adds r3, r5, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080F9E6C @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080F9E70
	adds r2, r5, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	b _080F9EF0
	.align 2, 0
_080F9E6C: .4byte 0xFFFFF800
_080F9E70:
	adds r3, r5, #0
	adds r3, #0x3c
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r5, #0
	adds r2, #0xa4
	movs r4, #0
	ldrsh r0, [r2, r4]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	adds r7, r5, #0
	adds r7, #0x62
	cmp r1, r0
	bgt _080F9F3C
	ldrb r1, [r7]
	movs r0, #1
	orrs r0, r1
	strb r0, [r7]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	ldr r2, _080F9EB0 @ =0xFFFFF800
	adds r0, r0, r2
	b _080F9F38
	.align 2, 0
_080F9EB0: .4byte 0xFFFFF800
_080F9EB4:
	adds r4, r5, #0
	adds r4, #0x3c
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	ldr r2, [r5, #0x40]
	adds r1, r2, r1
	adds r3, r5, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080F9F00
	adds r2, r5, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	ldr r3, _080F9EFC @ =0xFFFFF800
_080F9EF0:
	adds r0, r0, r3
	subs r1, r1, r0
	str r1, [r5, #0x40]
	adds r7, r2, #0
	b _080F9F3C
	.align 2, 0
_080F9EFC: .4byte 0xFFFFF800
_080F9F00:
	adds r3, r5, #0
	adds r3, #0x3e
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r5, #0
	adds r2, #0xa8
	movs r4, #0
	ldrsh r0, [r2, r4]
	lsls r0, r0, #8
	ldr r4, _080FA02C @ =0xFFFFF800
	adds r0, r0, r4
	adds r7, r5, #0
	adds r7, #0x62
	cmp r1, r0
	blt _080F9F3C
	ldrb r1, [r7]
	movs r0, #1
	orrs r0, r1
	strb r0, [r7]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080F9F38:
	subs r1, r1, r0
	str r1, [r5, #0x40]
_080F9F3C:
	ldrb r0, [r5, #1]
	cmp r0, #8
	bne _080F9FDA
	adds r6, r5, #0
	adds r6, #0x50
	movs r1, #0x80
	lsls r1, r1, #1
	mov r8, r1
	mov r2, r8
	strh r2, [r6]
	movs r1, #8
	rsbs r1, r1, #0
	ldr r3, [r5, #8]
	movs r4, #1
	ands r3, r4
	adds r0, r5, #0
	movs r2, #8
	bl sub_08089864
	ldr r0, [r5, #8]
	ands r0, r4
	cmp r0, #0
	beq _080F9F70
	ldrh r0, [r6]
	rsbs r0, r0, #0
	strh r0, [r6]
_080F9F70:
	ldr r1, _080FA030 @ =gUnk_02020EE0
	ldr r0, _080FA034 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080F9FDA
	ldrb r0, [r5]
	cmp r0, #0
	bne _080F9F9C
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080F9FDA
_080F9F9C:
	ldr r1, _080FA038 @ =gUnk_08D60FA4
	ldr r4, _080FA03C @ =gSongTable
	ldr r3, _080FA040 @ =0x00000D24
	adds r0, r4, r3
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080F9FC2
	movs r6, #0xd2
	lsls r6, r6, #4
	adds r0, r4, r6
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080F9FDA
_080F9FC2:
	cmp r3, #0
	beq _080F9FD2
	ldr r0, _080FA044 @ =gUnk_0203AD10
	ldr r0, [r0]
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	bne _080F9FDA
_080F9FD2:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080F9FDA:
	ldrb r0, [r5, #1]
	cmp r0, #0xf
	bne _080F9FF0
	movs r0, #0x12
	str r0, [sp]
	adds r0, r5, #0
	movs r1, #0x1e
	movs r2, #8
	movs r3, #0
	bl sub_080A8D18
_080F9FF0:
	ldrb r0, [r5, #1]
	cmp r0, #0x10
	bne _080F9FFE
	adds r1, r5, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080F9FFE:
	ldr r0, [r5, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080FA00E
	adds r0, r5, #0
	bl sub_080F7B34
_080FA00E:
	ldrb r1, [r7]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080FA020
	adds r1, r5, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080FA020:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080FA02C: .4byte 0xFFFFF800
_080FA030: .4byte gUnk_02020EE0
_080FA034: .4byte gUnk_0203AD3C
_080FA038: .4byte gUnk_08D60FA4
_080FA03C: .4byte gSongTable
_080FA040: .4byte 0x00000D24
_080FA044: .4byte gUnk_0203AD10

	thumb_func_start sub_080FA048
sub_080FA048: @ 0x080FA048
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0xc8
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r2, _080FA090 @ =sub_080FA0BC
	adds r0, r4, #0
	movs r1, #0x19
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080FA094
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080FA09C
	.align 2, 0
_080FA090: .4byte sub_080FA0BC
_080FA094:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080FA09C:
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x50
	movs r3, #0x80
	lsls r3, r3, #2
	strh r3, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FA0B6
	rsbs r0, r3, #0
	strh r0, [r2]
_080FA0B6:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080FA0BC
sub_080FA0BC: @ 0x080FA0BC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FA150
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080FA108 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080FA10C
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	b _080FA18C
	.align 2, 0
_080FA108: .4byte 0xFFFFF800
_080FA10C:
	adds r3, r4, #0
	adds r3, #0x3c
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa4
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	adds r5, r4, #0
	adds r5, #0x62
	cmp r1, r0
	bgt _080FA1D8
	ldrb r1, [r5]
	movs r0, #1
	orrs r0, r1
	strb r0, [r5]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	ldr r2, _080FA14C @ =0xFFFFF800
	adds r0, r0, r2
	b _080FA1D4
	.align 2, 0
_080FA14C: .4byte 0xFFFFF800
_080FA150:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080FA19C
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080FA198 @ =0xFFFFF800
_080FA18C:
	adds r0, r0, r3
	subs r1, r1, r0
	str r1, [r4, #0x40]
	adds r5, r2, #0
	b _080FA1D8
	.align 2, 0
_080FA198: .4byte 0xFFFFF800
_080FA19C:
	adds r3, r4, #0
	adds r3, #0x3e
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa8
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	ldr r5, _080FA2CC @ =0xFFFFF800
	adds r0, r0, r5
	adds r5, r4, #0
	adds r5, #0x62
	cmp r1, r0
	blt _080FA1D8
	ldrb r1, [r5]
	movs r0, #1
	orrs r0, r1
	strb r0, [r5]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080FA1D4:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080FA1D8:
	ldrb r0, [r4, #1]
	cmp r0, #7
	bne _080FA25C
	movs r1, #8
	rsbs r1, r1, #0
	ldr r3, [r4, #8]
	movs r0, #1
	ands r3, r0
	adds r0, r4, #0
	movs r2, #8
	bl sub_08089864
	ldr r1, _080FA2D0 @ =gUnk_02020EE0
	ldr r0, _080FA2D4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FA25C
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FA21C
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FA25C
_080FA21C:
	ldr r1, _080FA2D8 @ =gUnk_08D60FA4
	ldr r6, _080FA2DC @ =gSongTable
	ldr r2, _080FA2E0 @ =0x00000D24
	adds r0, r6, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FA242
	movs r1, #0xd2
	lsls r1, r1, #4
	adds r0, r6, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FA25C
_080FA242:
	cmp r3, #0
	beq _080FA254
	ldr r0, _080FA2E4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FA25C
_080FA254:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080FA25C:
	ldrb r0, [r4, #1]
	cmp r0, #0xa
	bne _080FA27A
	adds r2, r4, #0
	adds r2, #0x50
	movs r3, #0xc0
	lsls r3, r3, #1
	strh r3, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FA27A
	rsbs r0, r3, #0
	strh r0, [r2]
_080FA27A:
	ldrb r0, [r4, #1]
	cmp r0, #0x12
	bne _080FA296
	adds r2, r4, #0
	adds r2, #0x50
	ldr r0, _080FA2E8 @ =0x0000FF40
	strh r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FA296
	movs r0, #0xc0
	strh r0, [r2]
_080FA296:
	ldrb r0, [r4, #1]
	cmp r0, #0x19
	bne _080FA2A4
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080FA2A4:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080FA2B4
	adds r0, r4, #0
	bl sub_080F7B34
_080FA2B4:
	ldrb r1, [r5]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080FA2C6
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080FA2C6:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080FA2CC: .4byte 0xFFFFF800
_080FA2D0: .4byte gUnk_02020EE0
_080FA2D4: .4byte gUnk_0203AD3C
_080FA2D8: .4byte gUnk_08D60FA4
_080FA2DC: .4byte gSongTable
_080FA2E0: .4byte 0x00000D24
_080FA2E4: .4byte gUnk_0203AD10
_080FA2E8: .4byte 0x0000FF40

	thumb_func_start sub_080FA2EC
sub_080FA2EC: @ 0x080FA2EC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	ldr r0, [r4, #8]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, [r4, #0x78]
	ldr r0, _080FA350 @ =sub_080F8C84
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r5, r0, #0x1f
	adds r0, r4, #0
	bl sub_080F79AC
	ldr r2, _080FA354 @ =sub_080FA4AC
	adds r0, r4, #0
	movs r1, #0xb
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_0803D368
	adds r2, r4, #0
	adds r2, #0xac
	str r0, [r2]
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	movs r0, #0xa0
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r0, [r2]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080FA358
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _080FA360
	.align 2, 0
_080FA350: .4byte sub_080F8C84
_080FA354: .4byte sub_080FA4AC
_080FA358:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080FA360:
	str r0, [r4, #8]
	ldr r3, [r4, #0x40]
	cmp r5, #0
	beq _080FA3CC
	adds r0, r6, #0
	adds r0, #0xca
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FA3CC
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #0x40]
	subs r1, r3, r0
	cmp r1, #0
	bge _080FA382
	subs r1, r0, r3
_080FA382:
	movs r0, #0xa0
	lsls r0, r0, #7
	cmp r1, r0
	ble _080FA3CC
	ldr r2, _080FA3B8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080FA3BC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080FA3C0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _080FA3C4 @ =0x00005554
	cmp r2, r0
	bls _080FA3CC
	ldr r0, _080FA3C8 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _080FA3AA
	movs r1, #1
_080FA3AA:
	cmp r1, #0
	beq _080FA3CC
	adds r0, r4, #0
	bl sub_080FA5C0
	b _080FA48C
	.align 2, 0
_080FA3B8: .4byte gRngVal
_080FA3BC: .4byte 0x00196225
_080FA3C0: .4byte 0x3C6EF35F
_080FA3C4: .4byte 0x00005554
_080FA3C8: .4byte 0x0000AAA9
_080FA3CC:
	adds r0, r4, #0
	adds r0, #0xa4
	movs r1, #0
	ldrsh r2, [r0, r1]
	adds r1, r2, #0
	adds r1, #0x78
	asrs r0, r3, #8
	cmp r1, r0
	bge _080FA3F4
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FA40A
	adds r0, r4, #0
	adds r0, #0xa8
	movs r2, #0
	ldrsh r0, [r0, r2]
	subs r0, #0x28
	b _080FA40E
_080FA3F4:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FA40A
	adds r0, r4, #0
	adds r0, #0xa8
	movs r1, #0
	ldrsh r0, [r0, r1]
	subs r0, #0x28
	b _080FA40E
_080FA40A:
	adds r0, r2, #0
	adds r0, #0x28
_080FA40E:
	lsls r0, r0, #8
	subs r1, r3, r0
	asrs r0, r1, #5
	rsbs r0, r0, #0
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	strh r0, [r1]
	strh r2, [r4, #4]
	ldr r1, _080FA494 @ =gUnk_02020EE0
	ldr r0, _080FA498 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FA48C
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FA44C
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FA48C
_080FA44C:
	ldr r1, _080FA49C @ =gUnk_08D60FA4
	ldr r4, _080FA4A0 @ =gSongTable
	ldr r2, _080FA4A4 @ =0x00000B14
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FA472
	movs r1, #0xb1
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FA48C
_080FA472:
	cmp r3, #0
	beq _080FA484
	ldr r0, _080FA4A8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FA48C
_080FA484:
	movs r0, #0xb1
	lsls r0, r0, #1
	bl m4aSongNumStart
_080FA48C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080FA494: .4byte gUnk_02020EE0
_080FA498: .4byte gUnk_0203AD3C
_080FA49C: .4byte gUnk_08D60FA4
_080FA4A0: .4byte gSongTable
_080FA4A4: .4byte 0x00000B14
_080FA4A8: .4byte gUnk_0203AD10

	thumb_func_start sub_080FA4AC
sub_080FA4AC: @ 0x080FA4AC
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r1, [r4, #4]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	bne _080FA4CA
	adds r0, r4, #0
	bl sub_08099AC4
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r0, [r0]
	bl sub_08099AC4
_080FA4CA:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r1, r0, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0x1f
	ble _080FA574
	ldr r1, _080FA55C @ =gUnk_02020EE0
	ldr r0, _080FA560 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FA544
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FA504
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FA544
_080FA504:
	ldr r1, _080FA564 @ =gUnk_08D60FA4
	ldr r5, _080FA568 @ =gSongTable
	ldr r2, _080FA56C @ =0x00001264
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FA52A
	movs r1, #0x93
	lsls r1, r1, #5
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FA544
_080FA52A:
	cmp r3, #0
	beq _080FA53C
	ldr r0, _080FA570 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FA544
_080FA53C:
	movs r0, #0x93
	lsls r0, r0, #2
	bl m4aSongNumStart
_080FA544:
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xe
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_080FA70C
	b _080FA5BA
	.align 2, 0
_080FA55C: .4byte gUnk_02020EE0
_080FA560: .4byte gUnk_0203AD3C
_080FA564: .4byte gUnk_08D60FA4
_080FA568: .4byte gSongTable
_080FA56C: .4byte 0x00001264
_080FA570: .4byte gUnk_0203AD10
_080FA574:
	ldr r0, _080FA5A0 @ =gUnk_083571A4
	asrs r1, r1, #0x12
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r1, [r1]
	adds r0, r4, #0
	adds r0, #0x52
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #0xc
	bne _080FA5A4
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080FA5BA
	movs r0, #0xd
	strb r0, [r2]
	b _080FA5BA
	.align 2, 0
_080FA5A0: .4byte gUnk_083571A4
_080FA5A4:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x3f
	bgt _080FA5BA
	movs r0, #0xc
	strb r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
_080FA5BA:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080FA5C0
sub_080FA5C0: @ 0x080FA5C0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r5, #0
	adds r1, r5, #0
	adds r1, #0xc8
	ldrb r0, [r1]
	adds r0, #1
	movs r4, #0
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0xc9
	strb r4, [r0]
	ldr r2, _080FA614 @ =sub_080FA82C
	adds r0, r5, #0
	movs r1, #0x1c
	bl ObjectSetFunc
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, r5, #0
	bl sub_0803D368
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r5, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _080FA618
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	b _080FA620
	.align 2, 0
_080FA614: .4byte sub_080FA82C
_080FA618:
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080FA620:
	str r0, [r5, #8]
	adds r0, r6, #0
	adds r0, #0xca
	ldrb r0, [r0]
	cmp r0, #1
	bls _080FA658
	movs r0, #0x80
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, _080FA64C @ =0x00000103
	adds r0, r0, r1
	ldrb r0, [r0]
	adds r6, r5, #0
	adds r6, #0x80
	ldr r3, _080FA650 @ =gUnk_08351530
	ldr r4, _080FA654 @ =gUnk_0203AD30
	cmp r0, #0
	beq _080FA6A2
	movs r0, #0x60
	b _080FA6A0
	.align 2, 0
_080FA64C: .4byte 0x00000103
_080FA650: .4byte gUnk_08351530
_080FA654: .4byte gUnk_0203AD30
_080FA658:
	adds r2, r5, #0
	adds r2, #0x80
	ldr r3, _080FA680 @ =gUnk_08351530
	ldr r4, _080FA684 @ =gUnk_0203AD30
	ldrb r0, [r4]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, r3, #0
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r6, #0
	ldrsh r1, [r2, r6]
	asrs r0, r0, #0x11
	adds r6, r2, #0
	cmp r1, r0
	bge _080FA688
	movs r0, #0x30
	b _080FA68A
	.align 2, 0
_080FA680: .4byte gUnk_08351530
_080FA684: .4byte gUnk_0203AD30
_080FA688:
	movs r0, #0x40
_080FA68A:
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, _080FA6DC @ =0x00000103
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FA6A2
	ldrh r0, [r5, #4]
	subs r0, #0x18
_080FA6A0:
	strh r0, [r5, #4]
_080FA6A2:
	ldr r2, _080FA6E0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080FA6E4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080FA6E8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	movs r0, #7
	ands r2, r0
	ldrb r0, [r4]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, r3, #0
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r6, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080FA6EC
	adds r1, r5, #0
	adds r1, #0x83
	cmp r2, #1
	bgt _080FA6F8
	b _080FA6F4
	.align 2, 0
_080FA6DC: .4byte 0x00000103
_080FA6E0: .4byte gRngVal
_080FA6E4: .4byte 0x00196225
_080FA6E8: .4byte 0x3C6EF35F
_080FA6EC:
	adds r1, r5, #0
	adds r1, #0x83
	cmp r2, #3
	bgt _080FA6F8
_080FA6F4:
	movs r0, #0x17
	strb r0, [r1]
_080FA6F8:
	ldrb r0, [r1]
	cmp r0, #0x1c
	bne _080FA704
	adds r0, r5, #0
	bl sub_080FE1D0
_080FA704:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FA70C
sub_080FA70C: @ 0x080FA70C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0xc8
	ldrb r0, [r1]
	adds r0, #1
	movs r4, #0
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0xc9
	strb r4, [r0]
	ldr r2, _080FA768 @ =sub_080FA82C
	adds r0, r5, #0
	movs r1, #0x1c
	bl ObjectSetFunc
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #0x78
	ldrb r0, [r0]
	cmp r0, #1
	bls _080FA778
	movs r0, #0x80
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, _080FA76C @ =0x00000103
	adds r0, r0, r1
	ldrb r0, [r0]
	adds r6, r5, #0
	adds r6, #0x80
	ldr r3, _080FA770 @ =gUnk_08351530
	ldr r4, _080FA774 @ =gUnk_0203AD30
	cmp r0, #0
	beq _080FA7C2
	movs r0, #0x60
	b _080FA7C0
	.align 2, 0
_080FA768: .4byte sub_080FA82C
_080FA76C: .4byte 0x00000103
_080FA770: .4byte gUnk_08351530
_080FA774: .4byte gUnk_0203AD30
_080FA778:
	adds r2, r5, #0
	adds r2, #0x80
	ldr r3, _080FA7A0 @ =gUnk_08351530
	ldr r4, _080FA7A4 @ =gUnk_0203AD30
	ldrb r0, [r4]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, r3, #0
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r6, #0
	ldrsh r1, [r2, r6]
	asrs r0, r0, #0x11
	adds r6, r2, #0
	cmp r1, r0
	bge _080FA7A8
	movs r0, #0x30
	b _080FA7AA
	.align 2, 0
_080FA7A0: .4byte gUnk_08351530
_080FA7A4: .4byte gUnk_0203AD30
_080FA7A8:
	movs r0, #0x40
_080FA7AA:
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, _080FA7FC @ =0x00000103
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FA7C2
	ldrh r0, [r5, #4]
	subs r0, #0x18
_080FA7C0:
	strh r0, [r5, #4]
_080FA7C2:
	ldr r2, _080FA800 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080FA804 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080FA808 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	movs r0, #7
	ands r2, r0
	ldrb r0, [r4]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, r3, #0
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r6, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bge _080FA80C
	adds r1, r5, #0
	adds r1, #0x83
	cmp r2, #1
	bgt _080FA818
	b _080FA814
	.align 2, 0
_080FA7FC: .4byte 0x00000103
_080FA800: .4byte gRngVal
_080FA804: .4byte 0x00196225
_080FA808: .4byte 0x3C6EF35F
_080FA80C:
	adds r1, r5, #0
	adds r1, #0x83
	cmp r2, #3
	bgt _080FA818
_080FA814:
	movs r0, #0x17
	strb r0, [r1]
_080FA818:
	ldrb r0, [r1]
	cmp r0, #0x1c
	bne _080FA824
	adds r0, r5, #0
	bl sub_080FE1D0
_080FA824:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FA82C
sub_080FA82C: @ 0x080FA82C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #0x1c
	beq _080FA8FC
	cmp r0, #0x1c
	bgt _080FA844
	cmp r0, #0x17
	beq _080FA84E
	b _080FA848
_080FA844:
	cmp r0, #0x1d
	beq _080FA924
_080FA848:
	adds r5, r4, #0
	adds r5, #0x9f
	b _080FA9D6
_080FA84E:
	ldrb r0, [r4, #1]
	cmp r0, #8
	beq _080FA858
	cmp r0, #0x16
	bne _080FA8C4
_080FA858:
	ldr r1, _080FA8E4 @ =gUnk_02020EE0
	ldr r0, _080FA8E8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FA8C4
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FA884
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FA8C4
_080FA884:
	ldr r1, _080FA8EC @ =gUnk_08D60FA4
	ldr r5, _080FA8F0 @ =gSongTable
	ldr r2, _080FA8F4 @ =0x00000D24
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FA8AA
	movs r1, #0xd2
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FA8C4
_080FA8AA:
	cmp r3, #0
	beq _080FA8BC
	ldr r0, _080FA8F8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FA8C4
_080FA8BC:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080FA8C4:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	adds r5, r4, #0
	adds r5, #0x9f
	cmp r0, #0
	bne _080FA8D4
	b _080FA9D6
_080FA8D4:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0x1c
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_080FE1D0
	b _080FA9D6
	.align 2, 0
_080FA8E4: .4byte gUnk_02020EE0
_080FA8E8: .4byte gUnk_0203AD3C
_080FA8EC: .4byte gUnk_08D60FA4
_080FA8F0: .4byte gSongTable
_080FA8F4: .4byte 0x00000D24
_080FA8F8: .4byte gUnk_0203AD10
_080FA8FC:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080FA90A
	movs r0, #0x1d
	strb r0, [r2]
_080FA90A:
	adds r0, r4, #0
	adds r0, #0xca
	ldrb r0, [r0]
	adds r5, r4, #0
	adds r5, #0x9f
	cmp r0, #1
	bls _080FA9D6
	ldr r2, _080FA920 @ =gUnk_083571BC
	ldrb r0, [r5]
	lsrs r0, r0, #2
	b _080FA9C0
	.align 2, 0
_080FA920: .4byte gUnk_083571BC
_080FA924:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080FA9AC
	adds r0, r4, #0
	adds r0, #0xca
	ldrb r0, [r0]
	cmp r0, #1
	beq _080FA9A4
	cmp r0, #1
	bgt _080FA94C
	cmp r0, #0
	beq _080FA958
	b _080FA9DC
_080FA94C:
	cmp r0, #3
	bgt _080FA9DC
	adds r0, r4, #0
	bl sub_080FB000
	b _080FA9DC
_080FA958:
	ldr r2, _080FA98C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080FA990 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080FA994 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FA99C
	ldr r1, [r4, #0x44]
	ldr r2, _080FA998 @ =0xFFFFF000
	adds r1, r1, r2
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #0x44]
	cmp r1, r0
	ble _080FA99C
	adds r0, r4, #0
	bl sub_081000C0
	b _080FA9DC
	.align 2, 0
_080FA98C: .4byte gRngVal
_080FA990: .4byte 0x00196225
_080FA994: .4byte 0x3C6EF35F
_080FA998: .4byte 0xFFFFF000
_080FA99C:
	adds r0, r4, #0
	bl sub_08100048
	b _080FA9DC
_080FA9A4:
	adds r0, r4, #0
	bl sub_08100094
	b _080FA9DC
_080FA9AC:
	adds r0, r4, #0
	adds r0, #0xca
	ldrb r0, [r0]
	adds r5, r4, #0
	adds r5, #0x9f
	cmp r0, #1
	bls _080FA9D6
	ldr r2, _080FA9E4 @ =gUnk_083571BC
	ldrb r0, [r5]
	lsrs r0, r0, #1
_080FA9C0:
	movs r1, #3
	ands r0, r1
	adds r0, r0, r2
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x54
	strb r1, [r0]
	adds r0, #0x60
	ldr r0, [r0]
	adds r0, #0x54
	strb r1, [r0]
_080FA9D6:
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
_080FA9DC:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080FA9E4: .4byte gUnk_083571BC

	thumb_func_start sub_080FA9E8
sub_080FA9E8: @ 0x080FA9E8
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r2, r5, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x48
	strh r0, [r2]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _080FAA06
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r2]
_080FAA06:
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FAA98
	adds r4, r5, #0
	adds r4, #0x3e
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	ldr r2, [r5, #0x40]
	adds r1, r2, r1
	adds r3, r5, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080FAA50 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080FAA54
	adds r2, r5, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	b _080FAAD4
	.align 2, 0
_080FAA50: .4byte 0xFFFFF800
_080FAA54:
	adds r3, r5, #0
	adds r3, #0x3c
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r5, #0
	adds r2, #0xa4
	movs r4, #0
	ldrsh r0, [r2, r4]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	adds r7, r5, #0
	adds r7, #0x62
	cmp r1, r0
	bgt _080FAB20
	ldrb r1, [r7]
	movs r0, #1
	orrs r0, r1
	strb r0, [r7]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	ldr r2, _080FAA94 @ =0xFFFFF800
	adds r0, r0, r2
	b _080FAB1C
	.align 2, 0
_080FAA94: .4byte 0xFFFFF800
_080FAA98:
	adds r4, r5, #0
	adds r4, #0x3c
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	ldr r2, [r5, #0x40]
	adds r1, r2, r1
	adds r3, r5, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080FAAE4
	adds r2, r5, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	ldr r3, _080FAAE0 @ =0xFFFFF800
_080FAAD4:
	adds r0, r0, r3
	subs r1, r1, r0
	str r1, [r5, #0x40]
	adds r7, r2, #0
	b _080FAB20
	.align 2, 0
_080FAAE0: .4byte 0xFFFFF800
_080FAAE4:
	adds r3, r5, #0
	adds r3, #0x3e
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r5, #0
	adds r2, #0xa8
	movs r4, #0
	ldrsh r0, [r2, r4]
	lsls r0, r0, #8
	ldr r4, _080FAC24 @ =0xFFFFF800
	adds r0, r0, r4
	adds r7, r5, #0
	adds r7, #0x62
	cmp r1, r0
	blt _080FAB20
	ldrb r1, [r7]
	movs r0, #1
	orrs r0, r1
	strb r0, [r7]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080FAB1C:
	subs r1, r1, r0
	str r1, [r5, #0x40]
_080FAB20:
	ldr r0, [r5, #8]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080FAB32
	adds r1, r5, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080FAB32:
	ldrb r0, [r5, #1]
	cmp r0, #8
	bne _080FABCC
	adds r6, r5, #0
	adds r6, #0x50
	movs r0, #0x38
	strh r0, [r6]
	movs r1, #8
	rsbs r1, r1, #0
	ldr r3, [r5, #8]
	movs r4, #1
	ands r3, r4
	adds r0, r5, #0
	movs r2, #8
	bl sub_08089864
	ldr r0, [r5, #8]
	ands r0, r4
	cmp r0, #0
	beq _080FAB60
	ldrh r0, [r6]
	rsbs r0, r0, #0
	strh r0, [r6]
_080FAB60:
	ldr r1, _080FAC28 @ =gUnk_02020EE0
	ldr r0, _080FAC2C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FABCC
	ldrb r0, [r5]
	cmp r0, #0
	bne _080FAB8C
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FABCC
_080FAB8C:
	ldr r1, _080FAC30 @ =gUnk_08D60FA4
	ldr r4, _080FAC34 @ =gSongTable
	ldr r2, _080FAC38 @ =0x00000D24
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FABB2
	movs r6, #0xd2
	lsls r6, r6, #4
	adds r0, r4, r6
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FABCC
_080FABB2:
	cmp r3, #0
	beq _080FABC4
	ldr r0, _080FAC3C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FABCC
_080FABC4:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080FABCC:
	ldrb r0, [r5, #1]
	cmp r0, #0xf
	bne _080FABE0
	adds r0, r5, #0
	adds r0, #0xac
	ldr r1, [r0]
	adds r0, r5, #0
	movs r2, #0
	bl sub_080FDC68
_080FABE0:
	ldrb r0, [r5, #1]
	cmp r0, #0x10
	bne _080FABEE
	adds r1, r5, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080FABEE:
	ldr r1, [r5, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080FAC4A
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080FAC4A
	movs r0, #0x20
	ands r1, r0
	cmp r1, #0
	beq _080FAC44
	ldr r2, _080FAC40 @ =sub_080F850C
	adds r0, r5, #0
	movs r1, #0xd
	bl ObjectSetFunc
	movs r0, #0xc
	strh r0, [r5, #4]
	adds r1, r5, #0
	adds r1, #0x9f
	movs r0, #1
	strb r0, [r1]
	b _080FAC4A
	.align 2, 0
_080FAC24: .4byte 0xFFFFF800
_080FAC28: .4byte gUnk_02020EE0
_080FAC2C: .4byte gUnk_0203AD3C
_080FAC30: .4byte gUnk_08D60FA4
_080FAC34: .4byte gSongTable
_080FAC38: .4byte 0x00000D24
_080FAC3C: .4byte gUnk_0203AD10
_080FAC40: .4byte sub_080F850C
_080FAC44:
	adds r0, r5, #0
	bl sub_080F7B34
_080FAC4A:
	ldrb r1, [r7]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080FAC5C
	adds r1, r5, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080FAC5C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FAC64
sub_080FAC64: @ 0x080FAC64
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FAD00
	movs r0, #0x3e
	adds r0, r0, r4
	mov ip, r0
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r5, #0
	ldrsh r0, [r3, r5]
	lsls r0, r0, #8
	ldr r6, _080FACB8 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080FACBC
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	mov r3, ip
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r0, r5
	b _080FAD3E
	.align 2, 0
_080FACB8: .4byte 0xFFFFF800
_080FACBC:
	adds r3, r4, #0
	adds r3, #0x3c
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa4
	movs r6, #0
	ldrsh r0, [r2, r6]
	lsls r0, r0, #8
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r0, r5
	adds r6, r4, #0
	adds r6, #0x62
	cmp r1, r0
	bgt _080FAD88
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	ldr r2, _080FACFC @ =0xFFFFF800
	adds r0, r0, r2
	b _080FAD84
	.align 2, 0
_080FACFC: .4byte 0xFFFFF800
_080FAD00:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	cmp r1, r0
	bgt _080FAD4C
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080FAD48 @ =0xFFFFF800
	adds r0, r0, r3
_080FAD3E:
	subs r1, r1, r0
	str r1, [r4, #0x40]
	adds r6, r2, #0
	b _080FAD88
	.align 2, 0
_080FAD48: .4byte 0xFFFFF800
_080FAD4C:
	adds r3, r4, #0
	adds r3, #0x3e
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa8
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	ldr r6, _080FAEE0 @ =0xFFFFF800
	adds r0, r0, r6
	adds r6, r4, #0
	adds r6, #0x62
	cmp r1, r0
	blt _080FAD88
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	adds r0, r0, r7
_080FAD84:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080FAD88:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0x17
	beq _080FAD96
	b _080FAEFC
_080FAD96:
	ldrb r0, [r4, #1]
	cmp r0, #4
	bne _080FADAE
	movs r1, #8
	rsbs r1, r1, #0
	ldr r3, [r4, #8]
	movs r0, #1
	ands r3, r0
	adds r0, r4, #0
	movs r2, #8
	bl sub_08089864
_080FADAE:
	ldrb r0, [r4, #1]
	cmp r0, #0x16
	bne _080FAE2E
	adds r0, r4, #0
	adds r0, #0xac
	ldr r1, [r0]
	adds r0, r4, #0
	movs r2, #1
	bl sub_080FDC68
	ldr r1, _080FAEE4 @ =gUnk_02020EE0
	ldr r0, _080FAEE8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FAE2E
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FADEE
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FAE2E
_080FADEE:
	ldr r1, _080FAEEC @ =gUnk_08D60FA4
	ldr r5, _080FAEF0 @ =gSongTable
	ldr r2, _080FAEF4 @ =0x00000D24
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FAE14
	movs r1, #0xd2
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FAE2E
_080FAE14:
	cmp r3, #0
	beq _080FAE26
	ldr r0, _080FAEF8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FAE2E
_080FAE26:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080FAE2E:
	ldrb r0, [r4, #1]
	cmp r0, #8
	bne _080FAEAE
	adds r0, r4, #0
	adds r0, #0xac
	ldr r1, [r0]
	adds r0, r4, #0
	movs r2, #1
	bl sub_080FDC68
	ldr r1, _080FAEE4 @ =gUnk_02020EE0
	ldr r0, _080FAEE8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FAEAE
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FAE6E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FAEAE
_080FAE6E:
	ldr r1, _080FAEEC @ =gUnk_08D60FA4
	ldr r5, _080FAEF0 @ =gSongTable
	ldr r2, _080FAEF4 @ =0x00000D24
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FAE94
	movs r1, #0xd2
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FAEAE
_080FAE94:
	cmp r3, #0
	beq _080FAEA6
	ldr r0, _080FAEF8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FAEAE
_080FAEA6:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080FAEAE:
	ldr r1, [r4, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080FAEBA
	b _080FAFD0
_080FAEBA:
	movs r0, #3
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r4, #8]
	movs r0, #0x16
	strb r0, [r7]
	adds r2, r4, #0
	adds r2, #0x50
	movs r3, #0x80
	lsls r3, r3, #2
	strh r3, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FAFD0
	rsbs r0, r3, #0
	strh r0, [r2]
	b _080FAFD0
	.align 2, 0
_080FAEE0: .4byte 0xFFFFF800
_080FAEE4: .4byte gUnk_02020EE0
_080FAEE8: .4byte gUnk_0203AD3C
_080FAEEC: .4byte gUnk_08D60FA4
_080FAEF0: .4byte gSongTable
_080FAEF4: .4byte 0x00000D24
_080FAEF8: .4byte gUnk_0203AD10
_080FAEFC:
	ldrb r0, [r4, #1]
	cmp r0, #8
	bne _080FAF86
	ldr r1, _080FAFE8 @ =gUnk_02020EE0
	ldr r0, _080FAFEC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FAF6E
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FAF2E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FAF6E
_080FAF2E:
	ldr r1, _080FAFF0 @ =gUnk_08D60FA4
	ldr r5, _080FAFF4 @ =gSongTable
	ldr r2, _080FAFF8 @ =0x00000D24
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FAF54
	movs r1, #0xd2
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FAF6E
_080FAF54:
	cmp r3, #0
	beq _080FAF66
	ldr r0, _080FAFFC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FAF6E
_080FAF66:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080FAF6E:
	adds r2, r4, #0
	adds r2, #0x50
	movs r3, #0xff
	lsls r3, r3, #8
	strh r3, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FAF86
	rsbs r0, r3, #0
	strh r0, [r2]
_080FAF86:
	ldrb r0, [r4, #1]
	cmp r0, #6
	bne _080FAF9A
	adds r0, r4, #0
	adds r0, #0xac
	ldr r1, [r0]
	adds r0, r4, #0
	movs r2, #1
	bl sub_080FDC68
_080FAF9A:
	ldrb r0, [r4, #1]
	cmp r0, #0x10
	bne _080FAFA8
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080FAFA8:
	ldrb r0, [r4, #1]
	cmp r0, #4
	bne _080FAFC0
	movs r1, #8
	rsbs r1, r1, #0
	ldr r3, [r4, #8]
	movs r0, #1
	ands r3, r0
	adds r0, r4, #0
	movs r2, #8
	bl sub_08089864
_080FAFC0:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080FAFD0
	adds r0, r4, #0
	bl sub_080F7B34
_080FAFD0:
	ldrb r1, [r6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080FAFE2
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080FAFE2:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080FAFE8: .4byte gUnk_02020EE0
_080FAFEC: .4byte gUnk_0203AD3C
_080FAFF0: .4byte gUnk_08D60FA4
_080FAFF4: .4byte gSongTable
_080FAFF8: .4byte 0x00000D24
_080FAFFC: .4byte gUnk_0203AD10

	thumb_func_start sub_080FB000
sub_080FB000: @ 0x080FB000
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _080FB040 @ =sub_080FB0C4
	movs r1, #0x10
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r3, [r4, #0x40]
	ldr r1, [r0, #0x40]
	subs r2, r3, r1
	cmp r2, #0
	blt _080FB044
	movs r0, #0x90
	lsls r0, r0, #7
	cmp r2, r0
	bgt _080FB052
	adds r2, r4, #0
	adds r2, #0xca
	b _080FB098
	.align 2, 0
_080FB040: .4byte sub_080FB0C4
_080FB044:
	subs r1, r1, r3
	movs r0, #0x90
	lsls r0, r0, #7
	adds r2, r4, #0
	adds r2, #0xca
	cmp r1, r0
	ble _080FB098
_080FB052:
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _080FB0A4 @ =gUnk_08351530
	ldr r0, _080FB0A8 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	blt _080FB08E
	ldr r2, _080FB0AC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080FB0B0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080FB0B4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	adds r2, r5, #0
	adds r2, #0xca
	cmp r0, #0
	beq _080FB098
_080FB08E:
	adds r1, r5, #0
	adds r1, #0xca
	movs r0, #3
	strb r0, [r1]
	adds r2, r1, #0
_080FB098:
	ldrb r0, [r2]
	cmp r0, #3
	bne _080FB0B8
	movs r0, #0x80
	b _080FB0BA
	.align 2, 0
_080FB0A4: .4byte gUnk_08351530
_080FB0A8: .4byte gUnk_0203AD30
_080FB0AC: .4byte gRngVal
_080FB0B0: .4byte 0x00196225
_080FB0B4: .4byte 0x3C6EF35F
_080FB0B8:
	movs r0, #0xac
_080FB0BA:
	strh r0, [r4, #4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FB0C4
sub_080FB0C4: @ 0x080FB0C4
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #0x10
	bne _080FB196
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080FB1C4
	movs r0, #0x12
	strb r0, [r2]
	subs r1, #0xa
	ldr r3, [r4, #8]
	movs r0, #1
	ands r3, r0
	adds r0, r4, #0
	movs r2, #8
	bl sub_08089864
	ldr r1, _080FB174 @ =gUnk_02020EE0
	ldr r0, _080FB178 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FB15E
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FB11E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FB15E
_080FB11E:
	ldr r1, _080FB17C @ =gUnk_08D60FA4
	ldr r5, _080FB180 @ =gSongTable
	ldr r2, _080FB184 @ =0x00000D24
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FB144
	movs r1, #0xd2
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FB15E
_080FB144:
	cmp r3, #0
	beq _080FB156
	ldr r0, _080FB188 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FB15E
_080FB156:
	movs r0, #0xd2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080FB15E:
	adds r0, r6, #0
	adds r0, #0xca
	ldrb r0, [r0]
	cmp r0, #3
	bne _080FB18C
	adds r0, r4, #0
	movs r1, #0
	bl sub_080FE5CC
	b _080FB1A8
	.align 2, 0
_080FB174: .4byte gUnk_02020EE0
_080FB178: .4byte gUnk_0203AD3C
_080FB17C: .4byte gUnk_08D60FA4
_080FB180: .4byte gSongTable
_080FB184: .4byte 0x00000D24
_080FB188: .4byte gUnk_0203AD10
_080FB18C:
	adds r0, r4, #0
	movs r1, #1
	bl sub_080FE5CC
	b _080FB1A8
_080FB196:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080FB1A8
	adds r0, r4, #0
	bl sub_080F7B34
_080FB1A8:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080FB1C4
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080FB1C4
	adds r0, r4, #0
	bl sub_080F7B34
_080FB1C4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FB1CC
sub_080FB1CC: @ 0x080FB1CC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	ldr r0, [r4, #8]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0xc9
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _080FB294 @ =gUnk_02020EE0
	ldr r0, _080FB298 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FB252
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FB212
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FB252
_080FB212:
	ldr r1, _080FB29C @ =gUnk_08D60FA4
	ldr r5, _080FB2A0 @ =gSongTable
	ldr r2, _080FB2A4 @ =0x00000D34
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FB238
	movs r1, #0xd3
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FB252
_080FB238:
	cmp r3, #0
	beq _080FB24A
	ldr r0, _080FB2A8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FB252
_080FB24A:
	movs r0, #0xd3
	lsls r0, r0, #1
	bl m4aSongNumStart
_080FB252:
	ldr r0, [r4, #0x78]
	ldr r2, _080FB2AC @ =sub_080FB2CC
	cmp r0, r2
	beq _080FB2C4
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x61
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	movs r1, #8
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r1, #0x60
	ands r0, r1
	cmp r0, #0
	beq _080FB2B0
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #9
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	b _080FB2BA
	.align 2, 0
_080FB294: .4byte gUnk_02020EE0
_080FB298: .4byte gUnk_0203AD3C
_080FB29C: .4byte gUnk_08D60FA4
_080FB2A0: .4byte gSongTable
_080FB2A4: .4byte 0x00000D34
_080FB2A8: .4byte gUnk_0203AD10
_080FB2AC: .4byte sub_080FB2CC
_080FB2B0:
	adds r1, r6, #0
	adds r1, #0xc6
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080FB2BA:
	movs r0, #0x14
	strh r0, [r4, #4]
	adds r0, r4, #0
	bl sub_080FFBC0
_080FB2C4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FB2CC
sub_080FB2CC: @ 0x080FB2CC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FB360
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _080FB318 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _080FB31C
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r3, #0x80
	lsls r3, r3, #4
	b _080FB39C
	.align 2, 0
_080FB318: .4byte 0xFFFFF800
_080FB31C:
	adds r3, r4, #0
	adds r3, #0x3c
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa4
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	adds r5, r4, #0
	adds r5, #0x62
	cmp r1, r0
	bgt _080FB3E8
	ldrb r1, [r5]
	movs r0, #1
	orrs r0, r1
	strb r0, [r5]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	ldr r2, _080FB35C @ =0xFFFFF800
	adds r0, r0, r2
	b _080FB3E4
	.align 2, 0
_080FB35C: .4byte 0xFFFFF800
_080FB360:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _080FB3AC
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r3, _080FB3A8 @ =0xFFFFF800
_080FB39C:
	adds r0, r0, r3
	subs r1, r1, r0
	str r1, [r4, #0x40]
	adds r5, r2, #0
	b _080FB3E8
	.align 2, 0
_080FB3A8: .4byte 0xFFFFF800
_080FB3AC:
	adds r3, r4, #0
	adds r3, #0x3e
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r4, #0
	adds r2, #0xa8
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	ldr r5, _080FB414 @ =0xFFFFF800
	adds r0, r0, r5
	adds r5, r4, #0
	adds r5, #0x62
	cmp r1, r0
	blt _080FB3E8
	ldrb r1, [r5]
	movs r0, #1
	orrs r0, r1
	strb r0, [r5]
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_080FB3E4:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_080FB3E8:
	ldr r0, [r4, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #7
	orrs r0, r1
	str r0, [r4, #0x5c]
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r3, r0, #0
	cmp r1, #8
	bne _080FB45C
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0xb
	ble _080FB418
	adds r2, r4, #0
	adds r2, #0x50
	movs r3, #0xff
	lsls r3, r3, #8
	b _080FB424
	.align 2, 0
_080FB414: .4byte 0xFFFFF800
_080FB418:
	cmp r0, #3
	ble _080FB436
	adds r2, r4, #0
	adds r2, #0x50
	movs r3, #0xfe
	lsls r3, r3, #8
_080FB424:
	strh r3, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FB4AC
	rsbs r0, r3, #0
	strh r0, [r2]
	b _080FB4AC
_080FB436:
	ldr r1, _080FB458 @ =gUnk_083571B4
	movs r2, #4
	ldrsh r0, [r4, r2]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r2, [r0]
	adds r3, r4, #0
	adds r3, #0x50
	strh r2, [r3]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FB4AC
	rsbs r0, r2, #0
	strh r0, [r3]
	b _080FB4AC
	.align 2, 0
_080FB458: .4byte gUnk_083571B4
_080FB45C:
	ldrh r0, [r4, #4]
	lsls r1, r0, #0x10
	asrs r0, r1, #0x10
	cmp r0, #3
	ble _080FB494
	ldr r2, _080FB4CC @ =gUnk_083571B4
	asrs r0, r1, #0x11
	movs r1, #3
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x19
	adds r2, r4, #0
	adds r2, #0x54
	strb r0, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FB494
	movs r0, #0
	ldrsb r0, [r2, r0]
	rsbs r0, r0, #0
	adds r1, r4, #0
	adds r1, #0x50
	strh r0, [r1]
_080FB494:
	ldrb r1, [r5]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080FB4AC
	movs r0, #8
	strb r0, [r3]
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
_080FB4AC:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080FB4EC
	ldrb r1, [r5]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080FB4D0
	adds r0, r4, #0
	bl sub_080F7A60
	b _080FB4FE
	.align 2, 0
_080FB4CC: .4byte gUnk_083571B4
_080FB4D0:
	ldr r2, _080FB4E8 @ =sub_080F850C
	adds r0, r4, #0
	movs r1, #0xd
	bl ObjectSetFunc
	movs r0, #0xc
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #1
	strb r0, [r1]
	b _080FB4FE
	.align 2, 0
_080FB4E8: .4byte sub_080F850C
_080FB4EC:
	ldrb r1, [r5]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080FB4FE
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080FB4FE:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080FB504
sub_080FB504: @ 0x080FB504
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	adds r5, r3, #0
	ldr r0, _080FB574 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FB524
	b _080FB68C
_080FB524:
	ldr r1, [r3, #8]
	movs r0, #0x80
	lsls r0, r0, #0xb
	ands r0, r1
	cmp r0, #0
	beq _080FB5BE
	ldr r0, _080FB578 @ =0xFFFBFFFF
	ands r1, r0
	str r1, [r3, #8]
	ldr r2, [r3, #0x6c]
	cmp r2, #0
	bne _080FB542
	ldr r0, [r2, #0x70]
	cmp r0, #0
	beq _080FB5BE
_080FB542:
	ldr r1, [r2, #0x70]
	ldrb r0, [r1]
	cmp r0, #0
	bne _080FB57C
	adds r0, r1, #0
	adds r0, #0xd4
	ldrh r1, [r0]
	adds r0, r1, #0
	subs r0, #0xd
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bls _080FB560
	cmp r1, #0x28
	bne _080FB57C
_080FB560:
	adds r0, r3, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #0xf
	bhi _080FB57C
	adds r0, r3, #0
	bl sub_080F738C
	b _080FB68C
	.align 2, 0
_080FB574: .4byte gUnk_03000510
_080FB578: .4byte 0xFFFBFFFF
_080FB57C:
	ldr r0, [r3, #0x5c]
	movs r4, #7
	ands r0, r4
	cmp r0, #6
	bls _080FB5BE
	ldr r1, [r2, #0x68]
	ldr r0, _080FB5A8 @ =0x003FFFF8
	ands r0, r1
	cmp r0, #0
	beq _080FB5BE
	ands r1, r4
	cmp r1, #2
	bls _080FB5BE
	ldr r1, [r2, #0x40]
	ldr r0, [r3, #0x40]
	cmp r1, r0
	bge _080FB5AC
	ldr r0, [r3, #8]
	movs r1, #1
	orrs r0, r1
	b _080FB5B4
	.align 2, 0
_080FB5A8: .4byte 0x003FFFF8
_080FB5AC:
	ldr r0, [r3, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_080FB5B4:
	str r0, [r3, #8]
	adds r0, r3, #0
	bl sub_080FB1CC
	b _080FB68C
_080FB5BE:
	adds r0, r3, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #0xe
	bhi _080FB67E
	adds r0, r5, #0
	adds r0, #0xc6
	ldrb r0, [r0]
	cmp r0, #1
	bls _080FB5DC
	ldr r0, [r3, #8]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080FB67E
_080FB5DC:
	ldr r2, _080FB62C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _080FB630 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080FB634 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r6, r0, #0x10
	movs r7, #7
	ands r6, r7
	mov ip, r6
	adds r5, r3, #0
	adds r5, #0x80
	ldr r1, _080FB638 @ =gUnk_08351530
	ldr r0, _080FB63C @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x80
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r2, r0, #0x10
	movs r1, #0
	ldrsh r0, [r5, r1]
	asrs r4, r2, #0x11
	cmp r0, r4
	bge _080FB650
	adds r1, r0, #0
	asrs r0, r2, #0x12
	subs r0, r4, r0
	cmp r1, r0
	bge _080FB640
	cmp r6, #0
	bne _080FB67E
	ldr r0, [r3, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	orrs r0, r7
	b _080FB68A
	.align 2, 0
_080FB62C: .4byte gRngVal
_080FB630: .4byte 0x00196225
_080FB634: .4byte 0x3C6EF35F
_080FB638: .4byte gUnk_08351530
_080FB63C: .4byte gUnk_0203AD30
_080FB640:
	cmp r6, #0
	bne _080FB67E
	ldr r0, [r3, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	orrs r0, r7
	b _080FB68A
_080FB650:
	movs r0, #0
	ldrsh r1, [r5, r0]
	asrs r0, r2, #0x12
	adds r0, r4, r0
	cmp r1, r0
	bge _080FB66C
	cmp r6, #1
	bhi _080FB67E
	ldr r0, [r3, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	orrs r0, r7
	b _080FB68A
_080FB66C:
	mov r1, ip
	cmp r1, #1
	bhi _080FB67E
	ldr r0, [r3, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	orrs r0, r7
	b _080FB68A
_080FB67E:
	ldr r0, [r3, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #3
	orrs r0, r1
_080FB68A:
	str r0, [r3, #0x5c]
_080FB68C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FB694
sub_080FB694: @ 0x080FB694
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _080FB6AA
	adds r0, r4, #0
	bl sub_0810010C
	b _080FB6F4
_080FB6AA:
	ldr r2, _080FB6FC @ =sub_080FB700
	adds r0, r4, #0
	movs r1, #0x22
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x50
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r2]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xc0
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FB6D8
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_080FB6D8:
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #0x3e
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
_080FB6F4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080FB6FC: .4byte sub_080FB700

	thumb_func_start sub_080FB700
sub_080FB700: @ 0x080FB700
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r5, r0, #0
	mov r8, r5
	ldr r0, [r5, #8]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	bne _080FB730
	adds r2, r5, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x3b
	strh r0, [r2]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _080FB730
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r2]
_080FB730:
	adds r1, r5, #0
	adds r1, #0x83
	ldrb r0, [r1]
	subs r0, #0x22
	adds r6, r1, #0
	cmp r0, #5
	bls _080FB740
	b _080FB9F0
_080FB740:
	lsls r0, r0, #2
	ldr r1, _080FB74C @ =_080FB750
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080FB74C: .4byte _080FB750
_080FB750: @ jump table
	.4byte _080FB768 @ case 0
	.4byte _080FB8D8 @ case 1
	.4byte _080FB8F4 @ case 2
	.4byte _080FB910 @ case 3
	.4byte _080FB9B0 @ case 4
	.4byte _080FB9D8 @ case 5
_080FB768:
	adds r0, r5, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0
	bne _080FB77E
	adds r0, r5, #0
	bl sub_080FD590
	movs r0, #1
	strb r0, [r7]
_080FB77E:
	ldrb r0, [r5, #1]
	cmp r0, #0x22
	bne _080FB7F6
	adds r0, r5, #0
	bl sub_080FC9C8
	ldr r1, _080FB8BC @ =gUnk_02020EE0
	ldr r0, _080FB8C0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FB7F6
	ldrb r0, [r5]
	cmp r0, #0
	bne _080FB7B6
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FB7F6
_080FB7B6:
	ldr r1, _080FB8C4 @ =gUnk_08D60FA4
	ldr r4, _080FB8C8 @ =gSongTable
	ldr r2, _080FB8CC @ =0x000010C4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FB7DC
	movs r1, #0x86
	lsls r1, r1, #5
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FB7F6
_080FB7DC:
	cmp r3, #0
	beq _080FB7EE
	ldr r0, _080FB8D0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FB7F6
_080FB7EE:
	movs r0, #0x86
	lsls r0, r0, #2
	bl m4aSongNumStart
_080FB7F6:
	ldrb r0, [r5, #1]
	cmp r0, #0x22
	bls _080FB866
	ldr r2, _080FB8BC @ =gUnk_02020EE0
	ldr r0, _080FB8C0 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FB852
	adds r0, r5, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	movs r1, #0xe4
	lsls r1, r1, #2
	movs r4, #0xe5
	lsls r4, r4, #2
	movs r2, #0
	str r2, [sp]
	ldrh r2, [r5, #4]
	str r2, [sp, #4]
	movs r2, #0
	adds r3, r4, #0
	bl sub_0803CD98
	mov r0, r8
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x2f
	ldrb r0, [r0]
	ldr r1, _080FB8D4 @ =0x00000391
	movs r2, #2
	str r2, [sp]
	ldrh r2, [r5, #4]
	str r2, [sp, #4]
	movs r2, #0
	adds r3, r4, #0
	bl sub_0803CD98
_080FB852:
	ldrh r0, [r5, #4]
	adds r0, #4
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #1
	cmp r0, r1
	ble _080FB866
	strh r1, [r5, #4]
_080FB866:
	ldr r0, [r5, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080FB898
	movs r2, #4
	ldrsh r1, [r5, r2]
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r1, r0
	bne _080FB898
	movs r0, #0x23
	strb r0, [r6]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r2, r5, #0
	adds r2, #0x52
	movs r1, #0
	movs r0, #0x84
	lsls r0, r0, #3
	strh r0, [r2]
	strb r1, [r7]
_080FB898:
	ldrb r0, [r5, #1]
	cmp r0, #7
	bhi _080FB8A0
	b _080FB9F0
_080FB8A0:
	adds r0, r5, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080FB8B0
	b _080FB9F0
_080FB8B0:
	adds r1, r5, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	b _080FB9F0
	.align 2, 0
_080FB8BC: .4byte gUnk_02020EE0
_080FB8C0: .4byte gUnk_0203AD3C
_080FB8C4: .4byte gUnk_08D60FA4
_080FB8C8: .4byte gSongTable
_080FB8CC: .4byte 0x000010C4
_080FB8D0: .4byte gUnk_0203AD10
_080FB8D4: .4byte 0x00000391
_080FB8D8:
	adds r0, r5, #0
	adds r0, #0x52
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x3f
	ble _080FB8E6
	b _080FB9F0
_080FB8E6:
	movs r0, #0x24
	strb r0, [r6]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	b _080FB9EE
_080FB8F4:
	ldr r0, [r5, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080FB9F0
	movs r2, #0
	movs r0, #0x25
	strb r0, [r6]
	ldr r0, [r5, #8]
	subs r1, #5
	ands r0, r1
	str r0, [r5, #8]
	strh r2, [r5, #4]
	b _080FB9F0
_080FB910:
	adds r0, r5, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080FB9F0
	ldr r1, _080FB998 @ =gUnk_02020EE0
	ldr r0, _080FB99C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FB98A
	ldrb r0, [r5]
	cmp r0, #0
	bne _080FB94A
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FB98A
_080FB94A:
	ldr r1, _080FB9A0 @ =gUnk_08D60FA4
	ldr r4, _080FB9A4 @ =gSongTable
	ldr r2, _080FB9A8 @ =0x00001264
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FB970
	movs r1, #0x93
	lsls r1, r1, #5
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FB98A
_080FB970:
	cmp r3, #0
	beq _080FB982
	ldr r0, _080FB9AC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FB98A
_080FB982:
	movs r0, #0x93
	lsls r0, r0, #2
	bl m4aSongNumStart
_080FB98A:
	movs r0, #0x26
	strb r0, [r6]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	b _080FB9EE
	.align 2, 0
_080FB998: .4byte gUnk_02020EE0
_080FB99C: .4byte gUnk_0203AD3C
_080FB9A0: .4byte gUnk_08D60FA4
_080FB9A4: .4byte gSongTable
_080FB9A8: .4byte 0x00001264
_080FB9AC: .4byte gUnk_0203AD10
_080FB9B0:
	ldrb r0, [r5, #1]
	cmp r0, #0x2a
	bls _080FB9F0
	movs r2, #0
	movs r0, #0x27
	strb r0, [r6]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r1]
	strh r2, [r5, #4]
	ldr r0, [r5, #8]
	movs r1, #0x40
	b _080FB9EC
_080FB9D8:
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x5a
	ble _080FB9F0
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #5
_080FB9EC:
	orrs r0, r1
_080FB9EE:
	str r0, [r5, #8]
_080FB9F0:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080FB9FC
sub_080FB9FC: @ 0x080FB9FC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	adds r7, r0, #0
	str r7, [sp, #0x28]
	ldr r0, [r7, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FBAA0
	adds r4, r7, #0
	adds r4, #0x3e
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	ldr r2, [r7, #0x40]
	adds r1, r2, r1
	adds r3, r7, #0
	adds r3, #0xa8
	movs r5, #0
	ldrsh r0, [r3, r5]
	lsls r0, r0, #8
	ldr r5, _080FBA58 @ =0xFFFFF800
	adds r0, r0, r5
	cmp r1, r0
	blt _080FBA5C
	adds r2, r7, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	b _080FBB1C
	.align 2, 0
_080FBA58: .4byte 0xFFFFF800
_080FBA5C:
	adds r4, r7, #0
	adds r4, #0x3c
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r7, #0
	adds r3, #0xa4
	movs r5, #0
	ldrsh r0, [r3, r5]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	cmp r1, r0
	bgt _080FBB20
	adds r2, r7, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r5, #0
	ldrsh r1, [r3, r5]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	ldr r2, _080FBA9C @ =0xFFFFF800
	adds r0, r0, r2
	b _080FBB1C
	.align 2, 0
_080FBA9C: .4byte 0xFFFFF800
_080FBAA0:
	adds r4, r7, #0
	adds r4, #0x3c
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	ldr r2, [r7, #0x40]
	adds r1, r2, r1
	adds r3, r7, #0
	adds r3, #0xa4
	movs r5, #0
	ldrsh r0, [r3, r5]
	lsls r0, r0, #8
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r0, r5
	cmp r1, r0
	bgt _080FBAE4
	adds r2, r7, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	ldr r2, _080FBAE0 @ =0xFFFFF800
	adds r0, r0, r2
	b _080FBB1C
	.align 2, 0
_080FBAE0: .4byte 0xFFFFF800
_080FBAE4:
	adds r4, r7, #0
	adds r4, #0x3e
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r7, #0
	adds r3, #0xa8
	movs r2, #0
	ldrsh r0, [r3, r2]
	lsls r0, r0, #8
	ldr r2, _080FBB34 @ =0xFFFFF800
	adds r0, r0, r2
	cmp r1, r0
	blt _080FBB20
	adds r2, r7, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	adds r0, r0, r5
_080FBB1C:
	subs r1, r1, r0
	str r1, [r7, #0x40]
_080FBB20:
	adds r0, r7, #0
	adds r0, #0x83
	ldrb r1, [r0]
	mov sl, r0
	cmp r1, #0x2a
	beq _080FBB38
	cmp r1, #0x2b
	bne _080FBB32
	b _080FBD7C
_080FBB32:
	b _080FBFC0
	.align 2, 0
_080FBB34: .4byte 0xFFFFF800
_080FBB38:
	ldrh r0, [r7, #4]
	adds r0, #1
	movs r3, #0
	strh r0, [r7, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2f
	bgt _080FBB96
	adds r1, r7, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _080FBB84 @ =0xFFFFFEF0
	cmp r0, r2
	bge _080FBB5E
	strh r2, [r1]
_080FBB5E:
	movs r1, #4
	ldrsh r0, [r7, r1]
	cmp r0, #0x10
	ble _080FBB96
	adds r1, r7, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080FBB88
	adds r0, r2, #0
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080FBB96
	b _080FBB94
	.align 2, 0
_080FBB84: .4byte 0xFFFFFEF0
_080FBB88:
	adds r0, r2, #0
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080FBB96
_080FBB94:
	strh r3, [r1]
_080FBB96:
	movs r5, #4
	ldrsh r0, [r7, r5]
	cmp r0, #0x30
	bne _080FBBBA
	adds r0, r7, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r0, #1
	adds r1, r7, #0
	bl sub_0806FE64
	ldr r1, _080FBC1C @ =gUnk_0835719C
	adds r0, r7, #0
	bl sub_080860A8
_080FBBBA:
	ldrh r0, [r7, #4]
	lsls r1, r0, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0x8f
	ble _080FBC00
	ldr r2, _080FBC20 @ =gUnk_083571BC
	asrs r0, r1, #0x12
	movs r1, #3
	ands r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r3, r7, #0
	adds r3, #0x54
	strb r0, [r3]
	movs r1, #4
	ldrsh r0, [r7, r1]
	adds r0, #1
	asrs r0, r0, #2
	movs r1, #3
	ands r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r4, r7, #0
	adds r4, #0x55
	strb r0, [r4]
	ldr r2, [sp, #0x28]
	adds r2, #0xb4
	ldr r0, [r2]
	ldrb r1, [r3]
	adds r0, #0x54
	strb r1, [r0]
	ldr r0, [r2]
	ldrb r1, [r4]
	adds r0, #0x55
	strb r1, [r0]
_080FBC00:
	movs r2, #4
	ldrsh r0, [r7, r2]
	cmp r0, #0xcf
	bgt _080FBC0A
	b _080FBFC0
_080FBC0A:
	movs r3, #1
	mov sb, r3
	ldr r1, _080FBC1C @ =gUnk_0835719C
	adds r0, r7, #0
	bl sub_080860A8
	movs r5, #0
	b _080FBCF6
	.align 2, 0
_080FBC1C: .4byte gUnk_0835719C
_080FBC20: .4byte gUnk_083571BC
_080FBC24:
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r1, r5, #0
	muls r1, r0, r1
	ldr r0, _080FBC8C @ =gUnk_02020EE0
	adds r4, r1, r0
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080FBCF0
	adds r0, r4, #0
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FBCF0
	adds r0, r4, #0
	bl sub_0805BEC4
	cmp r0, #0
	bne _080FBCF0
	ldr r2, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x11
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _080FBCF0
	orrs r1, r2
	str r1, [r4, #8]
	ldr r3, _080FBC90 @ =0x00000103
	adds r2, r4, r3
	ldrb r0, [r2]
	cmp r0, #0xe
	beq _080FBC7E
	movs r0, #0x41
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r4, #8]
_080FBC7E:
	ldrb r0, [r2]
	cmp r0, #0xb
	bne _080FBC94
	adds r0, r4, #0
	bl sub_080641FC
	b _080FBCF0
	.align 2, 0
_080FBC8C: .4byte gUnk_02020EE0
_080FBC90: .4byte 0x00000103
_080FBC94:
	cmp r0, #0xe
	bne _080FBCA0
	adds r0, r4, #0
	bl sub_0806A798
	b _080FBCF0
_080FBCA0:
	cmp r0, #0x13
	bne _080FBCC6
	ldr r1, [r4, #8]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080FBCB6
	adds r0, r4, #0
	bl sub_08047EF0
	b _080FBCF0
_080FBCB6:
	movs r0, #0x60
	ands r1, r0
	cmp r1, #0
	bne _080FBCE2
	adds r0, r4, #0
	bl sub_0803FE74
	b _080FBCF0
_080FBCC6:
	ldr r0, [r4, #0x58]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080FBCD8
	adds r0, r4, #0
	bl sub_08059810
	b _080FBCF0
_080FBCD8:
	ldr r0, [r4, #8]
	movs r1, #0x60
	ands r0, r1
	cmp r0, #0
	beq _080FBCEA
_080FBCE2:
	adds r0, r4, #0
	bl sub_08044EA8
	b _080FBCF0
_080FBCEA:
	adds r0, r4, #0
	bl sub_0803FE74
_080FBCF0:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_080FBCF6:
	ldr r0, _080FBD70 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r5, r0
	blo _080FBC24
	movs r5, #0
	ldr r0, _080FBD70 @ =gUnk_0203AD44
	ldrb r1, [r0]
	cmp r5, r1
	bhs _080FBD56
	adds r0, r7, #0
	adds r0, #0x60
	ldrh r4, [r0]
	ldr r0, _080FBD74 @ =gUnk_0202371C
	mov r8, r0
	ldr r6, _080FBD78 @ =gUnk_02020EE0
	adds r3, r1, #0
_080FBD16:
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r5, r0
	adds r2, r0, r6
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	cmp r0, r4
	bne _080FBD4C
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #0x11
	ands r0, r1
	cmp r0, #0
	bne _080FBD4C
	adds r0, r2, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	add r0, r8
	ldr r0, [r0]
	cmp r0, #4
	beq _080FBD4C
	movs r1, #0
	mov sb, r1
_080FBD4C:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r3
	blo _080FBD16
_080FBD56:
	mov r2, sb
	cmp r2, #0
	bne _080FBD5E
	b _080FBFC0
_080FBD5E:
	movs r0, #0x2b
	mov r3, sl
	strb r0, [r3]
	ldr r0, [r7, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r7, #8]
	b _080FBFC0
	.align 2, 0
_080FBD70: .4byte gUnk_0203AD44
_080FBD74: .4byte gUnk_0202371C
_080FBD78: .4byte gUnk_02020EE0
_080FBD7C:
	ldrb r0, [r7, #1]
	cmp r0, #0x10
	bne _080FBDF2
	movs r0, #3
	adds r1, r7, #0
	bl sub_0806FE64
	ldr r1, _080FBEC8 @ =gUnk_02020EE0
	ldr r0, _080FBECC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FBDF2
	ldrb r0, [r7]
	cmp r0, #0
	bne _080FBDB6
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FBDF2
_080FBDB6:
	ldr r1, _080FBED0 @ =gUnk_08D60FA4
	ldr r4, _080FBED4 @ =gSongTable
	ldr r5, _080FBED8 @ =0x000010CC
	adds r0, r4, r5
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FBDDA
	ldr r1, _080FBEDC @ =0x000010C8
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FBDF2
_080FBDDA:
	cmp r3, #0
	beq _080FBDEC
	ldr r0, _080FBEE0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FBDF2
_080FBDEC:
	ldr r0, _080FBEE4 @ =0x00000219
	bl m4aSongNumStart
_080FBDF2:
	ldr r0, [r7, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080FBDFE
	b _080FBFC0
_080FBDFE:
	ldr r2, _080FBEC8 @ =gUnk_02020EE0
	ldr r0, _080FBECC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x60
	ldrh r0, [r0]
	str r1, [sp, #0x2c]
	ldrh r2, [r1]
	cmp r0, r2
	bne _080FBEBE
	movs r3, #0xc0
	lsls r3, r3, #0x13
	mov sb, r3
	str r3, [sp]
	mov r1, sp
	movs r4, #0
	mov sl, r4
	movs r4, #0
	movs r0, #0xe4
	lsls r0, r0, #2
	strh r0, [r1, #0xc]
	mov r0, sp
	mov r5, sl
	strb r5, [r0, #0x1a]
	movs r0, #0xff
	strb r0, [r1, #0x1b]
	mov r0, sp
	strh r4, [r0, #0x10]
	strh r4, [r0, #0x12]
	strh r4, [r0, #0x14]
	strh r4, [r0, #0x16]
	movs r6, #0x10
	strb r6, [r0, #0x1c]
	mov r2, sp
	adds r0, r7, #0
	adds r0, #0x2f
	ldrb r1, [r0]
	movs r5, #0xf
	adds r0, r5, #0
	ands r0, r1
	strb r0, [r2, #0x1f]
	movs r0, #0x80
	lsls r0, r0, #0xc
	mov r8, r0
	str r0, [sp, #8]
	mov r0, sp
	bl sub_08155128
	mov r0, sp
	ldrb r0, [r0, #0x1f]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	movs r1, #0x10
	bl sub_0803D280
	mov r1, sb
	str r1, [sp]
	mov r1, sp
	ldr r0, _080FBEE8 @ =0x00000391
	strh r0, [r1, #0xc]
	mov r0, sp
	mov r2, sl
	strb r2, [r0, #0x1a]
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1, #0x1b]
	mov r0, sp
	strh r4, [r0, #0x10]
	strh r4, [r0, #0x12]
	strh r4, [r0, #0x14]
	strh r4, [r0, #0x16]
	strb r6, [r0, #0x1c]
	ldr r0, [sp, #0x28]
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x2f
	ldrb r0, [r0]
	ands r5, r0
	strb r5, [r1, #0x1f]
	mov r3, r8
	str r3, [sp, #8]
	mov r0, sp
	bl sub_08155128
	mov r0, sp
	ldrb r0, [r0, #0x1f]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	movs r1, #0x10
	bl sub_0803D280
_080FBEBE:
	movs r5, #0
	ldr r0, _080FBEEC @ =gUnk_0203AD44
	adds r6, r7, #0
	adds r6, #0x56
	b _080FBF28
	.align 2, 0
_080FBEC8: .4byte gUnk_02020EE0
_080FBECC: .4byte gUnk_0203AD3C
_080FBED0: .4byte gUnk_08D60FA4
_080FBED4: .4byte gSongTable
_080FBED8: .4byte 0x000010CC
_080FBEDC: .4byte 0x000010C8
_080FBEE0: .4byte gUnk_0203AD10
_080FBEE4: .4byte 0x00000219
_080FBEE8: .4byte 0x00000391
_080FBEEC: .4byte gUnk_0203AD44
_080FBEF0:
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r1, r5, #0
	muls r1, r0, r1
	ldr r0, _080FBF40 @ =gUnk_02020EE0
	adds r1, r1, r0
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r1, r4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080FBF20
	adds r0, r1, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r2, [sp, #0x2c]
	ldrh r2, [r2]
	cmp r0, r2
	bne _080FBF20
	adds r0, r1, #0
	bl sub_0804BAD8
_080FBF20:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _080FBF44 @ =gUnk_0203AD44
_080FBF28:
	ldrb r0, [r0]
	cmp r5, r0
	blo _080FBEF0
	movs r4, #0
	ldr r1, _080FBF48 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r5, _080FBF4C @ =gUnk_020229E0
	b _080FBF64
	.align 2, 0
_080FBF40: .4byte gUnk_02020EE0
_080FBF44: .4byte gUnk_0203AD44
_080FBF48: .4byte gUnk_020229D4
_080FBF4C: .4byte gUnk_020229E0
_080FBF50:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _080FBF6C
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_080FBF64:
	cmp r0, #0
	bne _080FBF50
	orrs r2, r3
	str r2, [r1]
_080FBF6C:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r5
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	strh r2, [r1, #6]
	strh r2, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0x8e
	strb r0, [r1, #0xc]
	movs r0, #5
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	strb r3, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldrb r0, [r6]
	bl CreateObject
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r7, #8]
	b _080FBFD6
_080FBFC0:
	adds r0, r7, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080FBFD6
	adds r1, r7, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
_080FBFD6:
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FBFE8
sub_080FBFE8: @ 0x080FBFE8
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080FC018 @ =sub_080FC150
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080FC01C @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FC020
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FC028
	.align 2, 0
_080FC018: .4byte sub_080FC150
_080FC01C: .4byte sub_0803DCCC
_080FC020:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FC028:
	adds r4, r0, #0
	bl sub_0803E380
	movs r6, #0
	movs r0, #2
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	str r5, [r4, #0x70]
	strh r6, [r4, #4]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x60
	strh r1, [r0]
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _080FC0AC @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r3, #1
	adds r0, r3, #0
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FC078
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
_080FC078:
	adds r0, r4, #0
	adds r0, #0x64
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	subs r0, #3
	strb r3, [r0]
	ldr r2, [r4, #8]
	ldr r0, _080FC0B0 @ =0x50400100
	orrs r2, r0
	ldr r0, [r4, #0x68]
	ldr r1, _080FC0B4 @ =0x20002003
	orrs r0, r1
	str r0, [r4, #0x68]
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r2, r0
	str r2, [r4, #8]
	ldr r0, [r5, #8]
	ands r0, r3
	cmp r0, #0
	beq _080FC0B8
	movs r0, #2
	rsbs r0, r0, #0
	ands r2, r0
	b _080FC0BA
	.align 2, 0
_080FC0AC: .4byte gUnk_03000510
_080FC0B0: .4byte 0x50400100
_080FC0B4: .4byte 0x20002003
_080FC0B8:
	orrs r2, r3
_080FC0BA:
	str r2, [r4, #8]
	movs r6, #0
	str r6, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_0803E2B0
	str r6, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_0803E308
	adds r1, r4, #0
	adds r1, #0x10
	ldr r0, _080FC134 @ =gUnk_083570EC
	ldrh r3, [r0]
	ldrb r0, [r0, #2]
	str r0, [sp]
	movs r0, #0x1c
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x30
	bl sub_080708DC
	adds r5, r4, #0
	adds r5, #0x2f
	strb r6, [r5]
	ldr r2, _080FC138 @ =gUnk_02020EE0
	ldr r0, _080FC13C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FC144
	ldr r6, _080FC140 @ =0x00000391
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FC146
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080FC146
	.align 2, 0
_080FC134: .4byte gUnk_083570EC
_080FC138: .4byte gUnk_02020EE0
_080FC13C: .4byte gUnk_0203AD3C
_080FC140: .4byte 0x00000391
_080FC144:
	strb r6, [r5]
_080FC146:
	adds r0, r4, #0
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_080FC150
sub_080FC150: @ 0x080FC150
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	ldr r2, _080FC178 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FC17C
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FC184
	.align 2, 0
_080FC178: .4byte gCurTask
_080FC17C:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FC184:
	adds r5, r0, #0
	adds r6, r5, #0
	adds r6, #0x10
	ldr r0, [r5, #0x70]
	mov r8, r0
	ldr r1, [r5, #8]
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080FC1A4
	ldr r0, [r2]
	bl TaskDestroy
	b _080FC5DE
_080FC1A4:
	mov r2, r8
	ldr r0, [r2, #8]
	ands r0, r3
	cmp r0, #0
	beq _080FC1B4
	orrs r1, r3
	str r1, [r5, #8]
	b _080FC5DE
_080FC1B4:
	ldr r2, _080FC27C @ =0xFFFFFBF6
	ands r2, r1
	str r2, [r5, #8]
	mov r3, r8
	ldr r1, [r3, #8]
	ldr r0, _080FC280 @ =0x0000040C
	ands r1, r0
	orrs r1, r2
	str r1, [r5, #8]
	ldr r3, [r3, #8]
	movs r2, #1
	adds r0, r2, #0
	bics r0, r3
	orrs r1, r0
	str r1, [r5, #8]
	mov r0, r8
	adds r0, #0x60
	ldrh r0, [r0]
	adds r4, r5, #0
	adds r4, #0x60
	strh r0, [r4]
	mov r1, r8
	ldr r0, [r1, #0x40]
	str r0, [r5, #0x40]
	ldr r0, [r1, #0x44]
	str r0, [r5, #0x44]
	ldr r0, _080FC284 @ =gUnk_03000510
	ldrb r1, [r0, #4]
	adds r3, r5, #0
	adds r3, #0x56
	ldrb r0, [r3]
	lsls r2, r0
	movs r0, #0x10
	orrs r2, r0
	ands r1, r2
	mov sl, r4
	str r3, [sp, #0x28]
	cmp r1, #0
	beq _080FC21A
	mov r0, r8
	adds r0, #0x54
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x54
	strb r1, [r0]
	mov r0, r8
	adds r0, #0x55
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r1, #0x55
	strb r0, [r1]
_080FC21A:
	ldr r2, _080FC288 @ =gUnk_02020EE0
	ldr r0, _080FC28C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sl
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FC2CC
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _080FC298
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080FC2F0
	ldrh r1, [r5, #0x1c]
	adds r0, r5, #0
	adds r0, #0x2a
	ldrb r2, [r0]
	movs r0, #0x30
	bl sub_0803DE54
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080FC290 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r6, #8]
	ldr r2, _080FC294 @ =0x0400000A
	adds r0, r6, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r6, #8]
	b _080FC2F0
	.align 2, 0
_080FC27C: .4byte 0xFFFFFBF6
_080FC280: .4byte 0x0000040C
_080FC284: .4byte gUnk_03000510
_080FC288: .4byte gUnk_02020EE0
_080FC28C: .4byte gUnk_0203AD3C
_080FC290: .4byte 0xFFF7FFFF
_080FC294: .4byte 0x0400000A
_080FC298:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080FC2F0
	movs r0, #0x30
	bl sub_081570B0
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080FC2C4 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r6, #8]
	ldr r2, _080FC2C8 @ =0x0400000A
	adds r0, r6, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080FC2F0
	.align 2, 0
_080FC2C4: .4byte 0xFFF7FFFF
_080FC2C8: .4byte 0x0400000A
_080FC2CC:
	ldr r1, [r5, #0x10]
	cmp r1, #0
	beq _080FC2E6
	ldr r4, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r4, r0
	cmp r4, #0
	bne _080FC2E6
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0x10]
_080FC2E6:
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x18]
_080FC2F0:
	ldr r2, _080FC334 @ =gUnk_02020EE0
	ldr r0, _080FC338 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, sl
	ldrh r2, [r2]
	cmp r0, r2
	bne _080FC340
	adds r4, r5, #0
	adds r4, #0x2f
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FC348
	ldr r7, _080FC33C @ =0x00000391
	adds r0, r7, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FC348
	adds r0, r7, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FC348
	.align 2, 0
_080FC334: .4byte gUnk_02020EE0
_080FC338: .4byte gUnk_0203AD3C
_080FC33C: .4byte 0x00000391
_080FC340:
	adds r1, r5, #0
	adds r1, #0x2f
	movs r0, #0
	strb r0, [r1]
_080FC348:
	ldr r4, _080FC3A4 @ =gUnk_083570EC
	mov r3, r8
	adds r3, #0x83
	ldrb r0, [r3]
	lsls r0, r0, #2
	adds r1, r0, r4
	ldrh r2, [r1]
	ldrh r0, [r6, #0xc]
	cmp r0, r2
	bne _080FC364
	ldrb r0, [r6, #0x1a]
	ldrb r1, [r1, #2]
	cmp r0, r1
	beq _080FC370
_080FC364:
	strh r2, [r6, #0xc]
	ldrb r0, [r3]
	lsls r0, r0, #2
	adds r0, r0, r4
	ldrb r0, [r0, #2]
	strb r0, [r6, #0x1a]
_080FC370:
	ldrh r0, [r6, #0xc]
	cmp r0, #0
	bne _080FC378
	b _080FC5DE
_080FC378:
	ldr r0, _080FC3A8 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	ldr r3, [sp, #0x28]
	ldrb r3, [r3]
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FC3AC
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	bne _080FC3AC
	adds r0, r5, #0
	bl sub_0803D9A8
	b _080FC5DE
	.align 2, 0
_080FC3A4: .4byte gUnk_083570EC
_080FC3A8: .4byte gUnk_03000510
_080FC3AC:
	ldr r0, [r5, #0x30]
	cmp r0, #0
	bne _080FC3DE
	ldr r0, [r5, #8]
	ldr r1, _080FC3F8 @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r5, #8]
	movs r1, #0x26
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bne _080FC3DE
	mov r2, r8
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080FC3D4
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x30]
_080FC3D4:
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r5, #8]
_080FC3DE:
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FC3FC
	adds r0, r5, #0
	adds r0, #0x10
	ldr r1, [r5, #0x18]
	movs r2, #0x80
	lsls r2, r2, #3
	orrs r1, r2
	b _080FC406
	.align 2, 0
_080FC3F8: .4byte 0xFFFFFDFF
_080FC3FC:
	adds r0, r5, #0
	adds r0, #0x10
	ldr r1, [r5, #0x18]
	ldr r2, _080FC488 @ =0xFFFFFBFF
	ands r1, r2
_080FC406:
	str r1, [r0, #8]
	mov sb, r0
	ldr r3, [r5, #8]
	movs r4, #8
	ands r4, r3
	movs r0, #0x2c
	adds r0, r0, r5
	mov r8, r0
	cmp r4, #0
	bne _080FC4A4
	adds r0, r5, #0
	adds r0, #0x2b
	adds r2, r5, #0
	adds r2, #0x2a
	ldrb r1, [r0]
	adds r6, r0, #0
	ldrb r2, [r2]
	cmp r1, r2
	bne _080FC434
	ldrh r0, [r5, #0x28]
	ldrh r1, [r5, #0x1c]
	cmp r0, r1
	beq _080FC44C
_080FC434:
	adds r0, r5, #0
	adds r0, #0x2c
	ldrb r1, [r0]
	mov r8, r0
	cmp r1, #0
	beq _080FC44C
	strb r4, [r5, #1]
	strh r4, [r5, #2]
	movs r0, #5
	rsbs r0, r0, #0
	ands r3, r0
	str r3, [r5, #8]
_080FC44C:
	mov r0, sb
	bl sub_08155128
	adds r2, r0, #0
	cmp r2, #0
	bne _080FC48C
	ldr r0, [r5, #8]
	movs r1, #2
	orrs r0, r1
	str r0, [r5, #8]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	beq _080FC4A4
	mov r3, r8
	ldrb r0, [r3]
	cmp r0, #0
	beq _080FC4A4
	movs r0, #0xff
	strb r0, [r6]
	ldr r0, [r5, #8]
	subs r1, #9
	ands r0, r1
	str r0, [r5, #8]
	strb r2, [r5, #1]
	strh r2, [r5, #2]
	mov r0, sb
	bl sub_08155128
	b _080FC4A4
	.align 2, 0
_080FC488: .4byte 0xFFFFFBFF
_080FC48C:
	mov r0, r8
	ldrb r1, [r0]
	ldrh r0, [r5, #2]
	adds r0, r0, r1
	strh r0, [r5, #2]
	lsrs r0, r0, #4
	strb r0, [r5, #1]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
_080FC4A4:
	ldr r2, [r5, #0x40]
	asrs r2, r2, #8
	ldr r3, _080FC544 @ =gCurLevelInfo
	ldr r7, _080FC548 @ =gUnk_0203AD3C
	ldrb r0, [r7]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	adds r6, r5, #0
	adds r6, #0x54
	movs r0, #0
	ldrsb r0, [r6, r0]
	adds r0, r0, r2
	movs r1, #0
	mov ip, r1
	strh r0, [r5, #0x20]
	ldr r1, [r5, #0x44]
	asrs r1, r1, #8
	ldrb r0, [r7]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r1, r1, r0
	adds r2, r5, #0
	adds r2, #0x55
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r0, r1
	strh r0, [r5, #0x22]
	mov r3, r8
	ldrb r0, [r3]
	cmp r0, #0
	beq _080FC4FC
	mov r0, ip
	strb r0, [r6]
	strb r0, [r2]
_080FC4FC:
	ldr r3, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r3
	cmp r0, #0
	bne _080FC55A
	ldr r2, _080FC54C @ =gUnk_02020EE0
	ldrb r1, [r7]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sl
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FC55A
	ldr r1, _080FC550 @ =gUnk_0203AD18
	ldrh r0, [r1]
	ldrh r2, [r5, #0x20]
	adds r0, r0, r2
	strh r0, [r5, #0x20]
	ldrh r0, [r1, #2]
	ldrh r1, [r5, #0x22]
	adds r0, r0, r1
	strh r0, [r5, #0x22]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r3, r0
	cmp r3, #0
	beq _080FC554
	mov r0, sb
	bl sub_081564D8
	b _080FC55A
	.align 2, 0
_080FC544: .4byte gCurLevelInfo
_080FC548: .4byte gUnk_0203AD3C
_080FC54C: .4byte gUnk_02020EE0
_080FC550: .4byte gUnk_0203AD18
_080FC554:
	mov r0, sb
	bl sub_0815604C
_080FC55A:
	ldr r1, [r5, #0x30]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _080FC56C
	ldr r0, [r5, #8]
	ldr r1, _080FC598 @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r5, #8]
_080FC56C:
	ldr r0, [r5, #8]
	movs r1, #0x90
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	bne _080FC5DE
	ldr r2, [sp, #0x28]
	ldrb r0, [r2]
	cmp r0, #0xff
	beq _080FC5A4
	ldr r2, _080FC59C @ =gCurLevelInfo
	ldr r3, [sp, #0x28]
	ldrb r1, [r3]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080FC5A0 @ =0x0000065E
	adds r0, r0, r1
	ldrb r1, [r0]
	b _080FC5A6
	.align 2, 0
_080FC598: .4byte 0xFFFFFDFF
_080FC59C: .4byte gCurLevelInfo
_080FC5A0: .4byte 0x0000065E
_080FC5A4:
	movs r1, #0xff
_080FC5A6:
	cmp r1, #0xff
	beq _080FC5DE
	lsls r3, r1, #6
	ldrb r0, [r5]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _080FC5F0 @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r2, [r5]
	adds r1, r1, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080FC5F4 @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r5, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_080FC5DE:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080FC5F0: .4byte gUnk_02022EB0
_080FC5F4: .4byte gUnk_02022F50

	thumb_func_start sub_080FC5F8
sub_080FC5F8: @ 0x080FC5F8
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080FC628 @ =sub_080FC6D4
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080FC62C @ =sub_08100170
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FC630
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FC638
	.align 2, 0
_080FC628: .4byte sub_080FC6D4
_080FC62C: .4byte sub_08100170
_080FC630:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FC638:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r2, #0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r6, r4, #0
	adds r6, #0x42
	movs r7, #0
	strh r0, [r6]
	movs r0, #0x40
	strh r0, [r4, #0x3c]
	ldr r0, _080FC6B8 @ =0x0000FFEB
	strh r0, [r4, #0x3e]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r3, _080FC6BC @ =0x00000392
	str r2, [sp]
	movs r0, #0x18
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0xc
	bl sub_080709F8
	adds r5, r4, #0
	adds r5, #0x2b
	strb r7, [r5]
	ldr r2, _080FC6C0 @ =gUnk_02020EE0
	ldr r0, _080FC6C4 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r6]
	cmp r0, r6
	bne _080FC6C8
	movs r6, #0xe4
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FC6CA
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080FC6CA
	.align 2, 0
_080FC6B8: .4byte 0x0000FFEB
_080FC6BC: .4byte 0x00000392
_080FC6C0: .4byte gUnk_02020EE0
_080FC6C4: .4byte gUnk_0203AD3C
_080FC6C8:
	strb r7, [r5]
_080FC6CA:
	adds r0, r4, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080FC6D4
sub_080FC6D4: @ 0x080FC6D4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x28
	ldr r2, _080FC6F4 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FC6F8
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FC700
	.align 2, 0
_080FC6F4: .4byte gCurTask
_080FC6F8:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FC700:
	adds r5, r0, #0
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080FC718
	ldr r0, [r2]
	bl TaskDestroy
	b _080FC9C0
_080FC718:
	ldr r0, [r5, #0x44]
	ldr r0, [r0, #8]
	ands r0, r1
	cmp r0, #0
	beq _080FC72A
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _080FC9C0
_080FC72A:
	ldr r2, _080FC794 @ =gUnk_02020EE0
	ldr r0, _080FC798 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r1, [r7]
	cmp r0, r1
	bne _080FC7DC
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080FC7A4
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FC802
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0xc
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FC79C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080FC7A0 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080FC802
	.align 2, 0
_080FC794: .4byte gUnk_02020EE0
_080FC798: .4byte gUnk_0203AD3C
_080FC79C: .4byte 0xFFF7FFFF
_080FC7A0: .4byte 0x0400000A
_080FC7A4:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FC802
	movs r0, #0xc
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FC7D4 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080FC7D8 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080FC802
	.align 2, 0
_080FC7D4: .4byte 0xFFF7FFFF
_080FC7D8: .4byte 0x0400000A
_080FC7DC:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _080FC7F8
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080FC7F8
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080FC7F8:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080FC802:
	ldr r2, _080FC844 @ =gUnk_02020EE0
	ldr r0, _080FC848 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r2, [r7]
	cmp r0, r2
	bne _080FC84C
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FC854
	movs r6, #0xe4
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FC854
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FC854
	.align 2, 0
_080FC844: .4byte gUnk_02020EE0
_080FC848: .4byte gUnk_0203AD3C
_080FC84C:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_080FC854:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080FC8A8
	ldrb r0, [r3]
	cmp r0, #0
	beq _080FC872
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080FC872
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080FC872:
	cmp r3, #0
	beq _080FC8A8
	ldr r0, _080FC8A4 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FC914
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FC914
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080FC9C0
	.align 2, 0
_080FC8A4: .4byte gUnk_03000510
_080FC8A8:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080FC90C @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _080FC8E6
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FC8E6
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FC8E6
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FC8E6
	movs r3, #4
_080FC8E6:
	ldr r0, _080FC910 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FC914
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FC914
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080FC9C0
	.align 2, 0
_080FC90C: .4byte gUnk_02020EE0
_080FC910: .4byte gUnk_03000510
_080FC914:
	ldr r0, _080FC990 @ =gUnk_0203AD44
	ldrb r0, [r0]
	ldrh r1, [r5, #4]
	mov ip, r1
	cmp r0, #0
	beq _080FC958
	ldr r6, _080FC994 @ =gCurLevelInfo
	ldrh r3, [r7]
	ldr r4, _080FC998 @ =gUnk_02026D50
_080FC926:
	subs r2, r0, #1
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r1, r0, r6
	movs r7, #0xbf
	lsls r7, r7, #3
	adds r0, r1, r7
	ldrh r0, [r0]
	cmp r0, r3
	bne _080FC950
	adds r7, #0x66
	adds r0, r1, r7
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080FC96A
_080FC950:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080FC926
_080FC958:
	movs r0, #1
	cmp r0, #0
	beq _080FC96A
	ldrh r1, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
_080FC96A:
	ldrh r1, [r5, #6]
	movs r0, #4
	movs r2, #0
	orrs r1, r0
	strh r1, [r5, #6]
	mov r0, ip
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x78
	ble _080FC99C
	movs r6, #0x80
	lsls r6, r6, #5
	adds r0, r6, #0
	orrs r1, r0
	strh r1, [r5, #6]
	b _080FC9C0
	.align 2, 0
_080FC990: .4byte gUnk_0203AD44
_080FC994: .4byte gCurLevelInfo
_080FC998: .4byte gUnk_02026D50
_080FC99C:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r1, r0
	cmp r1, #0
	bne _080FC9BA
	movs r7, #0x3c
	ldrsh r1, [r5, r7]
	ldr r0, [r5, #0x34]
	adds r0, r0, r1
	str r0, [r5, #0x34]
	movs r0, #0x3e
	ldrsh r1, [r5, r0]
	ldr r0, [r5, #0x38]
	subs r0, r0, r1
	str r0, [r5, #0x38]
_080FC9BA:
	adds r0, r5, #0
	bl sub_0806FAC8
_080FC9C0:
	add sp, #0x28
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080FC9C8
sub_080FC9C8: @ 0x080FC9C8
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080FC9F8 @ =sub_080FCA94
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080FC9FC @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FCA00
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080FCA08
	.align 2, 0
_080FC9F8: .4byte sub_080FCA94
_080FC9FC: .4byte sub_0803DCCC
_080FCA00:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080FCA08:
	adds r0, r4, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r5, r4, #0
	adds r5, #0x42
	movs r6, #0
	strh r0, [r5]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r3, _080FCA7C @ =0x00000392
	movs r0, #1
	str r0, [sp]
	movs r0, #0x19
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0xc
	bl sub_080709F8
	adds r4, #0x2b
	strb r6, [r4]
	ldr r2, _080FCA80 @ =gUnk_02020EE0
	ldr r0, _080FCA84 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r5, [r5]
	cmp r0, r5
	bne _080FCA88
	movs r5, #0xe4
	lsls r5, r5, #2
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FCA8A
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FCA8A
	.align 2, 0
_080FCA7C: .4byte 0x00000392
_080FCA80: .4byte gUnk_02020EE0
_080FCA84: .4byte gUnk_0203AD3C
_080FCA88:
	strb r6, [r4]
_080FCA8A:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FCA94
sub_080FCA94: @ 0x080FCA94
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r2, _080FCAB8 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FCABC
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FCAC4
	.align 2, 0
_080FCAB8: .4byte gCurTask
_080FCABC:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FCAC4:
	adds r5, r0, #0
	ldr r0, [r5, #0x44]
	mov r8, r0
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080FCAE0
	ldr r0, [r2]
	bl TaskDestroy
	b _080FCD8C
_080FCAE0:
	mov r2, r8
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _080FCAF2
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _080FCD8C
_080FCAF2:
	ldr r2, _080FCB5C @ =gUnk_02020EE0
	ldr r0, _080FCB60 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r6, [r7]
	cmp r0, r6
	bne _080FCBA4
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080FCB6C
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FCBCA
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0xc
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FCB64 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080FCB68 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080FCBCA
	.align 2, 0
_080FCB5C: .4byte gUnk_02020EE0
_080FCB60: .4byte gUnk_0203AD3C
_080FCB64: .4byte 0xFFF7FFFF
_080FCB68: .4byte 0x0400000A
_080FCB6C:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FCBCA
	movs r0, #0xc
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FCB9C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080FCBA0 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080FCBCA
	.align 2, 0
_080FCB9C: .4byte 0xFFF7FFFF
_080FCBA0: .4byte 0x0400000A
_080FCBA4:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _080FCBC0
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080FCBC0
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080FCBC0:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080FCBCA:
	ldr r2, _080FCC0C @ =gUnk_02020EE0
	ldr r0, _080FCC10 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	bne _080FCC14
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FCC1C
	movs r6, #0xe4
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FCC1C
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FCC1C
	.align 2, 0
_080FCC0C: .4byte gUnk_02020EE0
_080FCC10: .4byte gUnk_0203AD3C
_080FCC14:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_080FCC1C:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080FCC70
	ldrb r0, [r3]
	cmp r0, #0
	beq _080FCC3A
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080FCC3A
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080FCC3A:
	cmp r3, #0
	beq _080FCC70
	ldr r0, _080FCC6C @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FCCDC
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FCCDC
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080FCD8C
	.align 2, 0
_080FCC6C: .4byte gUnk_03000510
_080FCC70:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080FCCD4 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _080FCCAE
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FCCAE
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FCCAE
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FCCAE
	movs r3, #4
_080FCCAE:
	ldr r0, _080FCCD8 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FCCDC
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FCCDC
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080FCD8C
	.align 2, 0
_080FCCD4: .4byte gUnk_02020EE0
_080FCCD8: .4byte gUnk_03000510
_080FCCDC:
	ldr r0, _080FCD5C @ =gUnk_0203AD44
	ldrb r0, [r0]
	ldrh r1, [r5, #0x3e]
	mov ip, r1
	cmp r0, #0
	beq _080FCD20
	ldr r6, _080FCD60 @ =gCurLevelInfo
	ldrh r3, [r7]
	ldr r4, _080FCD64 @ =gUnk_02026D50
_080FCCEE:
	subs r2, r0, #1
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r1, r0, r6
	movs r7, #0xbf
	lsls r7, r7, #3
	adds r0, r1, r7
	ldrh r0, [r0]
	cmp r0, r3
	bne _080FCD18
	adds r7, #0x66
	adds r0, r1, r7
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080FCD32
_080FCD18:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080FCCEE
_080FCD20:
	movs r0, #1
	cmp r0, #0
	beq _080FCD32
	ldrh r1, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
_080FCD32:
	mov r0, ip
	subs r0, #0x15
	strh r0, [r5, #0x3e]
	ldrh r1, [r5, #6]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080FCD68
	mov r0, r8
	bl sub_080FCD98
	mov r0, r8
	bl sub_080FD194
	ldrh r0, [r5, #6]
	movs r6, #0x80
	lsls r6, r6, #5
	adds r1, r6, #0
	orrs r0, r1
	strh r0, [r5, #6]
	b _080FCD8C
	.align 2, 0
_080FCD5C: .4byte gUnk_0203AD44
_080FCD60: .4byte gCurLevelInfo
_080FCD64: .4byte gUnk_02026D50
_080FCD68:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080FCD86
	movs r7, #0x3c
	ldrsh r1, [r5, r7]
	ldr r0, [r5, #0x34]
	adds r0, r0, r1
	str r0, [r5, #0x34]
	movs r0, #0x3e
	ldrsh r1, [r5, r0]
	ldr r0, [r5, #0x38]
	subs r0, r0, r1
	str r0, [r5, #0x38]
_080FCD86:
	adds r0, r5, #0
	bl sub_0806FAC8
_080FCD8C:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080FCD98
sub_080FCD98: @ 0x080FCD98
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080FCDC8 @ =sub_080FCE70
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080FCDCC @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FCDD0
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080FCDD8
	.align 2, 0
_080FCDC8: .4byte sub_080FCE70
_080FCDCC: .4byte sub_0803DCCC
_080FCDD0:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080FCDD8:
	adds r0, r4, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r5, r4, #0
	adds r5, #0x42
	movs r6, #0
	strh r0, [r5]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r4, #0x3c]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r4, #0x3e]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r3, _080FCE58 @ =0x00000392
	movs r0, #2
	str r0, [sp]
	movs r0, #0x19
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #4
	bl sub_080709F8
	adds r4, #0x2b
	strb r6, [r4]
	ldr r2, _080FCE5C @ =gUnk_02020EE0
	ldr r0, _080FCE60 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r5, [r5]
	cmp r0, r5
	bne _080FCE64
	movs r5, #0xe4
	lsls r5, r5, #2
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FCE66
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FCE66
	.align 2, 0
_080FCE58: .4byte 0x00000392
_080FCE5C: .4byte gUnk_02020EE0
_080FCE60: .4byte gUnk_0203AD3C
_080FCE64:
	strb r6, [r4]
_080FCE66:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FCE70
sub_080FCE70: @ 0x080FCE70
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x28
	ldr r2, _080FCE94 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FCE98
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FCEA0
	.align 2, 0
_080FCE94: .4byte gCurTask
_080FCE98:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FCEA0:
	adds r5, r0, #0
	ldr r0, [r5, #0x44]
	mov sb, r0
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080FCEBC
	ldr r0, [r2]
	bl TaskDestroy
	b _080FD184
_080FCEBC:
	mov r2, sb
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _080FCECE
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _080FD184
_080FCECE:
	ldr r2, _080FCF38 @ =gUnk_02020EE0
	ldr r0, _080FCF3C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r6, [r7]
	cmp r0, r6
	bne _080FCF80
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080FCF48
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FCFA6
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #4
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FCF40 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080FCF44 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080FCFA6
	.align 2, 0
_080FCF38: .4byte gUnk_02020EE0
_080FCF3C: .4byte gUnk_0203AD3C
_080FCF40: .4byte 0xFFF7FFFF
_080FCF44: .4byte 0x0400000A
_080FCF48:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FCFA6
	movs r0, #4
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FCF78 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080FCF7C @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080FCFA6
	.align 2, 0
_080FCF78: .4byte 0xFFF7FFFF
_080FCF7C: .4byte 0x0400000A
_080FCF80:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _080FCF9C
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080FCF9C
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080FCF9C:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080FCFA6:
	ldr r2, _080FCFE8 @ =gUnk_02020EE0
	ldr r0, _080FCFEC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	bne _080FCFF0
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FCFF8
	movs r6, #0xe4
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FCFF8
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FCFF8
	.align 2, 0
_080FCFE8: .4byte gUnk_02020EE0
_080FCFEC: .4byte gUnk_0203AD3C
_080FCFF0:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_080FCFF8:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080FD04C
	ldrb r0, [r3]
	cmp r0, #0
	beq _080FD016
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080FD016
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080FD016:
	cmp r3, #0
	beq _080FD04C
	ldr r0, _080FD048 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FD0B8
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FD0B8
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080FD184
	.align 2, 0
_080FD048: .4byte gUnk_03000510
_080FD04C:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080FD0B0 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _080FD08A
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FD08A
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FD08A
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FD08A
	movs r3, #4
_080FD08A:
	ldr r0, _080FD0B4 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FD0B8
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FD0B8
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080FD184
	.align 2, 0
_080FD0B0: .4byte gUnk_02020EE0
_080FD0B4: .4byte gUnk_03000510
_080FD0B8:
	ldr r0, _080FD154 @ =gUnk_0203AD44
	ldrb r0, [r0]
	ldrh r1, [r5, #0x3e]
	mov ip, r1
	ldrh r2, [r5, #4]
	mov r8, r2
	cmp r0, #0
	beq _080FD100
	ldr r6, _080FD158 @ =gCurLevelInfo
	ldrh r3, [r7]
	ldr r4, _080FD15C @ =gUnk_02026D50
_080FD0CE:
	subs r2, r0, #1
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r1, r0, r6
	movs r7, #0xbf
	lsls r7, r7, #3
	adds r0, r1, r7
	ldrh r0, [r0]
	cmp r0, r3
	bne _080FD0F8
	adds r7, #0x66
	adds r0, r1, r7
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080FD112
_080FD0F8:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080FD0CE
_080FD100:
	movs r0, #1
	cmp r0, #0
	beq _080FD112
	ldrh r1, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
_080FD112:
	ldrh r1, [r5, #6]
	movs r0, #4
	movs r4, #0
	orrs r1, r0
	strh r1, [r5, #6]
	mov r0, ip
	subs r0, #0x15
	strh r0, [r5, #0x3e]
	mov r0, r8
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x34
	ble _080FD160
	movs r2, #0xad
	lsls r2, r2, #2
	mov r0, sb
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r1, [r5, #0x34]
	str r1, [r0, #0x34]
	ldr r1, [r5, #0x38]
	str r1, [r0, #0x38]
	ldrh r0, [r5, #6]
	movs r6, #0x80
	lsls r6, r6, #5
	adds r1, r6, #0
	orrs r0, r1
	strh r0, [r5, #6]
	b _080FD184
	.align 2, 0
_080FD154: .4byte gUnk_0203AD44
_080FD158: .4byte gCurLevelInfo
_080FD15C: .4byte gUnk_02026D50
_080FD160:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r1, r0
	cmp r1, #0
	bne _080FD17E
	movs r7, #0x3c
	ldrsh r1, [r5, r7]
	ldr r0, [r5, #0x34]
	adds r0, r0, r1
	str r0, [r5, #0x34]
	movs r0, #0x3e
	ldrsh r1, [r5, r0]
	ldr r0, [r5, #0x38]
	subs r0, r0, r1
	str r0, [r5, #0x38]
_080FD17E:
	adds r0, r5, #0
	bl sub_0806FAC8
_080FD184:
	add sp, #0x28
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FD194
sub_080FD194: @ 0x080FD194
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080FD1C4 @ =sub_080FD26C
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080FD1C8 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FD1CC
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080FD1D4
	.align 2, 0
_080FD1C4: .4byte sub_080FD26C
_080FD1C8: .4byte sub_0803DCCC
_080FD1CC:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080FD1D4:
	adds r0, r4, #0
	bl sub_0803E3B0
	movs r2, #3
	strb r2, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r5, r4, #0
	adds r5, #0x42
	movs r6, #0
	strh r0, [r5]
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r4, #0x3c]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r4, #0x3e]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r3, _080FD254 @ =0x00000392
	str r2, [sp]
	movs r0, #0x19
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #4
	bl sub_080709F8
	adds r4, #0x2b
	strb r6, [r4]
	ldr r2, _080FD258 @ =gUnk_02020EE0
	ldr r0, _080FD25C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r5, [r5]
	cmp r0, r5
	bne _080FD260
	movs r5, #0xe4
	lsls r5, r5, #2
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FD262
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FD262
	.align 2, 0
_080FD254: .4byte 0x00000392
_080FD258: .4byte gUnk_02020EE0
_080FD25C: .4byte gUnk_0203AD3C
_080FD260:
	strb r6, [r4]
_080FD262:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FD26C
sub_080FD26C: @ 0x080FD26C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x28
	ldr r2, _080FD290 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FD294
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FD29C
	.align 2, 0
_080FD290: .4byte gCurTask
_080FD294:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FD29C:
	adds r5, r0, #0
	ldr r0, [r5, #0x44]
	mov sb, r0
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080FD2B8
	ldr r0, [r2]
	bl TaskDestroy
	b _080FD580
_080FD2B8:
	mov r2, sb
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _080FD2CA
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _080FD580
_080FD2CA:
	ldr r2, _080FD334 @ =gUnk_02020EE0
	ldr r0, _080FD338 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r6, [r7]
	cmp r0, r6
	bne _080FD37C
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080FD344
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FD3A2
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #4
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FD33C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080FD340 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080FD3A2
	.align 2, 0
_080FD334: .4byte gUnk_02020EE0
_080FD338: .4byte gUnk_0203AD3C
_080FD33C: .4byte 0xFFF7FFFF
_080FD340: .4byte 0x0400000A
_080FD344:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FD3A2
	movs r0, #4
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FD374 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080FD378 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080FD3A2
	.align 2, 0
_080FD374: .4byte 0xFFF7FFFF
_080FD378: .4byte 0x0400000A
_080FD37C:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _080FD398
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080FD398
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080FD398:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080FD3A2:
	ldr r2, _080FD3E4 @ =gUnk_02020EE0
	ldr r0, _080FD3E8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	bne _080FD3EC
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FD3F4
	movs r6, #0xe4
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FD3F4
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FD3F4
	.align 2, 0
_080FD3E4: .4byte gUnk_02020EE0
_080FD3E8: .4byte gUnk_0203AD3C
_080FD3EC:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_080FD3F4:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080FD448
	ldrb r0, [r3]
	cmp r0, #0
	beq _080FD412
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080FD412
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080FD412:
	cmp r3, #0
	beq _080FD448
	ldr r0, _080FD444 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FD4B4
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FD4B4
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080FD580
	.align 2, 0
_080FD444: .4byte gUnk_03000510
_080FD448:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080FD4AC @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _080FD486
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FD486
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FD486
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FD486
	movs r3, #4
_080FD486:
	ldr r0, _080FD4B0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FD4B4
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FD4B4
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080FD580
	.align 2, 0
_080FD4AC: .4byte gUnk_02020EE0
_080FD4B0: .4byte gUnk_03000510
_080FD4B4:
	ldr r0, _080FD550 @ =gUnk_0203AD44
	ldrb r0, [r0]
	ldrh r1, [r5, #0x3e]
	mov ip, r1
	ldrh r2, [r5, #4]
	mov r8, r2
	cmp r0, #0
	beq _080FD4FC
	ldr r6, _080FD554 @ =gCurLevelInfo
	ldrh r3, [r7]
	ldr r4, _080FD558 @ =gUnk_02026D50
_080FD4CA:
	subs r2, r0, #1
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r1, r0, r6
	movs r7, #0xbf
	lsls r7, r7, #3
	adds r0, r1, r7
	ldrh r0, [r0]
	cmp r0, r3
	bne _080FD4F4
	adds r7, #0x66
	adds r0, r1, r7
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080FD50E
_080FD4F4:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080FD4CA
_080FD4FC:
	movs r0, #1
	cmp r0, #0
	beq _080FD50E
	ldrh r1, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
_080FD50E:
	ldrh r1, [r5, #6]
	movs r0, #4
	movs r4, #0
	orrs r1, r0
	strh r1, [r5, #6]
	mov r0, ip
	subs r0, #0x15
	strh r0, [r5, #0x3e]
	mov r0, r8
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x34
	ble _080FD55C
	movs r2, #0xad
	lsls r2, r2, #2
	mov r0, sb
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r1, [r5, #0x34]
	str r1, [r0, #0x34]
	ldr r1, [r5, #0x38]
	str r1, [r0, #0x38]
	ldrh r0, [r5, #6]
	movs r6, #0x80
	lsls r6, r6, #5
	adds r1, r6, #0
	orrs r0, r1
	strh r0, [r5, #6]
	b _080FD580
	.align 2, 0
_080FD550: .4byte gUnk_0203AD44
_080FD554: .4byte gCurLevelInfo
_080FD558: .4byte gUnk_02026D50
_080FD55C:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r1, r0
	cmp r1, #0
	bne _080FD57A
	movs r7, #0x3c
	ldrsh r1, [r5, r7]
	ldr r0, [r5, #0x34]
	adds r0, r0, r1
	str r0, [r5, #0x34]
	movs r0, #0x3e
	ldrsh r1, [r5, r0]
	ldr r0, [r5, #0x38]
	subs r0, r0, r1
	str r0, [r5, #0x38]
_080FD57A:
	adds r0, r5, #0
	bl sub_0806FAC8
_080FD580:
	add sp, #0x28
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FD590
sub_080FD590: @ 0x080FD590
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080FD5C0 @ =sub_080FD6BC
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080FD5C4 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FD5C8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FD5D0
	.align 2, 0
_080FD5C0: .4byte sub_080FD6BC
_080FD5C4: .4byte sub_0803DCCC
_080FD5C8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FD5D0:
	adds r4, r0, #0
	bl sub_0803E380
	movs r1, #0
	movs r0, #2
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	str r5, [r4, #0x70]
	movs r6, #0
	strh r1, [r4, #4]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r7, r4, #0
	adds r7, #0x60
	strh r0, [r7]
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _080FD6A0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FD620
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
_080FD620:
	adds r0, r4, #0
	adds r0, #0x63
	strb r6, [r0]
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r1]
	movs r2, #4
	rsbs r2, r2, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r2, #0
	movs r3, #4
	bl sub_0803E308
	adds r1, r4, #0
	adds r1, #0x10
	ldr r3, _080FD6A4 @ =0x00000392
	movs r0, #4
	str r0, [sp]
	movs r0, #0x1a
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x10
	bl sub_080708DC
	adds r5, r4, #0
	adds r5, #0x2f
	strb r6, [r5]
	ldr r2, _080FD6A8 @ =gUnk_02020EE0
	ldr r0, _080FD6AC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _080FD6B0
	movs r6, #0xe4
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FD6B2
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080FD6B2
	.align 2, 0
_080FD6A0: .4byte gUnk_03000510
_080FD6A4: .4byte 0x00000392
_080FD6A8: .4byte gUnk_02020EE0
_080FD6AC: .4byte gUnk_0203AD3C
_080FD6B0:
	strb r6, [r5]
_080FD6B2:
	adds r0, r4, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080FD6BC
sub_080FD6BC: @ 0x080FD6BC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r0, _080FD6E0 @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FD6E4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FD6EC
	.align 2, 0
_080FD6E0: .4byte gCurTask
_080FD6E4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FD6EC:
	adds r5, r0, #0
	ldr r2, _080FD758 @ =gUnk_02020EE0
	ldr r0, _080FD75C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FD7A0
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _080FD768
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080FD7C4
	ldrh r1, [r5, #0x1c]
	adds r0, r5, #0
	adds r0, #0x2a
	ldrb r2, [r0]
	movs r0, #0x10
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080FD760 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080FD764 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080FD7C4
	.align 2, 0
_080FD758: .4byte gUnk_02020EE0
_080FD75C: .4byte gUnk_0203AD3C
_080FD760: .4byte 0xFFF7FFFF
_080FD764: .4byte 0x0400000A
_080FD768:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080FD7C4
	movs r0, #0x10
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080FD798 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080FD79C @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080FD7C4
	.align 2, 0
_080FD798: .4byte 0xFFF7FFFF
_080FD79C: .4byte 0x0400000A
_080FD7A0:
	ldr r1, [r5, #0x10]
	cmp r1, #0
	beq _080FD7BA
	ldr r4, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r4, r0
	cmp r4, #0
	bne _080FD7BA
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0x10]
_080FD7BA:
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x18]
_080FD7C4:
	ldr r2, _080FD80C @ =gUnk_02020EE0
	ldr r0, _080FD810 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FD814
	adds r4, r5, #0
	adds r4, #0x2f
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FD81C
	movs r6, #0xe4
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FD81C
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FD81C
	.align 2, 0
_080FD80C: .4byte gUnk_02020EE0
_080FD810: .4byte gUnk_0203AD3C
_080FD814:
	adds r1, r5, #0
	adds r1, #0x2f
	movs r0, #0
	strb r0, [r1]
_080FD81C:
	adds r0, r5, #0
	bl sub_0806F780
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080FD8A8
	ldr r0, [r5, #8]
	movs r7, #4
	orrs r0, r7
	str r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	mov r8, r1
	mov r6, r8
	ands r6, r0
	cmp r6, #0
	bne _080FD8A2
	adds r4, r5, #0
	adds r4, #0x52
	ldrh r0, [r4]
	subs r0, #0x20
	strh r0, [r4]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _080FD858
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r4]
_080FD858:
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080FD87C
	adds r0, r5, #0
	adds r0, #0x50
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	str r0, [r5, #0x40]
	movs r0, #0
	ldrsh r1, [r4, r0]
	ldr r0, [r5, #0x44]
	subs r0, r0, r1
	str r0, [r5, #0x44]
_080FD87C:
	adds r0, r5, #0
	bl sub_0809D8C8
	adds r0, r5, #0
	adds r0, #0x62
	ldrb r1, [r0]
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	beq _080FD8A2
	adds r1, r5, #0
	adds r1, #0x2a
	movs r0, #5
	strb r0, [r1]
	ldr r0, [r5, #8]
	mov r1, r8
	orrs r0, r1
	str r0, [r5, #8]
	strh r6, [r4]
_080FD8A2:
	adds r0, r5, #0
	bl sub_0806F8BC
_080FD8A8:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080FD8B4
sub_080FD8B4: @ 0x080FD8B4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080FD8E8 @ =sub_080FD9AC
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080FD8EC @ =sub_081001A4
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FD8F0
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FD8F8
	.align 2, 0
_080FD8E8: .4byte sub_080FD9AC
_080FD8EC: .4byte sub_081001A4
_080FD8F0:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FD8F8:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r2, #0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r7, r4, #0
	adds r7, #0x42
	movs r1, #0
	mov r8, r1
	strh r0, [r7]
	strh r2, [r4, #0x3c]
	strh r2, [r4, #0x3e]
	ldr r0, [r4, #0x38]
	ldr r1, _080FD984 @ =0xFFFFC800
	adds r0, r0, r1
	str r0, [r4, #0x38]
	ldr r0, [r4, #0x34]
	ldr r1, _080FD988 @ =0xFFFFD000
	adds r0, r0, r1
	str r0, [r4, #0x34]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r6, _080FD98C @ =0x000003A3
	str r2, [sp]
	movs r0, #0x1a
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x50
	adds r3, r6, #0
	bl sub_080709F8
	adds r5, r4, #0
	adds r5, #0x2b
	mov r0, r8
	strb r0, [r5]
	ldr r2, _080FD990 @ =gUnk_02020EE0
	ldr r0, _080FD994 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _080FD998
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FD99C
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _080FD99C
	.align 2, 0
_080FD984: .4byte 0xFFFFC800
_080FD988: .4byte 0xFFFFD000
_080FD98C: .4byte 0x000003A3
_080FD990: .4byte gUnk_02020EE0
_080FD994: .4byte gUnk_0203AD3C
_080FD998:
	mov r1, r8
	strb r1, [r5]
_080FD99C:
	adds r0, r4, #0
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080FD9AC
sub_080FD9AC: @ 0x080FD9AC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x28
	ldr r2, _080FD9CC @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FD9D0
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FD9D8
	.align 2, 0
_080FD9CC: .4byte gCurTask
_080FD9D0:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FD9D8:
	adds r5, r0, #0
	ldrh r3, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r3
	cmp r0, #0
	beq _080FD9EE
	ldr r0, [r2]
	bl TaskDestroy
	b _080FDC5E
_080FD9EE:
	ldr r2, _080FDA54 @ =gUnk_02020EE0
	ldr r0, _080FDA58 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FDA9C
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080FDA64
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FDAC2
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x50
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FDA5C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080FDA60 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080FDAC2
	.align 2, 0
_080FDA54: .4byte gUnk_02020EE0
_080FDA58: .4byte gUnk_0203AD3C
_080FDA5C: .4byte 0xFFF7FFFF
_080FDA60: .4byte 0x0400000A
_080FDA64:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FDAC2
	movs r0, #0x50
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FDA94 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080FDA98 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080FDAC2
	.align 2, 0
_080FDA94: .4byte 0xFFF7FFFF
_080FDA98: .4byte 0x0400000A
_080FDA9C:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _080FDAB8
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080FDAB8
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080FDAB8:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080FDAC2:
	ldr r2, _080FDB08 @ =gUnk_02020EE0
	ldr r0, _080FDB0C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r1, [r7]
	cmp r0, r1
	bne _080FDB14
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FDB1C
	ldr r6, _080FDB10 @ =0x000003A3
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FDB1C
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FDB1C
	.align 2, 0
_080FDB08: .4byte gUnk_02020EE0
_080FDB0C: .4byte gUnk_0203AD3C
_080FDB10: .4byte 0x000003A3
_080FDB14:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_080FDB1C:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080FDB70
	ldrb r0, [r3]
	cmp r0, #0
	beq _080FDB3A
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080FDB3A
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080FDB3A:
	cmp r3, #0
	beq _080FDB70
	ldr r0, _080FDB6C @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FDBDC
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FDBDC
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080FDC5E
	.align 2, 0
_080FDB6C: .4byte gUnk_03000510
_080FDB70:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080FDBD4 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _080FDBAE
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FDBAE
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FDBAE
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FDBAE
	movs r3, #4
_080FDBAE:
	ldr r0, _080FDBD8 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FDBDC
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FDBDC
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080FDC5E
	.align 2, 0
_080FDBD4: .4byte gUnk_02020EE0
_080FDBD8: .4byte gUnk_03000510
_080FDBDC:
	ldrh r1, [r5, #6]
	movs r0, #4
	movs r3, #0
	orrs r0, r1
	strh r0, [r5, #6]
	ldrh r0, [r5, #4]
	lsls r1, r0, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0xf
	bgt _080FDC18
	ldr r2, _080FDC34 @ =gUnk_083571BC
	asrs r0, r1, #0x11
	movs r1, #3
	ands r0, r1
	adds r0, r0, r2
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x40
	strb r1, [r0]
	movs r1, #4
	ldrsh r0, [r5, r1]
	adds r0, #1
	asrs r0, r0, #1
	movs r1, #3
	ands r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r1, #0x41
	strb r0, [r1]
_080FDC18:
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x34
	ble _080FDC38
	ldrh r0, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
	b _080FDC5E
	.align 2, 0
_080FDC34: .4byte gUnk_083571BC
_080FDC38:
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080FDC58
	movs r6, #0x3c
	ldrsh r1, [r5, r6]
	ldr r0, [r5, #0x34]
	adds r0, r0, r1
	str r0, [r5, #0x34]
	movs r0, #0x3e
	ldrsh r1, [r5, r0]
	ldr r0, [r5, #0x38]
	subs r0, r0, r1
	str r0, [r5, #0x38]
_080FDC58:
	adds r0, r5, #0
	bl sub_0806FAC8
_080FDC5E:
	add sp, #0x28
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FDC68
sub_080FDC68: @ 0x080FDC68
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	mov sb, r0
	adds r6, r1, #0
	lsls r2, r2, #0x18
	lsrs r4, r2, #0x18
	ldr r0, _080FDCA4 @ =sub_080FDF78
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080FDCA8 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FDCAC
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FDCB4
	.align 2, 0
_080FDCA4: .4byte sub_080FDF78
_080FDCA8: .4byte sub_0803DCCC
_080FDCAC:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FDCB4:
	adds r7, r0, #0
	bl sub_0803E380
	movs r1, #0
	movs r0, #2
	strb r0, [r7]
	mov r2, sb
	ldr r0, [r2, #0x40]
	str r0, [r7, #0x40]
	ldr r0, [r2, #0x44]
	str r0, [r7, #0x44]
	str r2, [r7, #0x70]
	strh r1, [r7, #4]
	mov r0, sb
	adds r0, #0x60
	ldrh r1, [r0]
	adds r0, r7, #0
	adds r0, #0x60
	strh r1, [r0]
	mov r0, sb
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r7, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _080FDDA0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r3, #1
	adds r0, r3, #0
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FDD06
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r7, #8]
_080FDD06:
	adds r0, r7, #0
	adds r0, #0x63
	strb r3, [r0]
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #0x15
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r7, #8]
	ldr r0, _080FDDA4 @ =0x20000043
	str r0, [r7, #0x68]
	ldr r0, [r7, #0x5c]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r7, #0x5c]
	cmp r4, #0
	beq _080FDE14
	ldr r4, [r6, #0x40]
	mov r1, sb
	ldr r0, [r1, #0x40]
	subs r4, r4, r0
	asrs r4, r4, #8
	ldr r5, [r1, #0x44]
	ldr r0, [r6, #0x44]
	subs r5, r5, r0
	asrs r5, r5, #8
	adds r0, r4, #0
	muls r0, r4, r0
	adds r1, r5, #0
	muls r1, r5, r1
	adds r0, r0, r1
	lsls r0, r0, #8
	bl Sqrt
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	lsls r4, r4, #8
	adds r0, r4, #0
	adds r1, r6, #0
	bl __divsi3
	adds r4, r0, #0
	lsls r2, r4, #8
	mov r8, r2
	lsls r5, r5, #8
	adds r0, r5, #0
	adds r1, r6, #0
	bl __divsi3
	lsls r2, r0, #8
	lsls r4, r4, #0xb
	mov r1, r8
	subs r4, r4, r1
	lsrs r4, r4, #5
	adds r1, r7, #0
	adds r1, #0x50
	strh r4, [r1]
	lsls r0, r0, #0xb
	subs r0, r0, r2
	lsls r0, r0, #3
	asrs r0, r0, #8
	adds r2, r7, #0
	adds r2, #0x52
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r3, r1, #0
	cmp r0, #0
	bge _080FDDAC
	ldr r1, _080FDDA8 @ =0xFFFFFEC0
	cmp r0, r1
	bge _080FDDB6
	b _080FDDB4
	.align 2, 0
_080FDDA0: .4byte gUnk_03000510
_080FDDA4: .4byte 0x20000043
_080FDDA8: .4byte 0xFFFFFEC0
_080FDDAC:
	movs r1, #0xa0
	lsls r1, r1, #1
	cmp r0, r1
	ble _080FDDB6
_080FDDB4:
	strh r1, [r2]
_080FDDB6:
	mov r2, sb
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FDDEC
	ldr r0, [r7, #0x40]
	ldr r2, _080FDDE0 @ =0xFFFFF200
	adds r0, r0, r2
	str r0, [r7, #0x40]
	ldr r0, [r7, #8]
	orrs r0, r1
	str r0, [r7, #8]
	movs r0, #0
	ldrsh r1, [r3, r0]
	ldr r0, _080FDDE4 @ =0xFFFFFC80
	cmp r1, r0
	ble _080FDE52
	ldr r0, _080FDDE8 @ =0x0000FC80
	strh r0, [r3]
	b _080FDE52
	.align 2, 0
_080FDDE0: .4byte 0xFFFFF200
_080FDDE4: .4byte 0xFFFFFC80
_080FDDE8: .4byte 0x0000FC80
_080FDDEC:
	ldr r0, [r7, #0x40]
	movs r1, #0xe0
	lsls r1, r1, #4
	adds r0, r0, r1
	str r0, [r7, #0x40]
	ldr r0, [r7, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r7, #8]
	movs r2, #0
	ldrsh r1, [r3, r2]
	ldr r0, _080FDE10 @ =0x0000037F
	cmp r1, r0
	bgt _080FDE52
	adds r0, #1
	strh r0, [r3]
	b _080FDE52
	.align 2, 0
_080FDE10: .4byte 0x0000037F
_080FDE14:
	adds r1, r7, #0
	adds r1, #0x50
	movs r0, #0xe0
	lsls r0, r0, #3
	strh r0, [r1]
	adds r0, r7, #0
	adds r0, #0x52
	strh r4, [r0]
	mov r2, sb
	ldr r0, [r2, #8]
	ands r0, r3
	cmp r0, #0
	beq _080FDE48
	ldr r0, [r7, #0x40]
	ldr r2, _080FDE44 @ =0xFFFFF200
	adds r0, r0, r2
	str r0, [r7, #0x40]
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
	ldr r0, [r7, #8]
	orrs r0, r3
	str r0, [r7, #8]
	b _080FDE52
	.align 2, 0
_080FDE44: .4byte 0xFFFFF200
_080FDE48:
	ldr r0, [r7, #0x40]
	movs r1, #0xe0
	lsls r1, r1, #4
	adds r0, r0, r1
	str r0, [r7, #0x40]
_080FDE52:
	movs r1, #0xa
	rsbs r1, r1, #0
	movs r2, #0x14
	rsbs r2, r2, #0
	movs r0, #0x14
	str r0, [sp]
	adds r0, r7, #0
	movs r3, #8
	bl sub_0803E2B0
	movs r2, #2
	rsbs r2, r2, #0
	movs r0, #2
	str r0, [sp]
	adds r0, r7, #0
	adds r1, r2, #0
	movs r3, #2
	bl sub_0803E308
	adds r1, r7, #0
	adds r1, #0x10
	ldr r6, _080FDED4 @ =0x00000391
	movs r0, #0x23
	str r0, [sp]
	movs r0, #0xa
	str r0, [sp, #4]
	adds r0, r7, #0
	movs r2, #0x20
	adds r3, r6, #0
	bl sub_080708DC
	adds r4, r7, #0
	adds r4, #0x2f
	movs r3, #0
	strb r3, [r4]
	ldr r2, _080FDED8 @ =gUnk_02020EE0
	ldr r0, _080FDEDC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x60
	ldrh r0, [r0]
	adds r5, r1, #0
	ldrh r2, [r5]
	cmp r0, r2
	bne _080FDEE0
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FDEE2
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FDEE2
	.align 2, 0
_080FDED4: .4byte 0x00000391
_080FDED8: .4byte gUnk_02020EE0
_080FDEDC: .4byte gUnk_0203AD3C
_080FDEE0:
	strb r3, [r4]
_080FDEE2:
	ldr r1, _080FDF60 @ =gUnk_02020EE0
	ldr r0, _080FDF64 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r5, [r5]
	cmp r0, r5
	bne _080FDF4A
	ldrb r0, [r7]
	cmp r0, #0
	bne _080FDF0A
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FDF4A
_080FDF0A:
	ldr r1, _080FDF68 @ =gUnk_08D60FA4
	ldr r4, _080FDF6C @ =gSongTable
	ldr r2, _080FDF70 @ =0x00000E24
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FDF30
	movs r1, #0xe2
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FDF4A
_080FDF30:
	cmp r3, #0
	beq _080FDF42
	ldr r0, _080FDF74 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FDF4A
_080FDF42:
	movs r0, #0xe2
	lsls r0, r0, #1
	bl m4aSongNumStart
_080FDF4A:
	movs r0, #1
	adds r1, r7, #0
	bl sub_0806FE64
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080FDF60: .4byte gUnk_02020EE0
_080FDF64: .4byte gUnk_0203AD3C
_080FDF68: .4byte gUnk_08D60FA4
_080FDF6C: .4byte gSongTable
_080FDF70: .4byte 0x00000E24
_080FDF74: .4byte gUnk_0203AD10

	thumb_func_start sub_080FDF78
sub_080FDF78: @ 0x080FDF78
	push {r4, r5, r6, lr}
	sub sp, #0x28
	ldr r0, _080FDF98 @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FDF9C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FDFA4
	.align 2, 0
_080FDF98: .4byte gCurTask
_080FDF9C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FDFA4:
	adds r5, r0, #0
	ldr r2, _080FE010 @ =gUnk_02020EE0
	ldr r0, _080FE014 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FE058
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _080FE020
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080FE07C
	ldrh r1, [r5, #0x1c]
	adds r0, r5, #0
	adds r0, #0x2a
	ldrb r2, [r0]
	movs r0, #0x20
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080FE018 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080FE01C @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080FE07C
	.align 2, 0
_080FE010: .4byte gUnk_02020EE0
_080FE014: .4byte gUnk_0203AD3C
_080FE018: .4byte 0xFFF7FFFF
_080FE01C: .4byte 0x0400000A
_080FE020:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _080FE07C
	movs r0, #0x20
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _080FE050 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080FE054 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080FE07C
	.align 2, 0
_080FE050: .4byte 0xFFF7FFFF
_080FE054: .4byte 0x0400000A
_080FE058:
	ldr r1, [r5, #0x10]
	cmp r1, #0
	beq _080FE072
	ldr r4, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r4, r0
	cmp r4, #0
	bne _080FE072
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0x10]
_080FE072:
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x18]
_080FE07C:
	ldr r2, _080FE0C0 @ =gUnk_02020EE0
	ldr r0, _080FE0C4 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FE0CC
	adds r4, r5, #0
	adds r4, #0x2f
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FE0D4
	ldr r6, _080FE0C8 @ =0x00000391
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FE0D4
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FE0D4
	.align 2, 0
_080FE0C0: .4byte gUnk_02020EE0
_080FE0C4: .4byte gUnk_0203AD3C
_080FE0C8: .4byte 0x00000391
_080FE0CC:
	adds r1, r5, #0
	adds r1, #0x2f
	movs r0, #0
	strb r0, [r1]
_080FE0D4:
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FE0E6
	adds r1, r5, #0
	adds r1, #0x54
	movs r0, #0x10
	b _080FE0EC
_080FE0E6:
	adds r1, r5, #0
	adds r1, #0x54
	movs r0, #0xf0
_080FE0EC:
	strb r0, [r1]
	adds r1, r5, #0
	adds r1, #0x55
	movs r0, #0xe0
	strb r0, [r1]
	ldr r0, [r5, #0x70]
	cmp r0, #0
	beq _080FE114
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _080FE114
	movs r0, #0
	str r0, [r5, #0x70]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r5, #8]
_080FE114:
	adds r0, r5, #0
	bl sub_0806F780
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080FE1C0
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	movs r1, #0x90
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	bne _080FE192
	adds r1, r5, #0
	adds r1, #0x56
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _080FE158
	ldr r2, _080FE150 @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r2, _080FE154 @ =0x0000065E
	adds r0, r0, r2
	ldrb r1, [r0]
	b _080FE15A
	.align 2, 0
_080FE150: .4byte gCurLevelInfo
_080FE154: .4byte 0x0000065E
_080FE158:
	movs r1, #0xff
_080FE15A:
	cmp r1, #0xff
	beq _080FE192
	lsls r3, r1, #6
	ldrb r0, [r5]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _080FE1C8 @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r2, [r5]
	adds r1, r1, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080FE1CC @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r5, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_080FE192:
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080FE1BA
	adds r0, r5, #0
	adds r0, #0x50
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	str r0, [r5, #0x40]
	adds r0, r5, #0
	adds r0, #0x52
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r5, #0x44]
	subs r0, r0, r1
	str r0, [r5, #0x44]
_080FE1BA:
	adds r0, r5, #0
	bl sub_0806F8BC
_080FE1C0:
	add sp, #0x28
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080FE1C8: .4byte gUnk_02022EB0
_080FE1CC: .4byte gUnk_02022F50

	thumb_func_start sub_080FE1D0
sub_080FE1D0: @ 0x080FE1D0
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080FE200 @ =sub_080FE2AC
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080FE204 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FE208
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080FE210
	.align 2, 0
_080FE200: .4byte sub_080FE2AC
_080FE204: .4byte sub_0803DCCC
_080FE208:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080FE210:
	adds r0, r4, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r6, r4, #0
	adds r6, #0x42
	movs r7, #0
	strh r0, [r6]
	ldr r0, [r5, #8]
	movs r2, #1
	movs r1, #1
	ands r0, r1
	ldrh r1, [r4, #6]
	orrs r0, r1
	eors r0, r2
	strh r0, [r4, #6]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r5, _080FE294 @ =0x00000391
	movs r0, #0x22
	str r0, [sp]
	movs r0, #0x19
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x2a
	adds r3, r5, #0
	bl sub_080709F8
	adds r4, #0x2b
	strb r7, [r4]
	ldr r2, _080FE298 @ =gUnk_02020EE0
	ldr r0, _080FE29C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r6]
	cmp r0, r6
	bne _080FE2A0
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FE2A2
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FE2A2
	.align 2, 0
_080FE294: .4byte 0x00000391
_080FE298: .4byte gUnk_02020EE0
_080FE29C: .4byte gUnk_0203AD3C
_080FE2A0:
	strb r7, [r4]
_080FE2A2:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FE2AC
sub_080FE2AC: @ 0x080FE2AC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r2, _080FE2D0 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FE2D4
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FE2DC
	.align 2, 0
_080FE2D0: .4byte gCurTask
_080FE2D4:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FE2DC:
	adds r5, r0, #0
	ldr r0, [r5, #0x44]
	mov r8, r0
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080FE2F8
	ldr r0, [r2]
	bl TaskDestroy
	b _080FE5BE
_080FE2F8:
	mov r2, r8
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _080FE30A
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _080FE5BE
_080FE30A:
	ldr r2, _080FE374 @ =gUnk_02020EE0
	ldr r0, _080FE378 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r6, [r7]
	cmp r0, r6
	bne _080FE3BC
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080FE384
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FE3E2
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x2a
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FE37C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080FE380 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080FE3E2
	.align 2, 0
_080FE374: .4byte gUnk_02020EE0
_080FE378: .4byte gUnk_0203AD3C
_080FE37C: .4byte 0xFFF7FFFF
_080FE380: .4byte 0x0400000A
_080FE384:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FE3E2
	movs r0, #0x2a
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FE3B4 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080FE3B8 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080FE3E2
	.align 2, 0
_080FE3B4: .4byte 0xFFF7FFFF
_080FE3B8: .4byte 0x0400000A
_080FE3BC:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _080FE3D8
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080FE3D8
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080FE3D8:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080FE3E2:
	ldr r2, _080FE424 @ =gUnk_02020EE0
	ldr r0, _080FE428 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	bne _080FE430
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FE438
	ldr r6, _080FE42C @ =0x00000391
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FE438
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FE438
	.align 2, 0
_080FE424: .4byte gUnk_02020EE0
_080FE428: .4byte gUnk_0203AD3C
_080FE42C: .4byte 0x00000391
_080FE430:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_080FE438:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080FE48C
	ldrb r0, [r3]
	cmp r0, #0
	beq _080FE456
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080FE456
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080FE456:
	cmp r3, #0
	beq _080FE48C
	ldr r0, _080FE488 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FE4F8
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FE4F8
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080FE5BE
	.align 2, 0
_080FE488: .4byte gUnk_03000510
_080FE48C:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080FE4F0 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _080FE4CA
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FE4CA
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FE4CA
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FE4CA
	movs r3, #4
_080FE4CA:
	ldr r0, _080FE4F4 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FE4F8
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FE4F8
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080FE5BE
	.align 2, 0
_080FE4F0: .4byte gUnk_02020EE0
_080FE4F4: .4byte gUnk_03000510
_080FE4F8:
	ldrh r1, [r5, #4]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _080FE570
	ldr r1, _080FE598 @ =gUnk_02020EE0
	ldr r0, _080FE59C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	mov r1, r8
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FE570
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #0
	bne _080FE530
	mov r0, r8
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FE570
_080FE530:
	ldr r1, _080FE5A0 @ =gUnk_08D60FA4
	ldr r4, _080FE5A4 @ =gSongTable
	ldr r2, _080FE5A8 @ =0x00000E14
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FE556
	movs r6, #0xe1
	lsls r6, r6, #4
	adds r0, r4, r6
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FE570
_080FE556:
	cmp r3, #0
	beq _080FE568
	ldr r0, _080FE5AC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FE570
_080FE568:
	movs r0, #0xe1
	lsls r0, r0, #1
	bl m4aSongNumStart
_080FE570:
	ldrh r0, [r5, #4]
	adds r0, #1
	movs r1, #0
	strh r0, [r5, #4]
	mov r0, r8
	adds r0, #0x83
	ldrb r0, [r0]
	subs r0, #0x1c
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _080FE5B0
	ldrh r0, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
	b _080FE5BE
	.align 2, 0
_080FE598: .4byte gUnk_02020EE0
_080FE59C: .4byte gUnk_0203AD3C
_080FE5A0: .4byte gUnk_08D60FA4
_080FE5A4: .4byte gSongTable
_080FE5A8: .4byte 0x00000E14
_080FE5AC: .4byte gUnk_0203AD10
_080FE5B0:
	ldrh r0, [r5, #6]
	movs r1, #4
	orrs r0, r1
	strh r0, [r5, #6]
	adds r0, r5, #0
	bl sub_0806FAC8
_080FE5BE:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FE5CC
sub_080FE5CC: @ 0x080FE5CC
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r4, r0, #0
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
	ldr r0, _080FE600 @ =sub_080FE76C
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080FE604 @ =sub_081001D8
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FE608
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FE610
	.align 2, 0
_080FE600: .4byte sub_080FE76C
_080FE604: .4byte sub_081001D8
_080FE608:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FE610:
	adds r6, r0, #0
	bl sub_0803E380
	movs r5, #0
	movs r0, #2
	strb r0, [r6]
	ldr r0, [r4, #0x40]
	str r0, [r6, #0x40]
	ldr r0, [r4, #0x44]
	str r0, [r6, #0x44]
	str r4, [r6, #0x70]
	strh r5, [r6, #4]
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r1, [r0]
	adds r0, r6, #0
	adds r0, #0x60
	strh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r6, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _080FE6A8 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r3, #1
	adds r0, r3, #0
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FE660
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r6, #8]
_080FE660:
	adds r0, r6, #0
	adds r0, #0x63
	strb r3, [r0]
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #0x15
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r6, #8]
	ldr r0, _080FE6AC @ =0x20040043
	str r0, [r6, #0x68]
	ldr r0, [r6, #0x5c]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r6, #0x5c]
	adds r0, r6, #0
	adds r0, #0x52
	strh r5, [r0]
	ldr r0, [r6, #0x44]
	movs r1, #0x80
	lsls r1, r1, #4
	adds r0, r0, r1
	str r0, [r6, #0x44]
	adds r0, r7, #0
	ands r0, r3
	cmp r0, #0
	beq _080FE6B0
	movs r0, #0x74
	strh r0, [r6, #4]
	adds r1, r6, #0
	adds r1, #0x50
	movs r0, #0xc0
	b _080FE6BC
	.align 2, 0
_080FE6A8: .4byte gUnk_03000510
_080FE6AC: .4byte 0x20040043
_080FE6B0:
	movs r0, #0x80
	strh r0, [r6, #4]
	adds r1, r6, #0
	adds r1, #0x50
	movs r0, #0xc0
	lsls r0, r0, #1
_080FE6BC:
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r2, #1
	ands r0, r2
	cmp r0, #0
	beq _080FE6E4
	ldr r0, [r6, #0x40]
	ldr r3, _080FE6E0 @ =0xFFFFEE00
	adds r0, r0, r3
	str r0, [r6, #0x40]
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
	ldr r0, [r6, #8]
	orrs r0, r2
	str r0, [r6, #8]
	b _080FE6EE
	.align 2, 0
_080FE6E0: .4byte 0xFFFFEE00
_080FE6E4:
	ldr r0, [r6, #0x40]
	movs r1, #0x90
	lsls r1, r1, #5
	adds r0, r0, r1
	str r0, [r6, #0x40]
_080FE6EE:
	movs r5, #1
	ands r5, r7
	adds r0, r6, #0
	adds r0, #0x62
	strb r5, [r0]
	movs r1, #0xc
	rsbs r1, r1, #0
	movs r2, #0x80
	rsbs r2, r2, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r6, #0
	movs r3, #0xc
	bl sub_0803E2B0
	movs r2, #2
	rsbs r2, r2, #0
	movs r0, #2
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r2, #0
	movs r3, #2
	bl sub_0803E308
	lsls r4, r5, #2
	adds r5, r4, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_080FE954
	adds r1, r4, #1
	adds r0, r6, #0
	bl sub_080FE954
	adds r1, r4, #2
	adds r0, r6, #0
	bl sub_080FE954
	adds r4, #3
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_080FE954
	adds r0, r6, #0
	adds r1, r7, #0
	bl sub_080FEEC0
	adds r0, r6, #0
	movs r1, #0
	bl sub_080FF3F4
	adds r0, r6, #0
	movs r1, #1
	bl sub_080FF3F4
	movs r0, #4
	adds r1, r6, #0
	bl sub_0806FE64
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080FE76C
sub_080FE76C: @ 0x080FE76C
	push {r4, r5, lr}
	ldr r0, _080FE788 @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FE78C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FE794
	.align 2, 0
_080FE788: .4byte gCurTask
_080FE78C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FE794:
	adds r4, r0, #0
	ldr r0, [r4, #0x70]
	adds r3, r4, #0
	adds r3, #0x60
	ldrh r2, [r3]
	ldr r5, _080FE7FC @ =0x0000FFFF
	cmp r2, r5
	beq _080FE7B6
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080FE7B6
	adds r0, r5, #0
	orrs r0, r2
	strh r0, [r3]
_080FE7B6:
	ldr r0, [r4, #0x70]
	cmp r0, #0
	beq _080FE7D4
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _080FE7D4
	movs r0, #0
	str r0, [r4, #0x70]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
_080FE7D4:
	adds r0, r4, #0
	bl sub_0806F780
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080FE7E2
	b _080FE946
_080FE7E2:
	ldrh r0, [r4, #4]
	subs r1, r0, #1
	strh r1, [r4, #4]
	lsls r0, r1, #0x10
	cmp r0, #0
	bne _080FE800
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
	b _080FE946
	.align 2, 0
_080FE7FC: .4byte 0x0000FFFF
_080FE800:
	movs r0, #0xf
	ands r1, r0
	cmp r1, #0
	bne _080FE870
	ldr r1, _080FE8BC @ =gUnk_02020EE0
	ldr r0, _080FE8C0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FE870
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FE834
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _080FE870
_080FE834:
	ldr r1, _080FE8C4 @ =gUnk_08D60FA4
	ldr r5, _080FE8C8 @ =gSongTable
	ldr r2, _080FE8CC @ =0x00000E1C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _080FE858
	ldr r1, _080FE8D0 @ =0x00000E18
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _080FE870
_080FE858:
	cmp r3, #0
	beq _080FE86A
	ldr r0, _080FE8D4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080FE870
_080FE86A:
	ldr r0, _080FE8D8 @ =0x000001C3
	bl m4aSongNumStart
_080FE870:
	ldr r1, [r4, #8]
	movs r0, #4
	orrs r1, r0
	str r1, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FE892
	movs r2, #4
	ldrsh r0, [r4, r2]
	cmp r0, #0xc
	bne _080FE892
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r1, r0
	str r1, [r4, #8]
_080FE892:
	ldr r0, [r4, #8]
	movs r1, #0x90
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	bne _080FE91E
	adds r1, r4, #0
	adds r1, #0x56
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _080FE8E4
	ldr r2, _080FE8DC @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _080FE8E0 @ =0x0000065E
	adds r0, r0, r1
	ldrb r1, [r0]
	b _080FE8E6
	.align 2, 0
_080FE8BC: .4byte gUnk_02020EE0
_080FE8C0: .4byte gUnk_0203AD3C
_080FE8C4: .4byte gUnk_08D60FA4
_080FE8C8: .4byte gSongTable
_080FE8CC: .4byte 0x00000E1C
_080FE8D0: .4byte 0x00000E18
_080FE8D4: .4byte gUnk_0203AD10
_080FE8D8: .4byte 0x000001C3
_080FE8DC: .4byte gCurLevelInfo
_080FE8E0: .4byte 0x0000065E
_080FE8E4:
	movs r1, #0xff
_080FE8E6:
	cmp r1, #0xff
	beq _080FE91E
	lsls r3, r1, #6
	ldrb r0, [r4]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _080FE94C @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r2, [r4]
	adds r1, r1, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080FE950 @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r4, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_080FE91E:
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	bne _080FE946
	adds r0, r4, #0
	adds r0, #0x50
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	str r0, [r4, #0x40]
	adds r0, r4, #0
	adds r0, #0x52
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r4, #0x44]
	subs r0, r0, r1
	str r0, [r4, #0x44]
_080FE946:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080FE94C: .4byte gUnk_02022EB0
_080FE950: .4byte gUnk_02022F50

	thumb_func_start sub_080FE954
sub_080FE954: @ 0x080FE954
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, _080FE994 @ =sub_080FEA70
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080FE998 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FE99C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r6, r0, r1
	b _080FE9A4
	.align 2, 0
_080FE994: .4byte sub_080FEA70
_080FE998: .4byte sub_0803DCCC
_080FE99C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
_080FE9A4:
	adds r4, r6, #0
	adds r0, r4, #0
	bl sub_0803E3B0
	movs r3, #3
	strb r3, [r4]
	ldr r0, [r7, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r7, #0x44]
	str r0, [r4, #0x38]
	str r7, [r4, #0x44]
	adds r0, r7, #0
	adds r0, #0x60
	ldrh r0, [r0]
	movs r1, #0x42
	adds r1, r1, r4
	mov r8, r1
	movs r2, #0
	mov sl, r2
	strh r0, [r1]
	ldr r0, [r7, #8]
	movs r2, #1
	ands r0, r2
	ldrh r1, [r4, #6]
	orrs r0, r1
	strh r0, [r4, #6]
	mov r5, sb
	ands r5, r3
	adds r3, r4, #0
	adds r3, #0x40
	lsls r1, r5, #1
	strb r1, [r3]
	ldrh r0, [r4, #6]
	ands r2, r0
	cmp r2, #0
	bne _080FE9F0
	rsbs r0, r1, #0
	strb r0, [r3]
_080FE9F0:
	lsls r1, r5, #3
	orrs r1, r5
	lsls r1, r1, #0xa
	ldr r0, [r7, #0x44]
	subs r0, r0, r1
	str r0, [r6, #0x38]
	adds r1, r6, #0
	adds r1, #0xc
	ldr r5, _080FEA50 @ =0x00000397
	mov r0, sb
	str r0, [sp]
	movs r0, #0x19
	str r0, [sp, #4]
	adds r0, r6, #0
	movs r2, #0x1e
	adds r3, r5, #0
	bl sub_080709F8
	adds r4, r6, #0
	adds r4, #0x2b
	mov r1, sl
	strb r1, [r4]
	ldr r2, _080FEA54 @ =gUnk_02020EE0
	ldr r0, _080FEA58 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, r8
	ldrh r2, [r2]
	cmp r0, r2
	bne _080FEA5C
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FEA60
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	b _080FEA5E
	.align 2, 0
_080FEA50: .4byte 0x00000397
_080FEA54: .4byte gUnk_02020EE0
_080FEA58: .4byte gUnk_0203AD3C
_080FEA5C:
	mov r0, sl
_080FEA5E:
	strb r0, [r4]
_080FEA60:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080FEA70
sub_080FEA70: @ 0x080FEA70
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	ldr r2, _080FEA98 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FEA9C
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FEAA4
	.align 2, 0
_080FEA98: .4byte gCurTask
_080FEA9C:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FEAA4:
	adds r7, r0, #0
	adds r0, #0x40
	ldrb r0, [r0]
	str r0, [sp, #0x28]
	ldr r5, [r7, #0x44]
	ldrh r3, [r7, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080FEAC4
	ldr r0, [r2]
	bl TaskDestroy
	b _080FEEB0
_080FEAC4:
	ldr r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _080FEAD0
	adds r0, r1, #0
	b _080FEE42
_080FEAD0:
	ldr r2, _080FEB3C @ =gUnk_02020EE0
	ldr r0, _080FEB40 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x42
	ldrh r0, [r0]
	str r1, [sp, #0x2c]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FEB88
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080FEB4C
	ldr r0, [r7, #0xc]
	movs r2, #0x26
	adds r2, r2, r7
	mov r8, r2
	cmp r0, #0
	bne _080FEBB4
	ldrh r1, [r7, #0x18]
	ldrb r2, [r2]
	movs r0, #0x2a
	bl sub_0803DE54
	adds r4, r7, #0
	adds r4, #0xc
	str r0, [r7, #0xc]
	ldr r0, [r7, #0x14]
	ldr r1, _080FEB44 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080FEB48 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r7, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r7, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080FEBB4
	.align 2, 0
_080FEB3C: .4byte gUnk_02020EE0
_080FEB40: .4byte gUnk_0203AD3C
_080FEB44: .4byte 0xFFF7FFFF
_080FEB48: .4byte 0x0400000A
_080FEB4C:
	ldr r0, [r7, #0xc]
	movs r1, #0x26
	adds r1, r1, r7
	mov r8, r1
	cmp r0, #0
	bne _080FEBB4
	movs r0, #0x2a
	bl sub_081570B0
	adds r3, r7, #0
	adds r3, #0xc
	str r0, [r7, #0xc]
	ldr r0, [r7, #0x14]
	ldr r1, _080FEB80 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080FEB84 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r7, #1]
	mov r0, sp
	bl sub_0815521C
	b _080FEBB4
	.align 2, 0
_080FEB80: .4byte 0xFFF7FFFF
_080FEB84: .4byte 0x0400000A
_080FEB88:
	ldr r1, [r7, #0xc]
	cmp r1, #0
	beq _080FEBA4
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080FEBA4
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r7, #0xc]
_080FEBA4:
	ldr r0, [r7, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r7, #0x14]
	movs r2, #0x26
	adds r2, r2, r7
	mov r8, r2
_080FEBB4:
	ldr r2, _080FEBF4 @ =gUnk_02020EE0
	ldr r0, _080FEBF8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r1, [sp, #0x2c]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FEBFC
	adds r4, r7, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FEC04
	movs r0, #0x1e
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FEC04
	movs r0, #0x1e
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FEC04
	.align 2, 0
_080FEBF4: .4byte gUnk_02020EE0
_080FEBF8: .4byte gUnk_0203AD3C
_080FEBFC:
	adds r1, r7, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_080FEC04:
	ldr r0, [r5, #0x40]
	str r0, [r7, #0x34]
	mov r2, r8
	ldrb r0, [r2]
	subs r0, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bhi _080FEC2C
	ldrh r0, [r7, #6]
	movs r1, #4
	orrs r1, r0
	strh r1, [r7, #6]
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0x24
	bne _080FEC2C
	ldrb r0, [r2]
	adds r0, #0xe
	strb r0, [r2]
_080FEC2C:
	mov r2, r8
	ldrb r0, [r2]
	cmp r0, #3
	bhi _080FEC4A
	ldrh r0, [r7, #6]
	movs r1, #4
	orrs r1, r0
	strh r1, [r7, #6]
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0x12
	bne _080FEC4A
	ldrb r0, [r2]
	adds r0, #0xe
	strb r0, [r2]
_080FEC4A:
	ldr r3, [r7, #0x44]
	cmp r3, #0
	beq _080FEC9C
	ldrb r0, [r3]
	cmp r0, #0
	beq _080FEC68
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080FEC68
	movs r0, #0
	str r0, [r7, #0x44]
	movs r3, #0
_080FEC68:
	cmp r3, #0
	beq _080FEC9C
	ldr r0, _080FEC98 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FED0C
	ldrh r1, [r7, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FED0C
	adds r0, r7, #0
	bl sub_0803DBC8
	b _080FEEB0
	.align 2, 0
_080FEC98: .4byte gUnk_03000510
_080FEC9C:
	adds r4, r7, #0
	movs r3, #0
	ldr r2, _080FED04 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r5, [sp, #0x2c]
	ldrh r1, [r5]
	cmp r0, r1
	beq _080FECDC
	movs r3, #1
	movs r5, #0x82
	lsls r5, r5, #2
	adds r0, r2, r5
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FECDC
	movs r3, #2
	movs r5, #0xec
	lsls r5, r5, #2
	adds r0, r2, r5
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FECDC
	movs r3, #3
	movs r5, #0xab
	lsls r5, r5, #3
	adds r0, r2, r5
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FECDC
	movs r3, #4
_080FECDC:
	ldr r0, _080FED08 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FED0C
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FED0C
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080FEEB0
	.align 2, 0
_080FED04: .4byte gUnk_02020EE0
_080FED08: .4byte gUnk_03000510
_080FED0C:
	ldrh r1, [r7, #6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080FED24
	adds r0, r7, #0
	adds r0, #0xc
	ldr r1, [r7, #0x14]
	movs r2, #0x80
	lsls r2, r2, #3
	orrs r1, r2
	b _080FED2E
_080FED24:
	adds r0, r7, #0
	adds r0, #0xc
	ldr r1, [r7, #0x14]
	ldr r2, _080FEDB4 @ =0xFFFFFBFF
	ands r1, r2
_080FED2E:
	str r1, [r0, #8]
	mov sl, r0
	ldrh r3, [r7, #6]
	movs r0, #8
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	movs r0, #0x28
	adds r0, r0, r7
	mov sb, r0
	cmp r2, #0
	bne _080FEDD2
	adds r0, r7, #0
	adds r0, #0x27
	ldrb r1, [r0]
	adds r4, r0, #0
	mov r5, r8
	ldrb r5, [r5]
	cmp r1, r5
	bne _080FED5E
	ldrh r0, [r7, #0x24]
	ldrh r1, [r7, #0x18]
	cmp r0, r1
	beq _080FED74
_080FED5E:
	adds r0, r7, #0
	adds r0, #0x28
	ldrb r1, [r0]
	mov sb, r0
	cmp r1, #0
	beq _080FED74
	strb r2, [r7, #1]
	strh r2, [r7, #2]
	ldr r0, _080FEDB8 @ =0x0000FFFB
	ands r0, r3
	strh r0, [r7, #6]
_080FED74:
	mov r0, sl
	bl sub_08155128
	adds r2, r0, #0
	cmp r2, #0
	bne _080FEDBC
	ldrh r0, [r7, #6]
	movs r1, #2
	movs r3, #0
	orrs r1, r0
	strh r1, [r7, #6]
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _080FEDD2
	mov r5, sb
	ldrb r0, [r5]
	cmp r0, #0
	beq _080FEDD2
	movs r0, #0xff
	strb r0, [r4]
	ldrh r1, [r7, #6]
	ldr r0, _080FEDB8 @ =0x0000FFFB
	ands r0, r1
	strh r0, [r7, #6]
	strb r3, [r7, #1]
	strh r2, [r7, #2]
	mov r0, sl
	bl sub_08155128
	b _080FEDD2
	.align 2, 0
_080FEDB4: .4byte 0xFFFFFBFF
_080FEDB8: .4byte 0x0000FFFB
_080FEDBC:
	mov r0, sb
	ldrb r1, [r0]
	ldrh r0, [r7, #2]
	adds r0, r0, r1
	strh r0, [r7, #2]
	lsrs r0, r0, #4
	strb r0, [r7, #1]
	ldrh r1, [r7, #6]
	ldr r0, _080FEE48 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r7, #6]
_080FEDD2:
	ldr r2, [r7, #0x34]
	asrs r2, r2, #8
	ldr r3, _080FEE4C @ =gCurLevelInfo
	ldr r4, _080FEE50 @ =gUnk_0203AD3C
	ldrb r0, [r4]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	adds r6, r7, #0
	adds r6, #0x40
	movs r0, #0
	ldrsb r0, [r6, r0]
	adds r0, r0, r2
	movs r1, #0
	mov ip, r1
	strh r0, [r7, #0x1c]
	ldr r1, [r7, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r4]
	muls r0, r5, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r1, r1, r0
	adds r2, r7, #0
	adds r2, #0x41
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r0, r1
	strh r0, [r7, #0x1e]
	mov r5, sb
	ldrb r0, [r5]
	cmp r0, #0
	beq _080FEE2A
	mov r0, ip
	strb r0, [r6]
	strb r0, [r2]
_080FEE2A:
	mov r1, r8
	ldrb r0, [r1]
	ldrh r3, [r7, #6]
	cmp r0, #0xd
	bls _080FEE54
	movs r0, #2
	ands r0, r3
	cmp r0, #0
	beq _080FEE54
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
_080FEE42:
	orrs r0, r3
	strh r0, [r7, #6]
	b _080FEEB0
	.align 2, 0
_080FEE48: .4byte 0x0000FFFD
_080FEE4C: .4byte gCurLevelInfo
_080FEE50: .4byte gUnk_0203AD3C
_080FEE54:
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r3
	cmp r0, #0
	bne _080FEEAA
	ldr r2, _080FEE9C @ =gUnk_02020EE0
	ldrb r1, [r4]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r5, [sp, #0x2c]
	ldrh r5, [r5]
	cmp r0, r5
	bne _080FEEAA
	ldr r1, _080FEEA0 @ =gUnk_0203AD18
	ldrh r0, [r1]
	ldrh r2, [r7, #0x1c]
	adds r0, r0, r2
	strh r0, [r7, #0x1c]
	ldrh r0, [r1, #2]
	ldrh r5, [r7, #0x1e]
	adds r0, r0, r5
	strh r0, [r7, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080FEEA4
	mov r0, sl
	bl sub_081564D8
	b _080FEEAA
	.align 2, 0
_080FEE9C: .4byte gUnk_02020EE0
_080FEEA0: .4byte gUnk_0203AD18
_080FEEA4:
	mov r0, sl
	bl sub_0815604C
_080FEEAA:
	add r0, sp, #0x28
	ldrb r0, [r0]
	strb r0, [r6]
_080FEEB0:
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080FEEC0
sub_080FEEC0: @ 0x080FEEC0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
	ldr r0, _080FEEF8 @ =sub_080FEFB0
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080FEEFC @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FEF00
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _080FEF08
	.align 2, 0
_080FEEF8: .4byte sub_080FEFB0
_080FEEFC: .4byte sub_0803DCCC
_080FEF00:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_080FEF08:
	adds r0, r4, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r6, r4, #0
	adds r6, #0x42
	movs r1, #0
	mov r8, r1
	strh r0, [r6]
	ldr r0, [r5, #8]
	movs r2, #1
	ands r0, r2
	ldrh r1, [r4, #6]
	orrs r0, r1
	strh r0, [r4, #6]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r5, _080FEF94 @ =0x00000397
	adds r0, r7, #0
	ands r0, r2
	lsls r0, r0, #1
	adds r0, #8
	str r0, [sp]
	movs r0, #0x17
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x28
	adds r3, r5, #0
	bl sub_080709F8
	adds r4, #0x2b
	mov r0, r8
	strb r0, [r4]
	ldr r2, _080FEF98 @ =gUnk_02020EE0
	ldr r0, _080FEF9C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r6]
	cmp r0, r6
	bne _080FEFA0
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FEFA4
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FEFA4
	.align 2, 0
_080FEF94: .4byte 0x00000397
_080FEF98: .4byte gUnk_02020EE0
_080FEF9C: .4byte gUnk_0203AD3C
_080FEFA0:
	mov r1, r8
	strb r1, [r4]
_080FEFA4:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080FEFB0
sub_080FEFB0: @ 0x080FEFB0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	ldr r2, _080FEFD8 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FEFDC
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FEFE4
	.align 2, 0
_080FEFD8: .4byte gCurTask
_080FEFDC:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FEFE4:
	adds r6, r0, #0
	ldr r7, [r6, #0x44]
	ldrh r3, [r6, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080FEFFE
	ldr r0, [r2]
	bl TaskDestroy
	b _080FF3E4
_080FEFFE:
	ldr r0, [r7, #8]
	ands r0, r1
	cmp r0, #0
	beq _080FF00A
	adds r0, r1, #0
	b _080FF376
_080FF00A:
	ldr r2, _080FF074 @ =gUnk_02020EE0
	ldr r0, _080FF078 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x42
	ldrh r0, [r0]
	str r1, [sp, #0x28]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FF0BC
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080FF084
	ldr r0, [r6, #0xc]
	cmp r0, #0
	bne _080FF0E2
	ldrh r1, [r6, #0x18]
	adds r0, r6, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x28
	bl sub_0803DE54
	adds r4, r6, #0
	adds r4, #0xc
	str r0, [r6, #0xc]
	ldr r0, [r6, #0x14]
	ldr r1, _080FF07C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080FF080 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r6, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080FF0E2
	.align 2, 0
_080FF074: .4byte gUnk_02020EE0
_080FF078: .4byte gUnk_0203AD3C
_080FF07C: .4byte 0xFFF7FFFF
_080FF080: .4byte 0x0400000A
_080FF084:
	ldr r0, [r6, #0xc]
	cmp r0, #0
	bne _080FF0E2
	movs r0, #0x28
	bl sub_081570B0
	adds r3, r6, #0
	adds r3, #0xc
	str r0, [r6, #0xc]
	ldr r0, [r6, #0x14]
	ldr r1, _080FF0B4 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080FF0B8 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r6, #1]
	mov r0, sp
	bl sub_0815521C
	b _080FF0E2
	.align 2, 0
_080FF0B4: .4byte 0xFFF7FFFF
_080FF0B8: .4byte 0x0400000A
_080FF0BC:
	ldr r1, [r6, #0xc]
	cmp r1, #0
	beq _080FF0D8
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080FF0D8
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r6, #0xc]
_080FF0D8:
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r6, #0x14]
_080FF0E2:
	ldr r2, _080FF124 @ =gUnk_02020EE0
	ldr r0, _080FF128 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r2, [sp, #0x28]
	ldrh r2, [r2]
	cmp r0, r2
	bne _080FF130
	adds r4, r6, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FF138
	ldr r5, _080FF12C @ =0x00000397
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FF138
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FF138
	.align 2, 0
_080FF124: .4byte gUnk_02020EE0
_080FF128: .4byte gUnk_0203AD3C
_080FF12C: .4byte 0x00000397
_080FF130:
	adds r1, r6, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_080FF138:
	ldr r0, [r7, #0x40]
	str r0, [r6, #0x34]
	ldr r3, [r6, #0x44]
	cmp r3, #0
	beq _080FF190
	ldrb r0, [r3]
	cmp r0, #0
	beq _080FF15A
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080FF15A
	movs r0, #0
	str r0, [r6, #0x44]
	movs r3, #0
_080FF15A:
	cmp r3, #0
	beq _080FF190
	ldr r0, _080FF18C @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FF200
	ldrh r1, [r6, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FF200
	adds r0, r6, #0
	bl sub_0803DBC8
	b _080FF3E4
	.align 2, 0
_080FF18C: .4byte gUnk_03000510
_080FF190:
	adds r4, r6, #0
	movs r3, #0
	ldr r2, _080FF1F8 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r5, [sp, #0x28]
	ldrh r1, [r5]
	cmp r0, r1
	beq _080FF1D0
	movs r3, #1
	movs r5, #0x82
	lsls r5, r5, #2
	adds r0, r2, r5
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FF1D0
	movs r3, #2
	movs r5, #0xec
	lsls r5, r5, #2
	adds r0, r2, r5
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FF1D0
	movs r3, #3
	movs r5, #0xab
	lsls r5, r5, #3
	adds r0, r2, r5
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FF1D0
	movs r3, #4
_080FF1D0:
	ldr r0, _080FF1FC @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FF200
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FF200
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080FF3E4
	.align 2, 0
_080FF1F8: .4byte gUnk_02020EE0
_080FF1FC: .4byte gUnk_03000510
_080FF200:
	ldrh r0, [r6, #6]
	movs r1, #4
	orrs r1, r0
	strh r1, [r6, #6]
	adds r0, r6, #0
	adds r0, #0x26
	ldrb r1, [r0]
	mov sb, r0
	cmp r1, #0xa
	bne _080FF222
	movs r2, #4
	ldrsh r0, [r7, r2]
	cmp r0, #0x10
	bne _080FF222
	adds r0, r1, #1
	mov r5, sb
	strb r0, [r5]
_080FF222:
	mov r0, sb
	ldrb r1, [r0]
	cmp r1, #8
	bne _080FF238
	movs r2, #4
	ldrsh r0, [r7, r2]
	cmp r0, #0xa
	bne _080FF238
	adds r0, r1, #1
	mov r5, sb
	strb r0, [r5]
_080FF238:
	ldrh r1, [r6, #6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080FF250
	adds r0, r6, #0
	adds r0, #0xc
	ldr r1, [r6, #0x14]
	movs r2, #0x80
	lsls r2, r2, #3
	orrs r1, r2
	b _080FF25A
_080FF250:
	adds r0, r6, #0
	adds r0, #0xc
	ldr r1, [r6, #0x14]
	ldr r2, _080FF2E0 @ =0xFFFFFBFF
	ands r1, r2
_080FF25A:
	str r1, [r0, #8]
	mov sl, r0
	ldrh r3, [r6, #6]
	movs r0, #8
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	movs r0, #0x28
	adds r0, r0, r6
	mov r8, r0
	cmp r2, #0
	bne _080FF2FE
	adds r0, r6, #0
	adds r0, #0x27
	ldrb r1, [r0]
	adds r4, r0, #0
	mov r5, sb
	ldrb r5, [r5]
	cmp r1, r5
	bne _080FF28A
	ldrh r0, [r6, #0x24]
	ldrh r1, [r6, #0x18]
	cmp r0, r1
	beq _080FF2A0
_080FF28A:
	adds r0, r6, #0
	adds r0, #0x28
	ldrb r1, [r0]
	mov r8, r0
	cmp r1, #0
	beq _080FF2A0
	strb r2, [r6, #1]
	strh r2, [r6, #2]
	ldr r0, _080FF2E4 @ =0x0000FFFB
	ands r0, r3
	strh r0, [r6, #6]
_080FF2A0:
	mov r0, sl
	bl sub_08155128
	adds r2, r0, #0
	cmp r2, #0
	bne _080FF2E8
	ldrh r0, [r6, #6]
	movs r1, #2
	movs r3, #0
	orrs r1, r0
	strh r1, [r6, #6]
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _080FF2FE
	mov r5, r8
	ldrb r0, [r5]
	cmp r0, #0
	beq _080FF2FE
	movs r0, #0xff
	strb r0, [r4]
	ldrh r1, [r6, #6]
	ldr r0, _080FF2E4 @ =0x0000FFFB
	ands r0, r1
	strh r0, [r6, #6]
	strb r3, [r6, #1]
	strh r2, [r6, #2]
	mov r0, sl
	bl sub_08155128
	b _080FF2FE
	.align 2, 0
_080FF2E0: .4byte 0xFFFFFBFF
_080FF2E4: .4byte 0x0000FFFB
_080FF2E8:
	mov r0, r8
	ldrb r1, [r0]
	ldrh r0, [r6, #2]
	adds r0, r0, r1
	strh r0, [r6, #2]
	lsrs r0, r0, #4
	strb r0, [r6, #1]
	ldrh r1, [r6, #6]
	ldr r0, _080FF37C @ =0x0000FFFD
	ands r0, r1
	strh r0, [r6, #6]
_080FF2FE:
	ldr r2, [r6, #0x34]
	asrs r2, r2, #8
	ldr r3, _080FF380 @ =gCurLevelInfo
	ldr r4, _080FF384 @ =gUnk_0203AD3C
	ldrb r0, [r4]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	adds r7, r6, #0
	adds r7, #0x40
	movs r0, #0
	ldrsb r0, [r7, r0]
	adds r0, r0, r2
	movs r1, #0
	mov ip, r1
	strh r0, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r4]
	muls r0, r5, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r1, r1, r0
	adds r2, r6, #0
	adds r2, #0x41
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r0, r1
	strh r0, [r6, #0x1e]
	mov r5, r8
	ldrb r0, [r5]
	cmp r0, #0
	beq _080FF356
	mov r0, ip
	strb r0, [r7]
	strb r0, [r2]
_080FF356:
	mov r1, sb
	ldrb r0, [r1]
	cmp r0, #0xb
	beq _080FF364
	ldrh r3, [r6, #6]
	cmp r0, #9
	bne _080FF388
_080FF364:
	ldrh r1, [r6, #6]
	movs r0, #2
	ands r0, r1
	adds r3, r1, #0
	cmp r0, #0
	beq _080FF388
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
_080FF376:
	orrs r0, r3
	strh r0, [r6, #6]
	b _080FF3E4
	.align 2, 0
_080FF37C: .4byte 0x0000FFFD
_080FF380: .4byte gCurLevelInfo
_080FF384: .4byte gUnk_0203AD3C
_080FF388:
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r3
	cmp r0, #0
	bne _080FF3DE
	ldr r2, _080FF3D0 @ =gUnk_02020EE0
	ldrb r1, [r4]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r5, [sp, #0x28]
	ldrh r5, [r5]
	cmp r0, r5
	bne _080FF3DE
	ldr r1, _080FF3D4 @ =gUnk_0203AD18
	ldrh r0, [r1]
	ldrh r2, [r6, #0x1c]
	adds r0, r0, r2
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	ldrh r5, [r6, #0x1e]
	adds r0, r0, r5
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080FF3D8
	mov r0, sl
	bl sub_081564D8
	b _080FF3DE
	.align 2, 0
_080FF3D0: .4byte gUnk_02020EE0
_080FF3D4: .4byte gUnk_0203AD18
_080FF3D8:
	mov r0, sl
	bl sub_0815604C
_080FF3DE:
	adds r0, r6, #0
	bl sub_0806FAC8
_080FF3E4:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080FF3F4
sub_080FF3F4: @ 0x080FF3F4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov r8, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #8]
	movs r0, #0xc
	str r0, [sp, #0xc]
	ldr r0, _080FF434 @ =sub_080FF5B0
	ldr r2, _080FF438 @ =0x00003501
	ldr r1, _080FF43C @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FF440
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FF448
	.align 2, 0
_080FF434: .4byte sub_080FF5B0
_080FF438: .4byte 0x00003501
_080FF43C: .4byte sub_0803DCCC
_080FF440:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FF448:
	adds r6, r0, #0
	adds r7, r6, #0
	bl sub_0803E3B0
	movs r1, #0
	movs r0, #3
	strb r0, [r6]
	mov r2, r8
	ldr r0, [r2, #0x40]
	str r0, [r6, #0x34]
	ldr r0, [r2, #0x44]
	str r0, [r6, #0x38]
	str r2, [r6, #0x44]
	mov r0, r8
	adds r0, #0x60
	ldrh r0, [r0]
	adds r2, r6, #0
	adds r2, #0x42
	strh r0, [r2]
	strh r1, [r6, #4]
	mov ip, r1
	ldr r3, _080FF568 @ =gRngVal
	mov sb, r3
	ldr r4, _080FF56C @ =0x3C6EF35F
	mov sl, r4
_080FF47A:
	mov r0, ip
	lsls r5, r0, #3
	adds r4, r7, #0
	adds r4, #0x48
	adds r4, r4, r5
	mov r1, sb
	ldr r0, [r1]
	ldr r2, _080FF570 @ =0x00196225
	adds r3, r0, #0
	muls r3, r2, r3
	add r3, sl
	str r3, [r1]
	lsrs r2, r3, #0x10
	movs r0, #0x1f
	ands r2, r0
	movs r1, #0x10
	subs r1, r1, r2
	lsls r1, r1, #8
	mov r2, r8
	ldr r0, [r2, #0x40]
	adds r0, r0, r1
	str r0, [r4]
	adds r0, r7, #0
	adds r0, #0x4c
	adds r0, r0, r5
	ldr r1, [r2, #0x44]
	str r1, [r0]
	mov r4, ip
	lsls r2, r4, #1
	adds r1, r7, #0
	adds r1, #0x68
	adds r1, r1, r2
	ldr r4, _080FF570 @ =0x00196225
	adds r0, r3, #0
	muls r0, r4, r0
	add r0, sl
	mov r3, sb
	str r0, [r3]
	lsls r0, r0, #6
	lsrs r0, r0, #0x16
	movs r4, #0xc0
	lsls r4, r4, #2
	adds r0, r0, r4
	strh r0, [r1]
	adds r0, r7, #0
	adds r0, #0x70
	adds r0, r0, r2
	movs r1, #0
	strh r1, [r0]
	mov r0, ip
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov ip, r0
	cmp r0, #3
	bls _080FF47A
	ldr r2, [sp, #8]
	cmp r2, #0
	beq _080FF4F4
	movs r3, #0xd
	str r3, [sp, #0xc]
_080FF4F4:
	adds r1, r6, #0
	adds r1, #0xc
	ldr r5, _080FF574 @ =0x00000397
	ldr r4, [sp, #0xc]
	str r4, [sp]
	movs r0, #0x18
	str r0, [sp, #4]
	adds r0, r6, #0
	movs r2, #1
	adds r3, r5, #0
	bl sub_080709F8
	adds r4, r6, #0
	adds r4, #0x2b
	movs r3, #0
	strb r3, [r4]
	mov r1, r8
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FF528
	ldrh r1, [r6, #6]
	movs r0, #1
	orrs r0, r1
	strh r0, [r6, #6]
_080FF528:
	ldr r2, _080FF578 @ =gUnk_02020EE0
	ldr r0, _080FF57C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FF580
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FF582
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FF582
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FF582
	.align 2, 0
_080FF568: .4byte gRngVal
_080FF56C: .4byte 0x3C6EF35F
_080FF570: .4byte 0x00196225
_080FF574: .4byte 0x00000397
_080FF578: .4byte gUnk_02020EE0
_080FF57C: .4byte gUnk_0203AD3C
_080FF580:
	strb r3, [r4]
_080FF582:
	ldrh r1, [r6, #6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080FF592
	mov r2, r8
	ldr r0, [r2, #0x40]
	b _080FF596
_080FF592:
	mov r3, r8
	ldr r0, [r3, #0x40]
_080FF596:
	str r0, [r6, #0x34]
	mov r4, r8
	ldr r0, [r4, #0x44]
	str r0, [r6, #0x38]
	adds r0, r6, #0
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080FF5B0
sub_080FF5B0: @ 0x080FF5B0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x58
	ldr r2, _080FF5D8 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FF5DC
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FF5E4
	.align 2, 0
_080FF5D8: .4byte gCurTask
_080FF5DC:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FF5E4:
	adds r6, r0, #0
	ldr r0, [r6, #0x44]
	str r0, [sp, #0x28]
	str r6, [sp, #0x2c]
	ldrh r3, [r6, #6]
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r3
	cmp r0, #0
	beq _080FF600
	ldr r0, [r2]
	bl TaskDestroy
	b _080FFBB0
_080FF600:
	ldr r2, _080FF668 @ =gUnk_02020EE0
	ldr r0, _080FF66C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FF6B0
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080FF678
	ldr r0, [r6, #0xc]
	cmp r0, #0
	bne _080FF6D6
	ldrh r1, [r6, #0x18]
	adds r0, r6, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #1
	bl sub_0803DE54
	adds r5, r6, #0
	adds r5, #0xc
	str r0, [r6, #0xc]
	ldr r0, [r6, #0x14]
	ldr r1, _080FF670 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r5, #8]
	ldr r2, _080FF674 @ =0x0400000A
	adds r0, r5, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r6, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #8]
	b _080FF6D6
	.align 2, 0
_080FF668: .4byte gUnk_02020EE0
_080FF66C: .4byte gUnk_0203AD3C
_080FF670: .4byte 0xFFF7FFFF
_080FF674: .4byte 0x0400000A
_080FF678:
	ldr r0, [r6, #0xc]
	cmp r0, #0
	bne _080FF6D6
	movs r0, #1
	bl sub_081570B0
	adds r3, r6, #0
	adds r3, #0xc
	str r0, [r6, #0xc]
	ldr r0, [r6, #0x14]
	ldr r1, _080FF6A8 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080FF6AC @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r6, #1]
	mov r0, sp
	bl sub_0815521C
	b _080FF6D6
	.align 2, 0
_080FF6A8: .4byte 0xFFF7FFFF
_080FF6AC: .4byte 0x0400000A
_080FF6B0:
	ldr r1, [r6, #0xc]
	cmp r1, #0
	beq _080FF6CC
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080FF6CC
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r6, #0xc]
_080FF6CC:
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r6, #0x14]
_080FF6D6:
	ldr r2, _080FF71C @ =gUnk_02020EE0
	ldr r0, _080FF720 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x42
	ldrh r0, [r0]
	str r1, [sp, #0x3c]
	ldrh r1, [r1]
	cmp r0, r1
	bne _080FF728
	adds r4, r6, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FF730
	ldr r5, _080FF724 @ =0x00000397
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080FF730
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _080FF730
	.align 2, 0
_080FF71C: .4byte gUnk_02020EE0
_080FF720: .4byte gUnk_0203AD3C
_080FF724: .4byte 0x00000397
_080FF728:
	adds r1, r6, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_080FF730:
	ldr r0, [sp, #0x28]
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r2, [sp, #0x3c]
	strh r0, [r2]
	ldr r4, [sp, #0x28]
	ldr r3, [r4, #8]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r3, #0
	ands r0, r2
	cmp r0, #0
	beq _080FF758
	ldrh r0, [r6, #4]
	movs r1, #0x10
	orrs r0, r1
	strh r0, [r6, #4]
	ldrh r1, [r6, #6]
	adds r0, r2, #0
	b _080FFBAC
_080FF758:
	ldr r0, _080FF7BC @ =gUnk_03000510
	ldrb r2, [r0, #4]
	ldr r1, [sp, #0x28]
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FF7C0
	movs r0, #0x80
	lsls r0, r0, #6
	ands r3, r0
	cmp r3, #0
	bne _080FF7C0
	ldr r4, [r6, #0x34]
	ldr r5, [r6, #0x38]
	movs r7, #0
	str r7, [sp, #0x30]
	ldr r0, [sp, #0x2c]
	adds r0, #0x48
	str r0, [sp, #0x40]
	ldr r1, [sp, #0x2c]
	adds r1, #0x4c
	str r1, [sp, #0x44]
_080FF78E:
	ldr r2, [sp, #0x30]
	lsls r1, r2, #3
	ldr r7, [sp, #0x40]
	adds r0, r7, r1
	ldr r0, [r0]
	str r0, [r6, #0x34]
	ldr r0, [sp, #0x44]
	adds r1, r0, r1
	ldr r0, [r1]
	str r0, [r6, #0x38]
	adds r0, r6, #0
	bl sub_0803DBC8
	ldr r0, [sp, #0x30]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x30]
	cmp r0, #3
	bls _080FF78E
	str r4, [r6, #0x34]
	str r5, [r6, #0x38]
	b _080FFBB0
	.align 2, 0
_080FF7BC: .4byte gUnk_03000510
_080FF7C0:
	ldrh r1, [r6, #6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080FF7D8
	adds r0, r6, #0
	adds r0, #0xc
	ldr r1, [r6, #0x14]
	movs r2, #0x80
	lsls r2, r2, #3
	orrs r1, r2
	b _080FF7E2
_080FF7D8:
	adds r0, r6, #0
	adds r0, #0xc
	ldr r1, [r6, #0x14]
	ldr r2, _080FF868 @ =0xFFFFFBFF
	ands r1, r2
_080FF7E2:
	str r1, [r0, #8]
	str r0, [sp, #0x50]
	ldrh r4, [r6, #6]
	movs r0, #8
	ands r0, r4
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	movs r1, #0x28
	adds r1, r1, r6
	mov r8, r1
	cmp r3, #0
	bne _080FF886
	adds r0, r6, #0
	adds r0, #0x27
	adds r2, r6, #0
	adds r2, #0x26
	ldrb r1, [r0]
	adds r5, r0, #0
	ldrb r2, [r2]
	cmp r1, r2
	bne _080FF814
	ldrh r0, [r6, #0x24]
	ldrh r2, [r6, #0x18]
	cmp r0, r2
	beq _080FF82A
_080FF814:
	adds r0, r6, #0
	adds r0, #0x28
	ldrb r1, [r0]
	mov r8, r0
	cmp r1, #0
	beq _080FF82A
	strb r3, [r6, #1]
	strh r3, [r6, #2]
	ldr r0, _080FF86C @ =0x0000FFFB
	ands r0, r4
	strh r0, [r6, #6]
_080FF82A:
	ldr r0, [sp, #0x50]
	bl sub_08155128
	adds r2, r0, #0
	cmp r2, #0
	bne _080FF870
	ldrh r0, [r6, #6]
	movs r1, #2
	movs r3, #0
	orrs r1, r0
	strh r1, [r6, #6]
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _080FF886
	mov r4, r8
	ldrb r0, [r4]
	cmp r0, #0
	beq _080FF886
	movs r0, #0xff
	strb r0, [r5]
	ldrh r1, [r6, #6]
	ldr r0, _080FF86C @ =0x0000FFFB
	ands r0, r1
	strh r0, [r6, #6]
	strb r3, [r6, #1]
	strh r2, [r6, #2]
	ldr r0, [sp, #0x50]
	bl sub_08155128
	b _080FF886
	.align 2, 0
_080FF868: .4byte 0xFFFFFBFF
_080FF86C: .4byte 0x0000FFFB
_080FF870:
	mov r7, r8
	ldrb r1, [r7]
	ldrh r0, [r6, #2]
	adds r0, r0, r1
	strh r0, [r6, #2]
	lsrs r0, r0, #4
	strb r0, [r6, #1]
	ldrh r1, [r6, #6]
	ldr r0, _080FF94C @ =0x0000FFFD
	ands r0, r1
	strh r0, [r6, #6]
_080FF886:
	ldr r2, [r6, #0x34]
	asrs r2, r2, #8
	ldr r5, _080FF950 @ =gCurLevelInfo
	ldr r0, _080FF954 @ =gUnk_0203AD3C
	mov sb, r0
	ldrb r0, [r0]
	movs r3, #0xcd
	lsls r3, r3, #3
	muls r0, r3, r0
	adds r1, r5, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	adds r7, r6, #0
	adds r7, #0x40
	movs r0, #0
	ldrsb r0, [r7, r0]
	adds r0, r0, r2
	movs r1, #0
	mov sl, r1
	strh r0, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	asrs r1, r1, #8
	mov r2, sb
	ldrb r0, [r2]
	muls r0, r3, r0
	adds r3, r5, #0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r1, r1, r0
	adds r2, r6, #0
	adds r2, #0x41
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r0, r1
	strh r0, [r6, #0x1e]
	mov r4, r8
	ldrb r0, [r4]
	cmp r0, #0
	beq _080FF8E4
	mov r0, sl
	strb r0, [r7]
	strb r0, [r2]
_080FF8E4:
	movs r1, #0
	str r1, [sp, #0x30]
	ldr r2, [sp, #0x2c]
	adds r2, #0x48
	str r2, [sp, #0x40]
	ldr r4, [sp, #0x2c]
	adds r4, #0x4c
	str r4, [sp, #0x44]
	ldr r7, [sp, #0x2c]
	adds r7, #0x70
	str r7, [sp, #0x4c]
	ldr r0, [sp, #0x2c]
	adds r0, #0x68
	str r0, [sp, #0x48]
	str r5, [sp, #0x38]
_080FF902:
	movs r1, #4
	ldrsh r0, [r6, r1]
	ldr r2, [sp, #0x30]
	asrs r0, r2
	movs r4, #1
	ands r0, r4
	cmp r0, #0
	beq _080FF98C
	ldrh r1, [r6, #6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080FF958
	lsls r3, r2, #1
	ldr r7, [sp, #0x4c]
	adds r1, r7, r3
	ldrh r0, [r1]
	subs r0, #0x40
	strh r0, [r1]
	lsls r2, r2, #3
	ldr r1, [sp, #0x40]
	adds r0, r1, r2
	ldr r4, [sp, #0x28]
	ldr r1, [r4, #0x40]
	ldr r0, [r0]
	subs r1, r1, r0
	movs r0, #0x80
	lsls r0, r0, #5
	mov ip, r2
	cmp r1, r0
	ble _080FF9E8
	movs r1, #1
	ldr r7, [sp, #0x30]
	lsls r1, r7
	ldrh r0, [r6, #4]
	bics r0, r1
	b _080FF9E6
	.align 2, 0
_080FF94C: .4byte 0x0000FFFD
_080FF950: .4byte gCurLevelInfo
_080FF954: .4byte gUnk_0203AD3C
_080FF958:
	ldr r0, [sp, #0x30]
	lsls r3, r0, #1
	ldr r2, [sp, #0x4c]
	adds r1, r2, r3
	ldrh r0, [r1]
	adds r0, #0x40
	strh r0, [r1]
	ldr r4, [sp, #0x30]
	lsls r2, r4, #3
	ldr r7, [sp, #0x40]
	adds r0, r7, r2
	ldr r1, [r0]
	ldr r4, [sp, #0x28]
	ldr r0, [r4, #0x40]
	subs r1, r1, r0
	movs r0, #0x80
	lsls r0, r0, #5
	mov ip, r2
	cmp r1, r0
	ble _080FF9E8
	movs r1, #1
	ldr r7, [sp, #0x30]
	lsls r1, r7
	ldrh r0, [r6, #4]
	bics r0, r1
	b _080FF9E6
_080FF98C:
	ldrh r1, [r6, #6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080FF9B4
	ldr r0, [sp, #0x30]
	lsls r3, r0, #1
	ldr r2, [sp, #0x4c]
	adds r1, r2, r3
	ldrh r0, [r1]
	adds r0, #0x40
	strh r0, [r1]
	ldr r4, [sp, #0x30]
	lsls r2, r4, #3
	ldr r7, [sp, #0x40]
	adds r0, r7, r2
	ldr r1, [r0]
	ldr r4, [sp, #0x28]
	ldr r0, [r4, #0x40]
	b _080FF9D0
_080FF9B4:
	ldr r0, [sp, #0x30]
	lsls r3, r0, #1
	ldr r2, [sp, #0x4c]
	adds r1, r2, r3
	ldrh r0, [r1]
	subs r0, #0x40
	strh r0, [r1]
	ldr r4, [sp, #0x30]
	lsls r2, r4, #3
	ldr r7, [sp, #0x40]
	adds r0, r7, r2
	ldr r4, [sp, #0x28]
	ldr r1, [r4, #0x40]
	ldr r0, [r0]
_080FF9D0:
	subs r1, r1, r0
	movs r0, #0x80
	lsls r0, r0, #2
	mov ip, r2
	cmp r1, r0
	ble _080FF9E8
	movs r0, #1
	ldr r7, [sp, #0x30]
	lsls r0, r7
	ldrh r1, [r6, #4]
	orrs r0, r1
_080FF9E6:
	strh r0, [r6, #4]
_080FF9E8:
	ldr r0, [sp, #0x4c]
	adds r2, r0, r3
	movs r1, #0
	ldrsh r0, [r2, r1]
	movs r1, #0xc0
	lsls r1, r1, #2
	cmp r0, r1
	ble _080FF9FA
	strh r1, [r2]
_080FF9FA:
	movs r4, #0
	ldrsh r0, [r2, r4]
	ldr r1, _080FFA20 @ =0xFFFFFD00
	cmp r0, r1
	bge _080FFA06
	strh r1, [r2]
_080FFA06:
	ldrh r1, [r6, #6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080FFA24
	movs r7, #0
	ldrsh r0, [r2, r7]
	cmp r0, #0
	bge _080FFA32
	movs r0, #0xd0
	lsls r0, r0, #3
	b _080FFA36
	.align 2, 0
_080FFA20: .4byte 0xFFFFFD00
_080FFA24:
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	ble _080FFA32
	movs r0, #0xd0
	lsls r0, r0, #3
	b _080FFA36
_080FFA32:
	movs r0, #0xc0
	lsls r0, r0, #3
_080FFA36:
	strh r0, [r6, #0x20]
	ldr r5, [sp, #0x40]
	add r5, ip
	ldr r2, [sp, #0x4c]
	adds r2, r2, r3
	str r2, [sp, #0x34]
	movs r4, #0
	ldrsh r1, [r2, r4]
	ldr r0, [r5]
	adds r0, r0, r1
	str r0, [r5]
	ldr r7, [sp, #0x44]
	add r7, ip
	str r7, [sp, #0x54]
	ldr r0, [sp, #0x48]
	adds r4, r0, r3
	movs r1, #0
	ldrsh r0, [r4, r1]
	ldr r1, [r7]
	subs r1, r1, r0
	str r1, [r7]
	ldr r0, _080FFA7C @ =0x00008FFF
	cmp r1, r0
	bgt _080FFAC8
	ldrh r1, [r6, #4]
	movs r0, #0x10
	ands r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov r8, r0
	cmp r0, #0
	beq _080FFA80
	movs r0, #0
	strh r0, [r4]
	b _080FFB86
	.align 2, 0
_080FFA7C: .4byte 0x00008FFF
_080FFA80:
	ldr r3, _080FFB64 @ =gRngVal
	ldr r0, [r3]
	ldr r2, _080FFB68 @ =0x00196225
	mov sl, r2
	mov r2, sl
	muls r2, r0, r2
	ldr r7, _080FFB6C @ =0x3C6EF35F
	mov sb, r7
	add r2, sb
	str r2, [r3]
	lsrs r1, r2, #0x10
	movs r0, #0x1f
	ands r1, r0
	movs r0, #0x10
	subs r1, r0, r1
	lsls r1, r1, #8
	ldr r7, [sp, #0x28]
	ldr r0, [r7, #0x40]
	adds r0, r0, r1
	str r0, [r5]
	ldr r0, [r7, #0x44]
	ldr r1, [sp, #0x54]
	str r0, [r1]
	mov r0, sl
	muls r0, r2, r0
	add r0, sb
	str r0, [r3]
	lsls r0, r0, #6
	lsrs r0, r0, #0x16
	movs r2, #0xc0
	lsls r2, r2, #2
	adds r0, r0, r2
	strh r0, [r4]
	mov r7, r8
	ldr r4, [sp, #0x34]
	strh r7, [r4]
_080FFAC8:
	ldr r1, [sp, #0x40]
	add r1, ip
	ldr r0, [sp, #0x28]
	adds r0, #0x54
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #8
	ldr r2, [r1]
	adds r2, r2, r0
	asrs r2, r2, #8
	ldr r5, _080FFB70 @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r3, #0xcd
	lsls r3, r3, #3
	muls r0, r3, r0
	ldr r1, [sp, #0x38]
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r7, r2, r0
	strh r7, [r6, #0x1c]
	ldr r1, [sp, #0x44]
	add r1, ip
	ldr r0, [sp, #0x28]
	adds r0, #0x55
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #8
	ldr r1, [r1]
	adds r1, r1, r0
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r3, r0
	ldr r2, _080FFB74 @ =gUnk_02023540
	adds r0, r0, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r4, [r6, #6]
	movs r1, #0x80
	lsls r1, r1, #3
	adds r0, r1, #0
	ands r0, r4
	cmp r0, #0
	bne _080FFB86
	ldr r2, _080FFB78 @ =gUnk_02020EE0
	ldrb r1, [r5]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r2, [sp, #0x3c]
	ldrh r2, [r2]
	cmp r0, r2
	bne _080FFB86
	ldr r1, _080FFB7C @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r7, r0
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r7, #0x80
	lsls r7, r7, #7
	adds r0, r7, #0
	ands r0, r4
	cmp r0, #0
	beq _080FFB80
	ldr r0, [sp, #0x50]
	bl sub_081564D8
	b _080FFB86
	.align 2, 0
_080FFB64: .4byte gRngVal
_080FFB68: .4byte 0x00196225
_080FFB6C: .4byte 0x3C6EF35F
_080FFB70: .4byte gUnk_0203AD3C
_080FFB74: .4byte gUnk_02023540
_080FFB78: .4byte gUnk_02020EE0
_080FFB7C: .4byte gUnk_0203AD18
_080FFB80:
	ldr r0, [sp, #0x50]
	bl sub_0815604C
_080FFB86:
	ldr r0, [sp, #0x30]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x30]
	cmp r0, #3
	bhi _080FFB96
	b _080FF902
_080FFB96:
	ldr r1, [sp, #0x2c]
	ldr r0, [r1, #0x68]
	cmp r0, #0
	bne _080FFBB0
	ldr r0, [r1, #0x6c]
	cmp r0, #0
	bne _080FFBB0
	ldrh r1, [r6, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
_080FFBAC:
	orrs r0, r1
	strh r0, [r6, #6]
_080FFBB0:
	add sp, #0x58
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080FFBC0
sub_080FFBC0: @ 0x080FFBC0
	push {r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _080FFBF0 @ =sub_080FFC68
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _080FFBF4 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FFBF8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FFC00
	.align 2, 0
_080FFBF0: .4byte sub_080FFC68
_080FFBF4: .4byte sub_0803DCCC
_080FFBF8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FFC00:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x42
	strh r0, [r1]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FFC34
	ldr r0, [r4, #0x34]
	ldr r1, _080FFC30 @ =0xFFFFE000
	b _080FFC42
	.align 2, 0
_080FFC30: .4byte 0xFFFFE000
_080FFC34:
	ldrh r0, [r4, #6]
	movs r1, #1
	orrs r0, r1
	strh r0, [r4, #6]
	ldr r0, [r4, #0x34]
	movs r1, #0x80
	lsls r1, r1, #6
_080FFC42:
	adds r0, r0, r1
	str r0, [r4, #0x34]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r3, _080FFC64 @ =0x00000393
	movs r0, #0
	str r0, [sp]
	movs r0, #0xa
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #8
	bl sub_080709F8
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080FFC64: .4byte 0x00000393

	thumb_func_start sub_080FFC68
sub_080FFC68: @ 0x080FFC68
	push {r4, r5, r6, r7, lr}
	sub sp, #0x28
	ldr r2, _080FFC88 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080FFC8C
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _080FFC94
	.align 2, 0
_080FFC88: .4byte gCurTask
_080FFC8C:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_080FFC94:
	adds r5, r0, #0
	ldr r6, [r5, #0x44]
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _080FFCAE
	ldr r0, [r2]
	bl TaskDestroy
	b _080FFE9C
_080FFCAE:
	ldr r0, [r6, #8]
	ands r0, r1
	cmp r0, #0
	beq _080FFCBE
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _080FFE9C
_080FFCBE:
	ldr r2, _080FFD28 @ =gUnk_02020EE0
	ldr r0, _080FFD2C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r1, [r7]
	cmp r0, r1
	bne _080FFD70
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _080FFD38
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FFD96
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #8
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FFD30 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _080FFD34 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _080FFD96
	.align 2, 0
_080FFD28: .4byte gUnk_02020EE0
_080FFD2C: .4byte gUnk_0203AD3C
_080FFD30: .4byte 0xFFF7FFFF
_080FFD34: .4byte 0x0400000A
_080FFD38:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _080FFD96
	movs r0, #8
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _080FFD68 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _080FFD6C @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _080FFD96
	.align 2, 0
_080FFD68: .4byte 0xFFF7FFFF
_080FFD6C: .4byte 0x0400000A
_080FFD70:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _080FFD8C
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080FFD8C
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_080FFD8C:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_080FFD96:
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080FFDAC
	ldr r0, [r6, #0x40]
	ldr r2, _080FFDA8 @ =0xFFFFE000
	adds r0, r0, r2
	b _080FFDBC
	.align 2, 0
_080FFDA8: .4byte 0xFFFFE000
_080FFDAC:
	ldrh r0, [r5, #6]
	movs r1, #1
	orrs r1, r0
	strh r1, [r5, #6]
	ldr r0, [r6, #0x40]
	movs r1, #0x80
	lsls r1, r1, #6
	adds r0, r0, r1
_080FFDBC:
	str r0, [r5, #0x34]
	ldr r0, [r6, #0x44]
	str r0, [r5, #0x38]
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _080FFE14
	ldrb r0, [r3]
	cmp r0, #0
	beq _080FFDE0
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080FFDE0
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_080FFDE0:
	cmp r3, #0
	beq _080FFE14
	ldr r0, _080FFE10 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FFE80
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FFE80
	adds r0, r5, #0
	bl sub_0803DBC8
	b _080FFE9C
	.align 2, 0
_080FFE10: .4byte gUnk_03000510
_080FFE14:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _080FFE78 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _080FFE52
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FFE52
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FFE52
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _080FFE52
	movs r3, #4
_080FFE52:
	ldr r0, _080FFE7C @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _080FFE80
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080FFE80
	adds r0, r4, #0
	bl sub_0803DBC8
	b _080FFE9C
	.align 2, 0
_080FFE78: .4byte gUnk_02020EE0
_080FFE7C: .4byte gUnk_03000510
_080FFE80:
	ldrh r1, [r5, #6]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080FFE96
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
	b _080FFE9C
_080FFE96:
	adds r0, r5, #0
	bl sub_0806FAC8
_080FFE9C:
	add sp, #0x28
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080FFEA4
sub_080FFEA4: @ 0x080FFEA4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _080FFEC6
	adds r0, r4, #0
	bl sub_080FB694
	b _080FFEE8
_080FFEC6:
	ldr r2, _080FFEF0 @ =sub_080FFF84
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #0x41
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x20
	strh r0, [r4, #4]
_080FFEE8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080FFEF0: .4byte sub_080FFF84

	thumb_func_start sub_080FFEF4
sub_080FFEF4: @ 0x080FFEF4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080FFF28 @ =sub_080F6104
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x60
	strh r0, [r4, #4]
	adds r4, #0x85
	strb r2, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080FFF28: .4byte sub_080F6104

	thumb_func_start sub_080FFF2C
sub_080FFF2C: @ 0x080FFF2C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080FFF5C @ =sub_080F6300
	movs r1, #0x29
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r4, #0x85
	strb r2, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080FFF5C: .4byte sub_080F6300

	thumb_func_start sub_080FFF60
sub_080FFF60: @ 0x080FFF60
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080FFF80 @ =sub_080F5974
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r4, #0x52
	strh r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080FFF80: .4byte sub_080F5974

	thumb_func_start sub_080FFF84
sub_080FFF84: @ 0x080FFF84
	push {lr}
	adds r1, r0, #0
	ldrh r0, [r1, #4]
	subs r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080FFF9A
	adds r0, r1, #0
	bl sub_080F7B34
_080FFF9A:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080FFFA0
sub_080FFFA0: @ 0x080FFFA0
	adds r2, r0, #0
	adds r3, r2, #0
	adds r3, #0xc2
	movs r1, #0
	movs r0, #1
	strb r0, [r3]
	adds r0, r2, #0
	adds r0, #0xc0
	strb r1, [r0]
	subs r0, #0x22
	strb r1, [r0]
	bx lr

	thumb_func_start sub_080FFFB8
sub_080FFFB8: @ 0x080FFFB8
	push {r4, r5, lr}
	adds r4, r0, #0
	lsls r5, r1, #0x18
	lsrs r5, r5, #0x18
	ldr r2, _080FFFE4 @ =sub_080F99BC
	movs r1, #4
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x9e
	movs r1, #0
	strb r5, [r0]
	movs r0, #0xe
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x50
	strh r1, [r0]
	adds r4, #0x52
	strh r1, [r4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080FFFE4: .4byte sub_080F99BC

	thumb_func_start sub_080FFFE8
sub_080FFFE8: @ 0x080FFFE8
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0xc8
	movs r0, #0
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r2, _0810002C @ =sub_080F9A2C
	adds r0, r4, #0
	movs r1, #0x17
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _08100030
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _08100038
	.align 2, 0
_0810002C: .4byte sub_080F9A2C
_08100030:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_08100038:
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_08100048
sub_08100048: @ 0x08100048
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08100090 @ =sub_080FA9E8
	movs r1, #0x18
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x50
	movs r3, #0x80
	lsls r3, r3, #1
	strh r3, [r2]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08100076
	rsbs r0, r3, #0
	strh r0, [r2]
_08100076:
	ldr r0, [r4, #8]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08100084
	movs r0, #0
	strh r0, [r2]
_08100084:
	movs r0, #0x18
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08100090: .4byte sub_080FA9E8

	thumb_func_start sub_08100094
sub_08100094: @ 0x08100094
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _081000BC @ =sub_080FAC64
	movs r1, #0x17
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	movs r0, #0x18
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081000BC: .4byte sub_080FAC64

	thumb_func_start sub_081000C0
sub_081000C0: @ 0x081000C0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _081000EC @ =sub_081000F0
	movs r1, #0x1e
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	movs r0, #0xf4
	lsls r0, r0, #2
	strh r0, [r1]
	movs r0, #6
	strh r0, [r4, #4]
	adds r4, #0x9f
	strb r2, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081000EC: .4byte sub_081000F0

	thumb_func_start sub_081000F0
sub_081000F0: @ 0x081000F0
	push {lr}
	adds r1, r0, #0
	ldrh r0, [r1, #4]
	subs r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08100106
	adds r0, r1, #0
	bl sub_08100048
_08100106:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810010C
sub_0810010C: @ 0x0810010C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_080886A8
	adds r0, r4, #0
	movs r1, #0xc
	bl sub_08088700
	ldr r2, _08100168 @ =sub_080FB9FC
	adds r0, r4, #0
	movs r1, #0x2a
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1]
	adds r2, r4, #0
	adds r2, #0x52
	movs r0, #0xc0
	lsls r0, r0, #2
	strh r0, [r2]
	ldr r0, [r4, #0x40]
	ldr r2, _0810016C @ =0xFFFE9000
	adds r0, r0, r2
	asrs r0, r0, #5
	rsbs r0, r0, #0
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #0x1e
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #1
	eors r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08100168: .4byte sub_080FB9FC
_0810016C: .4byte 0xFFFE9000

	thumb_func_start sub_08100170
sub_08100170: @ 0x08100170
	push {lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0810018A
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08100192
_0810018A:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08100192:
	ldr r0, [r0, #0x44]
	adds r0, #0xbc
	movs r1, #0
	str r1, [r0]
	adds r0, r2, #0
	bl sub_0803DCCC
	pop {r0}
	bx r0

	thumb_func_start sub_081001A4
sub_081001A4: @ 0x081001A4
	push {lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081001BE
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081001C6
_081001BE:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081001C6:
	ldr r0, [r0, #0x44]
	adds r0, #0xb8
	movs r1, #0
	str r1, [r0]
	adds r0, r2, #0
	bl sub_0803DCCC
	pop {r0}
	bx r0

	thumb_func_start sub_081001D8
sub_081001D8: @ 0x081001D8
	push {r4, lr}
	adds r4, r0, #0
	ldrh r1, [r4, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081001F2
	ldrh r0, [r4, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081001FA
_081001F2:
	ldrh r1, [r4, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081001FA:
	bl sub_080700D8
	adds r0, r4, #0
	bl sub_0803DCCC
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CreateDarkMind
CreateDarkMind: @ 0x0810020C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _08100240 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08100244 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xe4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08100248
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08100250
	.align 2, 0
_08100240: .4byte ObjectMain
_08100244: .4byte ObjectDestroy
_08100248:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08100250:
	adds r5, r0, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, _081003C4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r6, #4
	ands r0, r6
	cmp r0, #0
	beq _0810026E
	adds r1, r5, #0
	adds r1, #0x87
	movs r0, #3
	strb r0, [r1]
_0810026E:
	ldr r0, [r5, #0xc]
	movs r4, #1
	orrs r0, r4
	orrs r0, r6
	str r0, [r5, #0xc]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #0x12
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r5, #8]
	ldr r2, _081003C8 @ =gUnk_08351608
	ldr r0, _081003CC @ =gUnk_0203AD30
	ldrb r1, [r0]
	subs r1, #1
	lsls r1, r1, #1
	adds r0, r5, #0
	adds r0, #0x87
	ldrb r0, [r0]
	lsls r0, r0, #3
	adds r1, r1, r0
	adds r1, r1, r2
	ldrh r0, [r1]
	adds r2, r5, #0
	adds r2, #0x80
	movs r3, #0
	movs r1, #0
	strh r0, [r2]
	adds r0, r5, #0
	adds r0, #0xd4
	strb r3, [r0]
	subs r0, #0x20
	str r1, [r0]
	adds r0, #4
	str r1, [r0]
	adds r0, #0x10
	str r1, [r0]
	subs r0, #0xc
	str r1, [r0]
	adds r0, #4
	str r1, [r0]
	adds r0, #4
	str r1, [r0]
	adds r0, #8
	str r1, [r0]
	adds r0, #9
	strb r3, [r0]
	adds r0, #1
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	ldrh r2, [r2]
	adds r0, #1
	strh r2, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #4
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	ldr r0, [r5, #8]
	orrs r0, r4
	str r0, [r5, #8]
	ldr r0, [r5, #0x5c]
	subs r1, #8
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	ldr r1, _081003D0 @ =0x001080A0
	orrs r0, r1
	str r0, [r5, #0x5c]
	movs r1, #0x1c
	rsbs r1, r1, #0
	movs r2, #0x18
	rsbs r2, r2, #0
	movs r0, #0x12
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #0x1c
	bl sub_0803E2B0
	movs r1, #0x28
	rsbs r1, r1, #0
	movs r2, #0x3c
	rsbs r2, r2, #0
	movs r0, #0x14
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #0x3c
	bl sub_0803E308
	adds r0, r5, #0
	bl ObjectInitSprite
	ldr r2, _081003D4 @ =gCurLevelInfo
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _081003D8 @ =0x0000065E
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r4, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	movs r2, #0
	bl sub_08002A44
	adds r0, r4, #0
	movs r1, #0
	bl sub_08002A1C
	ldr r2, _081003DC @ =gUnk_02020EE0
	ldr r0, _081003E0 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081003A6
	ldr r0, _081003E4 @ =gUnk_0203AD20
	ldr r0, [r0]
	ands r0, r6
	cmp r0, #0
	bne _081003A6
	adds r0, r4, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_081003A6:
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _081003E8 @ =sub_08104E04
	str r0, [r5, #0x7c]
	adds r0, r5, #0
	bl sub_081099D4
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_081003C4: .4byte gUnk_0203AD10
_081003C8: .4byte gUnk_08351608
_081003CC: .4byte gUnk_0203AD30
_081003D0: .4byte 0x001080A0
_081003D4: .4byte gCurLevelInfo
_081003D8: .4byte 0x0000065E
_081003DC: .4byte gUnk_02020EE0
_081003E0: .4byte gUnk_0203AD3C
_081003E4: .4byte gUnk_0203AD20
_081003E8: .4byte sub_08104E04

	thumb_func_start sub_081003EC
sub_081003EC: @ 0x081003EC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r5, r0, #0
	bl sub_0803D368
	adds r6, r0, #0
	adds r7, r5, #0
	adds r7, #0xac
	str r6, [r7]
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r6, #0xc]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	beq _08100418
	b _08100518
_08100418:
	adds r0, r5, #0
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08100518
	ldr r1, [r5, #0x40]
	ldr r2, [r5, #0x44]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r4, [r0]
	movs r3, #0x1a
	ldrsh r0, [r4, r3]
	mov r8, r0
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	adds r0, r6, #0
	mov r3, r8
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08100518
	mov r8, r5
	ldr r3, _08100524 @ =gCurLevelInfo
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	movs r2, #0xcd
	lsls r2, r2, #3
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa0
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa4
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa4
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa6
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa8
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xac
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r2, r5, #0
	adds r2, #0xaa
	strh r0, [r2]
	adds r0, r5, #0
	bl sub_081055B8
	adds r1, r5, #0
	adds r1, #0xcc
	str r0, [r1]
	movs r2, #0
	ldr r0, _08100528 @ =gUnk_0203AD34
	ldrb r0, [r0]
	cmp r0, #0
	bne _08100512
	ldr r0, _0810052C @ =gUnk_0203AD44
	ldrb r1, [r0]
	subs r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0xff
	beq _08100502
	ldr r6, _08100530 @ =gUnk_02020EE0
	movs r4, #0xd4
	lsls r4, r4, #1
	ldr r3, _08100534 @ =0x00000103
_081004E8:
	adds r0, r1, #0
	muls r0, r4, r0
	adds r0, r0, r6
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0x1a
	bne _081004F8
	movs r2, #1
_081004F8:
	subs r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0xff
	bne _081004E8
_08100502:
	cmp r2, #0
	bne _08100512
	adds r0, r5, #0
	bl sub_08107A48
	mov r1, r8
	adds r1, #0xc8
	str r0, [r1]
_08100512:
	adds r0, r5, #0
	bl sub_08109C40
_08100518:
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08100524: .4byte gCurLevelInfo
_08100528: .4byte gUnk_0203AD34
_0810052C: .4byte gUnk_0203AD44
_08100530: .4byte gUnk_02020EE0
_08100534: .4byte 0x00000103

	thumb_func_start sub_08100538
sub_08100538: @ 0x08100538
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r4, r0, #0
	adds r5, r4, #0
	movs r0, #2
	mov sb, r0
	movs r6, #2
	mov ip, r6
	movs r7, #4
	movs r1, #2
	str r1, [sp]
	movs r2, #2
	str r2, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	mov sl, r0
	movs r1, #4
	str r1, [sp, #0xc]
	movs r2, #4
	str r2, [sp, #0x10]
	movs r0, #0
	mov r8, r0
	ldr r2, _08100594 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08100598 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810059C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r0, #0x1f
	ands r3, r0
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _081005C4
	cmp r0, #1
	bgt _081005A0
	cmp r0, #0
	beq _081005A6
	b _081005F0
	.align 2, 0
_08100594: .4byte gRngVal
_08100598: .4byte 0x00196225
_0810059C: .4byte 0x3C6EF35F
_081005A0:
	cmp r0, #2
	beq _081005E2
	b _081005F0
_081005A6:
	movs r2, #4
	mov sb, r2
	movs r0, #6
	mov ip, r0
	movs r1, #0
	str r1, [sp, #4]
	movs r2, #0
	str r2, [sp, #0x10]
	movs r0, #0
	str r0, [sp, #0xc]
	mov sl, r0
	str r1, [sp, #8]
	movs r7, #0
	movs r6, #0
	b _08100646
_081005C4:
	movs r6, #4
	movs r2, #6
	mov ip, r2
	movs r0, #2
	str r0, [sp, #4]
	movs r1, #2
	str r1, [sp, #8]
	movs r2, #0
	str r2, [sp, #0x10]
	movs r0, #0
	str r0, [sp]
	mov sb, r0
	mov sl, r0
	movs r7, #0
	b _08100646
_081005E2:
	movs r6, #4
	movs r7, #6
	movs r1, #0
	str r1, [sp, #0xc]
	mov sl, r1
	mov ip, r1
	b _08100646
_081005F0:
	movs r2, #0
	str r2, [sp, #0xc]
	adds r0, r4, #0
	adds r0, #0x80
	str r0, [sp, #0x14]
	ldr r1, _08100664 @ =gUnk_08351608
	ldr r0, _08100668 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0x18
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	ldr r1, [sp, #0x14]
	movs r2, #0
	ldrsh r1, [r1, r2]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _08100646
	movs r0, #1
	mov sb, r0
	movs r6, #3
	mov ip, r0
	movs r7, #4
	movs r1, #1
	str r1, [sp]
	movs r2, #1
	str r2, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	movs r1, #4
	mov sl, r1
	movs r2, #4
	str r2, [sp, #0x10]
	mov r8, r6
	adds r0, r5, #0
	adds r0, #0xe3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08100646
	movs r0, #0xc
	mov r8, r0
_08100646:
	mov r1, r8
	subs r0, r3, r1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _0810066C
	adds r1, r5, #0
	adds r1, #0xe3
	movs r0, #1
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_08109BD0
	b _08100796
	.align 2, 0
_08100664: .4byte gUnk_08351608
_08100668: .4byte gUnk_0203AD30
_0810066C:
	mov r2, sb
	subs r0, r3, r2
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _08100680
	adds r0, r4, #0
	bl sub_08103A00
	b _08100796
_08100680:
	subs r0, r3, r6
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _0810069A
	adds r0, r4, #0
	bl sub_08103A00
	adds r1, r5, #0
	adds r1, #0xda
	movs r0, #2
	strb r0, [r1]
	b _08100796
_0810069A:
	movs r1, #2
	subs r0, r3, r1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _081006B6
	adds r0, r4, #0
	bl sub_08103A00
	adds r1, r5, #0
	adds r1, #0xda
	movs r0, #3
	strb r0, [r1]
	b _08100796
_081006B6:
	ldr r2, [sp, #4]
	subs r0, r3, r2
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _081006D2
	adds r0, r4, #0
	bl sub_08103A00
	adds r1, r5, #0
	adds r1, #0xda
	movs r0, #5
	strb r0, [r1]
	b _08100796
_081006D2:
	mov r1, ip
	subs r0, r3, r1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _081006E6
	adds r0, r4, #0
	bl sub_08103FC0
	b _08100796
_081006E6:
	subs r0, r3, r7
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _08100708
	adds r0, r4, #0
	bl sub_08103FC0
	adds r1, r5, #0
	adds r1, #0xda
	movs r0, #7
	strb r0, [r1]
	subs r1, #2
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	b _08100796
_08100708:
	ldr r2, [sp]
	subs r0, r3, r2
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _0810071C
	adds r0, r4, #0
	bl sub_08109B64
	b _08100796
_0810071C:
	ldr r1, [sp, #8]
	subs r0, r3, r1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _08100738
	adds r0, r4, #0
	bl sub_08109B64
	adds r1, r5, #0
	adds r1, #0xda
	movs r0, #9
	strb r0, [r1]
	b _08100796
_08100738:
	mov r2, sl
	subs r0, r3, r2
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _0810074C
	adds r0, r4, #0
	bl sub_081044D0
	b _08100796
_0810074C:
	ldr r1, [sp, #0xc]
	subs r0, r3, r1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _08100760
	adds r0, r4, #0
	bl sub_08109B98
	b _08100796
_08100760:
	ldr r2, [sp, #0x10]
	subs r0, r3, r2
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _08100780
	adds r0, r4, #0
	bl sub_08109B98
	adds r1, r5, #0
	adds r1, #0xda
	movs r0, #0xb
	strb r0, [r1]
	subs r1, #6
	movs r0, #4
	strb r0, [r1]
	b _08100796
_08100780:
	adds r2, r4, #0
	adds r2, #0x85
	movs r0, #0
	movs r1, #1
	strb r1, [r2]
	adds r1, r5, #0
	adds r1, #0xda
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_081030A8
_08100796:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_081007A8
sub_081007A8: @ 0x081007A8
	push {lr}
	adds r3, r0, #0
	movs r0, #0xd5
	adds r0, r0, r3
	mov ip, r0
	ldrb r0, [r0]
	cmp r0, #3
	beq _081007E8
	cmp r0, #3
	ble _081007C0
	cmp r0, #5
	beq _08100820
_081007C0:
	ldr r2, _081007DC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _081007E0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _081007E4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08100838
	b _08100800
	.align 2, 0
_081007DC: .4byte gRngVal
_081007E0: .4byte 0x00196225
_081007E4: .4byte 0x3C6EF35F
_081007E8:
	ldr r2, _08100808 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810080C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08100810 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #7
	ands r1, r0
	cmp r1, #0
	beq _08100814
_08100800:
	adds r0, r3, #0
	bl sub_08100538
	b _08100852
	.align 2, 0
_08100808: .4byte gRngVal
_0810080C: .4byte 0x00196225
_08100810: .4byte 0x3C6EF35F
_08100814:
	mov r0, ip
	strb r1, [r0]
	adds r0, r3, #0
	bl sub_08101630
	b _08100852
_08100820:
	ldr r2, _08100840 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08100844 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08100848 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810084C
_08100838:
	adds r0, r3, #0
	bl sub_08101968
	b _08100852
	.align 2, 0
_08100840: .4byte gRngVal
_08100844: .4byte 0x00196225
_08100848: .4byte 0x3C6EF35F
_0810084C:
	adds r0, r3, #0
	bl sub_08101630
_08100852:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08100858
sub_08100858: @ 0x08100858
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	movs r5, #1
	adds r4, r3, #0
	adds r0, #0xd5
	ldrb r0, [r0]
	cmp r0, #5
	bhi _08100890
	lsls r0, r0, #2
	ldr r1, _08100874 @ =_08100878
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08100874: .4byte _08100878
_08100878: @ jump table
	.4byte _08100890 @ case 0
	.4byte _08100890 @ case 1
	.4byte _081008C8 @ case 2
	.4byte _081008C8 @ case 3
	.4byte _08100936 @ case 4
	.4byte _08100936 @ case 5
_08100890:
	ldr r2, _081008BC @ =gRngVal
	ldr r0, [r2]
	ldr r5, _081008C0 @ =0x00196225
	muls r0, r5, r0
	ldr r4, _081008C4 @ =0x3C6EF35F
	adds r1, r0, r4
	str r1, [r2]
	lsrs r0, r1, #0x10
	movs r4, #1
	ands r0, r4
	cmp r0, #0
	beq _08100918
	adds r0, r1, #0
	muls r0, r5, r0
	ldr r5, _081008C4 @ =0x3C6EF35F
	adds r0, r0, r5
	str r0, [r2]
	lsrs r0, r0, #0x10
	ands r0, r4
	cmp r0, #0
	bne _08100990
	b _08100984
	.align 2, 0
_081008BC: .4byte gRngVal
_081008C0: .4byte 0x00196225
_081008C4: .4byte 0x3C6EF35F
_081008C8:
	ldr r2, _081008F0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _081008F4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _081008F8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	movs r0, #7
	ands r2, r0
	adds r0, r4, #0
	adds r0, #0xd5
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #2
	bne _081008FC
	movs r5, #3
	movs r0, #2
	b _081008FE
	.align 2, 0
_081008F0: .4byte gRngVal
_081008F4: .4byte 0x00196225
_081008F8: .4byte 0x3C6EF35F
_081008FC:
	movs r0, #5
_081008FE:
	cmp r2, r5
	bhs _08100912
	adds r1, r3, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	adds r0, r3, #0
	bl sub_081030A8
	b _0810099E
_08100912:
	adds r0, r5, r0
	cmp r2, r0
	bge _08100920
_08100918:
	adds r0, r3, #0
	bl sub_08100538
	b _0810099E
_08100920:
	adds r0, #1
	cmp r2, r0
	bge _0810092E
	ldrb r0, [r4]
	cmp r0, #2
	beq _08100990
	b _08100984
_0810092E:
	adds r0, r3, #0
	bl sub_08101630
	b _0810099E
_08100936:
	ldr r2, _0810095C @ =gRngVal
	ldr r0, [r2]
	ldr r6, _08100960 @ =0x00196225
	muls r0, r6, r0
	ldr r5, _08100964 @ =0x3C6EF35F
	adds r1, r0, r5
	str r1, [r2]
	lsrs r0, r1, #0x10
	movs r5, #1
	ands r0, r5
	cmp r0, #0
	beq _08100968
	adds r0, r4, #0
	adds r0, #0xd5
	ldrb r0, [r0]
	cmp r0, #4
	beq _08100990
	b _08100984
	.align 2, 0
_0810095C: .4byte gRngVal
_08100960: .4byte 0x00196225
_08100964: .4byte 0x3C6EF35F
_08100968:
	adds r0, r1, #0
	muls r0, r6, r0
	ldr r1, _0810098C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	ands r0, r5
	cmp r0, #0
	beq _08100998
	adds r0, r4, #0
	adds r0, #0xd5
	ldrb r0, [r0]
	cmp r0, #4
	bne _08100990
_08100984:
	adds r0, r3, #0
	bl sub_08101A40
	b _0810099E
	.align 2, 0
_0810098C: .4byte 0x3C6EF35F
_08100990:
	adds r0, r3, #0
	bl sub_08101968
	b _0810099E
_08100998:
	adds r0, r3, #0
	bl sub_08101630
_0810099E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_081009A4
sub_081009A4: @ 0x081009A4
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r0, #0xd5
	ldrb r0, [r0]
	cmp r0, #5
	bhi _081009D8
	lsls r0, r0, #2
	ldr r1, _081009BC @ =_081009C0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_081009BC: .4byte _081009C0
_081009C0: @ jump table
	.4byte _081009D8 @ case 0
	.4byte _08100AE0 @ case 1
	.4byte _08100A80 @ case 2
	.4byte _08100A80 @ case 3
	.4byte _08100B36 @ case 4
	.4byte _08100B36 @ case 5
_081009D8:
	ldr r1, _081009F0 @ =gRngVal
	ldr r2, [r1]
	ldr r0, _081009F4 @ =0x00196225
	muls r0, r2, r0
	ldr r2, _081009F8 @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r1]
	lsrs r5, r0, #0x10
	movs r2, #0
	adds r6, r1, #0
	b _08100A00
	.align 2, 0
_081009F0: .4byte gRngVal
_081009F4: .4byte 0x00196225
_081009F8: .4byte 0x3C6EF35F
_081009FC:
	lsls r0, r3, #0x10
	lsrs r2, r0, #0x10
_08100A00:
	cmp r2, #3
	bhi _08100A16
	adds r3, r2, #1
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r1, r0, #4
	adds r0, r0, r1
	lsls r1, r0, #8
	adds r0, r0, r1
	cmp r5, r0
	bge _081009FC
_08100A16:
	cmp r2, #4
	bls _08100A1C
	b _08100BCA
_08100A1C:
	lsls r0, r2, #2
	ldr r1, _08100A28 @ =_08100A2C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08100A28: .4byte _08100A2C
_08100A2C: @ jump table
	.4byte _08100A40 @ case 0
	.4byte _08100BB8 @ case 1
	.4byte _08100A48 @ case 2
	.4byte _08100B0C @ case 3
	.4byte _08100A70 @ case 4
_08100A40:
	adds r0, r4, #0
	bl sub_08101968
	b _08100BCA
_08100A48:
	adds r3, r4, #0
	ldr r1, [r6]
	ldr r0, _08100A64 @ =0x00196225
	muls r0, r1, r0
_08100A50:
	ldr r1, _08100A68 @ =0x3C6EF35F
	adds r0, r0, r1
_08100A54:
	str r0, [r6]
	lsrs r1, r0, #0x10
	ldr r0, _08100A6C @ =0x00005554
	cmp r1, r0
	bhi _08100A60
	b _08100B62
_08100A60:
	b _08100B78
	.align 2, 0
_08100A64: .4byte 0x00196225
_08100A68: .4byte 0x3C6EF35F
_08100A6C: .4byte 0x00005554
_08100A70:
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_081030A8
	b _08100BCA
_08100A80:
	ldr r2, _08100AA8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08100AAC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08100AB0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #7
	ands r1, r0
	movs r3, #1
	adds r0, r5, #0
	adds r0, #0xd5
	ldrb r0, [r0]
	adds r6, r2, #0
	cmp r0, #2
	bne _08100AB4
	movs r3, #2
	movs r0, #3
	b _08100AB6
	.align 2, 0
_08100AA8: .4byte gRngVal
_08100AAC: .4byte 0x00196225
_08100AB0: .4byte 0x3C6EF35F
_08100AB4:
	movs r0, #5
_08100AB6:
	cmp r1, r3
	bhs _08100AC4
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	b _08100B26
_08100AC4:
	adds r0, r3, r0
	cmp r1, r0
	blt _08100B0C
	adds r3, r4, #0
	ldr r1, [r6]
	ldr r0, _08100AD8 @ =0x00196225
	muls r0, r1, r0
	ldr r2, _08100ADC @ =0x3C6EF35F
	adds r0, r0, r2
	b _08100A54
	.align 2, 0
_08100AD8: .4byte 0x00196225
_08100ADC: .4byte 0x3C6EF35F
_08100AE0:
	ldr r6, _08100B14 @ =gRngVal
	ldr r0, [r6]
	ldr r5, _08100B18 @ =0x00196225
	muls r0, r5, r0
	ldr r1, _08100B1C @ =0x3C6EF35F
	adds r2, r0, r1
	str r2, [r6]
	lsrs r0, r2, #0x10
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	beq _08100B2E
	adds r0, r2, #0
	muls r0, r5, r0
	ldr r2, _08100B1C @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r6]
	lsrs r1, r0, #0x10
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _08100B20
_08100B0C:
	adds r0, r4, #0
	bl sub_08100538
	b _08100BCA
	.align 2, 0
_08100B14: .4byte gRngVal
_08100B18: .4byte 0x00196225
_08100B1C: .4byte 0x3C6EF35F
_08100B20:
	adds r0, r4, #0
	adds r0, #0x85
	strb r1, [r0]
_08100B26:
	adds r0, r4, #0
	bl sub_081030A8
	b _08100BCA
_08100B2E:
	adds r3, r4, #0
	adds r0, r2, #0
	muls r0, r5, r0
	b _08100A50
_08100B36:
	ldr r6, _08100B68 @ =gRngVal
	ldr r0, [r6]
	ldr r5, _08100B6C @ =0x00196225
	muls r0, r5, r0
	ldr r1, _08100B70 @ =0x3C6EF35F
	adds r2, r0, r1
	str r2, [r6]
	lsrs r0, r2, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08100BA4
	adds r3, r4, #0
	adds r0, r2, #0
	muls r0, r5, r0
	ldr r2, _08100B70 @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r6]
	lsrs r1, r0, #0x10
	ldr r0, _08100B74 @ =0x00005554
	cmp r1, r0
	bhi _08100B78
_08100B62:
	movs r2, #0
	b _08100B82
	.align 2, 0
_08100B68: .4byte gRngVal
_08100B6C: .4byte 0x00196225
_08100B70: .4byte 0x3C6EF35F
_08100B74: .4byte 0x00005554
_08100B78:
	ldr r0, _08100BA0 @ =0x0000AAA9
	movs r2, #2
	cmp r1, r0
	bhi _08100B82
	movs r2, #1
_08100B82:
	adds r0, r3, #0
	adds r0, #0xd4
	movs r1, #0
	strb r2, [r0]
	adds r0, #4
	movs r2, #0
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	adds r0, #4
	strb r2, [r0]
	adds r0, r4, #0
	bl sub_08102938
	b _08100BCA
	.align 2, 0
_08100BA0: .4byte 0x0000AAA9
_08100BA4:
	adds r0, r2, #0
	muls r0, r5, r0
	ldr r1, _08100BC0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r6]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08100BC4
_08100BB8:
	adds r0, r4, #0
	bl sub_08101A40
	b _08100BCA
	.align 2, 0
_08100BC0: .4byte 0x3C6EF35F
_08100BC4:
	adds r0, r4, #0
	bl sub_08101968
_08100BCA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_08100BD0
sub_08100BD0: @ 0x08100BD0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r0, #0xd5
	ldrb r0, [r0]
	cmp r0, #6
	bhi _08100C0C
	lsls r0, r0, #2
	ldr r1, _08100BEC @ =_08100BF0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08100BEC: .4byte _08100BF0
_08100BF0: @ jump table
	.4byte _08100C0C @ case 0
	.4byte _08100D3C @ case 1
	.4byte _08100CC0 @ case 2
	.4byte _08100CC0 @ case 3
	.4byte _08100E1C @ case 4
	.4byte _08100E1C @ case 5
	.4byte _08100E90 @ case 6
_08100C0C:
	ldr r1, _08100C24 @ =gRngVal
	ldr r2, [r1]
	ldr r0, _08100C28 @ =0x00196225
	muls r0, r2, r0
	ldr r2, _08100C2C @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r1]
	lsrs r5, r0, #0x10
	movs r2, #0
	mov r8, r1
	b _08100C34
	.align 2, 0
_08100C24: .4byte gRngVal
_08100C28: .4byte 0x00196225
_08100C2C: .4byte 0x3C6EF35F
_08100C30:
	lsls r0, r3, #0x10
	lsrs r2, r0, #0x10
_08100C34:
	cmp r2, #3
	bhi _08100C4A
	adds r3, r2, #1
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r1, r0, #4
	adds r0, r0, r1
	lsls r1, r0, #8
	adds r0, r0, r1
	cmp r5, r0
	bge _08100C30
_08100C4A:
	cmp r2, #4
	bls _08100C50
	b _08100E96
_08100C50:
	lsls r0, r2, #2
	ldr r1, _08100C5C @ =_08100C60
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08100C5C: .4byte _08100C60
_08100C60: @ jump table
	.4byte _08100C74 @ case 0
	.4byte _08100C7C @ case 1
	.4byte _08100C84 @ case 2
	.4byte _08100D84 @ case 3
	.4byte _08100CB0 @ case 4
_08100C74:
	adds r0, r4, #0
	bl sub_08101968
	b _08100E96
_08100C7C:
	adds r0, r4, #0
	bl sub_08101A40
	b _08100E96
_08100C84:
	adds r3, r4, #0
	mov r0, r8
	ldr r1, [r0]
	ldr r0, _08100CA4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08100CA8 @ =0x3C6EF35F
	adds r0, r0, r1
	mov r2, r8
_08100C94:
	str r0, [r2]
	lsrs r1, r0, #0x10
	ldr r0, _08100CAC @ =0x00005554
	cmp r1, r0
	bhi _08100CA0
	b _08100E48
_08100CA0:
	b _08100E5C
	.align 2, 0
_08100CA4: .4byte 0x00196225
_08100CA8: .4byte 0x3C6EF35F
_08100CAC: .4byte 0x00005554
_08100CB0:
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_081030A8
	b _08100E96
_08100CC0:
	ldr r2, _08100CE8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08100CEC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08100CF0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #7
	ands r1, r0
	movs r6, #1
	adds r0, r5, #0
	adds r0, #0xd5
	ldrb r0, [r0]
	mov r8, r2
	cmp r0, #2
	bne _08100CF4
	movs r3, #4
	b _08100CF6
	.align 2, 0
_08100CE8: .4byte gRngVal
_08100CEC: .4byte 0x00196225
_08100CF0: .4byte 0x3C6EF35F
_08100CF4:
	movs r3, #5
_08100CF6:
	cmp r1, r6
	blo _08100DA0
	adds r0, r6, r3
	cmp r1, r0
	blt _08100D84
	cmp r1, #7
	bne _08100D22
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #2
	strb r0, [r1]
	adds r1, r5, #0
	adds r1, #0xda
	movs r0, #0xf
	strb r0, [r1]
	subs r1, #4
	movs r0, #0x7e
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x38
	strh r0, [r1]
	b _08100E7C
_08100D22:
	adds r3, r4, #0
	mov r2, r8
	ldr r1, [r2]
	ldr r0, _08100D34 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08100D38 @ =0x3C6EF35F
	adds r0, r0, r1
	b _08100C94
	.align 2, 0
_08100D34: .4byte 0x00196225
_08100D38: .4byte 0x3C6EF35F
_08100D3C:
	ldr r0, _08100D8C @ =gRngVal
	ldr r1, [r0]
	ldr r2, _08100D90 @ =0x00196225
	mov ip, r2
	mov r2, ip
	muls r2, r1, r2
	adds r1, r2, #0
	ldr r7, _08100D94 @ =0x3C6EF35F
	adds r1, r1, r7
	str r1, [r0]
	lsrs r3, r1, #0x10
	ldr r2, _08100D98 @ =0x00005554
	mov r8, r0
	cmp r3, r2
	bls _08100DB0
	ldr r6, _08100D9C @ =0x0000AAA9
	movs r0, #2
	cmp r3, r6
	bhi _08100D64
	movs r0, #1
_08100D64:
	cmp r0, #0
	beq _08100DB0
	mov r0, ip
	muls r0, r1, r0
	adds r0, r0, r7
	mov r1, r8
	str r0, [r1]
	lsrs r0, r0, #0x10
	cmp r0, r2
	bls _08100DA0
	movs r1, #2
	cmp r0, r6
	bhi _08100D80
	movs r1, #1
_08100D80:
	cmp r1, #0
	beq _08100DA0
_08100D84:
	adds r0, r4, #0
	bl sub_08100538
	b _08100E96
	.align 2, 0
_08100D8C: .4byte gRngVal
_08100D90: .4byte 0x00196225
_08100D94: .4byte 0x3C6EF35F
_08100D98: .4byte 0x00005554
_08100D9C: .4byte 0x0000AAA9
_08100DA0:
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_081030A8
	b _08100E96
_08100DB0:
	mov r2, r8
	ldr r1, [r2]
	ldr r0, _08100DF4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08100DF8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r3, r0, #0x10
	ldr r0, _08100DFC @ =0x00005554
	cmp r3, r0
	bls _08100E04
	ldr r0, _08100E00 @ =0x0000AAA9
	movs r1, #2
	cmp r3, r0
	bhi _08100DD0
	movs r1, #1
_08100DD0:
	cmp r1, #0
	beq _08100E04
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #2
	strb r0, [r1]
	adds r1, r5, #0
	adds r1, #0xda
	movs r0, #0xf
	strb r0, [r1]
	subs r1, #4
	movs r0, #0x7e
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x38
	strh r0, [r1]
	b _08100E7C
	.align 2, 0
_08100DF4: .4byte 0x00196225
_08100DF8: .4byte 0x3C6EF35F
_08100DFC: .4byte 0x00005554
_08100E00: .4byte 0x0000AAA9
_08100E04:
	adds r3, r4, #0
	mov r2, r8
	ldr r1, [r2]
	ldr r0, _08100E14 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08100E18 @ =0x3C6EF35F
	adds r0, r0, r1
	b _08100C94
	.align 2, 0
_08100E14: .4byte 0x00196225
_08100E18: .4byte 0x3C6EF35F
_08100E1C:
	ldr r5, _08100E4C @ =gRngVal
	ldr r0, [r5]
	ldr r6, _08100E50 @ =0x00196225
	muls r0, r6, r0
	ldr r1, _08100E54 @ =0x3C6EF35F
	adds r2, r0, r1
	str r2, [r5]
	lsrs r0, r2, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08100E88
	adds r3, r4, #0
	adds r0, r2, #0
	muls r0, r6, r0
	ldr r2, _08100E54 @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r5]
	lsrs r1, r0, #0x10
	ldr r0, _08100E58 @ =0x00005554
	cmp r1, r0
	bhi _08100E5C
_08100E48:
	movs r2, #0
	b _08100E66
	.align 2, 0
_08100E4C: .4byte gRngVal
_08100E50: .4byte 0x00196225
_08100E54: .4byte 0x3C6EF35F
_08100E58: .4byte 0x00005554
_08100E5C:
	ldr r0, _08100E84 @ =0x0000AAA9
	movs r2, #2
	cmp r1, r0
	bhi _08100E66
	movs r2, #1
_08100E66:
	adds r0, r3, #0
	adds r0, #0xd4
	movs r1, #0
	strb r2, [r0]
	adds r0, #4
	movs r2, #0
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	adds r0, #4
	strb r2, [r0]
_08100E7C:
	adds r0, r4, #0
	bl sub_08102938
	b _08100E96
	.align 2, 0
_08100E84: .4byte 0x0000AAA9
_08100E88:
	adds r0, r4, #0
	bl sub_0810181C
	b _08100E96
_08100E90:
	adds r0, r4, #0
	bl sub_08101630
_08100E96:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08100EA0
sub_08100EA0: @ 0x08100EA0
	push {r4, r5, lr}
	sub sp, #0xc
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _08100F0C @ =sub_08100F18
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, _08100F10 @ =0xFFFFD000
	str r0, [r4, #0x44]
	adds r2, r4, #0
	adds r2, #0x52
	movs r1, #0
	ldr r0, _08100F14 @ =0x0000FF80
	strh r0, [r2]
	movs r0, #0xb4
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r1, [r0]
	subs r0, #0x18
	ldrb r0, [r0]
	cmp r0, #3
	bne _08100EE0
	movs r0, #0x96
	lsls r0, r0, #1
	strh r0, [r4, #4]
_08100EE0:
	adds r0, r5, #0
	adds r0, #0xe0
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r0]
	subs r0, #0xb1
	ldrb r0, [r0]
	movs r1, #0xe6
	lsls r1, r1, #2
	movs r3, #0x18
	rsbs r3, r3, #0
	str r3, [sp]
	str r3, [sp, #4]
	str r2, [sp, #8]
	movs r2, #0
	bl sub_0803CFC4
	add sp, #0xc
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08100F0C: .4byte sub_08100F18
_08100F10: .4byte 0xFFFFD000
_08100F14: .4byte 0x0000FF80

	thumb_func_start sub_08100F18
sub_08100F18: @ 0x08100F18
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r5, r0, #0
	mov sb, r5
	ldr r0, [r5, #8]
	movs r7, #4
	orrs r0, r7
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x9f
	ldrb r4, [r0]
	cmp r4, #0
	bne _08100F3A
	b _08101300
_08100F3A:
	ldr r2, _08101098 @ =gUnk_08357256
	adds r3, r5, #0
	adds r3, #0x9e
	ldrb r0, [r3]
	lsrs r0, r0, #4
	movs r1, #3
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	adds r1, r5, #0
	adds r1, #0x52
	strh r0, [r1]
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	adds r0, r5, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #2
	bls _08100F66
	b _081010B4
_08100F66:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0xb4
	bne _0810104E
	adds r0, r5, #0
	bl sub_08034E14
	adds r1, r0, #0
	cmp r1, #0
	beq _08100F7E
	movs r0, #0
	strb r0, [r1, #9]
_08100F7E:
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r4, [r0]
	adds r3, r4, #0
	subs r3, #0x38
	ldr r2, _0810109C @ =gCurLevelInfo
	subs r0, #0x2c
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r2, _081010A0 @ =0x0000065E
	adds r0, r0, r2
	ldrb r6, [r0]
	lsls r3, r3, #0x10
	asrs r1, r3, #0x10
	cmp r1, #0
	blt _0810104E
	ldr r0, _081010A4 @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _0810104E
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	bne _0810104E
	adds r0, r4, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r3
	adds r7, r5, #0
	adds r7, #0x60
	cmp r0, #0xf
	bls _0810100C
	movs r4, #1
_08100FD4:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _08100FD4
	adds r0, r6, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	movs r2, #0
	bl sub_08002A44
_0810100C:
	ldr r1, _081010A4 @ =gUnk_08352D80
	mov r2, r8
	asrs r0, r2, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r6, #0
	bl sub_08002A1C
	ldr r2, _081010A8 @ =gUnk_02020EE0
	ldr r0, _081010AC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _0810104E
	ldr r0, _081010B0 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _0810104E
	adds r0, r6, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_0810104E:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0x96
	bne _0810105C
	adds r0, r5, #0
	bl sub_081059A8
_0810105C:
	movs r2, #4
	ldrsh r0, [r5, r2]
	cmp r0, #0xb4
	ble _08101066
	b _081012B4
_08101066:
	mov r4, sb
	adds r4, #0xe0
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _08101074
	b _081012B4
_08101074:
	adds r0, r5, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	movs r1, #0xe6
	lsls r1, r1, #2
	movs r3, #0x18
	rsbs r3, r3, #0
	str r3, [sp]
	str r3, [sp, #4]
	ldrh r2, [r4]
	str r2, [sp, #8]
	movs r2, #0
	bl sub_0803CFC4
	ldrh r0, [r4]
	subs r0, #4
	strh r0, [r4]
	b _081012B4
	.align 2, 0
_08101098: .4byte gUnk_08357256
_0810109C: .4byte gCurLevelInfo
_081010A0: .4byte 0x0000065E
_081010A4: .4byte gUnk_08352D80
_081010A8: .4byte gUnk_02020EE0
_081010AC: .4byte gUnk_0203AD3C
_081010B0: .4byte gUnk_0203AD20
_081010B4:
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #7
	bne _08101142
	ldr r0, [r5, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08101142
	movs r0, #8
	strb r0, [r6]
	ldr r1, _081012D0 @ =gUnk_08357260
	adds r0, r5, #0
	bl sub_080860A8
	ldr r1, _081012D4 @ =gUnk_02020EE0
	ldr r0, _081012D8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08101142
	ldrb r0, [r5]
	cmp r0, #0
	bne _08101102
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08101142
_08101102:
	ldr r1, _081012DC @ =gUnk_08D60FA4
	ldr r4, _081012E0 @ =gSongTable
	ldr r2, _081012E4 @ =0x00000D94
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08101128
	movs r1, #0xd9
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08101142
_08101128:
	cmp r3, #0
	beq _0810113A
	ldr r0, _081012E8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08101142
_0810113A:
	movs r0, #0xd9
	lsls r0, r0, #1
	bl m4aSongNumStart
_08101142:
	movs r2, #4
	ldrsh r0, [r5, r2]
	cmp r0, #0xe8
	bgt _0810117C
	cmp r0, #0xb4
	bgt _0810117C
	mov r4, sb
	adds r4, #0xe0
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _0810117C
	adds r0, r5, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	movs r1, #0xe6
	lsls r1, r1, #2
	movs r3, #0x18
	rsbs r3, r3, #0
	str r3, [sp]
	str r3, [sp, #4]
	ldrh r2, [r4]
	str r2, [sp, #8]
	movs r2, #0
	bl sub_0803CFC4
	ldrh r0, [r4]
	subs r0, #8
	strh r0, [r4]
_0810117C:
	movs r2, #4
	ldrsh r0, [r5, r2]
	cmp r0, #0xc8
	bne _08101192
	movs r0, #7
	strb r0, [r6]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
_08101192:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0x64
	bne _081011A8
	movs r0, #0xb
	strb r0, [r6]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
_081011A8:
	movs r2, #4
	ldrsh r0, [r5, r2]
	cmp r0, #0x60
	bne _081011BE
	movs r0, #0
	strb r0, [r6]
	ldr r0, [r5, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
_081011BE:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0xb4
	bne _081012B4
	adds r0, r5, #0
	bl sub_08034E14
	adds r1, r0, #0
	cmp r1, #0
	beq _081011D6
	movs r0, #0
	strb r0, [r1, #9]
_081011D6:
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r4, [r0]
	adds r3, r4, #0
	subs r3, #0x38
	ldr r2, _081012EC @ =gCurLevelInfo
	subs r0, #0x2c
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r2, _081012F0 @ =0x0000065E
	adds r0, r0, r2
	ldrb r6, [r0]
	lsls r3, r3, #0x10
	asrs r1, r3, #0x10
	cmp r1, #0
	blt _081012A6
	ldr r0, _081012F4 @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _081012A6
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _081012A6
	adds r0, r4, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r7, r5, #0
	adds r7, #0x60
	mov r8, r3
	cmp r0, #0xf
	bls _08101264
	movs r4, #1
_0810122C:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _0810122C
	adds r0, r6, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	movs r2, #0
	bl sub_08002A44
_08101264:
	ldr r1, _081012F4 @ =gUnk_08352D80
	mov r2, r8
	asrs r0, r2, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r6, #0
	bl sub_08002A1C
	ldr r2, _081012D4 @ =gUnk_02020EE0
	ldr r0, _081012D8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _081012A6
	ldr r0, _081012F8 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _081012A6
	adds r0, r6, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_081012A6:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0xb4
	bne _081012B4
	adds r0, r5, #0
	bl sub_081059A8
_081012B4:
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08101342
	ldr r0, [r5, #8]
	ldr r1, _081012FC @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	bl sub_08101630
	b _08101342
	.align 2, 0
_081012D0: .4byte gUnk_08357260
_081012D4: .4byte gUnk_02020EE0
_081012D8: .4byte gUnk_0203AD3C
_081012DC: .4byte gUnk_08D60FA4
_081012E0: .4byte gSongTable
_081012E4: .4byte 0x00000D94
_081012E8: .4byte gUnk_0203AD10
_081012EC: .4byte gCurLevelInfo
_081012F0: .4byte 0x0000065E
_081012F4: .4byte gUnk_08352D80
_081012F8: .4byte gUnk_0203AD20
_081012FC: .4byte 0xFFFFFDFF
_08101300:
	ldr r1, [r5, #0x44]
	movs r0, #0x80
	lsls r0, r0, #7
	cmp r1, r0
	ble _08101342
	adds r0, r5, #0
	adds r0, #0x52
	ldrh r3, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #0
	bge _08101326
	adds r0, r3, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08101332
	b _08101330
_08101326:
	subs r0, r3, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08101332
_08101330:
	strh r4, [r2]
_08101332:
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	bne _08101342
	adds r1, r5, #0
	adds r1, #0x9f
	movs r0, #1
	strb r0, [r1]
_08101342:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08101350
sub_08101350: @ 0x08101350
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0
	str r0, [r4, #0x7c]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0x10]
	cmp r0, #3
	bne _0810136C
	adds r0, r4, #0
	bl sub_08109CB4
	b _081013C2
_0810136C:
	ldr r2, _08101398 @ =sub_08109C8C
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x3c
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0x80
	ble _0810139C
	movs r0, #0x80
	strh r0, [r1]
	b _081013A6
	.align 2, 0
_08101398: .4byte sub_08109C8C
_0810139C:
	movs r2, #0x80
	rsbs r2, r2, #0
	cmp r0, r2
	bge _081013A6
	strh r2, [r1]
_081013A6:
	adds r1, r4, #0
	adds r1, #0x52
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0x80
	ble _081013B8
	movs r0, #0x80
	strh r0, [r1]
	b _081013C2
_081013B8:
	movs r2, #0x80
	rsbs r2, r2, #0
	cmp r0, r2
	bge _081013C2
	strh r2, [r1]
_081013C2:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_081013C8
sub_081013C8: @ 0x081013C8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r7, r0, #0
	mov r8, r7
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r0, #0x20
	beq _0810140C
	cmp r0, #0x40
	beq _0810140C
	cmp r0, #0x5e
	beq _0810140C
	cmp r0, #0x7c
	beq _0810140C
	cmp r0, #0x94
	beq _0810140C
	cmp r0, #0xa8
	beq _0810140C
	cmp r0, #0xba
	beq _0810140C
	cmp r0, #0xca
	beq _0810140C
	cmp r0, #0xd8
	beq _0810140C
	cmp r0, #0xe6
	beq _0810140C
	cmp r0, #0xf0
	beq _0810140C
	cmp r0, #0xf8
	beq _0810140C
	cmp r0, #0xff
	bne _08101464
_0810140C:
	ldr r2, _08101514 @ =0x00000292
	ldr r4, _08101518 @ =gRngVal
	ldr r0, [r4]
	ldr r6, _0810151C @ =0x00196225
	adds r3, r0, #0
	muls r3, r6, r3
	ldr r5, _08101520 @ =0x3C6EF35F
	adds r3, r3, r5
	str r3, [r4]
	lsrs r3, r3, #0x10
	movs r0, #3
	ands r3, r0
	adds r0, r7, #0
	movs r1, #0
	bl sub_0808AE30
	adds r3, r0, #0
	ldr r0, [r4]
	adds r2, r0, #0
	muls r2, r6, r2
	adds r2, r2, r5
	str r2, [r4]
	lsrs r0, r2, #0x10
	movs r1, #0x7f
	ands r0, r1
	movs r1, #0x40
	subs r1, r1, r0
	lsls r1, r1, #8
	ldr r0, [r3, #0x34]
	adds r0, r0, r1
	str r0, [r3, #0x34]
	adds r0, r2, #0
	muls r0, r6, r0
	adds r0, r0, r5
	str r0, [r4]
	lsrs r0, r0, #0x10
	movs r1, #0x3f
	ands r0, r1
	movs r1, #0x20
	subs r1, r1, r0
	lsls r1, r1, #8
	ldr r0, [r3, #0x38]
	adds r0, r0, r1
	str r0, [r3, #0x38]
_08101464:
	adds r1, r7, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r1, #0x1f
	ands r0, r1
	cmp r0, #0
	bne _081014E2
	ldr r4, _08101518 @ =gRngVal
	ldr r0, [r4]
	ldr r5, _0810151C @ =0x00196225
	muls r0, r5, r0
	ldr r1, _08101520 @ =0x3C6EF35F
	adds r3, r0, r1
	str r3, [r4]
	lsrs r0, r3, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _081014E2
	ldr r2, _08101514 @ =0x00000292
	muls r3, r5, r3
	ldr r0, _08101520 @ =0x3C6EF35F
	adds r3, r3, r0
	str r3, [r4]
	lsrs r3, r3, #0x10
	movs r0, #3
	ands r3, r0
	adds r0, r7, #0
	movs r1, #0
	bl sub_0808AE30
	adds r3, r0, #0
	ldr r0, [r4]
	adds r2, r0, #0
	muls r2, r5, r2
	ldr r1, _08101520 @ =0x3C6EF35F
	adds r2, r2, r1
	str r2, [r4]
	lsrs r0, r2, #0x10
	movs r1, #0x7f
	ands r0, r1
	movs r1, #0x40
	subs r1, r1, r0
	lsls r1, r1, #8
	ldr r0, [r3, #0x34]
	adds r0, r0, r1
	str r0, [r3, #0x34]
	adds r0, r2, #0
	muls r0, r5, r0
	ldr r1, _08101520 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r4]
	lsrs r0, r0, #0x10
	movs r1, #0x3f
	ands r0, r1
	movs r1, #0x20
	subs r1, r1, r0
	lsls r1, r1, #8
	ldr r0, [r3, #0x38]
	adds r0, r0, r1
	str r0, [r3, #0x38]
_081014E2:
	movs r1, #4
	ldrsh r0, [r7, r1]
	cmp r0, #0xff
	ble _08101524
	adds r1, r7, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x10
	bne _08101546
	adds r0, r7, #0
	movs r1, #1
	bl sub_08086938
	mov r1, r8
	adds r1, #0xd0
	str r0, [r1]
	adds r0, r7, #0
	bl sub_08109D98
	b _08101554
	.align 2, 0
_08101514: .4byte 0x00000292
_08101518: .4byte gRngVal
_0810151C: .4byte 0x00196225
_08101520: .4byte 0x3C6EF35F
_08101524:
	adds r0, r7, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	movs r1, #0xe6
	lsls r1, r1, #2
	movs r2, #0x1f
	str r2, [sp]
	str r2, [sp, #4]
	ldrh r2, [r7, #4]
	str r2, [sp, #8]
	movs r2, #0
	movs r3, #0x1f
	bl sub_0803CFC4
	ldrh r0, [r7, #4]
	adds r0, #2
	strh r0, [r7, #4]
_08101546:
	ldrb r0, [r7, #1]
	cmp r0, #1
	bne _08101554
	ldr r0, [r7, #8]
	movs r1, #8
	orrs r0, r1
	str r0, [r7, #8]
_08101554:
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08101560
sub_08101560: @ 0x08101560
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r0, #0x20
	beq _0810159C
	cmp r0, #0x40
	beq _0810159C
	cmp r0, #0x5e
	beq _0810159C
	cmp r0, #0x7c
	beq _0810159C
	cmp r0, #0x94
	beq _0810159C
	cmp r0, #0xa8
	beq _0810159C
	cmp r0, #0xba
	beq _0810159C
	cmp r0, #0xca
	beq _0810159C
	cmp r0, #0xd8
	beq _0810159C
	cmp r0, #0xe6
	beq _0810159C
	cmp r0, #0xf0
	beq _0810159C
	cmp r0, #0xf8
	beq _0810159C
	cmp r0, #0xff
	bne _081015F2
_0810159C:
	ldr r2, _08101620 @ =0x00000292
	ldr r4, _08101624 @ =gRngVal
	ldr r0, [r4]
	ldr r6, _08101628 @ =0x00196225
	adds r3, r0, #0
	muls r3, r6, r3
	ldr r5, _0810162C @ =0x3C6EF35F
	adds r3, r3, r5
	str r3, [r4]
	lsrs r3, r3, #0x10
	movs r0, #3
	ands r3, r0
	adds r0, r7, #0
	movs r1, #0
	bl sub_0808AE30
	ldr r1, [r4]
	adds r3, r1, #0
	muls r3, r6, r3
	adds r3, r3, r5
	str r3, [r4]
	lsrs r1, r3, #0x10
	movs r2, #0x7f
	ands r1, r2
	movs r2, #0x40
	subs r2, r2, r1
	lsls r2, r2, #8
	ldr r1, [r0, #0x34]
	adds r1, r1, r2
	str r1, [r0, #0x34]
	adds r1, r3, #0
	muls r1, r6, r1
	adds r1, r1, r5
	str r1, [r4]
	lsrs r1, r1, #0x10
	movs r2, #0x3f
	ands r1, r2
	movs r2, #0x20
	subs r2, r2, r1
	lsls r2, r2, #8
	ldr r1, [r0, #0x38]
	adds r1, r1, r2
	str r1, [r0, #0x38]
_081015F2:
	adds r1, r7, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrh r0, [r7, #4]
	adds r0, #1
	strh r0, [r7, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf8
	ble _0810161A
	adds r0, r7, #0
	bl sub_080700D8
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r7, #8]
_0810161A:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08101620: .4byte 0x00000292
_08101624: .4byte gRngVal
_08101628: .4byte 0x00196225
_0810162C: .4byte 0x3C6EF35F

	thumb_func_start sub_08101630
sub_08101630: @ 0x08101630
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r5, r0, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _08101650
	adds r0, r5, #0
	bl sub_08101350
	b _08101772
_08101650:
	adds r0, r5, #0
	adds r0, #0xd5
	movs r4, #0
	strb r4, [r0]
	ldr r2, _08101690 @ =sub_08101784
	adds r0, r5, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	bl sub_0803D368
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r5, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _08101694
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	b _0810169C
	.align 2, 0
_08101690: .4byte sub_08101784
_08101694:
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_0810169C:
	str r0, [r5, #8]
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa2
	strh r0, [r1]
	ldr r2, _081016E8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _081016EC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _081016F0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r6, r0, #0x10
	movs r3, #0
	adds r4, r5, #0
	adds r4, #0x9f
	adds r7, r5, #0
	adds r7, #0x91
	movs r0, #0x92
	adds r0, r0, r5
	mov r8, r0
	movs r1, #0x93
	adds r1, r1, r5
	mov sb, r1
	movs r0, #0x94
	adds r0, r0, r5
	mov sl, r0
	adds r1, r5, #0
	adds r1, #0x95
	str r1, [sp, #4]
	adds r0, r5, #0
	adds r0, #0x96
	str r0, [sp, #8]
	adds r1, #2
	str r1, [sp, #0xc]
	b _081016F8
	.align 2, 0
_081016E8: .4byte gRngVal
_081016EC: .4byte 0x00196225
_081016F0: .4byte 0x3C6EF35F
_081016F4:
	lsls r0, r2, #0x10
	lsrs r3, r0, #0x10
_081016F8:
	cmp r3, #3
	bhi _0810170E
	adds r2, r3, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r1, r0, #4
	adds r0, r0, r1
	lsls r1, r0, #8
	adds r0, r0, r1
	cmp r6, r0
	bge _081016F4
_0810170E:
	cmp r3, #4
	bhi _0810173C
	lsls r0, r3, #2
	ldr r1, _0810171C @ =_08101720
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0810171C: .4byte _08101720
_08101720: @ jump table
	.4byte _08101734 @ case 0
	.4byte _08101734 @ case 1
	.4byte _08101738 @ case 2
	.4byte _08101738 @ case 3
	.4byte _0810173C @ case 4
_08101734:
	movs r0, #1
	b _0810173E
_08101738:
	movs r0, #2
	b _0810173E
_0810173C:
	movs r0, #3
_0810173E:
	strb r0, [r4]
	movs r1, #0x1c
	rsbs r1, r1, #0
	movs r2, #0x18
	rsbs r2, r2, #0
	movs r0, #0x12
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #0x1c
	bl sub_0803E2B0
	movs r0, #0xf8
	strb r0, [r7]
	mov r1, r8
	strb r0, [r1]
	mov r1, sb
	strb r0, [r1]
	mov r1, sl
	strb r0, [r1]
	ldr r1, [sp, #4]
	strb r0, [r1]
	ldr r1, [sp, #8]
	strb r0, [r1]
	movs r0, #0xe0
	ldr r1, [sp, #0xc]
	strb r0, [r1]
_08101772:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08101784
sub_08101784: @ 0x08101784
	push {lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	ldr r2, _081017E8 @ =gUnk_08357256
	ldrh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	movs r1, #3
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	movs r1, #0x52
	adds r1, r1, r3
	mov ip, r1
	strh r0, [r1]
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	adds r1, r3, #0
	adds r1, #0xa2
	ldr r0, [r3, #0x44]
	movs r2, #0
	ldrsh r1, [r1, r2]
	lsls r0, r0, #8
	asrs r0, r0, #0x10
	cmp r1, r0
	bne _08101816
	adds r2, r3, #0
	adds r2, #0x9f
	ldrb r0, [r2]
	adds r1, r0, #0
	cmp r1, #0
	bne _08101812
	mov r0, ip
	strh r1, [r0]
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _081017FA
	cmp r0, #1
	bgt _081017EC
	cmp r0, #0
	beq _081017F2
	b _0810180A
	.align 2, 0
_081017E8: .4byte gUnk_08357256
_081017EC:
	cmp r0, #2
	beq _08101802
	b _0810180A
_081017F2:
	adds r0, r3, #0
	bl sub_081007A8
	b _08101816
_081017FA:
	adds r0, r3, #0
	bl sub_08100858
	b _08101816
_08101802:
	adds r0, r3, #0
	bl sub_081009A4
	b _08101816
_0810180A:
	adds r0, r3, #0
	bl sub_08100BD0
	b _08101816
_08101812:
	subs r0, #1
	strb r0, [r2]
_08101816:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810181C
sub_0810181C: @ 0x0810181C
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _0810185C @ =sub_08101B28
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_0803D46C
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _08101860
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _08101868
	.align 2, 0
_0810185C: .4byte sub_08101B28
_08101860:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_08101868:
	str r0, [r4, #8]
	adds r5, #0xd5
	movs r0, #3
	strb r0, [r5]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _081018CC
	adds r3, r4, #0
	adds r3, #0xac
	ldr r0, [r3]
	ldr r1, [r4, #0x40]
	ldr r2, [r0, #0x40]
	subs r1, r1, r2
	cmp r1, #0
	ble _0810189A
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810189A
	ldr r0, _081018AC @ =0x00005FFF
	cmp r1, r0
	bgt _081018B4
_0810189A:
	asrs r0, r2, #8
	adds r0, #0x6c
	adds r1, r4, #0
	adds r1, #0xa0
	strh r0, [r1]
	ldr r0, _081018B0 @ =sub_08101E38
	str r0, [r4, #0x78]
	b _08101922
	.align 2, 0
_081018AC: .4byte 0x00005FFF
_081018B0: .4byte sub_08101E38
_081018B4:
	asrs r0, r2, #8
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0xa0
	strh r0, [r1]
	ldr r0, [r3]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	subs r0, #0x30
	adds r1, #2
	strh r0, [r1]
	b _0810191E
_081018CC:
	adds r3, r4, #0
	adds r3, #0xac
	ldr r0, [r3]
	ldr r1, [r4, #0x40]
	ldr r2, [r0, #0x40]
	subs r1, r1, r2
	cmp r1, #0
	bge _081018EC
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _081018EC
	ldr r0, _081018FC @ =0xFFFFA000
	cmp r1, r0
	ble _08101904
_081018EC:
	asrs r0, r2, #8
	subs r0, #0x6c
	adds r1, r4, #0
	adds r1, #0xa0
	strh r0, [r1]
	ldr r0, _08101900 @ =sub_08102414
	str r0, [r4, #0x78]
	b _08101922
	.align 2, 0
_081018FC: .4byte 0xFFFFA000
_08101900: .4byte sub_08102414
_08101904:
	asrs r0, r2, #8
	subs r0, #0x60
	adds r1, r4, #0
	adds r1, #0xa0
	strh r0, [r1]
	ldr r0, [r3]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	subs r0, #0x30
	adds r1, #2
	strh r0, [r1]
	ldr r0, _08101964 @ =sub_08102104
	str r0, [r4, #0x78]
_0810191E:
	movs r0, #2
	strb r0, [r5]
_08101922:
	movs r1, #0x1c
	rsbs r1, r1, #0
	movs r2, #0x18
	rsbs r2, r2, #0
	movs r0, #0x12
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0x1c
	bl sub_0803E2B0
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0xf8
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xe0
	strb r0, [r1]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08101964: .4byte sub_08102104

	thumb_func_start sub_08101968
sub_08101968: @ 0x08101968
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0xd5
	movs r4, #0
	movs r0, #3
	strb r0, [r1]
	ldr r2, _081019B0 @ =sub_08101B28
	adds r0, r5, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	bl sub_0803D46C
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r5, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _081019B4
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	b _081019BC
	.align 2, 0
_081019B0: .4byte sub_08101B28
_081019B4:
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_081019BC:
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _081019E4
	adds r0, r5, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r0, #0x6c
	adds r1, r5, #0
	adds r1, #0xa0
	strh r0, [r1]
	ldr r0, _081019E0 @ =sub_08101E38
	b _081019F8
	.align 2, 0
_081019E0: .4byte sub_08101E38
_081019E4:
	adds r0, r5, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	subs r0, #0x6c
	adds r1, r5, #0
	adds r1, #0xa0
	strh r0, [r1]
	ldr r0, _08101A3C @ =sub_08102414
_081019F8:
	str r0, [r5, #0x78]
	movs r1, #0x1c
	rsbs r1, r1, #0
	movs r2, #0x18
	rsbs r2, r2, #0
	movs r0, #0x12
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #0x1c
	bl sub_0803E2B0
	adds r0, r5, #0
	adds r0, #0x91
	movs r1, #0xf8
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r5, #0
	adds r1, #0x97
	movs r0, #0xe0
	strb r0, [r1]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08101A3C: .4byte sub_08102414

	thumb_func_start sub_08101A40
sub_08101A40: @ 0x08101A40
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0xd5
	movs r4, #0
	movs r0, #2
	strb r0, [r1]
	ldr r2, _08101A88 @ =sub_08101B28
	adds r0, r5, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	bl sub_0803D368
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r5, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _08101A8C
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	b _08101A94
	.align 2, 0
_08101A88: .4byte sub_08101B28
_08101A8C:
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_08101A94:
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08101AC0
	adds r2, r5, #0
	adds r2, #0xac
	ldr r0, [r2]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0xa0
	strh r0, [r1]
	ldr r0, [r2]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	subs r0, #0x30
	adds r1, #2
	strh r0, [r1]
	b _08101AE2
_08101AC0:
	adds r2, r5, #0
	adds r2, #0xac
	ldr r0, [r2]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	subs r0, #0x60
	adds r1, r5, #0
	adds r1, #0xa0
	strh r0, [r1]
	ldr r0, [r2]
	ldr r0, [r0, #0x44]
	asrs r0, r0, #8
	subs r0, #0x30
	adds r1, #2
	strh r0, [r1]
	ldr r0, _08101B24 @ =sub_08102104
	str r0, [r5, #0x78]
_08101AE2:
	movs r1, #0x1c
	rsbs r1, r1, #0
	movs r2, #0x18
	rsbs r2, r2, #0
	movs r0, #0x12
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #0x1c
	bl sub_0803E2B0
	adds r0, r5, #0
	adds r0, #0x91
	movs r1, #0xf8
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r5, #0
	adds r1, #0x97
	movs r0, #0xe0
	strb r0, [r1]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08101B24: .4byte sub_08102104

	thumb_func_start sub_08101B28
sub_08101B28: @ 0x08101B28
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08101BC4
	adds r5, r3, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r3, #0x40]
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa8
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r7, _08101B7C @ =0xFFFFF800
	adds r0, r0, r7
	cmp r1, r0
	blt _08101B80
	adds r2, r3, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r4, #0x80
	lsls r4, r4, #4
	b _08101C00
	.align 2, 0
_08101B7C: .4byte 0xFFFFF800
_08101B80:
	adds r5, r3, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	adds r6, r3, #0
	adds r6, #0x62
	cmp r1, r0
	bgt _08101C4C
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _08101BC0 @ =0xFFFFF800
	adds r0, r0, r2
	b _08101C48
	.align 2, 0
_08101BC0: .4byte 0xFFFFF800
_08101BC4:
	adds r5, r3, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r3, #0x40]
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	cmp r1, r0
	bgt _08101C10
	adds r2, r3, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r7, #0
	ldrsh r1, [r4, r7]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r4, _08101C0C @ =0xFFFFF800
_08101C00:
	adds r0, r0, r4
	subs r1, r1, r0
	str r1, [r3, #0x40]
	adds r6, r2, #0
	b _08101C4C
	.align 2, 0
_08101C0C: .4byte 0xFFFFF800
_08101C10:
	adds r5, r3, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa8
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r2, _08101C8C @ =0xFFFFF800
	adds r0, r0, r2
	adds r6, r3, #0
	adds r6, #0x62
	cmp r1, r0
	blt _08101C4C
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	adds r0, r0, r7
_08101C48:
	subs r1, r1, r0
	str r1, [r3, #0x40]
_08101C4C:
	adds r2, r3, #0
	adds r2, #0x3f
	movs r1, #0
	ldrsb r1, [r2, r1]
	lsls r1, r1, #8
	ldr r4, [r3, #0x44]
	adds r1, r4, r1
	adds r5, r3, #0
	adds r5, #0xaa
	movs r7, #0
	ldrsh r0, [r5, r7]
	lsls r0, r0, #8
	ldr r7, _08101C8C @ =0xFFFFF800
	adds r0, r0, r7
	cmp r1, r0
	blt _08101C90
	ldrb r1, [r6]
	movs r0, #4
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	subs r1, r1, r0
	str r1, [r3, #0x44]
	b _08101CB6
	.align 2, 0
_08101C8C: .4byte 0xFFFFF800
_08101C90:
	adds r0, r3, #0
	adds r0, #0x3d
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r4, r1
	adds r0, #0x69
	movs r4, #0
	ldrsh r0, [r0, r4]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	cmp r1, r0
	bgt _08101CB6
	ldrb r1, [r6]
	movs r0, #8
	orrs r0, r1
	strb r0, [r6]
_08101CB6:
	ldrb r1, [r6]
	movs r2, #1
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _08101CD2
	adds r0, r3, #0
	adds r0, #0xa0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #8
	ldr r1, [r3, #0x40]
	cmp r1, r0
	bgt _08101D7E
_08101CD2:
	adds r0, r3, #0
	adds r0, #0x50
	ldrh r2, [r0]
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r5, r0, #0
	cmp r1, #0
	bge _08101CF0
	adds r0, r2, #0
	adds r0, #0x18
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08101D00
	b _08101CFC
_08101CF0:
	adds r0, r2, #0
	subs r0, #0x18
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08101D00
_08101CFC:
	movs r0, #0
	strh r0, [r5]
_08101D00:
	adds r0, r3, #0
	adds r0, #0x52
	ldrh r4, [r0]
	movs r7, #0
	ldrsh r1, [r0, r7]
	adds r2, r0, #0
	cmp r1, #0
	bge _08101D1E
	adds r0, r4, #0
	adds r0, #8
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08101D2E
	b _08101D2A
_08101D1E:
	adds r0, r4, #0
	subs r0, #8
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08101D2E
_08101D2A:
	movs r0, #0
	strh r0, [r2]
_08101D2E:
	ldrb r1, [r6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08101D3C
	movs r0, #0
	strh r0, [r5]
_08101D3C:
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bne _08101E24
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _08101D66
	cmp r0, #1
	bgt _08101D58
	cmp r0, #0
	beq _08101D5E
	b _08101D76
_08101D58:
	cmp r0, #2
	beq _08101D6E
	b _08101D76
_08101D5E:
	adds r0, r3, #0
	bl sub_081007A8
	b _08101E32
_08101D66:
	adds r0, r3, #0
	bl sub_08100858
	b _08101E32
_08101D6E:
	adds r0, r3, #0
	bl sub_081009A4
	b _08101E32
_08101D76:
	adds r0, r3, #0
	bl sub_08100BD0
	b _08101E32
_08101D7E:
	ldr r0, [r3, #8]
	ands r0, r2
	cmp r0, #0
	beq _08101DA8
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r4, _08101DA4 @ =0xFFFFFD20
	cmp r0, r4
	blt _08101DC4
	movs r4, #0xb8
	lsls r4, r4, #2
	cmp r0, r4
	ble _08101DC6
	b _08101DC4
	.align 2, 0
_08101DA4: .4byte 0xFFFFFD20
_08101DA8:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0xb8
	lsls r4, r4, #2
	cmp r0, r4
	bgt _08101DC4
	ldr r4, _08101DF4 @ =0xFFFFFD20
	cmp r0, r4
	bge _08101DC6
_08101DC4:
	strh r4, [r1]
_08101DC6:
	adds r0, r3, #0
	adds r0, #0xa2
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #8
	ldr r1, [r3, #0x44]
	cmp r1, r0
	blt _08101E0A
	adds r0, r3, #0
	adds r0, #0x52
	ldrh r3, [r0]
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r2, r0, #0
	cmp r1, #0
	bge _08101DF8
	adds r0, r3, #0
	adds r0, #8
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08101E24
	b _08101E04
	.align 2, 0
_08101DF4: .4byte 0xFFFFFD20
_08101DF8:
	adds r0, r3, #0
	subs r0, #8
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08101E24
_08101E04:
	movs r0, #0
	strh r0, [r2]
	b _08101E24
_08101E0A:
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0xa0
	rsbs r3, r3, #0
	adds r2, r1, #0
	cmp r0, r3
	bge _08101E24
	strh r3, [r2]
_08101E24:
	ldrb r1, [r6]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08101E32
	movs r0, #0
	strh r0, [r2]
_08101E32:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08101E38
sub_08101E38: @ 0x08101E38
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08101ED4
	adds r5, r3, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r3, #0x40]
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa8
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r7, _08101E8C @ =0xFFFFF800
	adds r0, r0, r7
	cmp r1, r0
	blt _08101E90
	adds r2, r3, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r4, #0x80
	lsls r4, r4, #4
	b _08101F10
	.align 2, 0
_08101E8C: .4byte 0xFFFFF800
_08101E90:
	adds r4, r3, #0
	adds r4, #0x3c
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r3, #0
	adds r2, #0xa4
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	adds r6, r3, #0
	adds r6, #0x62
	cmp r1, r0
	bgt _08101F5C
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r7, #0
	ldrsh r1, [r2, r7]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	ldr r2, _08101ED0 @ =0xFFFFF800
	adds r0, r0, r2
	b _08101F58
	.align 2, 0
_08101ED0: .4byte 0xFFFFF800
_08101ED4:
	adds r5, r3, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r3, #0x40]
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	cmp r1, r0
	bgt _08101F20
	adds r2, r3, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r7, #0
	ldrsh r1, [r4, r7]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r4, _08101F1C @ =0xFFFFF800
_08101F10:
	adds r0, r0, r4
	subs r1, r1, r0
	str r1, [r3, #0x40]
	adds r6, r2, #0
	b _08101F5C
	.align 2, 0
_08101F1C: .4byte 0xFFFFF800
_08101F20:
	adds r5, r3, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa8
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r2, _08101F9C @ =0xFFFFF800
	adds r0, r0, r2
	adds r6, r3, #0
	adds r6, #0x62
	cmp r1, r0
	blt _08101F5C
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	adds r0, r0, r7
_08101F58:
	subs r1, r1, r0
	str r1, [r3, #0x40]
_08101F5C:
	adds r2, r3, #0
	adds r2, #0x3f
	movs r1, #0
	ldrsb r1, [r2, r1]
	lsls r1, r1, #8
	ldr r4, [r3, #0x44]
	adds r1, r4, r1
	adds r5, r3, #0
	adds r5, #0xaa
	movs r7, #0
	ldrsh r0, [r5, r7]
	lsls r0, r0, #8
	ldr r7, _08101F9C @ =0xFFFFF800
	adds r0, r0, r7
	cmp r1, r0
	blt _08101FA0
	ldrb r1, [r6]
	movs r0, #4
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	subs r1, r1, r0
	str r1, [r3, #0x44]
	b _08101FC6
	.align 2, 0
_08101F9C: .4byte 0xFFFFF800
_08101FA0:
	adds r0, r3, #0
	adds r0, #0x3d
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r4, r1
	adds r0, #0x69
	movs r4, #0
	ldrsh r0, [r0, r4]
	lsls r0, r0, #8
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r0, r5
	cmp r1, r0
	bgt _08101FC6
	ldrb r1, [r6]
	movs r0, #8
	orrs r0, r1
	strb r0, [r6]
_08101FC6:
	ldrb r1, [r6]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08101FE0
	adds r0, r3, #0
	adds r0, #0xa0
	movs r7, #0
	ldrsh r0, [r0, r7]
	lsls r0, r0, #8
	ldr r1, [r3, #0x40]
	cmp r1, r0
	blt _08102088
_08101FE0:
	adds r0, r3, #0
	adds r0, #0x50
	ldrh r2, [r0]
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r5, r0, #0
	cmp r1, #0
	bge _08101FFE
	adds r0, r2, #0
	adds r0, #0x18
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810200E
	b _0810200A
_08101FFE:
	adds r0, r2, #0
	subs r0, #0x18
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810200E
_0810200A:
	movs r0, #0
	strh r0, [r5]
_0810200E:
	adds r0, r3, #0
	adds r0, #0x52
	ldrh r4, [r0]
	movs r7, #0
	ldrsh r1, [r0, r7]
	adds r2, r0, #0
	cmp r1, #0
	bge _0810202A
	adds r0, r4, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08102038
	b _08102034
_0810202A:
	subs r0, r4, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08102038
_08102034:
	movs r0, #0
	strh r0, [r2]
_08102038:
	ldrb r1, [r6]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08102046
	movs r0, #0
	strh r0, [r5]
_08102046:
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bne _081020EA
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _08102070
	cmp r0, #1
	bgt _08102062
	cmp r0, #0
	beq _08102068
	b _08102080
_08102062:
	cmp r0, #2
	beq _08102078
	b _08102080
_08102068:
	adds r0, r3, #0
	bl sub_081007A8
	b _081020F8
_08102070:
	adds r0, r3, #0
	bl sub_08100858
	b _081020F8
_08102078:
	adds r0, r3, #0
	bl sub_081009A4
	b _081020F8
_08102080:
	adds r0, r3, #0
	bl sub_08100BD0
	b _081020F8
_08102088:
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _081020B4
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r4, _081020B0 @ =0xFFFFFD20
	cmp r0, r4
	blt _081020D0
	movs r4, #0xb8
	lsls r4, r4, #2
	cmp r0, r4
	ble _081020D2
	b _081020D0
	.align 2, 0
_081020B0: .4byte 0xFFFFFD20
_081020B4:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0xb8
	lsls r4, r4, #2
	cmp r0, r4
	bgt _081020D0
	ldr r4, _08102100 @ =0xFFFFFD20
	cmp r0, r4
	bge _081020D2
_081020D0:
	strh r4, [r1]
_081020D2:
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r2, r1, #0
	cmp r0, #0x80
	ble _081020EA
	movs r0, #0x80
	strh r0, [r2]
_081020EA:
	ldrb r1, [r6]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _081020F8
	movs r0, #0
	strh r0, [r2]
_081020F8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08102100: .4byte 0xFFFFFD20

	thumb_func_start sub_08102104
sub_08102104: @ 0x08102104
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _081021A0
	adds r5, r3, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r3, #0x40]
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa8
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r7, _08102158 @ =0xFFFFF800
	adds r0, r0, r7
	cmp r1, r0
	blt _0810215C
	adds r2, r3, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r4, #0x80
	lsls r4, r4, #4
	b _081021DC
	.align 2, 0
_08102158: .4byte 0xFFFFF800
_0810215C:
	adds r5, r3, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	adds r6, r3, #0
	adds r6, #0x62
	cmp r1, r0
	bgt _08102228
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _0810219C @ =0xFFFFF800
	adds r0, r0, r2
	b _08102224
	.align 2, 0
_0810219C: .4byte 0xFFFFF800
_081021A0:
	adds r5, r3, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r3, #0x40]
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	cmp r1, r0
	bgt _081021EC
	adds r2, r3, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r7, #0
	ldrsh r1, [r4, r7]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r4, _081021E8 @ =0xFFFFF800
_081021DC:
	adds r0, r0, r4
	subs r1, r1, r0
	str r1, [r3, #0x40]
	adds r6, r2, #0
	b _08102228
	.align 2, 0
_081021E8: .4byte 0xFFFFF800
_081021EC:
	adds r5, r3, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa8
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r2, _08102268 @ =0xFFFFF800
	adds r0, r0, r2
	adds r6, r3, #0
	adds r6, #0x62
	cmp r1, r0
	blt _08102228
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	adds r0, r0, r7
_08102224:
	subs r1, r1, r0
	str r1, [r3, #0x40]
_08102228:
	adds r2, r3, #0
	adds r2, #0x3f
	movs r1, #0
	ldrsb r1, [r2, r1]
	lsls r1, r1, #8
	ldr r4, [r3, #0x44]
	adds r1, r4, r1
	adds r5, r3, #0
	adds r5, #0xaa
	movs r7, #0
	ldrsh r0, [r5, r7]
	lsls r0, r0, #8
	ldr r7, _08102268 @ =0xFFFFF800
	adds r0, r0, r7
	cmp r1, r0
	blt _0810226C
	ldrb r1, [r6]
	movs r0, #4
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	subs r1, r1, r0
	str r1, [r3, #0x44]
	b _08102292
	.align 2, 0
_08102268: .4byte 0xFFFFF800
_0810226C:
	adds r0, r3, #0
	adds r0, #0x3d
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r4, r1
	adds r0, #0x69
	movs r4, #0
	ldrsh r0, [r0, r4]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	cmp r1, r0
	bgt _08102292
	ldrb r1, [r6]
	movs r0, #8
	orrs r0, r1
	strb r0, [r6]
_08102292:
	ldrb r1, [r6]
	movs r2, #1
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _081022AE
	adds r0, r3, #0
	adds r0, #0xa0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #8
	ldr r1, [r3, #0x40]
	cmp r1, r0
	blt _0810235A
_081022AE:
	adds r0, r3, #0
	adds r0, #0x50
	ldrh r2, [r0]
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r5, r0, #0
	cmp r1, #0
	bge _081022CC
	adds r0, r2, #0
	adds r0, #0x18
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _081022DC
	b _081022D8
_081022CC:
	adds r0, r2, #0
	subs r0, #0x18
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _081022DC
_081022D8:
	movs r0, #0
	strh r0, [r5]
_081022DC:
	adds r0, r3, #0
	adds r0, #0x52
	ldrh r4, [r0]
	movs r7, #0
	ldrsh r1, [r0, r7]
	adds r2, r0, #0
	cmp r1, #0
	bge _081022FA
	adds r0, r4, #0
	adds r0, #8
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810230A
	b _08102306
_081022FA:
	adds r0, r4, #0
	subs r0, #8
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810230A
_08102306:
	movs r0, #0
	strh r0, [r2]
_0810230A:
	ldrb r1, [r6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08102318
	movs r0, #0
	strh r0, [r5]
_08102318:
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bne _08102400
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _08102342
	cmp r0, #1
	bgt _08102334
	cmp r0, #0
	beq _0810233A
	b _08102352
_08102334:
	cmp r0, #2
	beq _0810234A
	b _08102352
_0810233A:
	adds r0, r3, #0
	bl sub_081007A8
	b _0810240E
_08102342:
	adds r0, r3, #0
	bl sub_08100858
	b _0810240E
_0810234A:
	adds r0, r3, #0
	bl sub_081009A4
	b _0810240E
_08102352:
	adds r0, r3, #0
	bl sub_08100BD0
	b _0810240E
_0810235A:
	ldr r0, [r3, #8]
	ands r0, r2
	cmp r0, #0
	beq _08102384
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r4, _08102380 @ =0xFFFFFD20
	cmp r0, r4
	blt _081023A0
	movs r4, #0xb8
	lsls r4, r4, #2
	cmp r0, r4
	ble _081023A2
	b _081023A0
	.align 2, 0
_08102380: .4byte 0xFFFFFD20
_08102384:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0xb8
	lsls r4, r4, #2
	cmp r0, r4
	bgt _081023A0
	ldr r4, _081023D0 @ =0xFFFFFD20
	cmp r0, r4
	bge _081023A2
_081023A0:
	strh r4, [r1]
_081023A2:
	adds r0, r3, #0
	adds r0, #0xa2
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #8
	ldr r1, [r3, #0x44]
	cmp r1, r0
	blt _081023E6
	adds r0, r3, #0
	adds r0, #0x52
	ldrh r3, [r0]
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r2, r0, #0
	cmp r1, #0
	bge _081023D4
	adds r0, r3, #0
	adds r0, #8
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08102400
	b _081023E0
	.align 2, 0
_081023D0: .4byte 0xFFFFFD20
_081023D4:
	adds r0, r3, #0
	subs r0, #8
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08102400
_081023E0:
	movs r0, #0
	strh r0, [r2]
	b _08102400
_081023E6:
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0xa0
	rsbs r3, r3, #0
	adds r2, r1, #0
	cmp r0, r3
	bge _08102400
	strh r3, [r2]
_08102400:
	ldrb r1, [r6]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0810240E
	movs r0, #0
	strh r0, [r2]
_0810240E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08102414
sub_08102414: @ 0x08102414
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _081024B0
	adds r5, r3, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r3, #0x40]
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa8
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r7, _08102468 @ =0xFFFFF800
	adds r0, r0, r7
	cmp r1, r0
	blt _0810246C
	adds r2, r3, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r4, #0x80
	lsls r4, r4, #4
	b _081024EC
	.align 2, 0
_08102468: .4byte 0xFFFFF800
_0810246C:
	adds r4, r3, #0
	adds r4, #0x3c
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r2, r3, #0
	adds r2, #0xa4
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	adds r6, r3, #0
	adds r6, #0x62
	cmp r1, r0
	bgt _08102538
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r7, #0
	ldrsh r1, [r2, r7]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	ldr r2, _081024AC @ =0xFFFFF800
	adds r0, r0, r2
	b _08102534
	.align 2, 0
_081024AC: .4byte 0xFFFFF800
_081024B0:
	adds r5, r3, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r3, #0x40]
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa4
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	movs r7, #0x80
	lsls r7, r7, #4
	adds r0, r0, r7
	cmp r1, r0
	bgt _081024FC
	adds r2, r3, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r7, #0
	ldrsh r1, [r4, r7]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r4, _081024F8 @ =0xFFFFF800
_081024EC:
	adds r0, r0, r4
	subs r1, r1, r0
	str r1, [r3, #0x40]
	adds r6, r2, #0
	b _08102538
	.align 2, 0
_081024F8: .4byte 0xFFFFF800
_081024FC:
	adds r5, r3, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r4, r3, #0
	adds r4, #0xa8
	movs r6, #0
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r2, _08102578 @ =0xFFFFF800
	adds r0, r0, r2
	adds r6, r3, #0
	adds r6, #0x62
	cmp r1, r0
	blt _08102538
	ldrb r1, [r6]
	movs r0, #1
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	adds r0, r0, r7
_08102534:
	subs r1, r1, r0
	str r1, [r3, #0x40]
_08102538:
	adds r2, r3, #0
	adds r2, #0x3f
	movs r1, #0
	ldrsb r1, [r2, r1]
	lsls r1, r1, #8
	ldr r4, [r3, #0x44]
	adds r1, r4, r1
	adds r5, r3, #0
	adds r5, #0xaa
	movs r7, #0
	ldrsh r0, [r5, r7]
	lsls r0, r0, #8
	ldr r7, _08102578 @ =0xFFFFF800
	adds r0, r0, r7
	cmp r1, r0
	blt _0810257C
	ldrb r1, [r6]
	movs r0, #4
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	subs r1, r1, r0
	str r1, [r3, #0x44]
	b _081025A2
	.align 2, 0
_08102578: .4byte 0xFFFFF800
_0810257C:
	adds r0, r3, #0
	adds r0, #0x3d
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r4, r1
	adds r0, #0x69
	movs r4, #0
	ldrsh r0, [r0, r4]
	lsls r0, r0, #8
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r0, r5
	cmp r1, r0
	bgt _081025A2
	ldrb r1, [r6]
	movs r0, #8
	orrs r0, r1
	strb r0, [r6]
_081025A2:
	ldrb r1, [r6]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _081025BC
	adds r0, r3, #0
	adds r0, #0xa0
	movs r7, #0
	ldrsh r0, [r0, r7]
	lsls r0, r0, #8
	ldr r1, [r3, #0x40]
	cmp r1, r0
	bgt _08102664
_081025BC:
	adds r0, r3, #0
	adds r0, #0x50
	ldrh r2, [r0]
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r5, r0, #0
	cmp r1, #0
	bge _081025DA
	adds r0, r2, #0
	adds r0, #0x18
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _081025EA
	b _081025E6
_081025DA:
	adds r0, r2, #0
	subs r0, #0x18
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _081025EA
_081025E6:
	movs r0, #0
	strh r0, [r5]
_081025EA:
	adds r0, r3, #0
	adds r0, #0x52
	ldrh r4, [r0]
	movs r7, #0
	ldrsh r1, [r0, r7]
	adds r2, r0, #0
	cmp r1, #0
	bge _08102606
	adds r0, r4, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08102614
	b _08102610
_08102606:
	subs r0, r4, #4
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08102614
_08102610:
	movs r0, #0
	strh r0, [r2]
_08102614:
	ldrb r1, [r6]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08102622
	movs r0, #0
	strh r0, [r5]
_08102622:
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bne _081026C6
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _0810264C
	cmp r0, #1
	bgt _0810263E
	cmp r0, #0
	beq _08102644
	b _0810265C
_0810263E:
	cmp r0, #2
	beq _08102654
	b _0810265C
_08102644:
	adds r0, r3, #0
	bl sub_081007A8
	b _081026D4
_0810264C:
	adds r0, r3, #0
	bl sub_08100858
	b _081026D4
_08102654:
	adds r0, r3, #0
	bl sub_081009A4
	b _081026D4
_0810265C:
	adds r0, r3, #0
	bl sub_08100BD0
	b _081026D4
_08102664:
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08102690
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r4, _0810268C @ =0xFFFFFD20
	cmp r0, r4
	blt _081026AC
	movs r4, #0xb8
	lsls r4, r4, #2
	cmp r0, r4
	ble _081026AE
	b _081026AC
	.align 2, 0
_0810268C: .4byte 0xFFFFFD20
_08102690:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0xb8
	lsls r4, r4, #2
	cmp r0, r4
	bgt _081026AC
	ldr r4, _081026DC @ =0xFFFFFD20
	cmp r0, r4
	bge _081026AE
_081026AC:
	strh r4, [r1]
_081026AE:
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r2, r1, #0
	cmp r0, #0x80
	ble _081026C6
	movs r0, #0x80
	strh r0, [r2]
_081026C6:
	ldrb r1, [r6]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _081026D4
	movs r0, #0
	strh r0, [r2]
_081026D4:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081026DC: .4byte 0xFFFFFD20

	thumb_func_start sub_081026E0
sub_081026E0: @ 0x081026E0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r2, _081027A0 @ =sub_081027C0
	movs r1, #5
	bl ObjectSetFunc
	adds r1, r5, #0
	adds r1, #0x50
	movs r4, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r6, #0x80
	lsls r6, r6, #1
	orrs r0, r6
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	adds r1, #6
	ands r0, r1
	str r0, [r5, #8]
	movs r0, #0x5a
	strh r0, [r5, #4]
	ldr r1, _081027A4 @ =gUnk_08357260
	adds r0, r5, #0
	bl sub_080860A8
	adds r0, r5, #0
	adds r0, #0x9e
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	adds r0, #0x3b
	strb r4, [r0]
	ldr r1, _081027A8 @ =gUnk_02020EE0
	ldr r0, _081027AC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810279A
	ldrb r0, [r5]
	cmp r0, #0
	bne _0810275E
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810279A
_0810275E:
	ldr r1, _081027B0 @ =gUnk_08D60FA4
	ldr r4, _081027B4 @ =gSongTable
	ldr r2, _081027B8 @ =0x00000D64
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08102784
	movs r1, #0xd6
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810279A
_08102784:
	cmp r3, #0
	beq _08102792
	ldr r0, _081027BC @ =gUnk_0203AD10
	ldr r0, [r0]
	ands r0, r6
	cmp r0, #0
	bne _0810279A
_08102792:
	movs r0, #0xd6
	lsls r0, r0, #1
	bl m4aSongNumStart
_0810279A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_081027A0: .4byte sub_081027C0
_081027A4: .4byte gUnk_08357260
_081027A8: .4byte gUnk_02020EE0
_081027AC: .4byte gUnk_0203AD3C
_081027B0: .4byte gUnk_08D60FA4
_081027B4: .4byte gSongTable
_081027B8: .4byte 0x00000D64
_081027BC: .4byte gUnk_0203AD10

	thumb_func_start sub_081027C0
sub_081027C0: @ 0x081027C0
	push {r4, r5, r6, lr}
	sub sp, #0x34
	adds r5, r0, #0
	ldr r1, [r5, #8]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r4, r1, #0
	ands r4, r2
	cmp r4, #0
	bne _08102822
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _081027DE
	b _08102926
_081027DE:
	orrs r1, r2
	movs r0, #8
	orrs r1, r0
	str r1, [r5, #8]
	ldr r0, [r5, #0xc]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x10]
	bl sub_08157190
	str r4, [r5, #0x10]
	adds r0, r5, #0
	movs r1, #0
	bl sub_081050E8
	adds r0, r5, #0
	movs r1, #1
	bl sub_081050E8
	adds r0, r5, #0
	movs r1, #2
	bl sub_081050E8
	adds r0, r5, #0
	movs r1, #3
	bl sub_081050E8
	adds r0, r5, #0
	movs r1, #4
	bl sub_081050E8
	b _08102926
_08102822:
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x14
	bls _0810288E
	ldr r2, _081028B4 @ =gUnk_02020EE0
	ldr r0, _081028B8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	adds r6, r5, #0
	adds r6, #0x9f
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810287C
	adds r0, r5, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	movs r1, #0xe6
	lsls r1, r1, #2
	movs r3, #0x10
	rsbs r3, r3, #0
	movs r2, #8
	rsbs r2, r2, #0
	str r2, [sp]
	movs r2, #0x15
	str r2, [sp, #4]
	ldrb r4, [r6]
	lsls r2, r4, #1
	adds r2, r2, r4
	lsls r2, r2, #1
	str r2, [sp, #8]
	movs r2, #0
	bl sub_0803CFC4
_0810287C:
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x2c
	bls _0810288E
	movs r0, #0x2d
	strb r0, [r6]
_0810288E:
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	bne _08102926
	adds r0, r5, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _081028BC
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r5, #8]
	b _08102926
	.align 2, 0
_081028B4: .4byte gUnk_02020EE0
_081028B8: .4byte gUnk_0203AD3C
_081028BC:
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [sp, #0xc]
	add r1, sp, #0xc
	movs r0, #0xe6
	lsls r0, r0, #2
	strh r0, [r1, #0xc]
	movs r0, #0
	strb r0, [r1, #0x1a]
	movs r0, #0xff
	strb r0, [r1, #0x1b]
	adds r0, r1, #0
	strh r2, [r0, #0x10]
	strh r2, [r0, #0x12]
	strh r2, [r0, #0x14]
	strh r2, [r0, #0x16]
	movs r0, #0x10
	strb r0, [r1, #0x1c]
	adds r2, r1, #0
	adds r0, r5, #0
	adds r0, #0x2f
	ldrb r1, [r0]
	movs r0, #0xf
	ands r0, r1
	strb r0, [r2, #0x1f]
	movs r0, #0x80
	lsls r0, r0, #0xc
	str r0, [sp, #0x14]
	adds r0, r2, #0
	bl sub_08155128
	add r0, sp, #0xc
	ldrb r0, [r0, #0x1f]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	movs r1, #0x10
	bl sub_0803D280
	ldr r0, [r5, #8]
	ldr r2, _08102930 @ =0xFFFFFDFF
	ands r0, r2
	ldr r1, _08102934 @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	ldr r0, [r5, #0xc]
	ands r0, r2
	str r0, [r5, #0xc]
	adds r0, r5, #0
	bl sub_08102A80
_08102926:
	add sp, #0x34
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08102930: .4byte 0xFFFFFDFF
_08102934: .4byte 0xFFFFFBFF

	thumb_func_start sub_08102938
sub_08102938: @ 0x08102938
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	movs r5, #0
	adds r1, r4, #0
	adds r1, #0xd5
	ldrb r0, [r1]
	cmp r0, #6
	beq _0810294E
	movs r0, #1
	strb r0, [r1]
_0810294E:
	ldr r1, [r4, #0x78]
	ldr r0, _08102A58 @ =sub_08102D9C
	cmp r1, r0
	bne _08102958
	movs r5, #1
_08102958:
	ldr r2, _08102A5C @ =sub_08109A00
	adds r0, r4, #0
	movs r1, #1
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x50
	movs r3, #0
	movs r0, #0
	strh r0, [r2]
	adds r1, r4, #0
	adds r1, #0x52
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08102982
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_08102982:
	cmp r5, #0
	beq _0810298C
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_0810298C:
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r5, #0x80
	lsls r5, r5, #1
	orrs r0, r5
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #4
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	subs r1, #0x19
	movs r2, #0x18
	rsbs r2, r2, #0
	movs r0, #0x12
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0x1c
	bl sub_0803E2B0
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0xf8
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xe0
	strb r0, [r1]
	ldr r1, _08102A60 @ =gUnk_02020EE0
	ldr r0, _08102A64 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08102A4E
	ldrb r0, [r4]
	cmp r0, #0
	bne _08102A16
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08102A4E
_08102A16:
	ldr r1, _08102A68 @ =gUnk_08D60FA4
	ldr r4, _08102A6C @ =gSongTable
	ldr r2, _08102A70 @ =0x00000D3C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08102A3A
	ldr r1, _08102A74 @ =0x00000D38
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08102A4E
_08102A3A:
	cmp r3, #0
	beq _08102A48
	ldr r0, _08102A78 @ =gUnk_0203AD10
	ldr r0, [r0]
	ands r0, r5
	cmp r0, #0
	bne _08102A4E
_08102A48:
	ldr r0, _08102A7C @ =0x000001A7
	bl m4aSongNumStart
_08102A4E:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08102A58: .4byte sub_08102D9C
_08102A5C: .4byte sub_08109A00
_08102A60: .4byte gUnk_02020EE0
_08102A64: .4byte gUnk_0203AD3C
_08102A68: .4byte gUnk_08D60FA4
_08102A6C: .4byte gSongTable
_08102A70: .4byte 0x00000D3C
_08102A74: .4byte 0x00000D38
_08102A78: .4byte gUnk_0203AD10
_08102A7C: .4byte 0x000001A7

	thumb_func_start sub_08102A80
sub_08102A80: @ 0x08102A80
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r6, r0, #0
	adds r5, r6, #0
	ldr r2, _08102B98 @ =sub_08102D9C
	movs r1, #2
	bl ObjectSetFunc
	ldr r0, [r6, #8]
	movs r1, #0x40
	orrs r0, r1
	adds r1, #0xc0
	mov r8, r1
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	ldr r1, _08102B9C @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r6, #8]
	movs r1, #0
	movs r0, #8
	strh r0, [r6, #4]
	adds r0, r6, #0
	adds r0, #0x50
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	subs r1, #0x1c
	movs r2, #0x18
	rsbs r2, r2, #0
	movs r0, #0x12
	str r0, [sp]
	adds r0, r6, #0
	movs r3, #0x1c
	bl sub_0803E2B0
	adds r0, r6, #0
	adds r0, #0x91
	movs r1, #0xf8
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x97
	movs r0, #0xe0
	strb r0, [r1]
	ldr r1, _08102BA0 @ =gUnk_02020EE0
	ldr r0, _08102BA4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r7, #0xd4
	lsls r7, r7, #1
	adds r0, r2, #0
	muls r0, r7, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08102B5C
	ldrb r0, [r6]
	cmp r0, #0
	bne _08102B20
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08102B5C
_08102B20:
	ldr r1, _08102BA8 @ =gUnk_08D60FA4
	ldr r4, _08102BAC @ =gSongTable
	ldr r2, _08102BB0 @ =0x00000D44
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08102B46
	movs r1, #0xd4
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08102B5C
_08102B46:
	cmp r3, #0
	beq _08102B56
	ldr r0, _08102BB4 @ =gUnk_0203AD10
	ldr r0, [r0]
	mov r2, r8
	ands r0, r2
	cmp r0, #0
	bne _08102B5C
_08102B56:
	adds r0, r7, #0
	bl m4aSongNumStart
_08102B5C:
	adds r2, r5, #0
	adds r2, #0xd6
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0
	beq _08102BDA
	lsls r0, r0, #8
	str r0, [r6, #0x40]
	adds r1, r5, #0
	adds r1, #0xd8
	movs r3, #0
	ldrsh r0, [r1, r3]
	lsls r0, r0, #8
	str r0, [r6, #0x44]
	movs r0, #0
	strh r0, [r1]
	strh r0, [r2]
	adds r0, r5, #0
	adds r0, #0xda
	ldrb r0, [r0]
	cmp r0, #6
	bne _08102BB8
	adds r0, r6, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r0, #0x40]
	ldr r0, [r6, #0x40]
	cmp r1, r0
	blt _08102BD0
	b _08102BC0
	.align 2, 0
_08102B98: .4byte sub_08102D9C
_08102B9C: .4byte 0xFFFFFBFF
_08102BA0: .4byte gUnk_02020EE0
_08102BA4: .4byte gUnk_0203AD3C
_08102BA8: .4byte gUnk_08D60FA4
_08102BAC: .4byte gSongTable
_08102BB0: .4byte 0x00000D44
_08102BB4: .4byte gUnk_0203AD10
_08102BB8:
	ldr r1, [r6, #0x40]
	ldr r0, _08102BCC @ =0x00007DFF
	cmp r1, r0
	bgt _08102BD0
_08102BC0:
	ldr r0, [r6, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r6, #8]
	b _08102D82
	.align 2, 0
_08102BCC: .4byte 0x00007DFF
_08102BD0:
	ldr r0, [r6, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r6, #8]
	b _08102D82
_08102BDA:
	adds r0, r6, #0
	bl sub_0803D46C
	adds r3, r0, #0
	adds r0, r6, #0
	adds r0, #0xac
	str r3, [r0]
	adds r1, r5, #0
	adds r1, #0xd4
	ldrb r1, [r1]
	adds r4, r0, #0
	cmp r1, #0
	beq _08102CA0
	ldr r2, _08102C20 @ =gCurLevelInfo
	adds r0, r3, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r1, r2, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r1, [r3, #0x40]
	ldr r0, [r0]
	subs r1, r1, r0
	ldr r0, _08102C24 @ =0x000077FF
	adds r5, r2, #0
	cmp r1, r0
	bgt _08102C28
	ldr r0, [r6, #8]
	movs r1, #1
	orrs r0, r1
	b _08102C30
	.align 2, 0
_08102C20: .4byte gCurLevelInfo
_08102C24: .4byte 0x000077FF
_08102C28:
	ldr r0, [r6, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_08102C30:
	str r0, [r6, #8]
	ldr r2, [r4]
	adds r0, r2, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r1, r5, #0
	adds r1, #0x10
	adds r0, r0, r1
	ldr r2, [r2, #0x44]
	ldr r0, [r0]
	subs r0, r2, r0
	ldr r1, _08102C58 @ =0x00002FFF
	cmp r0, r1
	bgt _08102C5C
	adds r1, #1
	adds r0, r2, r1
	b _08102C60
	.align 2, 0
_08102C58: .4byte 0x00002FFF
_08102C5C:
	ldr r3, _08102C90 @ =0xFFFFD000
	adds r0, r2, r3
_08102C60:
	str r0, [r6, #0x44]
	ldr r5, _08102C94 @ =gRngVal
	ldr r0, [r5]
	ldr r4, _08102C98 @ =0x00196225
	adds r2, r0, #0
	muls r2, r4, r2
	ldr r3, _08102C9C @ =0x3C6EF35F
	adds r2, r2, r3
	lsrs r0, r2, #0x10
	movs r1, #0x7f
	ands r0, r1
	adds r0, #0x38
	lsls r0, r0, #8
	str r0, [r6, #0x40]
	adds r0, r2, #0
	muls r0, r4, r0
	adds r0, r0, r3
	str r0, [r5]
	lsrs r0, r0, #0x10
	movs r1, #0x3f
	ands r0, r1
	adds r0, #0x28
	lsls r0, r0, #8
	b _08102D24
	.align 2, 0
_08102C90: .4byte 0xFFFFD000
_08102C94: .4byte gRngVal
_08102C98: .4byte 0x00196225
_08102C9C: .4byte 0x3C6EF35F
_08102CA0:
	ldr r2, _08102CD4 @ =gCurLevelInfo
	adds r0, r3, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r1, r2, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r1, [r3, #0x40]
	ldr r0, [r0]
	subs r1, r1, r0
	ldr r0, _08102CD8 @ =0x000077FF
	adds r5, r2, #0
	cmp r1, r0
	bgt _08102CDC
	ldr r0, [r6, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r6, #8]
	ldr r0, [r3, #0x40]
	movs r1, #0xc0
	lsls r1, r1, #7
	adds r0, r0, r1
	b _08102CEC
	.align 2, 0
_08102CD4: .4byte gCurLevelInfo
_08102CD8: .4byte 0x000077FF
_08102CDC:
	ldr r0, [r6, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r6, #8]
	ldr r0, [r3, #0x40]
	ldr r2, _08102D18 @ =0xFFFFA000
	adds r0, r0, r2
_08102CEC:
	str r0, [r6, #0x40]
	ldr r2, [r4]
	adds r0, r2, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r1, r5, #0
	adds r1, #0x10
	adds r0, r0, r1
	ldr r2, [r2, #0x44]
	ldr r0, [r0]
	subs r0, r2, r0
	ldr r1, _08102D1C @ =0x00002FFF
	cmp r0, r1
	bgt _08102D20
	movs r3, #0xc0
	lsls r3, r3, #6
	adds r0, r2, r3
	b _08102D24
	.align 2, 0
_08102D18: .4byte 0xFFFFA000
_08102D1C: .4byte 0x00002FFF
_08102D20:
	ldr r1, _08102D90 @ =0xFFFFD000
	adds r0, r2, r1
_08102D24:
	str r0, [r6, #0x44]
	adds r0, r6, #0
	adds r0, #0xa4
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #8
	movs r3, #0xe0
	lsls r3, r3, #6
	adds r1, r0, r3
	ldr r0, [r6, #0x40]
	cmp r1, r0
	ble _08102D3E
	str r1, [r6, #0x40]
_08102D3E:
	adds r0, r6, #0
	adds r0, #0xa8
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #8
	ldr r2, _08102D94 @ =0xFFFFC800
	adds r1, r0, r2
	ldr r0, [r6, #0x40]
	cmp r1, r0
	bge _08102D54
	str r1, [r6, #0x40]
_08102D54:
	adds r0, r6, #0
	adds r0, #0xa6
	movs r3, #0
	ldrsh r0, [r0, r3]
	lsls r0, r0, #8
	movs r2, #0xa0
	lsls r2, r2, #6
	adds r1, r0, r2
	ldr r0, [r6, #0x44]
	cmp r1, r0
	ble _08102D6C
	str r1, [r6, #0x44]
_08102D6C:
	adds r0, r6, #0
	adds r0, #0xaa
	movs r3, #0
	ldrsh r0, [r0, r3]
	lsls r0, r0, #8
	ldr r2, _08102D98 @ =0xFFFFA800
	adds r1, r0, r2
	ldr r0, [r6, #0x44]
	cmp r1, r0
	bge _08102D82
	str r1, [r6, #0x44]
_08102D82:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08102D90: .4byte 0xFFFFD000
_08102D94: .4byte 0xFFFFC800
_08102D98: .4byte 0xFFFFA800

	thumb_func_start sub_08102D9C
sub_08102D9C: @ 0x08102D9C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	adds r3, r4, #0
	adds r3, #0x83
	ldrb r0, [r3]
	cmp r0, #2
	bhi _08102DAE
	b _08102EFE
_08102DAE:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	beq _08102DBE
	b _08102F34
_08102DBE:
	adds r0, r4, #0
	adds r0, #0x50
	strh r1, [r0]
	adds r5, r4, #0
	adds r5, #0xd4
	ldrb r0, [r5]
	cmp r0, #0
	beq _08102E56
	adds r0, r4, #0
	adds r0, #0xda
	ldrb r0, [r0]
	cmp r0, #0xb
	bne _08102E1A
	adds r0, r4, #0
	bl sub_081062B4
	ldrb r0, [r5]
	cmp r0, #2
	beq _08102E0C
	cmp r0, #2
	bgt _08102DEE
	cmp r0, #1
	beq _08102E36
	b _08102E44
_08102DEE:
	cmp r0, #3
	beq _08102DFE
	cmp r0, #4
	bne _08102E44
	adds r1, r4, #0
	adds r1, #0xd6
	movs r0, #0x16
	b _08102E3C
_08102DFE:
	adds r1, r4, #0
	adds r1, #0xd6
	movs r0, #0x16
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x80
	b _08102E42
_08102E0C:
	adds r1, r4, #0
	adds r1, #0xd6
	movs r0, #0xe6
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x80
	b _08102E42
_08102E1A:
	cmp r0, #0xa
	bne _08102E44
	adds r0, r4, #0
	bl sub_081062B4
	ldrb r0, [r5]
	cmp r0, #1
	beq _08102E36
	cmp r0, #2
	bne _08102E44
	adds r1, r4, #0
	adds r1, #0xd6
	movs r0, #0x16
	b _08102E3C
_08102E36:
	adds r1, r4, #0
	adds r1, #0xd6
	movs r0, #0x7e
_08102E3C:
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x18
_08102E42:
	strh r0, [r1]
_08102E44:
	adds r1, r6, #0
	adds r1, #0xd4
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_08102938
	b _08102F34
_08102E56:
	adds r0, r4, #0
	adds r0, #0xda
	ldrb r0, [r0]
	subs r0, #1
	cmp r0, #0xe
	bhi _08102EAC
	lsls r0, r0, #2
	ldr r1, _08102E6C @ =_08102E70
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08102E6C: .4byte _08102E70
_08102E70: @ jump table
	.4byte _08102EE6 @ case 0
	.4byte _08102EE6 @ case 1
	.4byte _08102EE6 @ case 2
	.4byte _08102EAC @ case 3
	.4byte _08102EE6 @ case 4
	.4byte _08102EEE @ case 5
	.4byte _08102EEE @ case 6
	.4byte _08102EEE @ case 7
	.4byte _08102EEE @ case 8
	.4byte _08102EEE @ case 9
	.4byte _08102EEE @ case 10
	.4byte _08102EEE @ case 11
	.4byte _08102EEE @ case 12
	.4byte _08102EF6 @ case 13
	.4byte _08102EEE @ case 14
_08102EAC:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _08102ECE
	cmp r0, #1
	bgt _08102EC0
	cmp r0, #0
	beq _08102EC6
	b _08102EDE
_08102EC0:
	cmp r0, #2
	beq _08102ED6
	b _08102EDE
_08102EC6:
	adds r0, r4, #0
	bl sub_081007A8
	b _08102F34
_08102ECE:
	adds r0, r4, #0
	bl sub_08100858
	b _08102F34
_08102ED6:
	adds r0, r4, #0
	bl sub_081009A4
	b _08102F34
_08102EDE:
	adds r0, r4, #0
	bl sub_08100BD0
	b _08102F34
_08102EE6:
	adds r0, r4, #0
	bl sub_08102F3C
	b _08102F34
_08102EEE:
	adds r0, r4, #0
	bl sub_081030A8
	b _08102F34
_08102EF6:
	adds r0, r4, #0
	bl sub_081049E8
	b _08102F34
_08102EFE:
	ldr r2, [r4, #8]
	movs r0, #2
	ands r0, r2
	cmp r0, #0
	beq _08102F34
	adds r0, r4, #0
	adds r0, #0xd4
	ldrb r0, [r0]
	cmp r0, #0
	bne _08102F30
	ldr r0, [r4, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08102F2C @ =0xFFFFFDFF
	ands r2, r0
	str r2, [r4, #8]
	movs r0, #4
	b _08102F32
	.align 2, 0
_08102F2C: .4byte 0xFFFFFDFF
_08102F30:
	movs r0, #3
_08102F32:
	strb r0, [r3]
_08102F34:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08102F3C
sub_08102F3C: @ 0x08102F3C
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r2, _08102FCC @ =sub_08102FD0
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0xa2
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0x1f
	bgt _08102F74
	movs r0, #0x20
	strh r0, [r1]
_08102F74:
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0x70
	ble _08102F80
	movs r0, #0x70
	strh r0, [r1]
_08102F80:
	adds r0, r4, #0
	adds r0, #0x9e
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	movs r1, #0x1c
	rsbs r1, r1, #0
	movs r2, #0x18
	rsbs r2, r2, #0
	movs r0, #0x12
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0x1c
	bl sub_0803E2B0
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0xf8
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xe0
	strb r0, [r1]
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08102FCC: .4byte sub_08102FD0

	thumb_func_start sub_08102FD0
sub_08102FD0: @ 0x08102FD0
	push {r4, lr}
	adds r3, r0, #0
	adds r4, r3, #0
	ldr r1, [r3, #8]
	movs r0, #4
	orrs r1, r0
	str r1, [r3, #8]
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x18
	ble _081030A0
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _0810301A
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	movs r0, #0xa
	rsbs r0, r0, #0
	cmp r2, r0
	bge _08103014
	ldr r0, _08103010 @ =0x0000FFF6
	strh r0, [r1]
	b _0810303C
	.align 2, 0
_08103010: .4byte 0x0000FFF6
_08103014:
	cmp r2, #0xa
	ble _0810303C
	b _0810302C
_0810301A:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xa
	ble _08103032
_0810302C:
	movs r0, #0xa
	strh r0, [r1]
	b _0810303C
_08103032:
	movs r2, #0xa
	rsbs r2, r2, #0
	cmp r0, r2
	bge _0810303C
	strh r2, [r1]
_0810303C:
	adds r2, r3, #0
	adds r2, #0x52
	ldr r1, _08103074 @ =0xFFFFFF00
	adds r0, r1, #0
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	ldr r1, _08103078 @ =0xFEA00000
	cmp r0, r1
	bge _08103056
	ldr r0, _0810307C @ =0x0000FEA0
	strh r0, [r2]
_08103056:
	adds r0, r4, #0
	adds r0, #0xda
	ldrb r0, [r0]
	cmp r0, #3
	beq _08103064
	cmp r0, #5
	bne _08103080
_08103064:
	ldr r0, [r3, #0x44]
	asrs r0, r0, #8
	cmp r0, #0x47
	ble _081030A0
	adds r0, r3, #0
	bl sub_081030A8
	b _081030A0
	.align 2, 0
_08103074: .4byte 0xFFFFFF00
_08103078: .4byte 0xFEA00000
_0810307C: .4byte 0x0000FEA0
_08103080:
	adds r0, r3, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #0x44]
	ldr r1, [r3, #0x44]
	cmp r0, r1
	ble _0810309A
	asrs r0, r0, #8
	cmp r0, #0x20
	ble _0810309A
	asrs r0, r1, #8
	cmp r0, #0x6f
	ble _081030A0
_0810309A:
	adds r0, r3, #0
	bl sub_081030A8
_081030A0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_081030A8
sub_081030A8: @ 0x081030A8
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r2, _081030DC @ =sub_08109A38
	movs r1, #6
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xda
	ldrb r0, [r0]
	cmp r0, #0xd
	bne _081030E0
	movs r0, #0x10
	b _081030EA
	.align 2, 0
_081030DC: .4byte sub_08109A38
_081030E0:
	cmp r0, #0
	beq _081030E8
	movs r0, #8
	b _081030EA
_081030E8:
	movs r0, #4
_081030EA:
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	movs r1, #0x1c
	rsbs r1, r1, #0
	movs r2, #0x18
	rsbs r2, r2, #0
	movs r0, #0x12
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0x1c
	bl sub_0803E2B0
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0xf8
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xe0
	strb r0, [r1]
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_08103138
sub_08103138: @ 0x08103138
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	ldr r2, _081031F4 @ =sub_08103268
	movs r1, #7
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r3, #0
	movs r2, #0
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r4, #8]
	strh r2, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	ldr r1, _081031F8 @ =gUnk_02020EE0
	ldr r0, _081031FC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081031D4
	ldrb r0, [r4]
	cmp r0, #0
	bne _08103198
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _081031D4
_08103198:
	ldr r1, _08103200 @ =gUnk_08D60FA4
	ldr r5, _08103204 @ =gSongTable
	ldr r2, _08103208 @ =0x00000D4C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081031BC
	ldr r1, _0810320C @ =0x00000D48
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081031D4
_081031BC:
	cmp r3, #0
	beq _081031CE
	ldr r0, _08103210 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081031D4
_081031CE:
	ldr r0, _08103214 @ =0x000001A9
	bl m4aSongNumStart
_081031D4:
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	cmp r0, #1
	bne _08103262
	adds r0, r6, #0
	adds r0, #0xda
	ldrb r0, [r0]
	subs r0, #1
	cmp r0, #6
	bhi _08103262
	lsls r0, r0, #2
	ldr r1, _08103218 @ =_0810321C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_081031F4: .4byte sub_08103268
_081031F8: .4byte gUnk_02020EE0
_081031FC: .4byte gUnk_0203AD3C
_08103200: .4byte gUnk_08D60FA4
_08103204: .4byte gSongTable
_08103208: .4byte 0x00000D4C
_0810320C: .4byte 0x00000D48
_08103210: .4byte gUnk_0203AD10
_08103214: .4byte 0x000001A9
_08103218: .4byte _0810321C
_0810321C: @ jump table
	.4byte _08103238 @ case 0
	.4byte _08103238 @ case 1
	.4byte _08103238 @ case 2
	.4byte _08103262 @ case 3
	.4byte _08103238 @ case 4
	.4byte _08103242 @ case 5
	.4byte _08103242 @ case 6
_08103238:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #9
	strb r0, [r1]
	b _08103262
_08103242:
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _08103258
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _08103260
_08103258:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_08103260:
	str r0, [r4, #8]
_08103262:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_08103268
sub_08103268: @ 0x08103268
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldrb r0, [r4, #1]
	cmp r0, #0xf
	bne _081032B8
	movs r2, #0xc
	rsbs r2, r2, #0
	movs r0, #0x18
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r2, #0
	movs r3, #0xc
	bl sub_0803E2B0
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xf6
	strb r0, [r1]
	ldr r0, [r4, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	str r0, [r4, #0x5c]
_081032B8:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08103376
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	cmp r0, #1
	beq _081032E4
	cmp r0, #1
	bgt _081032D6
	cmp r0, #0
	beq _081032DC
	b _08103376
_081032D6:
	cmp r0, #2
	beq _08103370
	b _08103376
_081032DC:
	adds r0, r4, #0
	bl sub_08109A8C
	b _08103376
_081032E4:
	adds r0, r4, #0
	adds r0, #0xda
	ldrb r0, [r0]
	cmp r0, #0xc
	bhi _08103376
	lsls r0, r0, #2
	ldr r1, _081032F8 @ =_081032FC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_081032F8: .4byte _081032FC
_081032FC: @ jump table
	.4byte _08103330 @ case 0
	.4byte _08103338 @ case 1
	.4byte _08103338 @ case 2
	.4byte _08103340 @ case 3
	.4byte _08103376 @ case 4
	.4byte _08103348 @ case 5
	.4byte _08103350 @ case 6
	.4byte _08103350 @ case 7
	.4byte _08103358 @ case 8
	.4byte _08103358 @ case 9
	.4byte _08103368 @ case 10
	.4byte _08103368 @ case 11
	.4byte _08103360 @ case 12
_08103330:
	adds r0, r4, #0
	bl sub_081038CC
	b _08103376
_08103338:
	adds r0, r4, #0
	bl sub_08103A64
	b _08103376
_08103340:
	adds r0, r4, #0
	bl sub_08103C68
	b _08103376
_08103348:
	adds r0, r4, #0
	bl sub_08109B1C
	b _08103376
_08103350:
	adds r0, r4, #0
	bl sub_08104028
	b _08103376
_08103358:
	adds r0, r4, #0
	bl sub_081042C8
	b _08103376
_08103360:
	adds r0, r4, #0
	bl sub_0810451C
	b _08103376
_08103368:
	adds r0, r4, #0
	bl sub_08104704
	b _08103376
_08103370:
	adds r0, r4, #0
	bl sub_08104C80
_08103376:
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08103380
sub_08103380: @ 0x08103380
	push {lr}
	adds r1, r0, #0
	adds r0, #0xdb
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _08103400
	ldrh r0, [r1, #4]
	subs r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	bne _08103400
	adds r0, r1, #0
	adds r0, #0xd4
	ldrb r0, [r0]
	adds r3, r1, #0
	adds r3, #0xda
	cmp r0, #0
	bne _081033B2
	ldrb r0, [r3]
	cmp r0, #0
	beq _081033C8
_081033B2:
	movs r0, #0
	strb r0, [r3]
	adds r0, r1, #0
	adds r0, #0xd8
	strh r2, [r0]
	subs r0, #2
	strh r2, [r0]
	adds r0, r1, #0
	bl sub_08102938
	b _08103400
_081033C8:
	adds r0, r1, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _081033EA
	cmp r0, #1
	bgt _081033DC
	cmp r0, #0
	beq _081033E2
	b _081033FA
_081033DC:
	cmp r0, #2
	beq _081033F2
	b _081033FA
_081033E2:
	adds r0, r1, #0
	bl sub_081007A8
	b _08103400
_081033EA:
	adds r0, r1, #0
	bl sub_08100858
	b _08103400
_081033F2:
	adds r0, r1, #0
	bl sub_081009A4
	b _08103400
_081033FA:
	adds r0, r1, #0
	bl sub_08100BD0
_08103400:
	pop {r0}
	bx r0

	thumb_func_start sub_08103404
sub_08103404: @ 0x08103404
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r5, r0, #0
	adds r6, r5, #0
	ldr r0, [r5, #8]
	movs r1, #4
	mov sb, r1
	orrs r0, r1
	str r0, [r5, #8]
	movs r2, #4
	ldrsh r7, [r5, r2]
	cmp r7, #0
	bne _08103426
	b _0810359C
_08103426:
	ldr r2, _0810356C @ =gUnk_08357288
	adds r3, r5, #0
	adds r3, #0x9e
	ldrb r0, [r3]
	lsrs r0, r0, #1
	adds r0, r0, r2
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x54
	strb r1, [r0]
	adds r0, #0x78
	ldr r1, [r0]
	ldrb r0, [r3]
	lsrs r0, r0, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r1, #0x40
	strb r0, [r1]
	ldrb r0, [r3]
	adds r1, r0, #1
	movs r0, #7
	ands r1, r0
	strb r1, [r3]
	adds r0, r5, #0
	adds r0, #0xdb
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _081034CE
	cmp r1, #0
	bne _081034CE
	ldr r1, _08103570 @ =gUnk_02020EE0
	ldr r0, _08103574 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081034CE
	ldrb r0, [r5]
	cmp r0, #0
	bne _08103492
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _081034CE
_08103492:
	ldr r1, _08103578 @ =gUnk_08D60FA4
	ldr r4, _0810357C @ =gSongTable
	ldr r3, _08103580 @ =0x00000D6C
	adds r0, r4, r3
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081034B6
	ldr r1, _08103584 @ =0x00000D68
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081034CE
_081034B6:
	cmp r3, #0
	beq _081034C8
	ldr r0, _08103588 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081034CE
_081034C8:
	ldr r0, _0810358C @ =0x000001AD
	bl m4aSongNumStart
_081034CE:
	adds r3, r6, #0
	adds r3, #0xb4
	ldr r1, [r3]
	adds r1, #0xa0
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r2, #0
	ldrh r4, [r1]
	adds r0, r0, r4
	strh r0, [r1]
	ldr r0, [r3]
	adds r2, r0, #0
	adds r2, #0xa0
	movs r1, #0
	ldrsh r0, [r2, r1]
	movs r1, #0xa0
	lsls r1, r1, #7
	cmp r0, r1
	ble _081034F6
	strh r1, [r2]
_081034F6:
	ldr r1, [r3]
	adds r1, #0xa2
	ldrh r0, [r1]
	adds r0, #2
	strh r0, [r1]
	ldr r0, [r3]
	adds r1, r0, #0
	adds r1, #0xa2
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0x1a
	ble _08103512
	movs r0, #0x1a
	strh r0, [r1]
_08103512:
	adds r2, r6, #0
	adds r2, #0xb8
	ldr r1, [r2]
	ldr r0, [r3]
	adds r0, #0xa0
	ldrh r0, [r0]
	adds r1, #0xa0
	strh r0, [r1]
	ldr r1, [r2]
	ldr r0, [r3]
	adds r0, #0xa2
	ldrh r0, [r0]
	adds r1, #0xa2
	strh r0, [r1]
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0810353C
	b _08103670
_0810353C:
	adds r0, r5, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08103548
	b _08103670
_08103548:
	ldr r2, _08103590 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08103594 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _08103598 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08103562
	b _08103670
_08103562:
	adds r0, r5, #0
	bl sub_08109AD4
	b _08103670
	.align 2, 0
_0810356C: .4byte gUnk_08357288
_08103570: .4byte gUnk_02020EE0
_08103574: .4byte gUnk_0203AD3C
_08103578: .4byte gUnk_08D60FA4
_0810357C: .4byte gSongTable
_08103580: .4byte 0x00000D6C
_08103584: .4byte 0x00000D68
_08103588: .4byte gUnk_0203AD10
_0810358C: .4byte 0x000001AD
_08103590: .4byte gRngVal
_08103594: .4byte 0x00196225
_08103598: .4byte 0x3C6EF35F
_0810359C:
	adds r4, r5, #0
	adds r4, #0xb4
	ldr r0, [r4]
	mov r6, sp
	adds r6, #2
	mov r1, sp
	adds r2, r6, #0
	bl sub_08109DC4
	ldr r1, [r4]
	adds r1, #0xa0
	ldr r2, _08103680 @ =0xFFFFFF00
	adds r0, r2, #0
	ldrh r3, [r1]
	adds r0, r0, r3
	movs r2, #0
	mov r8, r2
	strh r0, [r1]
	ldr r0, [r4]
	adds r2, r0, #0
	adds r2, #0xa0
	mov r0, sp
	movs r3, #0
	ldrsh r1, [r2, r3]
	ldrh r3, [r0]
	mov ip, r3
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r1, r0
	bge _081035DC
	mov r0, ip
	strh r0, [r2]
_081035DC:
	ldr r1, [r4]
	adds r1, #0xa2
	ldrh r0, [r1]
	subs r0, #2
	strh r0, [r1]
	ldr r0, [r4]
	adds r2, r0, #0
	adds r2, #0xa2
	movs r3, #0
	ldrsh r1, [r2, r3]
	ldrh r0, [r6]
	mov ip, r0
	movs r3, #0
	ldrsh r0, [r6, r3]
	cmp r1, r0
	bge _08103600
	mov r0, ip
	strh r0, [r2]
_08103600:
	adds r2, r5, #0
	adds r2, #0xb8
	ldr r1, [r2]
	ldr r0, [r4]
	adds r0, #0xa0
	ldrh r0, [r0]
	adds r1, #0xa0
	strh r0, [r1]
	ldr r1, [r2]
	ldr r0, [r4]
	adds r0, #0xa2
	ldrh r0, [r0]
	adds r1, #0xa2
	strh r0, [r1]
	ldr r3, [r4]
	adds r0, r3, #0
	adds r0, #0xa0
	mov r1, sp
	movs r4, #0
	ldrsh r2, [r0, r4]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r2, r0
	bne _08103670
	adds r0, r3, #0
	adds r0, #0xa2
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r3, #0
	ldrsh r0, [r6, r3]
	cmp r1, r0
	bne _08103670
	ldr r2, _08103684 @ =sub_08103380
	adds r0, r5, #0
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	strh r7, [r0]
	adds r0, #2
	strh r7, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	mov r4, sb
	strh r4, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x9e
	mov r1, r8
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
_08103670:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08103680: .4byte 0xFFFFFF00
_08103684: .4byte sub_08103380

	thumb_func_start sub_08103688
sub_08103688: @ 0x08103688
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r5, r0, #0
	adds r6, r5, #0
	ldr r0, [r5, #8]
	movs r1, #4
	mov sb, r1
	orrs r0, r1
	str r0, [r5, #8]
	movs r2, #4
	ldrsh r7, [r5, r2]
	cmp r7, #0
	bne _081036AA
	b _081037E0
_081036AA:
	ldr r2, _081037BC @ =gUnk_08357288
	adds r3, r5, #0
	adds r3, #0x9e
	ldrb r0, [r3]
	lsrs r0, r0, #1
	adds r0, r0, r2
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x54
	strb r1, [r0]
	adds r0, #0x78
	ldr r1, [r0]
	ldrb r0, [r3]
	lsrs r0, r0, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r1, #0x40
	strb r0, [r1]
	ldrb r0, [r3]
	adds r1, r0, #1
	movs r0, #7
	ands r1, r0
	strb r1, [r3]
	adds r0, r5, #0
	adds r0, #0xdb
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _08103752
	cmp r1, #0
	bne _08103752
	ldr r1, _081037C0 @ =gUnk_02020EE0
	ldr r0, _081037C4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08103752
	ldrb r0, [r5]
	cmp r0, #0
	bne _08103716
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08103752
_08103716:
	ldr r1, _081037C8 @ =gUnk_08D60FA4
	ldr r4, _081037CC @ =gSongTable
	ldr r3, _081037D0 @ =0x00000D6C
	adds r0, r4, r3
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810373A
	ldr r1, _081037D4 @ =0x00000D68
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08103752
_0810373A:
	cmp r3, #0
	beq _0810374C
	ldr r0, _081037D8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08103752
_0810374C:
	ldr r0, _081037DC @ =0x000001AD
	bl m4aSongNumStart
_08103752:
	adds r3, r6, #0
	adds r3, #0xb4
	ldr r1, [r3]
	adds r1, #0xa0
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r2, #0
	ldrh r4, [r1]
	adds r0, r0, r4
	strh r0, [r1]
	ldr r0, [r3]
	adds r2, r0, #0
	adds r2, #0xa0
	movs r1, #0
	ldrsh r0, [r2, r1]
	movs r1, #0xd0
	lsls r1, r1, #7
	cmp r0, r1
	ble _0810377A
	strh r1, [r2]
_0810377A:
	ldr r1, [r3]
	adds r1, #0xa2
	ldrh r0, [r1]
	adds r0, #2
	strh r0, [r1]
	ldr r0, [r3]
	adds r1, r0, #0
	adds r1, #0xa2
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0x20
	ble _08103796
	movs r0, #0x20
	strh r0, [r1]
_08103796:
	adds r2, r6, #0
	adds r2, #0xb8
	ldr r1, [r2]
	ldr r0, [r3]
	adds r0, #0xa0
	ldrh r0, [r0]
	adds r1, #0xa0
	strh r0, [r1]
	ldr r1, [r2]
	ldr r0, [r3]
	adds r0, #0xa2
	ldrh r0, [r0]
	adds r1, #0xa2
	strh r0, [r1]
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	b _081038B4
	.align 2, 0
_081037BC: .4byte gUnk_08357288
_081037C0: .4byte gUnk_02020EE0
_081037C4: .4byte gUnk_0203AD3C
_081037C8: .4byte gUnk_08D60FA4
_081037CC: .4byte gSongTable
_081037D0: .4byte 0x00000D6C
_081037D4: .4byte 0x00000D68
_081037D8: .4byte gUnk_0203AD10
_081037DC: .4byte 0x000001AD
_081037E0:
	adds r4, r5, #0
	adds r4, #0xb4
	ldr r0, [r4]
	mov r6, sp
	adds r6, #2
	mov r1, sp
	adds r2, r6, #0
	bl sub_08109DC4
	ldr r1, [r4]
	adds r1, #0xa0
	ldr r3, _081038C4 @ =0xFFFFFF00
	adds r0, r3, #0
	ldrh r2, [r1]
	adds r0, r0, r2
	movs r3, #0
	mov r8, r3
	strh r0, [r1]
	ldr r0, [r4]
	adds r2, r0, #0
	adds r2, #0xa0
	mov r0, sp
	movs r3, #0
	ldrsh r1, [r2, r3]
	ldrh r3, [r0]
	mov ip, r3
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r1, r0
	bge _08103820
	mov r0, ip
	strh r0, [r2]
_08103820:
	ldr r1, [r4]
	adds r1, #0xa2
	ldrh r0, [r1]
	subs r0, #2
	strh r0, [r1]
	ldr r0, [r4]
	adds r2, r0, #0
	adds r2, #0xa2
	movs r3, #0
	ldrsh r1, [r2, r3]
	ldrh r0, [r6]
	mov ip, r0
	movs r3, #0
	ldrsh r0, [r6, r3]
	cmp r1, r0
	bge _08103844
	mov r0, ip
	strh r0, [r2]
_08103844:
	adds r2, r5, #0
	adds r2, #0xb8
	ldr r1, [r2]
	ldr r0, [r4]
	adds r0, #0xa0
	ldrh r0, [r0]
	adds r1, #0xa0
	strh r0, [r1]
	ldr r1, [r2]
	ldr r0, [r4]
	adds r0, #0xa2
	ldrh r0, [r0]
	adds r1, #0xa2
	strh r0, [r1]
	ldr r3, [r4]
	adds r0, r3, #0
	adds r0, #0xa0
	mov r1, sp
	movs r4, #0
	ldrsh r2, [r0, r4]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r2, r0
	bne _081038B4
	adds r0, r3, #0
	adds r0, #0xa2
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r3, #0
	ldrsh r0, [r6, r3]
	cmp r1, r0
	bne _081038B4
	ldr r2, _081038C8 @ =sub_08103380
	adds r0, r5, #0
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	strh r7, [r0]
	adds r0, #2
	strh r7, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	mov r4, sb
	strh r4, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x9e
	mov r1, r8
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
_081038B4:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081038C4: .4byte 0xFFFFFF00
_081038C8: .4byte sub_08103380

	thumb_func_start sub_081038CC
sub_081038CC: @ 0x081038CC
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0xd5
	movs r4, #0
	movs r0, #5
	strb r0, [r1]
	ldr r2, _08103908 @ =sub_081039AC
	adds r0, r5, #0
	movs r1, #8
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810390C
	movs r0, #0x50
	b _0810390E
	.align 2, 0
_08103908: .4byte sub_081039AC
_0810390C:
	movs r0, #0x80
_0810390E:
	strh r0, [r5, #4]
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_08105EC4
	ldr r1, _08103994 @ =gUnk_02020EE0
	ldr r0, _08103998 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810398E
	ldrb r0, [r5]
	cmp r0, #0
	bne _0810394E
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810398E
_0810394E:
	ldr r1, _0810399C @ =gUnk_08D60FA4
	ldr r4, _081039A0 @ =gSongTable
	ldr r2, _081039A4 @ =0x00000D54
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08103974
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810398E
_08103974:
	cmp r3, #0
	beq _08103986
	ldr r0, _081039A8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810398E
_08103986:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_0810398E:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08103994: .4byte gUnk_02020EE0
_08103998: .4byte gUnk_0203AD3C
_0810399C: .4byte gUnk_08D60FA4
_081039A0: .4byte gSongTable
_081039A4: .4byte 0x00000D54
_081039A8: .4byte gUnk_0203AD10

	thumb_func_start sub_081039AC
sub_081039AC: @ 0x081039AC
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r7, #4
	orrs r0, r7
	str r0, [r4, #8]
	ldrh r0, [r4, #4]
	subs r0, #1
	movs r6, #0
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _081039F4
	ldr r2, _081039FC @ =sub_08103380
	adds r0, r4, #0
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r4, #8]
	strh r7, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r6, [r0]
	adds r0, #1
	strb r6, [r0]
_081039F4:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081039FC: .4byte sub_08103380

	thumb_func_start sub_08103A00
sub_08103A00: @ 0x08103A00
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0x85
	movs r2, #1
	strb r2, [r0]
	adds r0, #0x55
	strb r2, [r0]
	ldr r3, _08103A3C @ =gRngVal
	ldr r1, [r3]
	ldr r0, _08103A40 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08103A44 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r3]
	lsrs r0, r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _08103A48
	adds r1, r4, #0
	adds r1, #0xd6
	movs r0, #0x2e
	b _08103A4E
	.align 2, 0
_08103A3C: .4byte gRngVal
_08103A40: .4byte 0x00196225
_08103A44: .4byte 0x3C6EF35F
_08103A48:
	adds r1, r4, #0
	adds r1, #0xd6
	movs r0, #0xce
_08103A4E:
	strh r0, [r1]
	adds r1, r5, #0
	adds r1, #0xd8
	movs r0, #0x20
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_08102938
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_08103A64
sub_08103A64: @ 0x08103A64
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0xd5
	movs r4, #0
	movs r0, #5
	strb r0, [r1]
	ldr r2, _08103AA4 @ =sub_08103AE4
	adds r0, r5, #0
	movs r1, #0xa
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	ldr r3, _08103AA8 @ =0x0000FFC0
	strh r3, [r0]
	adds r2, r5, #0
	adds r2, #0x52
	strh r4, [r2]
	adds r0, #0x8a
	ldrb r0, [r0]
	cmp r0, #2
	bne _08103AAE
	ldr r1, [r5, #0x44]
	movs r0, #0xb0
	lsls r0, r0, #7
	cmp r1, r0
	ble _08103AAC
	movs r0, #0x40
	strh r0, [r2]
	b _08103AAE
	.align 2, 0
_08103AA4: .4byte sub_08103AE4
_08103AA8: .4byte 0x0000FFC0
_08103AAC:
	strh r3, [r2]
_08103AAE:
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08103AC2
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
_08103AC2:
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	movs r1, #0
	movs r0, #0x28
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x9e
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_08103AE4
sub_08103AE4: @ 0x08103AE4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r7, r5, #0
	ldr r0, [r5, #8]
	movs r1, #4
	mov r8, r1
	orrs r0, r1
	str r0, [r5, #8]
	adds r6, r5, #0
	adds r6, #0x9e
	ldrb r0, [r6]
	cmp r0, #0
	beq _08103B0A
	cmp r0, #1
	bne _08103B08
	b _08103C1C
_08103B08:
	b _08103C58
_08103B0A:
	adds r2, r5, #0
	adds r2, #0x55
	ldr r0, _08103C00 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r5, #0
	adds r0, #0xcc
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
	adds r1, r5, #0
	adds r1, #0x9f
	ldrb r2, [r1]
	movs r0, #0xf
	ands r0, r2
	adds r6, r1, #0
	cmp r0, #0
	bne _08103B42
	adds r0, r5, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	bls _08103B54
_08103B42:
	movs r0, #7
	ands r0, r2
	cmp r0, #0
	bne _08103BCE
	adds r0, r5, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	bls _08103BCE
_08103B54:
	ldr r1, _08103C04 @ =gUnk_02020EE0
	ldr r0, _08103C08 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08103BC0
	ldrb r0, [r5]
	cmp r0, #0
	bne _08103B80
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08103BC0
_08103B80:
	ldr r1, _08103C0C @ =gUnk_08D60FA4
	ldr r4, _08103C10 @ =gSongTable
	ldr r2, _08103C14 @ =0x00000D54
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08103BA6
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08103BC0
_08103BA6:
	cmp r3, #0
	beq _08103BB8
	ldr r0, _08103C18 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08103BC0
_08103BB8:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08103BC0:
	movs r1, #0xc0
	lsls r1, r1, #3
	adds r0, r5, #0
	movs r2, #0
	movs r3, #1
	bl sub_081060C0
_08103BCE:
	ldrb r0, [r6]
	cmp r0, #0x40
	bls _08103BF6
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0xda
	ldrb r0, [r0]
	cmp r0, #1
	bne _08103BEC
	subs r1, #0x4e
	movs r0, #0
	strh r0, [r1]
_08103BEC:
	adds r1, r5, #0
	adds r1, #0x52
	ldrh r0, [r1]
	lsls r0, r0, #1
	strh r0, [r1]
_08103BF6:
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	b _08103C58
	.align 2, 0
_08103C00: .4byte gUnk_0203AD40
_08103C04: .4byte gUnk_02020EE0
_08103C08: .4byte gUnk_0203AD3C
_08103C0C: .4byte gUnk_08D60FA4
_08103C10: .4byte gSongTable
_08103C14: .4byte 0x00000D54
_08103C18: .4byte gUnk_0203AD10
_08103C1C:
	ldrh r0, [r5, #4]
	subs r0, #1
	movs r7, #0
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _08103C58
	ldr r2, _08103C64 @ =sub_08103380
	adds r0, r5, #0
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	mov r2, r8
	strh r2, [r5, #4]
	strb r7, [r6]
	adds r0, r5, #0
	adds r0, #0x9f
	strb r7, [r0]
_08103C58:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08103C64: .4byte sub_08103380

	thumb_func_start sub_08103C68
sub_08103C68: @ 0x08103C68
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0xd5
	movs r4, #0
	movs r0, #5
	strb r0, [r1]
	ldr r2, _08103CC0 @ =sub_08103CD0
	adds r0, r5, #0
	movs r1, #0xa
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	movs r3, #0
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	ldr r2, _08103CC4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08103CC8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08103CCC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #7
	ands r0, r1
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x9e
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08103CC0: .4byte sub_08103CD0
_08103CC4: .4byte gRngVal
_08103CC8: .4byte 0x00196225
_08103CCC: .4byte 0x3C6EF35F

	thumb_func_start sub_08103CD0
sub_08103CD0: @ 0x08103CD0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	movs r1, #4
	mov r8, r1
	orrs r0, r1
	str r0, [r5, #8]
	adds r6, r5, #0
	adds r6, #0x9e
	ldrb r0, [r6]
	cmp r0, #0
	beq _08103CF4
	cmp r0, #1
	bne _08103CF2
	b _08103E14
_08103CF2:
	b _08103E50
_08103CF4:
	adds r2, r5, #0
	adds r2, #0x55
	ldr r0, _08103DF0 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r5, #0
	adds r0, #0xcc
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
	adds r2, #0x4a
	ldrb r1, [r2]
	movs r0, #0xf
	ands r0, r1
	adds r6, r2, #0
	cmp r0, #0
	bne _08103DD6
	ldr r1, _08103DF4 @ =gUnk_083572C0
	movs r2, #4
	ldrsh r0, [r5, r2]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r7, [r0]
	ldrh r0, [r5, #4]
	adds r0, #1
	movs r1, #7
	ands r0, r1
	strh r0, [r5, #4]
	ldr r1, _08103DF8 @ =gUnk_02020EE0
	ldr r0, _08103DFC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08103DA2
	ldrb r0, [r5]
	cmp r0, #0
	bne _08103D62
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08103DA2
_08103D62:
	ldr r1, _08103E00 @ =gUnk_08D60FA4
	ldr r4, _08103E04 @ =gSongTable
	ldr r2, _08103E08 @ =0x00000D54
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08103D88
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08103DA2
_08103D88:
	cmp r3, #0
	beq _08103D9A
	ldr r0, _08103E0C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08103DA2
_08103D9A:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08103DA2:
	ldr r3, _08103E10 @ =gUnk_08D5FE14
	lsls r2, r7, #0x10
	asrs r2, r2, #0x10
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r2, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r2, r2, #1
	adds r2, r2, r3
	ldrh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	lsls r2, r0, #2
	adds r2, r2, r0
	asrs r1, r1, #1
	asrs r2, r2, #1
	adds r0, r5, #0
	movs r3, #0
	bl sub_081060C0
_08103DD6:
	ldrb r0, [r6]
	cmp r0, #0x60
	bls _08103DE8
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x28
	strh r0, [r5, #4]
_08103DE8:
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	b _08103E50
	.align 2, 0
_08103DF0: .4byte gUnk_0203AD40
_08103DF4: .4byte gUnk_083572C0
_08103DF8: .4byte gUnk_02020EE0
_08103DFC: .4byte gUnk_0203AD3C
_08103E00: .4byte gUnk_08D60FA4
_08103E04: .4byte gSongTable
_08103E08: .4byte 0x00000D54
_08103E0C: .4byte gUnk_0203AD10
_08103E10: .4byte gUnk_08D5FE14
_08103E14:
	ldrh r0, [r5, #4]
	subs r0, #1
	movs r7, #0
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _08103E50
	ldr r2, _08103E5C @ =sub_08103380
	adds r0, r5, #0
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	mov r2, r8
	strh r2, [r5, #4]
	strb r7, [r6]
	adds r0, r5, #0
	adds r0, #0x9f
	strb r7, [r0]
_08103E50:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08103E5C: .4byte sub_08103380

	thumb_func_start sub_08103E60
sub_08103E60: @ 0x08103E60
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	movs r1, #4
	mov r8, r1
	orrs r0, r1
	str r0, [r5, #8]
	adds r6, r5, #0
	adds r6, #0x9e
	ldrb r0, [r6]
	cmp r0, #0
	beq _08103E82
	cmp r0, #1
	beq _08103F74
	b _08103FB0
_08103E82:
	adds r2, r5, #0
	adds r2, #0x55
	ldr r0, _08103F54 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r5, #0
	adds r0, #0xcc
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	movs r0, #0xf
	ands r0, r1
	cmp r0, #0
	beq _08103EB0
	b _08103FB0
_08103EB0:
	ldr r1, _08103F58 @ =gUnk_02020EE0
	ldr r0, _08103F5C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08103F1C
	ldrb r0, [r5]
	cmp r0, #0
	bne _08103EDC
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08103F1C
_08103EDC:
	ldr r1, _08103F60 @ =gUnk_08D60FA4
	ldr r4, _08103F64 @ =gSongTable
	ldr r2, _08103F68 @ =0x00000D54
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08103F02
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08103F1C
_08103F02:
	cmp r3, #0
	beq _08103F14
	ldr r0, _08103F6C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08103F1C
_08103F14:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08103F1C:
	movs r1, #0xc0
	lsls r1, r1, #2
	adds r0, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_081060C0
	movs r4, #0x93
	lsls r4, r4, #2
	ldr r2, _08103F70 @ =0xFFFFFE14
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #2
	bl sub_081060C0
	movs r2, #0xf6
	lsls r2, r2, #1
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #2
	bl sub_081060C0
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #1
	strb r0, [r1]
	b _08103FB0
	.align 2, 0
_08103F54: .4byte gUnk_0203AD40
_08103F58: .4byte gUnk_02020EE0
_08103F5C: .4byte gUnk_0203AD3C
_08103F60: .4byte gUnk_08D60FA4
_08103F64: .4byte gSongTable
_08103F68: .4byte 0x00000D54
_08103F6C: .4byte gUnk_0203AD10
_08103F70: .4byte 0xFFFFFE14
_08103F74:
	ldrh r0, [r5, #4]
	subs r0, #1
	movs r7, #0
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _08103FB0
	ldr r2, _08103FBC @ =sub_08103380
	adds r0, r5, #0
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	mov r2, r8
	strh r2, [r5, #4]
	strb r7, [r6]
	adds r0, r5, #0
	adds r0, #0x9f
	strb r7, [r0]
_08103FB0:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08103FBC: .4byte sub_08103380

	thumb_func_start sub_08103FC0
sub_08103FC0: @ 0x08103FC0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	adds r2, r4, #0
	adds r2, #0x85
	movs r0, #1
	strb r0, [r2]
	adds r2, #0x55
	movs r0, #6
	strb r0, [r2]
	ldr r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	cmp r0, #0x7d
	bgt _08103FEE
	adds r0, #0x30
	adds r1, #0x2a
	b _08103FF4
_08103FEE:
	subs r0, #0x30
	adds r1, r4, #0
	adds r1, #0xd6
_08103FF4:
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0xd8
	movs r1, #0x38
	strh r1, [r0]
	adds r1, r5, #0
	adds r1, #0xd6
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0x1f
	bgt _0810400E
	movs r0, #0x20
	strh r0, [r1]
_0810400E:
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0xd0
	ble _0810401A
	movs r0, #0xd0
	strh r0, [r1]
_0810401A:
	adds r0, r4, #0
	bl sub_08102938
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08104028
sub_08104028: @ 0x08104028
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0xd5
	movs r5, #0
	movs r0, #5
	strb r0, [r1]
	ldr r2, _08104078 @ =sub_08104080
	adds r0, r4, #0
	movs r1, #8
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r2, #0
	strh r5, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	strh r5, [r1]
	adds r0, #0x8a
	ldrb r0, [r0]
	cmp r0, #7
	bne _0810405A
	ldr r0, _0810407C @ =0x0000FFC0
	strh r0, [r1]
_0810405A:
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r4, #8]
	strh r5, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08104078: .4byte sub_08104080
_0810407C: .4byte 0x0000FFC0

	thumb_func_start sub_08104080
sub_08104080: @ 0x08104080
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r3, r5, #0
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #0
	beq _081040A4
	cmp r0, #1
	bne _081040A2
	b _08104228
_081040A2:
	b _081042B8
_081040A4:
	adds r0, r5, #0
	adds r0, #0xda
	ldrb r0, [r0]
	cmp r0, #7
	bne _081040EC
	adds r0, r5, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r0, #0x40]
	ldr r0, [r5, #0x40]
	cmp r1, r0
	bge _081040D6
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0xa
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x60
	rsbs r2, r2, #0
	cmp r0, r2
	bge _081040EC
	strh r2, [r1]
	b _081040EC
_081040D6:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0xa
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x60
	ble _081040EC
	movs r0, #0x60
	strh r0, [r1]
_081040EC:
	adds r2, r5, #0
	adds r2, #0x55
	ldr r0, _081041F8 @ =gUnk_0203AD40
	ldr r1, [r0]
	movs r0, #2
	ands r1, r0
	ldrb r0, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r3, #0
	adds r0, #0xcc
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
	adds r2, #0x4a
	ldrb r1, [r2]
	movs r0, #7
	ands r0, r1
	adds r6, r2, #0
	cmp r0, #0
	bne _081041DE
	ldr r2, _081041FC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08104200 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08104204 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	ldr r3, _08104208 @ =gUnk_08D5FE14
	ldr r1, _0810420C @ =gUnk_08357278
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r2, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	mov ip, r0
	adds r0, r2, r0
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r2, r2, #1
	adds r2, r2, r3
	ldrh r1, [r2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #0x11
	lsrs r7, r0, #0x10
	ldr r1, _08104210 @ =gUnk_02020EE0
	ldr r0, _08104214 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081041CC
	ldrb r0, [r5]
	cmp r0, #0
	bne _0810418E
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _081041CC
_0810418E:
	ldr r1, _08104218 @ =gUnk_08D60FA4
	ldr r4, _0810421C @ =gSongTable
	ldr r2, _08104220 @ =0x00000D54
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081041B4
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081041CC
_081041B4:
	cmp r3, #0
	beq _081041C4
	ldr r0, _08104224 @ =gUnk_0203AD10
	ldr r0, [r0]
	mov r2, ip
	ands r0, r2
	cmp r0, #0
	bne _081041CC
_081041C4:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_081041CC:
	mov r3, r8
	lsls r1, r3, #0x10
	asrs r1, r1, #0x10
	lsls r2, r7, #0x10
	asrs r2, r2, #0x10
	adds r0, r5, #0
	movs r3, #0
	bl sub_081060C0
_081041DE:
	ldrb r0, [r6]
	cmp r0, #0x50
	bls _081041F0
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x20
	strh r0, [r5, #4]
_081041F0:
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	b _081042B8
	.align 2, 0
_081041F8: .4byte gUnk_0203AD40
_081041FC: .4byte gRngVal
_08104200: .4byte 0x00196225
_08104204: .4byte 0x3C6EF35F
_08104208: .4byte gUnk_08D5FE14
_0810420C: .4byte gUnk_08357278
_08104210: .4byte gUnk_02020EE0
_08104214: .4byte gUnk_0203AD3C
_08104218: .4byte gUnk_08D60FA4
_0810421C: .4byte gSongTable
_08104220: .4byte 0x00000D54
_08104224: .4byte gUnk_0203AD10
_08104228:
	adds r0, r5, #0
	adds r0, #0x50
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r7, r0, #0
	cmp r1, #0
	bge _08104244
	adds r0, r2, #4
	strh r0, [r7]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08104252
	b _0810424E
_08104244:
	subs r0, r2, #4
	strh r0, [r7]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08104252
_0810424E:
	movs r0, #0
	strh r0, [r7]
_08104252:
	adds r0, r5, #0
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r6, r0, #0
	cmp r1, #0
	bge _0810426E
	adds r0, r2, #4
	strh r0, [r6]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810427C
	b _08104278
_0810426E:
	subs r0, r2, #4
	strh r0, [r6]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810427C
_08104278:
	movs r0, #0
	strh r0, [r6]
_0810427C:
	ldrh r0, [r5, #4]
	subs r0, #1
	movs r1, #0
	mov r8, r1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _081042B8
	ldr r2, _081042C4 @ =sub_08103380
	adds r0, r5, #0
	movs r1, #0xb
	bl ObjectSetFunc
	strh r4, [r7]
	strh r4, [r6]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	movs r0, #4
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x9e
	mov r2, r8
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
_081042B8:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081042C4: .4byte sub_08103380

	thumb_func_start sub_081042C8
sub_081042C8: @ 0x081042C8
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r6, #0
	adds r1, r6, #0
	adds r1, #0xd5
	movs r4, #0
	movs r0, #5
	strb r0, [r1]
	ldr r2, _081043A4 @ =sub_08104424
	adds r0, r6, #0
	movs r1, #8
	bl ObjectSetFunc
	adds r0, r6, #0
	adds r0, #0x50
	movs r2, #0
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r6, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r6, #8]
	strh r4, [r6, #4]
	adds r0, r6, #0
	adds r0, #0x9e
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	ldr r1, _081043A8 @ =gUnk_02020EE0
	ldr r0, _081043AC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08104372
	ldrb r0, [r6]
	cmp r0, #0
	bne _08104332
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08104372
_08104332:
	ldr r1, _081043B0 @ =gUnk_08D60FA4
	ldr r4, _081043B4 @ =gSongTable
	ldr r2, _081043B8 @ =0x00000D54
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08104358
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08104372
_08104358:
	cmp r3, #0
	beq _0810436A
	ldr r0, _081043BC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08104372
_0810436A:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08104372:
	adds r0, r5, #0
	adds r0, #0xda
	ldrb r0, [r0]
	cmp r0, #8
	bne _081043CC
	ldr r2, _081043C0 @ =0xFFFFFD00
	adds r0, r6, #0
	movs r1, #0
	movs r3, #0
	bl sub_081060C0
	ldr r4, _081043C4 @ =0xFFFFFDE1
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #0
	bl sub_081060C0
	ldr r1, _081043C8 @ =0x0000021F
	adds r0, r6, #0
	adds r2, r4, #0
	movs r3, #0
	bl sub_081060C0
	b _0810440E
	.align 2, 0
_081043A4: .4byte sub_08104424
_081043A8: .4byte gUnk_02020EE0
_081043AC: .4byte gUnk_0203AD3C
_081043B0: .4byte gUnk_08D60FA4
_081043B4: .4byte gSongTable
_081043B8: .4byte 0x00000D54
_081043BC: .4byte gUnk_0203AD10
_081043C0: .4byte 0xFFFFFD00
_081043C4: .4byte 0xFFFFFDE1
_081043C8: .4byte 0x0000021F
_081043CC:
	ldr r2, _08104414 @ =0xFFFFFD00
	adds r0, r6, #0
	movs r1, #0
	movs r3, #0
	bl sub_081060C0
	ldr r5, _08104418 @ =0xFFFFFE80
	ldr r4, _0810441C @ =0xFFFFFD69
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	movs r3, #0
	bl sub_081060C0
	movs r1, #0xc0
	lsls r1, r1, #1
	adds r0, r6, #0
	adds r2, r4, #0
	movs r3, #0
	bl sub_081060C0
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_081060C0
	ldr r1, _08104420 @ =0x00000297
	adds r0, r6, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_081060C0
_0810440E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08104414: .4byte 0xFFFFFD00
_08104418: .4byte 0xFFFFFE80
_0810441C: .4byte 0xFFFFFD69
_08104420: .4byte 0x00000297

	thumb_func_start sub_08104424
sub_08104424: @ 0x08104424
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	mov r8, r1
	orrs r0, r1
	str r0, [r4, #8]
	adds r6, r4, #0
	adds r6, #0x9e
	ldrb r0, [r6]
	cmp r0, #0
	beq _08104446
	cmp r0, #1
	beq _08104484
	b _081044C0
_08104446:
	adds r2, r4, #0
	adds r2, #0x55
	ldr r0, _08104480 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r4, #0
	adds r0, #0xcc
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	cmp r0, #8
	bls _08104476
	movs r0, #1
	strb r0, [r6]
	movs r0, #0x30
	strh r0, [r4, #4]
_08104476:
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _081044C0
	.align 2, 0
_08104480: .4byte gUnk_0203AD40
_08104484:
	ldrh r0, [r4, #4]
	subs r0, #1
	movs r7, #0
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _081044C0
	ldr r2, _081044CC @ =sub_08103380
	adds r0, r4, #0
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r4, #8]
	mov r0, r8
	strh r0, [r4, #4]
	strb r7, [r6]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r7, [r0]
_081044C0:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081044CC: .4byte sub_08103380

	thumb_func_start sub_081044D0
sub_081044D0: @ 0x081044D0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	adds r2, r4, #0
	adds r2, #0x85
	movs r0, #1
	strb r0, [r2]
	adds r2, #0x55
	movs r0, #0xc
	strb r0, [r2]
	ldr r0, [r1]
	ldr r0, [r0, #0x40]
	asrs r0, r0, #8
	cmp r0, #0x7d
	bgt _081044FE
	adds r1, #0x2a
	movs r0, #0xde
	b _08104504
_081044FE:
	adds r1, r4, #0
	adds r1, #0xd6
	movs r0, #0x1e
_08104504:
	strh r0, [r1]
	adds r1, r5, #0
	adds r1, #0xd8
	movs r0, #0x20
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_08102938
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810451C
sub_0810451C: @ 0x0810451C
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0xd5
	movs r0, #5
	strb r0, [r1]
	ldr r2, _08104578 @ =sub_0810457C
	adds r0, r4, #0
	movs r1, #8
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x50
	movs r3, #0
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r2]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08104558
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_08104558:
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08104578: .4byte sub_0810457C

	thumb_func_start sub_0810457C
sub_0810457C: @ 0x0810457C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	movs r1, #4
	mov r8, r1
	orrs r0, r1
	str r0, [r5, #8]
	adds r6, r5, #0
	adds r6, #0x9e
	ldrb r3, [r6]
	cmp r3, #0
	beq _081045A0
	cmp r3, #1
	bne _0810459E
	b _081046B8
_0810459E:
	b _081046F4
_081045A0:
	adds r2, r5, #0
	adds r2, #0x55
	ldr r0, _081045E8 @ =gUnk_0203AD40
	ldr r1, [r0]
	movs r0, #2
	ands r1, r0
	ldrb r0, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r5, #0
	adds r0, #0xcc
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r7, r0, #0
	adds r4, r5, #0
	adds r4, #0x52
	cmp r1, #0x20
	bne _081045D2
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r4]
_081045D2:
	ldrh r1, [r4]
	movs r2, #0
	ldrsh r0, [r4, r2]
	cmp r0, #0
	bge _081045EC
	adds r0, r1, #4
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _081045F8
	b _081045F6
	.align 2, 0
_081045E8: .4byte gUnk_0203AD40
_081045EC:
	subs r0, r1, #4
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _081045F8
_081045F6:
	strh r3, [r4]
_081045F8:
	ldrb r1, [r7]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _0810467A
	ldr r1, _081046A0 @ =gUnk_02020EE0
	ldr r0, _081046A4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810466E
	ldrb r0, [r5]
	cmp r0, #0
	bne _0810462E
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810466E
_0810462E:
	ldr r1, _081046A8 @ =gUnk_08D60FA4
	ldr r6, _081046AC @ =gSongTable
	ldr r2, _081046B0 @ =0x00000D54
	adds r0, r6, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08104654
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r6, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810466E
_08104654:
	cmp r3, #0
	beq _08104666
	ldr r0, _081046B4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810466E
_08104666:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_0810466E:
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_081060C0
_0810467A:
	ldrb r0, [r7]
	cmp r0, #0x28
	bls _08104696
	adds r2, r5, #0
	adds r2, #0x9e
	movs r1, #0
	movs r0, #1
	strb r0, [r2]
	movs r0, #0x10
	strh r0, [r5, #4]
	strh r1, [r4]
	adds r0, r5, #0
	adds r0, #0x50
	strh r1, [r0]
_08104696:
	ldrb r0, [r7]
	adds r0, #1
	strb r0, [r7]
	b _081046F4
	.align 2, 0
_081046A0: .4byte gUnk_02020EE0
_081046A4: .4byte gUnk_0203AD3C
_081046A8: .4byte gUnk_08D60FA4
_081046AC: .4byte gSongTable
_081046B0: .4byte 0x00000D54
_081046B4: .4byte gUnk_0203AD10
_081046B8:
	ldrh r0, [r5, #4]
	subs r0, #1
	movs r7, #0
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _081046F4
	ldr r2, _08104700 @ =sub_08103380
	adds r0, r5, #0
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	mov r2, r8
	strh r2, [r5, #4]
	strb r7, [r6]
	adds r0, r5, #0
	adds r0, #0x9f
	strb r7, [r0]
_081046F4:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08104700: .4byte sub_08103380

	thumb_func_start sub_08104704
sub_08104704: @ 0x08104704
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0xd5
	movs r4, #0
	movs r0, #5
	strb r0, [r1]
	ldr r2, _081047B4 @ =sub_081047D0
	adds r0, r5, #0
	movs r1, #8
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	movs r2, #0
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	strh r4, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x9e
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	ldr r1, _081047B8 @ =gUnk_02020EE0
	ldr r0, _081047BC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081047AC
	ldrb r0, [r5]
	cmp r0, #0
	bne _0810476C
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _081047AC
_0810476C:
	ldr r1, _081047C0 @ =gUnk_08D60FA4
	ldr r4, _081047C4 @ =gSongTable
	ldr r2, _081047C8 @ =0x00000D54
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08104792
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081047AC
_08104792:
	cmp r3, #0
	beq _081047A4
	ldr r0, _081047CC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081047AC
_081047A4:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_081047AC:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_081047B4: .4byte sub_081047D0
_081047B8: .4byte gUnk_02020EE0
_081047BC: .4byte gUnk_0203AD3C
_081047C0: .4byte gUnk_08D60FA4
_081047C4: .4byte gSongTable
_081047C8: .4byte 0x00000D54
_081047CC: .4byte gUnk_0203AD10

	thumb_func_start sub_081047D0
sub_081047D0: @ 0x081047D0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	mov r8, r1
	orrs r0, r1
	str r0, [r4, #8]
	adds r6, r4, #0
	adds r6, #0x9e
	ldrb r0, [r6]
	cmp r0, #0
	beq _081047F2
	cmp r0, #1
	beq _08104830
	b _0810486C
_081047F2:
	adds r2, r4, #0
	adds r2, #0x55
	ldr r0, _0810482C @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r4, #0
	adds r0, #0xcc
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	cmp r0, #8
	bls _08104822
	movs r0, #1
	strb r0, [r6]
	movs r0, #0x10
	strh r0, [r4, #4]
_08104822:
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _0810486C
	.align 2, 0
_0810482C: .4byte gUnk_0203AD40
_08104830:
	ldrh r0, [r4, #4]
	subs r0, #1
	movs r7, #0
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _0810486C
	ldr r2, _08104878 @ =sub_08103380
	adds r0, r4, #0
	movs r1, #0xb
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r4, #8]
	mov r0, r8
	strh r0, [r4, #4]
	strb r7, [r6]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r7, [r0]
_0810486C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08104878: .4byte sub_08103380

	thumb_func_start sub_0810487C
sub_0810487C: @ 0x0810487C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sb, r0
	mov r8, sb
	ldr r1, _0810490C @ =gRngVal
	ldr r0, [r1]
	ldr r3, _08104910 @ =0x00196225
	muls r0, r3, r0
	ldr r1, _08104914 @ =0x3C6EF35F
	adds r6, r0, r1
	ldr r3, _0810490C @ =gRngVal
	str r6, [r3]
	lsrs r5, r6, #0x10
	movs r0, #7
	ands r5, r0
	ldr r2, _08104918 @ =gUnk_083571E0
	lsls r1, r5, #1
	adds r0, r1, r2
	movs r7, #0
	ldrsb r7, [r0, r7]
	movs r0, #0x7e
	subs r0, r0, r7
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	mov sl, r4
	adds r0, r2, #1
	adds r1, r1, r0
	movs r0, #0
	ldrsb r0, [r1, r0]
	adds r0, #0x58
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov ip, r0
	mov r0, sb
	adds r0, #0xac
	ldr r1, [r0]
	ldr r0, [r1, #0x40]
	asrs r3, r0, #8
	cmp r3, #0x7d
	bgt _081048DA
	adds r0, r7, #0
	adds r0, #0x7e
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_081048DA:
	ldr r0, [r1, #0x44]
	asrs r0, r0, #8
	cmp r0, #0x58
	ble _08104924
	cmp r5, #1
	bls _08104924
	cmp r5, #4
	beq _08104924
	ldr r1, _08104910 @ =0x00196225
	adds r0, r6, #0
	muls r0, r1, r0
	ldr r1, _08104914 @ =0x3C6EF35F
	adds r0, r0, r1
	ldr r1, _0810490C @ =gRngVal
	str r0, [r1]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08104924
	cmp r3, #0x7d
	bgt _0810491C
	mov r4, sl
	b _08104924
	.align 2, 0
_0810490C: .4byte gRngVal
_08104910: .4byte 0x00196225
_08104914: .4byte 0x3C6EF35F
_08104918: .4byte gUnk_083571E0
_0810491C:
	adds r0, r7, #0
	adds r0, #0x7e
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_08104924:
	mov r3, r8
	ldr r1, [r3, #0x40]
	asrs r1, r1, #8
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bne _081049CC
	ldr r1, [r3, #0x44]
	asrs r1, r1, #8
	mov r3, ip
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bne _081049CC
	adds r1, r5, #2
	lsls r1, r1, #0x18
	movs r0, #0xe0
	lsls r0, r0, #0x13
	ands r0, r1
	lsrs r5, r0, #0x18
	lsls r1, r5, #1
	adds r0, r1, r2
	movs r6, #0
	ldrsb r6, [r0, r6]
	movs r0, #0x7e
	subs r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r7, r4, #0
	adds r0, r2, #1
	adds r1, r1, r0
	movs r0, #0
	ldrsb r0, [r1, r0]
	adds r0, #0x58
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov ip, r0
	mov r0, r8
	adds r0, #0xac
	ldr r1, [r0]
	ldr r0, [r1, #0x40]
	asrs r2, r0, #8
	cmp r2, #0x7d
	bgt _08104984
	adds r0, r6, #0
	adds r0, #0x7e
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_08104984:
	ldr r0, [r1, #0x44]
	asrs r0, r0, #8
	cmp r0, #0x58
	ble _081049CC
	cmp r5, #1
	bls _081049CC
	cmp r5, #4
	beq _081049CC
	ldr r0, _081049B8 @ =gRngVal
	ldr r1, [r0]
	ldr r0, _081049BC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _081049C0 @ =0x3C6EF35F
	adds r0, r0, r1
	ldr r3, _081049B8 @ =gRngVal
	str r0, [r3]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _081049CC
	cmp r2, #0x7d
	bgt _081049C4
	adds r4, r7, #0
	b _081049CC
	.align 2, 0
_081049B8: .4byte gRngVal
_081049BC: .4byte 0x00196225
_081049C0: .4byte 0x3C6EF35F
_081049C4:
	adds r0, r6, #0
	adds r0, #0x7e
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_081049CC:
	mov r0, sb
	adds r0, #0xd6
	strh r4, [r0]
	adds r0, #2
	mov r1, ip
	strh r1, [r0]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_081049E8
sub_081049E8: @ 0x081049E8
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0xd5
	movs r4, #0
	movs r0, #5
	strb r0, [r1]
	ldr r2, _08104A3C @ =sub_08104AA8
	adds r0, r5, #0
	movs r1, #7
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	movs r2, #0
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	strh r4, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x9e
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	ldr r2, [r5, #8]
	ands r2, r1
	str r2, [r5, #8]
	adds r0, #0xd
	ldr r0, [r0]
	ldr r1, [r5, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _08104A40
	movs r0, #1
	orrs r2, r0
	b _08104A46
	.align 2, 0
_08104A3C: .4byte sub_08104AA8
_08104A40:
	movs r0, #2
	rsbs r0, r0, #0
	ands r2, r0
_08104A46:
	str r2, [r5, #8]
	adds r1, r5, #0
	adds r1, #0xac
	ldr r0, [r1]
	ldr r3, [r5, #0x40]
	ldr r0, [r0, #0x40]
	subs r2, r3, r0
	adds r4, r1, #0
	cmp r2, #0
	blt _08104A64
	movs r0, #0xc0
	lsls r0, r0, #6
	cmp r2, r0
	bgt _08104A6E
	b _08104A98
_08104A64:
	subs r1, r0, r3
	movs r0, #0xc0
	lsls r0, r0, #6
	cmp r1, r0
	ble _08104A98
_08104A6E:
	ldr r0, [r4]
	ldr r1, [r5, #0x44]
	ldr r0, [r0, #0x44]
	subs r2, r1, r0
	cmp r2, #0
	blt _08104A88
	ldr r0, _08104A84 @ =0x00003FFF
	cmp r2, r0
	ble _08104A90
	b _08104A98
	.align 2, 0
_08104A84: .4byte 0x00003FFF
_08104A88:
	subs r1, r0, r1
	ldr r0, _08104AA4 @ =0x00003FFF
	cmp r1, r0
	bgt _08104A98
_08104A90:
	adds r1, r5, #0
	adds r1, #0x83
	movs r0, #9
	strb r0, [r1]
_08104A98:
	adds r0, r5, #0
	bl sub_081062B4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08104AA4: .4byte 0x00003FFF

	thumb_func_start sub_08104AA8
sub_08104AA8: @ 0x08104AA8
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r3, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #0x31
	ldrb r0, [r0]
	subs r0, #7
	cmp r0, #4
	bls _08104AC6
	b _08104C76
_08104AC6:
	lsls r0, r0, #2
	ldr r1, _08104AD0 @ =_08104AD4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08104AD0: .4byte _08104AD4
_08104AD4: @ jump table
	.4byte _08104AE8 @ case 0
	.4byte _08104B5A @ case 1
	.4byte _08104AE8 @ case 2
	.4byte _08104B5A @ case 3
	.4byte _08104C30 @ case 4
_08104AE8:
	ldrb r0, [r4, #1]
	cmp r0, #0xf
	bne _08104B32
	movs r2, #0xc
	rsbs r2, r2, #0
	movs r0, #0x18
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r2, #0
	movs r3, #0xc
	bl sub_0803E2B0
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xf6
	strb r0, [r1]
	ldr r0, [r4, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	str r0, [r4, #0x5c]
_08104B32:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08104B3E
	b _08104C76
_08104B3E:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	subs r1, #0x1c
	ldrb r0, [r1]
	cmp r0, #7
	bne _08104B54
	movs r0, #8
	strb r0, [r1]
	b _08104C76
_08104B54:
	movs r0, #0xa
	strb r0, [r1]
	b _08104C76
_08104B5A:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x55
	ldr r0, _08104C14 @ =gUnk_0203AD40
	ldr r1, [r0]
	movs r0, #2
	ands r1, r0
	ldrb r0, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r3, #0
	adds r0, #0xcc
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	bne _08104BF6
	ldr r1, _08104C18 @ =gUnk_02020EE0
	ldr r0, _08104C1C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08104BF6
	ldrb r0, [r4]
	cmp r0, #0
	bne _08104BB6
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08104BF6
_08104BB6:
	ldr r1, _08104C20 @ =gUnk_08D60FA4
	ldr r5, _08104C24 @ =gSongTable
	ldr r2, _08104C28 @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08104BDC
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08104BF6
_08104BDC:
	cmp r3, #0
	beq _08104BEE
	ldr r0, _08104C2C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08104BF6
_08104BEE:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08104BF6:
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	bls _08104C76
	movs r0, #0
	strb r0, [r6]
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xb
	strb r0, [r1]
	b _08104C76
	.align 2, 0
_08104C14: .4byte gUnk_0203AD40
_08104C18: .4byte gUnk_02020EE0
_08104C1C: .4byte gUnk_0203AD3C
_08104C20: .4byte gUnk_08D60FA4
_08104C24: .4byte gSongTable
_08104C28: .4byte 0x00000D54
_08104C2C: .4byte gUnk_0203AD10
_08104C30:
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	bls _08104C76
	adds r1, #1
	movs r0, #0
	strb r0, [r1]
	adds r2, r3, #0
	adds r2, #0xe2
	ldrb r0, [r2]
	movs r1, #0
	ldrsb r1, [r2, r1]
	cmp r1, #0
	beq _08104C62
	subs r0, #1
	strb r0, [r2]
	adds r0, r4, #0
	bl sub_0810487C
	b _08104C70
_08104C62:
	adds r0, r3, #0
	adds r0, #0xda
	strb r1, [r0]
	subs r0, #2
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
_08104C70:
	adds r0, r4, #0
	bl sub_08102938
_08104C76:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08104C80
sub_08104C80: @ 0x08104C80
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0xd5
	movs r4, #0
	movs r0, #6
	strb r0, [r1]
	ldr r2, _08104CD4 @ =sub_08104CD8
	adds r0, r5, #0
	movs r1, #8
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	movs r0, #0x96
	lsls r0, r0, #2
	strh r0, [r5, #4]
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0x20
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_08107254
	adds r1, r5, #0
	adds r1, #0xbc
	str r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08104CD4: .4byte sub_08104CD8

	thumb_func_start sub_08104CD8
sub_08104CD8: @ 0x08104CD8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	cmp r0, #0
	bne _08104D26
	subs r1, #0x4c
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #2
	cmp r0, r2
	ble _08104D06
	strh r2, [r1]
_08104D06:
	adds r2, r4, #0
	adds r2, #0x9f
	ldrb r0, [r2]
	cmp r0, #0
	beq _08104D2A
	subs r0, #1
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _08104D2A
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_08105EC4
	b _08104D2A
_08104D26:
	subs r0, #1
	strb r0, [r1]
_08104D2A:
	adds r0, r5, #0
	adds r0, #0xbc
	ldr r0, [r0]
	cmp r0, #0
	beq _08104D68
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08104D8E
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	bne _08104D8E
	adds r0, r5, #0
	adds r0, #0xd8
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	adds r1, r5, #0
	adds r1, #0xda
	movs r0, #0
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_08102938
	b _08104D8E
_08104D68:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	bne _08104D8E
	adds r0, r5, #0
	adds r0, #0xd8
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	adds r1, r5, #0
	adds r1, #0xda
	movs r0, #0
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_08102938
_08104D8E:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_08104D94
sub_08104D94: @ 0x08104D94
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, [r4, #0x78]
	ldr r2, _08104E00 @ =sub_08109C08
	cmp r0, r2
	beq _08104DF8
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x28
	strh r0, [r4, #4]
	subs r1, #0x5c
	movs r2, #0x18
	rsbs r2, r2, #0
	movs r0, #0x12
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0x1c
	bl sub_0803E2B0
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0xf8
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xe0
	strb r0, [r1]
_08104DF8:
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08104E00: .4byte sub_08109C08

	thumb_func_start sub_08104E04
sub_08104E04: @ 0x08104E04
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r2, r4, #0
	adds r2, #0xc8
	ldr r0, [r2]
	cmp r0, #0
	beq _08104E2A
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _08104E2A
	movs r0, #0
	str r0, [r2]
_08104E2A:
	adds r2, r5, #0
	adds r2, #0xbc
	ldr r0, [r2]
	cmp r0, #0
	beq _08104E48
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _08104E48
	movs r0, #0
	str r0, [r2]
	movs r0, #0x20
	strh r0, [r4, #4]
_08104E48:
	ldr r0, _08104EB0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r4, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08104E62
	b _081050D8
_08104E62:
	adds r0, r5, #0
	adds r0, #0xdb
	movs r1, #0
	ldrsb r1, [r0, r1]
	mov r8, r0
	cmp r1, #0
	beq _08104F68
	adds r0, r4, #0
	adds r0, #0x80
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r7, r0, #0
	adds r6, r4, #0
	adds r6, #0x83
	cmp r1, #0
	ble _08104F7A
	ldrb r0, [r6]
	cmp r0, #8
	beq _08104E8C
	cmp r0, #0xa
	bne _08104E90
_08104E8C:
	movs r0, #0xb
	strb r0, [r6]
_08104E90:
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r3, r0, #0
	cmp r1, #0
	bge _08104EB4
	adds r0, r2, #0
	adds r0, #0x18
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08104EC4
	b _08104EC0
	.align 2, 0
_08104EB0: .4byte gUnk_03000510
_08104EB4:
	adds r0, r2, #0
	subs r0, #0x18
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08104EC4
_08104EC0:
	movs r0, #0
	strh r0, [r3]
_08104EC4:
	adds r2, r4, #0
	adds r2, #0x54
	ldr r0, _08104F60 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r5, #0
	adds r0, #0xcc
	ldr r0, [r0]
	adds r0, #0x40
	strb r1, [r0]
	mov r1, r8
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x20
	bne _08104F06
	movs r2, #0xfc
	lsls r2, r2, #8
	strh r2, [r3]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08104F06
	rsbs r0, r2, #0
	strh r0, [r3]
_08104F06:
	adds r2, r5, #0
	adds r2, #0xde
	adds r0, r5, #0
	adds r0, #0xdc
	ldrh r1, [r7]
	ldrh r0, [r0]
	subs r1, r1, r0
	ldrh r3, [r2]
	adds r1, r1, r3
	strh r1, [r2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, #8
	ble _08104F2C
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	str r0, [r4, #8]
_08104F2C:
	mov r7, r8
	movs r2, #0
	ldrsb r2, [r7, r2]
	cmp r2, #0
	bne _08104F7A
	ldr r1, [r4, #0x78]
	ldr r0, _08104F64 @ =sub_08104CD8
	cmp r1, r0
	beq _08104F7A
	adds r1, r5, #0
	adds r1, #0xda
	ldrb r0, [r1]
	cmp r0, #0xe
	beq _08104F7A
	movs r0, #0
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0xd8
	strh r2, [r0]
	subs r0, #2
	strh r2, [r0]
	adds r0, r4, #0
	bl sub_08102938
	b _08104F7A
	.align 2, 0
_08104F60: .4byte gUnk_0203AD40
_08104F64: .4byte sub_08104CD8
_08104F68:
	adds r0, r5, #0
	adds r0, #0xde
	strh r1, [r0]
	ldr r0, [r4, #8]
	ldr r1, _08104FBC @ =0xFFFF7FFF
	ands r0, r1
	str r0, [r4, #8]
	adds r6, r4, #0
	adds r6, #0x83
_08104F7A:
	ldrb r0, [r6]
	cmp r0, #0
	bne _0810501C
	ldr r1, [r4, #0x5c]
	movs r2, #7
	adds r0, r1, #0
	ands r0, r2
	adds r3, r1, #0
	cmp r0, #6
	bls _08104FC8
	ldr r1, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #0xb
	ands r0, r1
	cmp r0, #0
	beq _08104FC8
	ldr r0, _08104FC0 @ =0xFFFBFFFF
	ands r1, r0
	str r1, [r4, #8]
	ldr r0, [r4, #0x6c]
	ldr r1, [r0, #0x68]
	ldr r0, _08104FC4 @ =0x003FFFF8
	ands r0, r1
	cmp r0, #0
	beq _08104FC8
	ands r1, r2
	cmp r1, #2
	bls _08104FC8
	adds r0, r4, #0
	bl sub_081026E0
	b _081050D8
	.align 2, 0
_08104FBC: .4byte 0xFFFF7FFF
_08104FC0: .4byte 0xFFFBFFFF
_08104FC4: .4byte 0x003FFFF8
_08104FC8:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #2
	beq _08104FDC
	cmp r0, #2
	bgt _08105010
	cmp r0, #0
	blt _08105010
	b _0810501C
_08104FDC:
	ldr r2, _08104FF8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08104FFC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08105000 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _08105004
	subs r1, #0xb
	b _08105014
	.align 2, 0
_08104FF8: .4byte gRngVal
_08104FFC: .4byte 0x00196225
_08105000: .4byte 0x3C6EF35F
_08105004:
	movs r0, #8
	rsbs r0, r0, #0
	ands r3, r0
	orrs r3, r1
	str r3, [r4, #0x5c]
	b _0810501C
_08105010:
	movs r1, #8
	rsbs r1, r1, #0
_08105014:
	ands r1, r3
	movs r0, #7
	orrs r0, r1
	str r0, [r4, #0x5c]
_0810501C:
	adds r2, r5, #0
	adds r2, #0xdc
	adds r0, r4, #0
	adds r0, #0x80
	movs r7, #0
	ldrsh r3, [r2, r7]
	movs r7, #0
	ldrsh r1, [r0, r7]
	adds r7, r0, #0
	mov sb, r2
	cmp r3, r1
	beq _081050D2
	ldrb r0, [r6]
	cmp r0, #0
	bne _08105070
	ldr r2, _08105064 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08105068 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810506C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	cmp r0, #0
	bne _081050D2
	adds r1, r5, #0
	adds r1, #0xd4
	movs r0, #1
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_08104D94
	b _081050D8
	.align 2, 0
_08105064: .4byte gRngVal
_08105068: .4byte 0x00196225
_0810506C: .4byte 0x3C6EF35F
_08105070:
	adds r0, r4, #0
	adds r0, #0x38
	movs r1, #0
	ldrsb r1, [r0, r1]
	movs r0, #0xc
	rsbs r0, r0, #0
	cmp r1, r0
	bne _081050D2
	ldr r6, [r4, #0x6c]
	ldr r1, _081050E4 @ =gUnk_08357290
	adds r0, r4, #0
	bl sub_08088398
	adds r1, r5, #0
	adds r1, #0xcc
	ldr r1, [r1]
	adds r1, #0x2b
	ldrb r1, [r1]
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0xda
	ldrb r0, [r0]
	cmp r0, #0xe
	beq _081050A8
	adds r1, r5, #0
	adds r1, #0xd4
	movs r0, #2
	strb r0, [r1]
_081050A8:
	movs r0, #0x28
	mov r2, r8
	strb r0, [r2]
	cmp r6, #0
	beq _081050D2
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	ldr r2, [r4, #8]
	movs r0, #1
	orrs r2, r0
	str r2, [r4, #8]
	ldr r1, [r6, #0x40]
	ldr r0, [r4, #0x40]
	cmp r1, r0
	ble _081050D2
	movs r0, #2
	rsbs r0, r0, #0
	ands r2, r0
	str r2, [r4, #8]
_081050D2:
	ldrh r0, [r7]
	mov r3, sb
	strh r0, [r3]
_081050D8:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081050E4: .4byte gUnk_08357290

	thumb_func_start sub_081050E8
sub_081050E8: @ 0x081050E8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
	ldr r0, _08105124 @ =sub_08105278
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _08105128 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0810512C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08105134
	.align 2, 0
_08105124: .4byte sub_08105278
_08105128: .4byte sub_0803DCCC
_0810512C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08105134:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	movs r1, #0x42
	adds r1, r1, r4
	mov r8, r1
	movs r2, #0
	mov sb, r2
	strh r0, [r1]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810516A
	ldrh r0, [r4, #6]
	orrs r0, r1
	strh r0, [r4, #6]
_0810516A:
	adds r1, r4, #0
	adds r1, #0xc
	ldr r0, _081051D4 @ =gUnk_08357250
	adds r0, r7, r0
	ldrb r2, [r0]
	movs r6, #0xe6
	lsls r6, r6, #2
	adds r0, r7, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #0x1b
	str r0, [sp, #4]
	adds r0, r4, #0
	adds r3, r6, #0
	bl sub_080709F8
	ldr r0, [r4, #0x14]
	movs r1, #0x80
	orrs r0, r1
	str r0, [r4, #0x14]
	adds r5, r4, #0
	adds r5, #0x2b
	mov r0, sb
	strb r0, [r5]
	ldr r2, _081051D8 @ =gUnk_02020EE0
	ldr r0, _081051DC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, r8
	ldrh r1, [r1]
	cmp r0, r1
	bne _081051E0
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _081051E4
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _081051E4
	.align 2, 0
_081051D4: .4byte gUnk_08357250
_081051D8: .4byte gUnk_02020EE0
_081051DC: .4byte gUnk_0203AD3C
_081051E0:
	mov r2, sb
	strb r2, [r5]
_081051E4:
	strh r7, [r4, #8]
	movs r1, #8
	ldrsh r0, [r4, r1]
	cmp r0, #4
	bhi _08105246
	lsls r0, r0, #2
	ldr r1, _081051F8 @ =_081051FC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_081051F8: .4byte _081051FC
_081051FC: @ jump table
	.4byte _08105210 @ case 0
	.4byte _0810521A @ case 1
	.4byte _08105228 @ case 2
	.4byte _08105232 @ case 3
	.4byte _0810523C @ case 4
_08105210:
	movs r0, #0
	strh r0, [r4, #0x3c]
	movs r0, #0xf0
	lsls r0, r0, #1
	b _08105244
_0810521A:
	ldr r0, _08105224 @ =0x0000FE30
	strh r0, [r4, #0x3c]
	movs r0, #0xf0
	b _08105244
	.align 2, 0
_08105224: .4byte 0x0000FE30
_08105228:
	movs r0, #0xe8
	lsls r0, r0, #1
	strh r0, [r4, #0x3c]
	movs r0, #0xc0
	b _08105244
_08105232:
	ldr r0, _08105238 @ =0x0000FE80
	b _08105240
	.align 2, 0
_08105238: .4byte 0x0000FE80
_0810523C:
	movs r0, #0xc0
	lsls r0, r0, #1
_08105240:
	strh r0, [r4, #0x3c]
	ldr r0, _08105270 @ =0x0000FE60
_08105244:
	strh r0, [r4, #0x3e]
_08105246:
	ldrh r1, [r4, #6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08105256
	ldrh r0, [r4, #0x3c]
	rsbs r0, r0, #0
	strh r0, [r4, #0x3c]
_08105256:
	ldr r0, _08105274 @ =gBldRegs
	movs r1, #0x1f
	strh r1, [r0, #2]
	movs r1, #0xf1
	lsls r1, r1, #4
	strh r1, [r0]
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08105270: .4byte 0x0000FE60
_08105274: .4byte gBldRegs

	thumb_func_start sub_08105278
sub_08105278: @ 0x08105278
	push {r4, r5, r6, r7, lr}
	sub sp, #0x28
	ldr r2, _08105298 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0810529C
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081052A4
	.align 2, 0
_08105298: .4byte gCurTask
_0810529C:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081052A4:
	adds r5, r0, #0
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _081052BC
	ldr r0, [r2]
	bl TaskDestroy
	b _081055B0
_081052BC:
	ldr r0, [r5, #0x44]
	ldr r0, [r0, #8]
	ands r0, r1
	cmp r0, #0
	beq _081052CE
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _081055B0
_081052CE:
	ldr r2, _08105340 @ =gUnk_02020EE0
	ldr r0, _08105344 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r1, [r7]
	cmp r0, r1
	bne _08105398
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _08105354
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _081053BE
	ldr r1, _08105348 @ =gUnk_08357250
	movs r2, #8
	ldrsh r0, [r5, r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	ldrh r1, [r5, #0x18]
	adds r2, r5, #0
	adds r2, #0x26
	ldrb r2, [r2]
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _0810534C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _08105350 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _081053BE
	.align 2, 0
_08105340: .4byte gUnk_02020EE0
_08105344: .4byte gUnk_0203AD3C
_08105348: .4byte gUnk_08357250
_0810534C: .4byte 0xFFF7FFFF
_08105350: .4byte 0x0400000A
_08105354:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _081053BE
	ldr r1, _0810538C @ =gUnk_08357250
	movs r6, #8
	ldrsh r0, [r5, r6]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _08105390 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _08105394 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _081053BE
	.align 2, 0
_0810538C: .4byte gUnk_08357250
_08105390: .4byte 0xFFF7FFFF
_08105394: .4byte 0x0400000A
_08105398:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _081053B4
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _081053B4
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_081053B4:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_081053BE:
	ldr r2, _08105400 @ =gUnk_02020EE0
	ldr r0, _08105404 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	bne _08105408
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _08105410
	movs r6, #0xe6
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08105410
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08105410
	.align 2, 0
_08105400: .4byte gUnk_02020EE0
_08105404: .4byte gUnk_0203AD3C
_08105408:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_08105410:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _08105464
	ldrb r0, [r3]
	cmp r0, #0
	beq _0810542E
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _0810542E
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_0810542E:
	cmp r3, #0
	beq _08105464
	ldr r0, _08105460 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _081054D0
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _081054D0
	adds r0, r5, #0
	bl sub_0803DBC8
	b _081055B0
	.align 2, 0
_08105460: .4byte gUnk_03000510
_08105464:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _081054C8 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _081054A2
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _081054A2
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _081054A2
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _081054A2
	movs r3, #4
_081054A2:
	ldr r0, _081054CC @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _081054D0
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _081054D0
	adds r0, r4, #0
	bl sub_0803DBC8
	b _081055B0
	.align 2, 0
_081054C8: .4byte gUnk_02020EE0
_081054CC: .4byte gUnk_03000510
_081054D0:
	ldrh r1, [r5, #6]
	movs r0, #4
	movs r2, #0
	orrs r1, r0
	strh r1, [r5, #6]
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x3d
	ble _081054F4
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r1, r0
	strh r1, [r5, #6]
	b _081055B0
_081054F4:
	cmp r0, #0x1f
	ble _08105526
	cmp r0, #0x2e
	bgt _08105514
	ldr r2, _08105510 @ =gBldRegs
	ldrb r1, [r2, #2]
	strh r1, [r2, #2]
	ldrh r0, [r5, #4]
	subs r0, #0x1f
	lsls r0, r0, #8
	orrs r1, r0
	strh r1, [r2, #2]
	b _08105526
	.align 2, 0
_08105510: .4byte gBldRegs
_08105514:
	ldr r3, _0810555C @ =gBldRegs
	movs r2, #0xf8
	lsls r2, r2, #5
	strh r2, [r3, #2]
	ldrh r1, [r5, #4]
	movs r0, #0x3e
	subs r0, r0, r1
	orrs r0, r2
	strh r0, [r3, #2]
_08105526:
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r1
	cmp r0, #0
	bne _08105546
	movs r6, #0x3c
	ldrsh r1, [r5, r6]
	ldr r0, [r5, #0x34]
	adds r0, r0, r1
	str r0, [r5, #0x34]
	movs r0, #0x3e
	ldrsh r1, [r5, r0]
	ldr r0, [r5, #0x38]
	subs r0, r0, r1
	str r0, [r5, #0x38]
_08105546:
	ldrh r1, [r5, #0x3c]
	movs r2, #0x3c
	ldrsh r0, [r5, r2]
	cmp r0, #0
	bge _08105560
	adds r0, r1, #7
	strh r0, [r5, #0x3c]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810556E
	b _0810556A
	.align 2, 0
_0810555C: .4byte gBldRegs
_08105560:
	subs r0, r1, #7
	strh r0, [r5, #0x3c]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810556E
_0810556A:
	movs r0, #0
	strh r0, [r5, #0x3c]
_0810556E:
	ldrh r1, [r5, #0x3e]
	movs r6, #0x3e
	ldrsh r0, [r5, r6]
	cmp r0, #0
	bge _08105584
	adds r0, r1, #7
	strh r0, [r5, #0x3e]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08105592
	b _0810558E
_08105584:
	subs r0, r1, #7
	strh r0, [r5, #0x3e]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08105592
_0810558E:
	movs r0, #0
	strh r0, [r5, #0x3e]
_08105592:
	adds r0, r5, #0
	bl sub_0806FAC8
	ldrh r1, [r5, #4]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _081055B0
	adds r1, r5, #0
	adds r1, #0x28
	ldrb r0, [r1]
	cmp r0, #0
	beq _081055B0
	subs r0, #1
	strb r0, [r1]
_081055B0:
	add sp, #0x28
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_081055B8
sub_081055B8: @ 0x081055B8
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _081055E8 @ =sub_08105698
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _081055EC @ =sub_0810A130
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081055F0
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081055F8
	.align 2, 0
_081055E8: .4byte sub_08105698
_081055EC: .4byte sub_0810A130
_081055F0:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081055F8:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r6, r4, #0
	adds r6, #0x42
	movs r7, #0
	strh r0, [r6]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810562A
	ldrh r0, [r4, #6]
	orrs r0, r1
	strh r0, [r4, #6]
_0810562A:
	adds r1, r4, #0
	adds r1, #0xc
	ldr r3, _0810567C @ =0x0000039A
	movs r0, #0
	str r0, [sp]
	movs r0, #0x19
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x1e
	bl sub_080709F8
	adds r5, r4, #0
	adds r5, #0x2b
	strb r7, [r5]
	ldr r2, _08105680 @ =gUnk_02020EE0
	ldr r0, _08105684 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r6]
	cmp r0, r6
	bne _0810568C
	ldr r6, _08105688 @ =0x0000139A
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _0810568E
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _0810568E
	.align 2, 0
_0810567C: .4byte 0x0000039A
_08105680: .4byte gUnk_02020EE0
_08105684: .4byte gUnk_0203AD3C
_08105688: .4byte 0x0000139A
_0810568C:
	strb r7, [r5]
_0810568E:
	adds r0, r4, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08105698
sub_08105698: @ 0x08105698
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r2, _081056BC @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081056C0
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081056C8
	.align 2, 0
_081056BC: .4byte gCurTask
_081056C0:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081056C8:
	adds r5, r0, #0
	ldr r7, [r5, #0x44]
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _081056E2
	ldr r0, [r2]
	bl TaskDestroy
	b _0810599A
_081056E2:
	ldr r0, [r7, #8]
	ands r0, r1
	cmp r0, #0
	beq _081056F2
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _0810599A
_081056F2:
	ldr r2, _0810575C @ =gUnk_02020EE0
	ldr r0, _08105760 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	mov r8, r1
	ldrh r1, [r1]
	cmp r0, r1
	bne _081057A4
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _0810576C
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _081057CA
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x1e
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _08105764 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _08105768 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _081057CA
	.align 2, 0
_0810575C: .4byte gUnk_02020EE0
_08105760: .4byte gUnk_0203AD3C
_08105764: .4byte 0xFFF7FFFF
_08105768: .4byte 0x0400000A
_0810576C:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _081057CA
	movs r0, #0x1e
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _0810579C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _081057A0 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _081057CA
	.align 2, 0
_0810579C: .4byte 0xFFF7FFFF
_081057A0: .4byte 0x0400000A
_081057A4:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _081057C0
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _081057C0
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_081057C0:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_081057CA:
	ldr r2, _0810580C @ =gUnk_02020EE0
	ldr r0, _08105810 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, r8
	ldrh r2, [r2]
	cmp r0, r2
	bne _08105818
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _08105820
	ldr r6, _08105814 @ =0x0000139A
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08105820
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08105820
	.align 2, 0
_0810580C: .4byte gUnk_02020EE0
_08105810: .4byte gUnk_0203AD3C
_08105814: .4byte 0x0000139A
_08105818:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_08105820:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _08105874
	ldrb r0, [r3]
	cmp r0, #0
	beq _0810583E
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _0810583E
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_0810583E:
	cmp r3, #0
	beq _08105874
	ldr r0, _08105870 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _081058E4
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _081058E4
	adds r0, r5, #0
	bl sub_0803DBC8
	b _0810599A
	.align 2, 0
_08105870: .4byte gUnk_03000510
_08105874:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _081058DC @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	mov r6, r8
	ldrh r1, [r6]
	cmp r0, r1
	beq _081058B4
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _081058B4
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _081058B4
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _081058B4
	movs r3, #4
_081058B4:
	ldr r0, _081058E0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _081058E4
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _081058E4
	adds r0, r4, #0
	bl sub_0803DBC8
	b _0810599A
	.align 2, 0
_081058DC: .4byte gUnk_02020EE0
_081058E0: .4byte gUnk_03000510
_081058E4:
	ldrh r0, [r5, #6]
	ldr r2, _0810592C @ =0x0000FBFA
	ands r2, r0
	strh r2, [r5, #6]
	ldr r1, [r7, #8]
	ldr r0, _08105930 @ =0x00000404
	ands r1, r0
	orrs r1, r2
	strh r1, [r5, #6]
	ldr r0, [r7, #8]
	movs r2, #1
	eors r0, r2
	ands r0, r2
	orrs r1, r0
	strh r1, [r5, #6]
	adds r0, r7, #0
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, r8
	strh r0, [r1]
	ldr r0, [r7, #0x40]
	str r0, [r5, #0x34]
	ldr r0, [r7, #0x44]
	str r0, [r5, #0x38]
	adds r2, r7, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #6
	bhi _08105934
	ldrh r0, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
	b _0810599A
	.align 2, 0
_0810592C: .4byte 0x0000FBFA
_08105930: .4byte 0x00000404
_08105934:
	ldrh r0, [r5, #6]
	ldr r1, _08105950 @ =0x0000FBFF
	ands r1, r0
	strh r1, [r5, #6]
	ldrb r0, [r2]
	subs r0, #7
	cmp r0, #4
	bhi _08105994
	lsls r0, r0, #2
	ldr r1, _08105954 @ =_08105958
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08105950: .4byte 0x0000FBFF
_08105954: .4byte _08105958
_08105958: @ jump table
	.4byte _0810596C @ case 0
	.4byte _08105974 @ case 1
	.4byte _0810597C @ case 2
	.4byte _08105984 @ case 3
	.4byte _0810598C @ case 4
_0810596C:
	adds r1, r5, #0
	adds r1, #0x26
	movs r0, #0
	b _08105992
_08105974:
	adds r1, r5, #0
	adds r1, #0x26
	movs r0, #2
	b _08105992
_0810597C:
	adds r1, r5, #0
	adds r1, #0x26
	movs r0, #1
	b _08105992
_08105984:
	adds r1, r5, #0
	adds r1, #0x26
	movs r0, #3
	b _08105992
_0810598C:
	adds r1, r5, #0
	adds r1, #0x26
	movs r0, #4
_08105992:
	strb r0, [r1]
_08105994:
	adds r0, r5, #0
	bl sub_0806FAC8
_0810599A:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_081059A8
sub_081059A8: @ 0x081059A8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r5, r0, #0
	mov ip, r5
	str r5, [sp, #8]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _081059CE
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	adds r6, r0, #0
	subs r6, #0x20
	b _081059D6
_081059CE:
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	adds r6, r0, #0
	adds r6, #0x20
_081059D6:
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov sb, r0
	movs r4, #0
	ldr r1, _08105A04 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	movs r7, #0x87
	add r7, ip
	mov sl, r7
	adds r7, r5, #0
	adds r7, #0x56
	str r7, [sp]
	ldr r7, [sp, #8]
	adds r7, #0xb4
	mov r8, r7
	ldr r7, [sp, #8]
	adds r7, #0xb8
	str r7, [sp, #4]
	b _08105A1C
	.align 2, 0
_08105A04: .4byte gUnk_020229D4
_08105A08:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _08105A24
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_08105A1C:
	cmp r0, #0
	bne _08105A08
	orrs r2, r3
	str r2, [r1]
_08105A24:
	ldr r0, _08105A8C @ =gUnk_020229E0
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r0
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	strh r6, [r1, #6]
	mov r0, sb
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xca
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r6, sl
	ldrb r0, [r6]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldr r7, [sp]
	ldrb r0, [r7]
	bl CreateObject
	str r5, [r0, #0x70]
	mov r1, r8
	str r0, [r1]
	ldr r0, [r5, #8]
	ands r0, r4
	cmp r0, #0
	beq _08105A90
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	adds r6, r0, #0
	adds r6, #0x20
	b _08105A98
	.align 2, 0
_08105A8C: .4byte gUnk_020229E0
_08105A90:
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	adds r6, r0, #0
	subs r6, #0x20
_08105A98:
	movs r4, #0
	ldr r1, _08105AA8 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _08105AAC @ =gUnk_020229E0
	b _08105AC4
	.align 2, 0
_08105AA8: .4byte gUnk_020229D4
_08105AAC: .4byte gUnk_020229E0
_08105AB0:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _08105ACC
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_08105AC4:
	cmp r0, #0
	bne _08105AB0
	orrs r2, r3
	str r2, [r1]
_08105ACC:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r7
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	strh r6, [r1, #6]
	mov r6, sb
	strh r6, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xca
	strb r0, [r1, #0xc]
	strb r4, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r7, sl
	ldrb r0, [r7]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldr r2, [sp]
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	ldr r4, [sp, #4]
	str r0, [r4]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08105B30
sub_08105B30: @ 0x08105B30
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _08105B64 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08105B68 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08105B6C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _08105B74
	.align 2, 0
_08105B64: .4byte ObjectMain
_08105B68: .4byte ObjectDestroy
_08105B6C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_08105B74:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	adds r1, #0xc0
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0x12
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r0, [r4, #0x5c]
	movs r2, #8
	rsbs r2, r2, #0
	ands r0, r2
	movs r1, #7
	orrs r0, r1
	ldr r1, _08105BE8 @ =0x0000FFFF
	orrs r0, r1
	str r0, [r4, #0x5c]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _08105BEC @ =sub_0809F840
	str r0, [r4, #0x7c]
	movs r1, #4
	rsbs r1, r1, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #4
	bl sub_0803E2B0
	adds r0, r4, #0
	bl ObjectInitSprite
	movs r0, #0x90
	lsls r0, r0, #2
	strh r0, [r4, #0x24]
	adds r0, r4, #0
	bl sub_08109E4C
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08105BE8: .4byte 0x0000FFFF
_08105BEC: .4byte sub_0809F840

	thumb_func_start sub_08105BF0
sub_08105BF0: @ 0x08105BF0
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r7, r0, #0
	ldr r0, [r7, #0x70]
	ldr r3, [r0, #0x40]
	str r3, [r7, #0x40]
	ldr r4, [r0, #0x44]
	str r4, [r7, #0x44]
	adds r0, r7, #0
	adds r0, #0xa0
	movs r1, #0
	ldrsh r6, [r0, r1]
	ldr r5, _08105C58 @ =gUnk_08D5FE14
	movs r2, #4
	ldrsh r1, [r7, r2]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	adds r2, r6, #0
	muls r2, r0, r2
	lsls r2, r2, #8
	lsls r1, r1, #1
	adds r1, r1, r5
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r6, r0
	lsls r0, r0, #8
	asrs r2, r2, #0x10
	adds r3, r3, r2
	str r3, [r7, #0x40]
	asrs r0, r0, #0x10
	adds r4, r4, r0
	str r4, [r7, #0x44]
	adds r2, r7, #0
	adds r2, #0x83
	ldrb r1, [r2]
	cmp r1, #2
	bne _08105C5C
	ldr r0, [r7, #8]
	ands r0, r1
	cmp r0, #0
	beq _08105CD4
	movs r0, #0
	strb r0, [r2]
	b _08105CD4
	.align 2, 0
_08105C58: .4byte gUnk_08D5FE14
_08105C5C:
	ldr r0, [r7, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r7, #8]
	adds r0, r7, #0
	adds r0, #0xa2
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r4, r0, #0
	adds r2, r7, #0
	adds r2, #0x9f
	cmp r1, #0x28
	ble _08105C90
	movs r0, #0x28
	strh r0, [r4]
	adds r1, r7, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x60
	bls _08105C90
	movs r0, #1
	strb r0, [r2]
_08105C90:
	ldrb r0, [r2]
	cmp r0, #0
	beq _08105CC2
	adds r1, r7, #0
	adds r1, #0xa0
	adds r0, r7, #0
	mov r2, sp
	bl sub_08109DC4
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	mov r1, sp
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r1, [r1, r3]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	blt _08105CC8
	strh r2, [r4]
	adds r0, r7, #0
	bl sub_08109E00
	b _08105CD4
_08105CC2:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_08105CC8:
	ldrh r0, [r4]
	ldrh r1, [r7, #4]
	adds r0, r0, r1
	ldr r1, _08105CDC @ =0x000003FF
	ands r0, r1
	strh r0, [r7, #4]
_08105CD4:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08105CDC: .4byte 0x000003FF

	thumb_func_start sub_08105CE0
sub_08105CE0: @ 0x08105CE0
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r2, [r7, #0x70]
	adds r0, r2, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #1
	beq _08105D02
	cmp r0, #5
	beq _08105D02
	adds r0, r2, #0
	adds r0, #0xdb
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _08105D0A
_08105D02:
	adds r0, r7, #0
	bl sub_08109E24
	b _08105D68
_08105D0A:
	ldr r0, [r7, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r7, #8]
	ldr r3, [r2, #0x40]
	str r3, [r7, #0x40]
	ldr r4, [r2, #0x44]
	str r4, [r7, #0x44]
	adds r0, r7, #0
	adds r0, #0xa0
	movs r1, #0
	ldrsh r6, [r0, r1]
	ldr r5, _08105D70 @ =gUnk_08D5FE14
	movs r2, #4
	ldrsh r1, [r7, r2]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	adds r2, r6, #0
	muls r2, r0, r2
	lsls r2, r2, #8
	lsls r1, r1, #1
	adds r1, r1, r5
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r6, r0
	lsls r0, r0, #8
	asrs r2, r2, #0x10
	adds r3, r3, r2
	str r3, [r7, #0x40]
	asrs r0, r0, #0x10
	adds r4, r4, r0
	str r4, [r7, #0x44]
	adds r0, r7, #0
	adds r0, #0xa2
	ldrh r0, [r0]
	ldrh r1, [r7, #4]
	adds r0, r0, r1
	ldr r1, _08105D74 @ =0x000003FF
	ands r0, r1
	strh r0, [r7, #4]
_08105D68:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08105D70: .4byte gUnk_08D5FE14
_08105D74: .4byte 0x000003FF

	thumb_func_start sub_08105D78
sub_08105D78: @ 0x08105D78
	push {r4, r5, r6, lr}
	mov ip, r0
	ldr r4, [r0, #0x70]
	adds r3, r4, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #1
	bne _08105E82
	mov r0, ip
	ldr r1, [r0, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08105DD6
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r1, r0
	mov r2, ip
	str r1, [r2, #8]
	mov r1, ip
	adds r1, #0xa0
	adds r2, #0xa2
	movs r5, #0x80
	lsls r5, r5, #6
	adds r0, r5, #0
	strh r0, [r1]
	mov r0, ip
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _08105DCA
	cmp r0, #1
	bgt _08105DC0
	cmp r0, #0
	beq _08105DC6
	b _08105DD2
_08105DC0:
	cmp r0, #2
	beq _08105DCE
	b _08105DD2
_08105DC6:
	movs r0, #8
	b _08105DD4
_08105DCA:
	movs r0, #0xa
	b _08105DD4
_08105DCE:
	movs r0, #0xd
	b _08105DD4
_08105DD2:
	movs r0, #0x12
_08105DD4:
	strh r0, [r2]
_08105DD6:
	adds r0, r3, #0
	adds r0, #0xd4
	ldrb r0, [r0]
	cmp r0, #0
	bne _08105EAE
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r1, [r0]
	subs r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r2, ip
	adds r2, #0x9e
	cmp r0, #2
	bls _08105E16
	adds r0, r1, #0
	cmp r0, #0xb
	beq _08105E16
	cmp r0, #7
	beq _08105E16
	cmp r0, #9
	beq _08105E16
	cmp r0, #5
	beq _08105E16
	adds r0, r3, #0
	adds r0, #0xda
	ldrb r0, [r0]
	cmp r0, #0xc
	beq _08105E16
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
_08105E16:
	ldrb r0, [r2]
	cmp r0, #0
	beq _08105E82
	mov r1, ip
	ldr r0, [r1, #8]
	ldr r1, _08105EB4 @ =0xFFFFFBFF
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	mov r1, ip
	adds r1, #0x83
	movs r0, #2
	strb r0, [r1]
	ldr r0, [r2, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2, #8]
	ldr r3, [r4, #0x40]
	str r3, [r2, #0x40]
	ldr r4, [r4, #0x44]
	str r4, [r2, #0x44]
	mov r0, ip
	adds r0, #0xa0
	movs r5, #0
	ldrsh r6, [r0, r5]
	ldr r5, _08105EB8 @ =gUnk_08D5FE14
	movs r0, #4
	ldrsh r1, [r2, r0]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	adds r2, r6, #0
	muls r2, r0, r2
	lsls r2, r2, #8
	lsls r1, r1, #1
	adds r1, r1, r5
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r6, r0
	lsls r0, r0, #8
	asrs r2, r2, #0x10
	adds r3, r3, r2
	mov r5, ip
	str r3, [r5, #0x40]
	asrs r0, r0, #0x10
	adds r4, r4, r0
	str r4, [r5, #0x44]
_08105E82:
	mov r3, ip
	adds r3, #0x83
	ldrb r1, [r3]
	cmp r1, #2
	bne _08105EAE
	mov r2, ip
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _08105EAE
	movs r2, #0
	strb r2, [r3]
	mov r5, ip
	ldr r0, [r5, #8]
	ldr r1, _08105EBC @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r5, #8]
	ldr r0, _08105EC0 @ =sub_08105CE0
	str r0, [r5, #0x78]
	mov r0, ip
	adds r0, #0x9f
	strb r2, [r0]
_08105EAE:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08105EB4: .4byte 0xFFFFFBFF
_08105EB8: .4byte gUnk_08D5FE14
_08105EBC: .4byte 0xFFFFFDFF
_08105EC0: .4byte sub_08105CE0

	thumb_func_start sub_08105EC4
sub_08105EC4: @ 0x08105EC4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	adds r4, r0, #0
	adds r7, r4, #0
	ldr r1, _08105F20 @ =gRngVal
	ldr r0, [r1]
	ldr r2, _08105F24 @ =0x00196225
	muls r0, r2, r0
	ldr r3, _08105F28 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r1]
	lsrs r0, r0, #0x10
	mov r8, r0
	movs r0, #7
	mov r5, r8
	ands r5, r0
	mov r8, r5
	movs r0, #0
	str r0, [sp, #8]
	mov sl, r1
	movs r6, #0
_08105EF6:
	ldr r0, [r7, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r7, #0x40]
	asrs r0, r0, #8
	str r0, [sp]
	ldr r0, [r7, #0x44]
	asrs r0, r0, #8
	adds r0, #8
	str r0, [sp, #4]
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r1, [r0]
	str r0, [sp, #0x14]
	cmp r1, #1
	beq _08105F36
	cmp r1, #1
	bgt _08105F2C
	cmp r1, #0
	beq _08105F32
	b _08105F90
	.align 2, 0
_08105F20: .4byte gRngVal
_08105F24: .4byte 0x00196225
_08105F28: .4byte 0x3C6EF35F
_08105F2C:
	cmp r1, #2
	beq _08105F54
	b _08105F90
_08105F32:
	movs r3, #0
	b _08105FA4
_08105F36:
	mov r2, sl
	ldr r0, [r2]
	ldr r3, _08105F4C @ =0x00196225
	muls r0, r3, r0
	ldr r5, _08105F50 @ =0x3C6EF35F
	adds r0, r0, r5
	str r0, [r2]
	lsrs r3, r0, #0x10
	ands r3, r1
	b _08105FA4
	.align 2, 0
_08105F4C: .4byte 0x00196225
_08105F50: .4byte 0x3C6EF35F
_08105F54:
	mov r1, sl
	ldr r0, [r1]
	ldr r2, _08105F70 @ =0x00196225
	muls r0, r2, r0
	ldr r3, _08105F74 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r1]
	lsrs r2, r0, #0x10
	ldr r0, _08105F78 @ =0x00005554
	cmp r2, r0
	bhi _08105F7C
	movs r1, #0
	b _08105F86
	.align 2, 0
_08105F70: .4byte 0x00196225
_08105F74: .4byte 0x3C6EF35F
_08105F78: .4byte 0x00005554
_08105F7C:
	ldr r0, _08105F8C @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _08105F86
	movs r1, #1
_08105F86:
	adds r3, r1, #0
	b _08105FA4
	.align 2, 0
_08105F8C: .4byte 0x0000AAA9
_08105F90:
	mov r5, sl
	ldr r0, [r5]
	ldr r1, _08105FD0 @ =0x00196225
	muls r0, r1, r0
	ldr r2, _08105FD4 @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r5]
	lsrs r3, r0, #0x10
	movs r0, #3
	ands r3, r0
_08105FA4:
	movs r4, #0
	ldr r1, _08105FD8 @ =gUnk_020229D4
	ldr r2, [r1]
	adds r0, r2, #0
	movs r5, #1
	ands r0, r5
	ldr r5, _08105FDC @ =gUnk_020229E0
	mov ip, r5
	adds r3, #0xcb
	mov sb, r3
	adds r3, r7, #0
	adds r3, #0x56
	str r3, [sp, #0xc]
	ldr r5, [sp, #8]
	adds r5, #1
	str r5, [sp, #0x10]
	cmp r0, #0
	bne _08105FE0
	movs r0, #1
	orrs r2, r0
	b _08105FFA
	.align 2, 0
_08105FD0: .4byte 0x00196225
_08105FD4: .4byte 0x3C6EF35F
_08105FD8: .4byte gUnk_020229D4
_08105FDC: .4byte gUnk_020229E0
_08105FE0:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _08105FFC
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	cmp r0, #0
	bne _08105FE0
	orrs r2, r3
_08105FFA:
	str r2, [r1]
_08105FFC:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	add r1, ip
	movs r5, #1
	strb r5, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	mov r2, sp
	ldrh r2, [r2]
	strh r2, [r1, #6]
	mov r3, sp
	ldrh r3, [r3, #4]
	strh r3, [r1, #8]
	strb r6, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r6, [r1, #4]
	strb r6, [r1, #5]
	mov r0, sb
	strb r0, [r1, #0xc]
	strb r6, [r1, #0xe]
	strb r6, [r1, #0xf]
	ldr r2, [sp, #0x14]
	ldrb r0, [r2]
	strb r0, [r1, #0x10]
	strh r6, [r1, #0x22]
	strh r6, [r1, #0x1a]
	strh r6, [r1, #0x1c]
	strh r6, [r1, #0x1e]
	strh r6, [r1, #0x20]
	strb r6, [r1, #0x11]
	strh r6, [r1, #0x12]
	strh r6, [r1, #0x14]
	strh r6, [r1, #0x16]
	strh r6, [r1, #0x18]
	ldr r3, [sp, #0xc]
	ldrb r0, [r3]
	bl CreateObject
	str r7, [r0, #0x70]
	adds r4, r0, #0
	ldr r0, [r7, #8]
	ands r0, r5
	cmp r0, #0
	beq _0810605E
	ldr r0, [r4, #8]
	orrs r0, r5
	str r0, [r4, #8]
_0810605E:
	ldr r0, _081060B4 @ =gUnk_08D61120
	add r0, r8
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x85
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_08106508
	movs r0, #7
	mov r1, r8
	ands r1, r0
	mov r8, r1
	mov r2, sl
	ldr r0, [r2]
	ldr r3, _081060B8 @ =0x00196225
	muls r0, r3, r0
	ldr r1, _081060BC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	mov r1, r8
	adds r1, #1
	lsrs r0, r0, #0x10
	ands r0, r5
	adds r1, r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	ldr r2, [sp, #0x10]
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	cmp r0, #1
	bhi _081060A4
	b _08105EF6
_081060A4:
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081060B4: .4byte gUnk_08D61120
_081060B8: .4byte 0x00196225
_081060BC: .4byte 0x3C6EF35F

	thumb_func_start sub_081060C0
sub_081060C0: @ 0x081060C0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r7, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sl, r1
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	str r3, [sp]
	adds r4, r7, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r4, #0x40]
	asrs r0, r0, #8
	str r0, [sp, #4]
	ldr r0, [r7, #0x44]
	asrs r0, r0, #8
	adds r0, #8
	mov ip, r0
	ldr r0, [sp]
	cmp r0, #1
	bne _08106124
	ldr r2, _0810613C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08106140 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08106144 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0x1f
	ands r0, r1
	movs r1, #0xe
	subs r1, r1, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add ip, r1
	lsls r1, r1, #3
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
_08106124:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r4, [r0]
	str r0, [sp, #8]
	cmp r4, #1
	beq _08106152
	cmp r4, #1
	bgt _08106148
	cmp r4, #0
	beq _0810614E
	b _081061B4
	.align 2, 0
_0810613C: .4byte gRngVal
_08106140: .4byte 0x00196225
_08106144: .4byte 0x3C6EF35F
_08106148:
	cmp r4, #2
	beq _08106174
	b _081061B4
_0810614E:
	movs r3, #0
	b _081061C8
_08106152:
	ldr r2, _08106168 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810616C @ =0x00196225
	muls r0, r1, r0
	ldr r3, _08106170 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r3, r0, #0x10
	ands r3, r4
	b _081061C8
	.align 2, 0
_08106168: .4byte gRngVal
_0810616C: .4byte 0x00196225
_08106170: .4byte 0x3C6EF35F
_08106174:
	ldr r2, _08106190 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08106194 @ =0x00196225
	muls r0, r1, r0
	ldr r4, _08106198 @ =0x3C6EF35F
	adds r0, r0, r4
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _0810619C @ =0x00005554
	cmp r2, r0
	bhi _081061A0
	movs r1, #0
	b _081061AA
	.align 2, 0
_08106190: .4byte gRngVal
_08106194: .4byte 0x00196225
_08106198: .4byte 0x3C6EF35F
_0810619C: .4byte 0x00005554
_081061A0:
	ldr r0, _081061B0 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _081061AA
	movs r1, #1
_081061AA:
	adds r3, r1, #0
	b _081061C8
	.align 2, 0
_081061B0: .4byte 0x0000AAA9
_081061B4:
	ldr r2, _081061F4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _081061F8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _081061FC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r0, #3
	ands r3, r0
_081061C8:
	movs r4, #0
	ldr r1, _08106200 @ =gUnk_020229D4
	movs r5, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r5
	lsls r6, r6, #0x10
	str r6, [sp, #0xc]
	ldr r6, _08106204 @ =gUnk_020229E0
	adds r3, #0xcb
	mov r8, r3
	movs r3, #0x56
	adds r3, r3, r7
	mov sb, r3
	mov r3, sl
	lsls r3, r3, #0x10
	mov sl, r3
	cmp r0, #0
	bne _08106208
	orrs r2, r5
	b _08106222
	.align 2, 0
_081061F4: .4byte gRngVal
_081061F8: .4byte 0x00196225
_081061FC: .4byte 0x3C6EF35F
_08106200: .4byte gUnk_020229D4
_08106204: .4byte gUnk_020229E0
_08106208:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _08106224
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	cmp r0, #0
	bne _08106208
	orrs r2, r3
_08106222:
	str r2, [r1]
_08106224:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r5, #1
	strb r5, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r4, sp
	ldrh r4, [r4, #4]
	strh r4, [r1, #6]
	mov r0, ip
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	mov r4, r8
	strb r4, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	ldr r4, [sp, #8]
	ldrb r0, [r4]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, sb
	ldrb r0, [r2]
	bl CreateObject
	str r7, [r0, #0x70]
	adds r4, r0, #0
	ldr r0, [r7, #8]
	ands r0, r5
	cmp r0, #0
	beq _08106288
	ldr r0, [r4, #8]
	orrs r0, r5
	str r0, [r4, #8]
_08106288:
	mov r3, sl
	asrs r1, r3, #0x10
	ldr r0, [sp, #0xc]
	asrs r2, r0, #0x10
	adds r0, r4, #0
	bl sub_08106804
	ldr r1, [sp]
	cmp r1, #2
	bne _081062A2
	adds r0, r4, #0
	adds r0, #0x85
	strb r5, [r0]
_081062A2:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_081062B4
sub_081062B4: @ 0x081062B4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r2, r0, #0
	adds r7, r2, #0
	mov sb, r2
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r2, #0x40]
	asrs r0, r0, #8
	mov sl, r0
	ldr r0, [r7, #0x44]
	asrs r0, r0, #8
	adds r0, #8
	str r0, [sp]
	adds r0, r2, #0
	adds r0, #0x87
	ldrb r4, [r0]
	str r0, [sp, #4]
	cmp r4, #1
	beq _081062FA
	cmp r4, #1
	bgt _081062F0
	cmp r4, #0
	beq _081062F6
	b _0810635C
_081062F0:
	cmp r4, #2
	beq _0810631C
	b _0810635C
_081062F6:
	movs r3, #0
	b _08106370
_081062FA:
	ldr r2, _08106310 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08106314 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08106318 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r3, r0, #0x10
	ands r3, r4
	b _08106370
	.align 2, 0
_08106310: .4byte gRngVal
_08106314: .4byte 0x00196225
_08106318: .4byte 0x3C6EF35F
_0810631C:
	ldr r2, _08106338 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810633C @ =0x00196225
	muls r0, r1, r0
	ldr r3, _08106340 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _08106344 @ =0x00005554
	cmp r2, r0
	bhi _08106348
	movs r1, #0
	b _08106352
	.align 2, 0
_08106338: .4byte gRngVal
_0810633C: .4byte 0x00196225
_08106340: .4byte 0x3C6EF35F
_08106344: .4byte 0x00005554
_08106348:
	ldr r0, _08106358 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _08106352
	movs r1, #1
_08106352:
	adds r3, r1, #0
	b _08106370
	.align 2, 0
_08106358: .4byte 0x0000AAA9
_0810635C:
	ldr r2, _08106394 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08106398 @ =0x00196225
	muls r0, r1, r0
	ldr r5, _0810639C @ =0x3C6EF35F
	adds r0, r0, r5
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r0, #3
	ands r3, r0
_08106370:
	movs r4, #0
	ldr r1, _081063A0 @ =gUnk_020229D4
	movs r5, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r5
	ldr r6, _081063A4 @ =gUnk_020229E0
	adds r3, #0xcb
	mov ip, r3
	movs r3, #0x56
	adds r3, r3, r7
	mov r8, r3
	movs r3, #0xda
	add sb, r3
	cmp r0, #0
	bne _081063A8
	orrs r2, r5
	b _081063C2
	.align 2, 0
_08106394: .4byte gRngVal
_08106398: .4byte 0x00196225
_0810639C: .4byte 0x3C6EF35F
_081063A0: .4byte gUnk_020229D4
_081063A4: .4byte gUnk_020229E0
_081063A8:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _081063C4
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	cmp r0, #0
	bne _081063A8
	orrs r2, r3
_081063C2:
	str r2, [r1]
_081063C4:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r5, sl
	strh r5, [r1, #6]
	mov r0, sp
	ldrh r0, [r0]
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	mov r5, ip
	strb r5, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	ldr r5, [sp, #4]
	ldrb r0, [r5]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	str r7, [r0, #0x70]
	adds r2, r0, #0
	ldr r0, [r7, #8]
	ands r0, r4
	cmp r0, #0
	beq _08106428
	ldr r0, [r2, #8]
	orrs r0, r4
	str r0, [r2, #8]
_08106428:
	mov r3, sb
	ldrb r0, [r3]
	cmp r0, #0xe
	bne _08106438
	adds r0, r2, #0
	bl sub_081068F8
	b _0810643E
_08106438:
	adds r0, r2, #0
	bl sub_08109EF8
_0810643E:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08106450
sub_08106450: @ 0x08106450
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _08106484 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08106488 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0810648C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r6, r0, r1
	b _08106494
	.align 2, 0
_08106484: .4byte ObjectMain
_08106488: .4byte ObjectDestroy
_0810648C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
_08106494:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r6, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r6, #8]
	ldr r0, [r6, #0xc]
	movs r1, #1
	orrs r0, r1
	movs r5, #4
	orrs r0, r5
	movs r1, #2
	orrs r0, r1
	str r0, [r6, #0xc]
	ldr r0, [r6, #0x5c]
	movs r1, #0x84
	lsls r1, r1, #0xd
	orrs r0, r1
	str r0, [r6, #0x5c]
	adds r1, r6, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _08106504 @ =sub_0809F840
	str r0, [r6, #0x7c]
	movs r4, #4
	rsbs r4, r4, #0
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #4
	bl sub_0803E2B0
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #4
	bl sub_0803E308
	adds r0, r6, #0
	bl ObjectInitSprite
	movs r0, #0x90
	lsls r0, r0, #2
	strh r0, [r6, #0x24]
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08106504: .4byte sub_0809F840

	thumb_func_start sub_08106508
sub_08106508: @ 0x08106508
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _081065A4 @ =sub_081065B0
	movs r1, #0
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x82
	adds r0, #0x35
	ldrb r1, [r1]
	adds r0, r0, r1
	strb r0, [r2]
	ldr r3, _081065A8 @ =gUnk_08D5FE14
	ldr r2, _081065AC @ =gUnk_08357278
	movs r0, #0x85
	adds r0, r0, r4
	mov ip, r0
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	subs r0, r0, r1
	asrs r0, r0, #2
	adds r5, r4, #0
	adds r5, #0x50
	strh r0, [r5]
	mov r1, ip
	ldrb r0, [r1]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	subs r0, r0, r1
	asrs r0, r0, #2
	adds r1, r4, #0
	adds r1, #0x52
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810658C
	ldrh r0, [r5]
	rsbs r0, r0, #0
	strh r0, [r5]
_0810658C:
	movs r0, #0x80
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_081069BC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_081065A4: .4byte sub_081065B0
_081065A8: .4byte gUnk_08D5FE14
_081065AC: .4byte gUnk_08357278

	thumb_func_start sub_081065B0
sub_081065B0: @ 0x081065B0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08106648
	adds r5, r4, #0
	adds r5, #0x3e
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _08106600 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _08106604
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	b _081066C8
	.align 2, 0
_08106600: .4byte 0xFFFFF800
_08106604:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	cmp r1, r0
	bgt _081066CC
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r6, #0
	ldrsh r1, [r3, r6]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _08106644 @ =0xFFFFF800
	adds r0, r0, r2
	b _081066C8
	.align 2, 0
_08106644: .4byte 0xFFFFF800
_08106648:
	adds r5, r4, #0
	adds r5, #0x3c
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x40]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa4
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r0, r6
	cmp r1, r0
	bgt _0810668C
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	ldr r2, _08106688 @ =0xFFFFF800
	adds r0, r0, r2
	b _081066C8
	.align 2, 0
_08106688: .4byte 0xFFFFF800
_0810668C:
	movs r0, #0x3e
	adds r0, r0, r4
	mov ip, r0
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xa8
	movs r2, #0
	ldrsh r0, [r3, r2]
	lsls r0, r0, #8
	ldr r2, _08106710 @ =0xFFFFF800
	adds r0, r0, r2
	cmp r1, r0
	blt _081066CC
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	mov r2, ip
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
	adds r0, r0, r6
_081066C8:
	subs r1, r1, r0
	str r1, [r4, #0x40]
_081066CC:
	adds r5, r4, #0
	adds r5, #0x3f
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r1, r1, #8
	ldr r2, [r4, #0x44]
	adds r1, r2, r1
	adds r3, r4, #0
	adds r3, #0xaa
	movs r6, #0
	ldrsh r0, [r3, r6]
	lsls r0, r0, #8
	ldr r6, _08106710 @ =0xFFFFF800
	adds r0, r0, r6
	cmp r1, r0
	blt _08106714
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #4
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #8
	movs r0, #0
	ldrsb r0, [r5, r0]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	subs r1, r1, r0
	str r1, [r4, #0x44]
	b _0810673E
	.align 2, 0
_08106710: .4byte 0xFFFFF800
_08106714:
	adds r0, r4, #0
	adds r0, #0x3d
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #8
	adds r1, r2, r1
	adds r0, #0x69
	movs r6, #0
	ldrsh r0, [r0, r6]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	cmp r1, r0
	bgt _0810673E
	adds r2, r4, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #8
	orrs r0, r1
	strb r0, [r2]
_0810673E:
	ldr r0, [r4, #8]
	movs r2, #4
	orrs r0, r2
	str r0, [r4, #8]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0810676C
	movs r2, #0xa6
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
	b _081067F6
_0810676C:
	adds r3, r4, #0
	adds r3, #0x62
	ldrb r1, [r3]
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _081067A6
	ldr r2, _081067FC @ =gUnk_08D5FE14
	ldr r1, _08106800 @ =gUnk_08357278
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	subs r0, r0, r1
	asrs r0, r0, #2
	rsbs r0, r0, #0
	adds r1, r4, #0
	adds r1, #0x52
	strh r0, [r1]
_081067A6:
	ldrb r1, [r3]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _081067DA
	ldr r2, _081067FC @ =gUnk_08D5FE14
	ldr r1, _08106800 @ =gUnk_08357278
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	subs r0, r0, r1
	asrs r0, r0, #2
	adds r1, r4, #0
	adds r1, #0x52
	strh r0, [r1]
_081067DA:
	ldrb r1, [r3]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _081067F6
	ldr r0, [r4, #8]
	movs r1, #1
	eors r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
_081067F6:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_081067FC: .4byte gUnk_08D5FE14
_08106800: .4byte gUnk_08357278

	thumb_func_start sub_08106804
sub_08106804: @ 0x08106804
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r5, r1, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r6, r2, #0
	ldr r2, _08106870 @ =sub_08109E98
	movs r1, #0
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x82
	adds r0, #0x35
	ldrb r1, [r1]
	adds r0, r0, r1
	strb r0, [r2]
	subs r2, #0x33
	strh r5, [r2]
	adds r0, r4, #0
	adds r0, #0x52
	strh r6, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08106850
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_08106850:
	cmp r5, #0
	bne _08106862
	cmp r6, #0
	bne _08106862
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
_08106862:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08106870: .4byte sub_08109E98

	thumb_func_start sub_08106874
sub_08106874: @ 0x08106874
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r2, [r7, #0x70]
	ldr r0, [r7, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r7, #8]
	adds r0, r2, #0
	adds r0, #0x83
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #6
	bls _081068EC
	adds r0, r2, #0
	adds r0, #0xac
	ldr r1, [r0]
	ldr r4, [r1, #0x40]
	ldr r0, [r7, #0x40]
	subs r4, r4, r0
	asrs r4, r4, #8
	ldr r5, [r7, #0x44]
	ldr r0, [r1, #0x44]
	subs r5, r5, r0
	asrs r5, r5, #8
	adds r0, r4, #0
	muls r0, r4, r0
	adds r1, r5, #0
	muls r1, r5, r1
	adds r0, r0, r1
	lsls r0, r0, #8
	bl Sqrt
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	lsls r4, r4, #8
	adds r0, r4, #0
	adds r1, r6, #0
	bl __divsi3
	adds r4, r0, #0
	lsls r5, r5, #8
	adds r0, r5, #0
	adds r1, r6, #0
	bl __divsi3
	lsls r4, r4, #6
	adds r1, r7, #0
	adds r1, #0x50
	strh r4, [r1]
	lsls r0, r0, #6
	adds r1, #2
	strh r0, [r1]
	ldr r0, _081068F4 @ =sub_08109E98
	str r0, [r7, #0x78]
	adds r0, r7, #0
	bl sub_08106AD0
_081068EC:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081068F4: .4byte sub_08109E98

	thumb_func_start sub_081068F8
sub_081068F8: @ 0x081068F8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	ldr r0, [r5, #0x70]
	adds r0, #0xac
	ldr r6, [r0]
	ldr r2, _081069B8 @ =sub_08109F40
	adds r0, r5, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r2, r5, #0
	adds r2, #0x83
	ldrb r0, [r2]
	adds r1, r5, #0
	adds r1, #0x82
	adds r0, #0x35
	ldrb r1, [r1]
	adds r0, r0, r1
	movs r1, #0
	strb r0, [r2]
	movs r0, #0x50
	adds r0, r0, r5
	mov sb, r0
	movs r2, #0
	strh r1, [r0]
	adds r7, r5, #0
	adds r7, #0x52
	strh r1, [r7]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x9f
	strb r2, [r0]
	ldr r4, [r6, #0x40]
	ldr r0, [r5, #0x40]
	subs r4, r4, r0
	asrs r4, r4, #8
	ldr r5, [r5, #0x44]
	ldr r0, [r6, #0x44]
	subs r5, r5, r0
	asrs r5, r5, #8
	adds r0, r4, #0
	muls r0, r4, r0
	adds r1, r5, #0
	muls r1, r5, r1
	adds r0, r0, r1
	lsls r0, r0, #8
	bl Sqrt
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	lsls r4, r4, #8
	adds r0, r4, #0
	adds r1, r6, #0
	bl __divsi3
	adds r4, r0, #0
	lsls r2, r4, #8
	mov r8, r2
	lsls r5, r5, #8
	adds r0, r5, #0
	adds r1, r6, #0
	bl __divsi3
	lsls r1, r0, #8
	lsls r4, r4, #0xa
	add r4, r8
	lsrs r4, r4, #4
	mov r2, sb
	strh r4, [r2]
	lsls r0, r0, #0xa
	adds r0, r0, r1
	lsrs r0, r0, #4
	strh r0, [r7]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081069B8: .4byte sub_08109F40

	thumb_func_start sub_081069BC
sub_081069BC: @ 0x081069BC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r7, r0, #0
	adds r6, r7, #0
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	bne _08106AC0
	ldr r0, _08106A00 @ =sub_08106BE0
	ldr r2, _08106A04 @ =0x00000FFF
	ldr r1, _08106A08 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08106A0C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r5, r0, r1
	b _08106A14
	.align 2, 0
_08106A00: .4byte sub_08106BE0
_08106A04: .4byte 0x00000FFF
_08106A08: .4byte sub_0803DCCC
_08106A0C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
_08106A14:
	adds r4, r5, #0
	adds r0, r4, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r6, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r6, #0x44]
	str r0, [r4, #0x38]
	str r6, [r4, #0x44]
	adds r0, r6, #0
	adds r0, #0x60
	ldrh r0, [r0]
	movs r1, #0x42
	adds r1, r1, r4
	mov r8, r1
	movs r2, #0
	mov sb, r2
	strh r0, [r1]
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08106A4C
	ldrh r0, [r4, #6]
	orrs r0, r1
	strh r0, [r4, #6]
_08106A4C:
	adds r1, r5, #0
	adds r1, #0xc
	ldr r6, _08106AB0 @ =0x00000399
	adds r0, r7, #0
	adds r0, #0x82
	ldrb r0, [r0]
	adds r0, #0x35
	lsls r0, r0, #1
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #0x1b
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r2, #0x10
	adds r3, r6, #0
	bl sub_080709F8
	adds r4, r5, #0
	adds r4, #0x2b
	mov r0, sb
	strb r0, [r4]
	ldr r2, _08106AB4 @ =gUnk_02020EE0
	ldr r0, _08106AB8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, r8
	ldrh r1, [r1]
	cmp r0, r1
	bne _08106ABC
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08106AC0
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08106AC0
	.align 2, 0
_08106AB0: .4byte 0x00000399
_08106AB4: .4byte gUnk_02020EE0
_08106AB8: .4byte gUnk_0203AD3C
_08106ABC:
	mov r2, sb
	strb r2, [r4]
_08106AC0:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08106AD0
sub_08106AD0: @ 0x08106AD0
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r5, #0
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	bne _08106BD6
	ldr r0, _08106B0C @ =sub_08106BE0
	ldr r2, _08106B10 @ =0x00000FFF
	ldr r1, _08106B14 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08106B18
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08106B20
	.align 2, 0
_08106B0C: .4byte sub_08106BE0
_08106B10: .4byte 0x00000FFF
_08106B14: .4byte sub_0803DCCC
_08106B18:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08106B20:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x42
	strh r0, [r1]
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08106B50
	ldrh r0, [r4, #6]
	orrs r0, r1
	strh r0, [r4, #6]
_08106B50:
	adds r0, r6, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0xd4
	bne _08106B62
	adds r0, r6, #0
	adds r0, #0x83
	ldrb r0, [r0]
	b _08106B64
_08106B62:
	adds r0, #0x35
_08106B64:
	lsls r0, r0, #1
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r4, #0
	adds r1, #0xc
	ldr r6, _08106BC4 @ =0x00000399
	str r0, [sp]
	movs r0, #0x1b
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x10
	adds r3, r6, #0
	bl sub_080709F8
	adds r5, r4, #0
	adds r5, #0x2b
	movs r3, #0
	strb r3, [r5]
	ldr r2, _08106BC8 @ =gUnk_02020EE0
	ldr r0, _08106BCC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08106BD0
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08106BD2
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _08106BD2
	.align 2, 0
_08106BC4: .4byte 0x00000399
_08106BC8: .4byte gUnk_02020EE0
_08106BCC: .4byte gUnk_0203AD3C
_08106BD0:
	strb r3, [r5]
_08106BD2:
	movs r0, #1
	strh r0, [r4, #4]
_08106BD6:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08106BE0
sub_08106BE0: @ 0x08106BE0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	ldr r2, _08106C08 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08106C0C
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08106C14
	.align 2, 0
_08106C08: .4byte gCurTask
_08106C0C:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08106C14:
	adds r6, r0, #0
	ldr r0, [r6, #0x44]
	mov r8, r0
	mov r7, r8
	ldrh r3, [r6, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _08106C32
	ldr r0, [r2]
	bl TaskDestroy
	b _08107244
_08106C32:
	mov r2, r8
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _08106C44
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r6, #6]
	b _08107244
_08106C44:
	ldr r2, _08106CAC @ =gUnk_02020EE0
	ldr r0, _08106CB0 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x42
	ldrh r0, [r0]
	mov sl, r1
	ldrh r1, [r1]
	cmp r0, r1
	bne _08106CF4
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _08106CBC
	ldr r0, [r6, #0xc]
	cmp r0, #0
	bne _08106D1A
	ldrh r1, [r6, #0x18]
	adds r0, r6, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x10
	bl sub_0803DE54
	adds r4, r6, #0
	adds r4, #0xc
	str r0, [r6, #0xc]
	ldr r0, [r6, #0x14]
	ldr r1, _08106CB4 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _08106CB8 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r6, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _08106D1A
	.align 2, 0
_08106CAC: .4byte gUnk_02020EE0
_08106CB0: .4byte gUnk_0203AD3C
_08106CB4: .4byte 0xFFF7FFFF
_08106CB8: .4byte 0x0400000A
_08106CBC:
	ldr r0, [r6, #0xc]
	cmp r0, #0
	bne _08106D1A
	movs r0, #0x10
	bl sub_081570B0
	adds r3, r6, #0
	adds r3, #0xc
	str r0, [r6, #0xc]
	ldr r0, [r6, #0x14]
	ldr r1, _08106CEC @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _08106CF0 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r6, #1]
	mov r0, sp
	bl sub_0815521C
	b _08106D1A
	.align 2, 0
_08106CEC: .4byte 0xFFF7FFFF
_08106CF0: .4byte 0x0400000A
_08106CF4:
	ldr r1, [r6, #0xc]
	cmp r1, #0
	beq _08106D10
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _08106D10
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r6, #0xc]
_08106D10:
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r6, #0x14]
_08106D1A:
	ldr r2, _08106D60 @ =gUnk_02020EE0
	ldr r0, _08106D64 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, sl
	ldrh r2, [r2]
	cmp r0, r2
	bne _08106D68
	adds r4, r6, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _08106D70
	movs r5, #0xe6
	lsls r5, r5, #2
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08106D70
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08106D70
	.align 2, 0
_08106D60: .4byte gUnk_02020EE0
_08106D64: .4byte gUnk_0203AD3C
_08106D68:
	adds r1, r6, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_08106D70:
	ldrh r0, [r6, #6]
	movs r2, #4
	movs r3, #0
	orrs r2, r0
	ldr r0, _08106DB0 @ =0x0000FFFE
	ands r2, r0
	strh r2, [r6, #6]
	ldr r0, [r7, #8]
	movs r1, #1
	eors r0, r1
	ands r0, r1
	orrs r0, r2
	strh r0, [r6, #6]
	adds r0, r7, #0
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sl
	strh r0, [r1]
	ldr r0, [r7, #0xc]
	movs r5, #0x80
	lsls r5, r5, #3
	ands r0, r5
	cmp r0, #0
	beq _08106DB4
	ldrh r0, [r6, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r6, #6]
	b _08107244
	.align 2, 0
_08106DB0: .4byte 0x0000FFFE
_08106DB4:
	movs r1, #4
	ldrsh r0, [r6, r1]
	cmp r0, #0
	bne _08106DBE
	b _08107054
_08106DBE:
	mov r0, r8
	adds r0, #0x50
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov r2, r8
	ldr r0, [r2, #0x48]
	subs r0, r0, r1
	subs r0, r0, r1
	str r0, [r6, #0x34]
	mov r0, r8
	adds r0, #0x52
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov r2, r8
	ldr r0, [r2, #0x4c]
	adds r0, r0, r1
	adds r0, r0, r1
	str r0, [r6, #0x38]
	ldr r0, _08106E18 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	mov r1, r8
	adds r1, #0x56
	movs r3, #1
	adds r0, r3, #0
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08106DFE
	b _08106F28
_08106DFE:
	ldrh r1, [r6, #6]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _08106E1C
	adds r1, r6, #0
	adds r1, #0xc
	ldr r0, [r6, #0x14]
	orrs r0, r5
	str r0, [r1, #8]
	adds r4, r1, #0
	b _08106E2A
	.align 2, 0
_08106E18: .4byte gUnk_03000510
_08106E1C:
	adds r0, r6, #0
	adds r0, #0xc
	ldr r1, [r6, #0x14]
	ldr r2, _08106EB0 @ =0xFFFFFBFF
	ands r1, r2
	str r1, [r0, #8]
	adds r4, r0, #0
_08106E2A:
	ldrh r0, [r6, #6]
	mov ip, r0
	movs r0, #8
	mov r1, ip
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	adds r7, r6, #0
	adds r7, #0x28
	cmp r3, #0
	bne _08106ECC
	adds r0, r6, #0
	adds r0, #0x27
	adds r2, r6, #0
	adds r2, #0x26
	ldrb r1, [r0]
	adds r5, r0, #0
	ldrb r2, [r2]
	cmp r1, r2
	bne _08106E5A
	ldrh r0, [r6, #0x24]
	ldrh r2, [r6, #0x18]
	cmp r0, r2
	beq _08106E72
_08106E5A:
	adds r0, r6, #0
	adds r0, #0x28
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0
	beq _08106E72
	strb r3, [r6, #1]
	strh r3, [r6, #2]
	ldr r0, _08106EB4 @ =0x0000FFFB
	mov r1, ip
	ands r0, r1
	strh r0, [r6, #6]
_08106E72:
	adds r0, r4, #0
	bl sub_08155128
	adds r2, r0, #0
	cmp r2, #0
	bne _08106EB8
	ldrh r0, [r6, #6]
	movs r1, #2
	movs r3, #0
	orrs r1, r0
	strh r1, [r6, #6]
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _08106ECC
	ldrb r0, [r7]
	cmp r0, #0
	beq _08106ECC
	movs r0, #0xff
	strb r0, [r5]
	ldrh r1, [r6, #6]
	ldr r0, _08106EB4 @ =0x0000FFFB
	ands r0, r1
	strh r0, [r6, #6]
	strb r3, [r6, #1]
	strh r2, [r6, #2]
	adds r0, r4, #0
	bl sub_08155128
	b _08106ECC
	.align 2, 0
_08106EB0: .4byte 0xFFFFFBFF
_08106EB4: .4byte 0x0000FFFB
_08106EB8:
	ldrb r1, [r7]
	ldrh r0, [r6, #2]
	adds r0, r0, r1
	strh r0, [r6, #2]
	lsrs r0, r0, #4
	strb r0, [r6, #1]
	ldrh r1, [r6, #6]
	ldr r0, _08106FA0 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r6, #6]
_08106ECC:
	ldr r2, [r6, #0x34]
	asrs r2, r2, #8
	ldr r3, _08106FA4 @ =gCurLevelInfo
	ldr r5, _08106FA8 @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	movs r0, #0x40
	adds r0, r0, r6
	mov ip, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r2
	movs r1, #0
	mov sb, r1
	strh r0, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r1, r1, r0
	adds r2, r6, #0
	adds r2, #0x41
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r0, r1
	strh r0, [r6, #0x1e]
	ldrb r0, [r7]
	cmp r0, #0
	beq _08106F28
	mov r1, sb
	mov r0, ip
	strb r1, [r0]
	strb r1, [r2]
_08106F28:
	ldr r2, [r6, #0x34]
	asrs r2, r2, #8
	ldr r3, _08106FA4 @ =gCurLevelInfo
	ldr r5, _08106FA8 @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r7, r2, r0
	strh r7, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r4, [r6, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	bne _08106FBC
	ldr r2, _08106FAC @ =gUnk_02020EE0
	ldrb r1, [r5]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, sl
	ldrh r2, [r2]
	cmp r0, r2
	bne _08106FBC
	ldr r1, _08106FB0 @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r7, r0
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r4
	cmp r0, #0
	beq _08106FB4
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _08106FBC
	.align 2, 0
_08106FA0: .4byte 0x0000FFFD
_08106FA4: .4byte gCurLevelInfo
_08106FA8: .4byte gUnk_0203AD3C
_08106FAC: .4byte gUnk_02020EE0
_08106FB0: .4byte gUnk_0203AD18
_08106FB4:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_08106FBC:
	mov r0, r8
	ldr r2, [r0, #0x48]
	str r2, [r6, #0x34]
	ldr r4, [r0, #0x4c]
	str r4, [r6, #0x38]
	asrs r2, r2, #8
	ldr r3, _08107044 @ =gCurLevelInfo
	ldr r7, _08107048 @ =gUnk_0203AD3C
	ldrb r0, [r7]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	mov r8, r2
	mov r1, r8
	strh r1, [r6, #0x1c]
	asrs r4, r4, #8
	ldrb r0, [r7]
	muls r0, r5, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r4, r4, r0
	strh r4, [r6, #0x1e]
	ldrh r3, [r6, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r3
	cmp r0, #0
	beq _08107006
	b _08107244
_08107006:
	ldr r2, _0810704C @ =gUnk_02020EE0
	ldrb r1, [r7]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, sl
	ldrh r2, [r2]
	cmp r0, r2
	beq _08107020
	b _08107244
_08107020:
	ldr r1, _08107050 @ =gUnk_0203AD18
	ldrh r0, [r1]
	add r0, r8
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r4, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _0810703A
	b _08107222
_0810703A:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
	b _08107244
	.align 2, 0
_08107044: .4byte gCurLevelInfo
_08107048: .4byte gUnk_0203AD3C
_0810704C: .4byte gUnk_02020EE0
_08107050: .4byte gUnk_0203AD18
_08107054:
	mov r0, r8
	ldr r3, [r0, #0x48]
	str r3, [r6, #0x34]
	ldr r7, [r0, #0x4c]
	str r7, [r6, #0x38]
	ldr r0, _08107094 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	mov r1, r8
	adds r1, #0x56
	movs r4, #1
	adds r0, r4, #0
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _0810707A
	b _081071B4
_0810707A:
	ldrh r1, [r6, #6]
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _08107098
	adds r1, r6, #0
	adds r1, #0xc
	ldr r0, [r6, #0x14]
	orrs r0, r5
	str r0, [r1, #8]
	adds r4, r1, #0
	b _081070A6
	.align 2, 0
_08107094: .4byte gUnk_03000510
_08107098:
	adds r0, r6, #0
	adds r0, #0xc
	ldr r1, [r6, #0x14]
	ldr r2, _0810712C @ =0xFFFFFBFF
	ands r1, r2
	str r1, [r0, #8]
	adds r4, r0, #0
_081070A6:
	ldrh r1, [r6, #6]
	mov r8, r1
	movs r0, #8
	mov r2, r8
	ands r0, r2
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	adds r7, r6, #0
	adds r7, #0x28
	cmp r3, #0
	bne _08107148
	adds r0, r6, #0
	adds r0, #0x27
	adds r2, r6, #0
	adds r2, #0x26
	ldrb r1, [r0]
	adds r5, r0, #0
	ldrb r2, [r2]
	cmp r1, r2
	bne _081070D6
	ldrh r0, [r6, #0x24]
	ldrh r1, [r6, #0x18]
	cmp r0, r1
	beq _081070EE
_081070D6:
	adds r0, r6, #0
	adds r0, #0x28
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0
	beq _081070EE
	strb r3, [r6, #1]
	strh r3, [r6, #2]
	ldr r0, _08107130 @ =0x0000FFFB
	mov r2, r8
	ands r0, r2
	strh r0, [r6, #6]
_081070EE:
	adds r0, r4, #0
	bl sub_08155128
	adds r2, r0, #0
	cmp r2, #0
	bne _08107134
	ldrh r0, [r6, #6]
	movs r1, #2
	movs r3, #0
	orrs r1, r0
	strh r1, [r6, #6]
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _08107148
	ldrb r0, [r7]
	cmp r0, #0
	beq _08107148
	movs r0, #0xff
	strb r0, [r5]
	ldrh r1, [r6, #6]
	ldr r0, _08107130 @ =0x0000FFFB
	ands r0, r1
	strh r0, [r6, #6]
	strb r3, [r6, #1]
	strh r2, [r6, #2]
	adds r0, r4, #0
	bl sub_08155128
	b _08107148
	.align 2, 0
_0810712C: .4byte 0xFFFFFBFF
_08107130: .4byte 0x0000FFFB
_08107134:
	ldrb r1, [r7]
	ldrh r0, [r6, #2]
	adds r0, r0, r1
	strh r0, [r6, #2]
	lsrs r0, r0, #4
	strb r0, [r6, #1]
	ldrh r1, [r6, #6]
	ldr r0, _081071A8 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r6, #6]
_08107148:
	ldr r2, [r6, #0x34]
	asrs r2, r2, #8
	ldr r3, _081071AC @ =gCurLevelInfo
	ldr r4, _081071B0 @ =gUnk_0203AD3C
	ldrb r0, [r4]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	movs r0, #0x40
	adds r0, r0, r6
	mov ip, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r2
	movs r1, #0
	mov r8, r1
	strh r0, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r4]
	muls r0, r5, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r1, r1, r0
	adds r2, r6, #0
	adds r2, #0x41
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r0, r1
	strh r0, [r6, #0x1e]
	ldrb r0, [r7]
	cmp r0, #0
	beq _081071E2
	mov r1, r8
	mov r0, ip
	strb r1, [r0]
	strb r1, [r2]
	b _081071E2
	.align 2, 0
_081071A8: .4byte 0x0000FFFD
_081071AC: .4byte gCurLevelInfo
_081071B0: .4byte gUnk_0203AD3C
_081071B4:
	asrs r2, r3, #8
	ldr r3, _0810722C @ =gCurLevelInfo
	ldr r4, _08107230 @ =gUnk_0203AD3C
	ldrb r0, [r4]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	strh r2, [r6, #0x1c]
	asrs r1, r7, #8
	ldrb r0, [r4]
	muls r0, r5, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r1, r1, r0
	strh r1, [r6, #0x1e]
_081071E2:
	ldrh r3, [r6, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r3
	cmp r0, #0
	bne _08107244
	ldr r2, _08107234 @ =gUnk_02020EE0
	ldrb r1, [r4]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, sl
	ldrh r2, [r2]
	cmp r0, r2
	bne _08107244
	ldr r1, _08107238 @ =gUnk_0203AD18
	ldrh r0, [r1]
	ldrh r2, [r6, #0x1c]
	adds r0, r0, r2
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	ldrh r1, [r6, #0x1e]
	adds r0, r0, r1
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _0810723C
_08107222:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _08107244
	.align 2, 0
_0810722C: .4byte gCurLevelInfo
_08107230: .4byte gUnk_0203AD3C
_08107234: .4byte gUnk_02020EE0
_08107238: .4byte gUnk_0203AD18
_0810723C:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_08107244:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08107254
sub_08107254: @ 0x08107254
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r3, r0, #0
	adds r7, r3, #0
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r3, #0x40]
	asrs r0, r0, #8
	mov r8, r0
	ldr r0, [r7, #0x44]
	asrs r5, r0, #8
	adds r0, r3, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0x50
	bne _0810727E
	adds r5, #0x20
_0810727E:
	movs r4, #0
	ldr r1, _081072A4 @ =gUnk_020229D4
	ldr r2, [r1]
	adds r0, r2, #0
	movs r6, #1
	ands r0, r6
	ldr r6, _081072A8 @ =gUnk_020229E0
	mov ip, r6
	adds r3, #0x87
	mov sb, r3
	movs r3, #0x56
	adds r3, r3, r7
	mov sl, r3
	cmp r0, #0
	bne _081072AC
	movs r6, #1
	orrs r2, r6
	b _081072C6
	.align 2, 0
_081072A4: .4byte gUnk_020229D4
_081072A8: .4byte gUnk_020229E0
_081072AC:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _081072C8
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	cmp r0, #0
	bne _081072AC
	orrs r2, r3
_081072C6:
	str r2, [r1]
_081072C8:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	add r1, ip
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, r8
	strh r0, [r1, #6]
	strh r5, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0x30
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r5, sb
	ldrb r0, [r5]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r6, sl
	ldrb r0, [r6]
	bl CreateObject
	str r7, [r0, #0x70]
	adds r3, r0, #0
	ldr r0, [r7, #8]
	ands r0, r4
	cmp r0, #0
	beq _08107328
	ldr r0, [r3, #8]
	orrs r0, r4
	str r0, [r3, #8]
_08107328:
	adds r0, r3, #0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start CreateExplosion
CreateExplosion: @ 0x08107338
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _0810736C @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08107370 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb8
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08107374
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r6, r0, r1
	b _0810737C
	.align 2, 0
_0810736C: .4byte ObjectMain
_08107370: .4byte ObjectDestroy
_08107374:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
_0810737C:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	adds r0, r6, #0
	adds r0, #0xb4
	movs r2, #0
	str r2, [r0]
	ldr r0, [r6, #0xc]
	movs r1, #1
	orrs r0, r1
	movs r5, #4
	orrs r0, r5
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r6, #0xc]
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	orrs r0, r1
	str r0, [r6, #8]
	ldr r0, [r6, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	str r0, [r6, #0x5c]
	adds r0, r6, #0
	adds r0, #0x9e
	strb r2, [r0]
	ldr r0, _08107404 @ =sub_0810A034
	str r0, [r6, #0x7c]
	movs r4, #4
	rsbs r4, r4, #0
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #4
	bl sub_0803E2B0
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #4
	bl sub_0803E308
	adds r0, r6, #0
	bl ObjectInitSprite
	movs r0, #0xc0
	lsls r0, r0, #3
	strh r0, [r6, #0x24]
	adds r0, r6, #0
	bl sub_081099A4
	movs r0, #0xc8
	strh r0, [r6, #4]
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08107404: .4byte sub_0810A034

	thumb_func_start sub_08107408
sub_08107408: @ 0x08107408
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	adds r7, r4, #0
	ldr r2, [r4, #8]
	movs r0, #4
	orrs r2, r0
	str r2, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x62
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	beq _08107444
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08107444
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r2, r0
	movs r0, #0x40
	orrs r2, r0
	str r2, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #1
	strb r0, [r1]
_08107444:
	ldr r0, [r4, #8]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0810753C
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	ble _08107466
	strh r2, [r1]
_08107466:
	ldr r0, [r4, #0x44]
	movs r2, #0xb0
	lsls r2, r2, #7
	cmp r0, r2
	bgt _08107476
	str r2, [r4, #0x44]
	movs r0, #0
	strh r0, [r1]
_08107476:
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0
	bne _0810753C
	adds r0, r4, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	bne _0810751A
	ldr r2, _08107544 @ =0x00000233
	adds r0, r4, #0
	movs r1, #0x30
	movs r3, #0
	bl sub_0808AE30
	adds r1, r5, #0
	adds r1, #0x2f
	ldrb r1, [r1]
	adds r2, r0, #0
	adds r2, #0x2b
	strb r1, [r2]
	movs r1, #0xd8
	lsls r1, r1, #3
	strh r1, [r0, #0x20]
	adds r0, #0x28
	movs r1, #8
	strb r1, [r0]
	ldr r1, _08107548 @ =gUnk_02020EE0
	ldr r0, _0810754C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810751A
	ldrb r0, [r4]
	cmp r0, #0
	bne _081074DA
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810751A
_081074DA:
	ldr r1, _08107550 @ =gUnk_08D60FA4
	ldr r5, _08107554 @ =gSongTable
	ldr r2, _08107558 @ =0x00000D74
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08107500
	movs r1, #0xd7
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810751A
_08107500:
	cmp r3, #0
	beq _08107512
	ldr r0, _0810755C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810751A
_08107512:
	movs r0, #0xd7
	lsls r0, r0, #1
	bl m4aSongNumStart
_0810751A:
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3a
	bls _0810753C
	adds r0, r4, #0
	movs r1, #0
	bl sub_08086938
	adds r1, r7, #0
	adds r1, #0xb4
	str r0, [r1]
	adds r0, r4, #0
	bl sub_08109F90
_0810753C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08107544: .4byte 0x00000233
_08107548: .4byte gUnk_02020EE0
_0810754C: .4byte gUnk_0203AD3C
_08107550: .4byte gUnk_08D60FA4
_08107554: .4byte gSongTable
_08107558: .4byte 0x00000D74
_0810755C: .4byte gUnk_0203AD10

	thumb_func_start sub_08107560
sub_08107560: @ 0x08107560
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r2, r5, #0
	adds r2, #0x83
	ldrb r1, [r2]
	cmp r1, #2
	bne _0810757E
	ldr r0, [r5, #8]
	ands r0, r1
	cmp r0, #0
	beq _08107586
	movs r0, #3
	strb r0, [r2]
	b _08107586
_0810757E:
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
_08107586:
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r6, r0, #0x10
	cmp r6, #0
	bne _081075D0
	adds r0, r5, #0
	bl sub_08107844
	adds r4, #0xb4
	ldr r0, [r4]
	movs r1, #0
	bl sub_08086A28
	str r6, [r4]
	adds r0, r5, #0
	bl sub_08109FBC
	ldr r1, _081075D8 @ =gUnk_08357268
	adds r0, r5, #0
	bl sub_080860A8
	adds r0, r5, #0
	bl sub_08108280
	adds r0, r5, #0
	bl sub_08108960
	adds r0, r5, #0
	movs r1, #0
	bl sub_08109304
	adds r0, r5, #0
	movs r1, #1
	bl sub_08109304
_081075D0:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_081075D8: .4byte gUnk_08357268

	thumb_func_start sub_081075DC
sub_081075DC: @ 0x081075DC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r5, r0, #0
	mov ip, r5
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r7, r0, #8
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov sb, r0
	movs r4, #0
	ldr r1, _0810761C @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	movs r6, #0x56
	adds r6, r6, r5
	mov sl, r6
	movs r6, #0xc0
	add r6, ip
	mov r8, r6
	mov r6, ip
	adds r6, #0xc4
	str r6, [sp, #4]
	b _08107634
	.align 2, 0
_0810761C: .4byte gUnk_020229D4
_08107620:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _0810763C
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_08107634:
	cmp r0, #0
	bne _08107620
	orrs r2, r3
	str r2, [r1]
_0810763C:
	ldr r0, _081076C8 @ =gUnk_020229E0
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r0
	movs r4, #0
	movs r6, #1
	strb r6, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r2, #0
	strh r7, [r1, #6]
	mov r0, sb
	strh r0, [r1, #8]
	strb r2, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r2, [r1, #4]
	strb r2, [r1, #5]
	movs r0, #0xcf
	strb r0, [r1, #0xc]
	strb r2, [r1, #0xe]
	strb r2, [r1, #0xf]
	strb r2, [r1, #0x10]
	strh r4, [r1, #0x22]
	strh r4, [r1, #0x1a]
	strh r4, [r1, #0x1c]
	strh r4, [r1, #0x1e]
	strh r4, [r1, #0x20]
	strb r2, [r1, #0x11]
	strh r4, [r1, #0x12]
	strh r4, [r1, #0x14]
	strh r4, [r1, #0x16]
	strh r4, [r1, #0x18]
	mov r2, sl
	ldrb r0, [r2]
	bl CreateObject
	adds r3, r0, #0
	str r5, [r3, #0x70]
	mov r0, r8
	str r3, [r0]
	adds r1, r3, #0
	adds r1, #0x50
	movs r0, #0xb8
	lsls r0, r0, #6
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x52
	strh r4, [r0]
	movs r1, #8
	rsbs r1, r1, #0
	movs r2, #6
	rsbs r2, r2, #0
	movs r0, #0xa
	str r0, [sp]
	adds r0, r3, #0
	movs r3, #8
	bl sub_0803E2B0
	ldr r2, _081076CC @ =gUnk_020229D4
	ldr r1, [r2]
	adds r0, r1, #0
	ands r0, r6
	cmp r0, #0
	bne _081076D0
	orrs r1, r6
	str r1, [r2]
	b _081076EE
	.align 2, 0
_081076C8: .4byte gUnk_020229E0
_081076CC: .4byte gUnk_020229D4
_081076D0:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _081076EE
	ldr r3, _08107778 @ =gUnk_020229D4
	movs r2, #1
	lsls r2, r4
	ldr r1, [r3]
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _081076D0
	orrs r1, r2
	str r1, [r3]
_081076EE:
	ldr r0, _0810777C @ =gUnk_020229E0
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r0
	movs r4, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r2, #0
	strh r7, [r1, #6]
	mov r6, sb
	strh r6, [r1, #8]
	strb r2, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r2, [r1, #4]
	strb r2, [r1, #5]
	movs r0, #0xcf
	strb r0, [r1, #0xc]
	strb r2, [r1, #0xe]
	strb r2, [r1, #0xf]
	strb r2, [r1, #0x10]
	strh r4, [r1, #0x22]
	strh r4, [r1, #0x1a]
	strh r4, [r1, #0x1c]
	strh r4, [r1, #0x1e]
	strh r4, [r1, #0x20]
	strb r2, [r1, #0x11]
	strh r4, [r1, #0x12]
	strh r4, [r1, #0x14]
	strh r4, [r1, #0x16]
	strh r4, [r1, #0x18]
	mov r2, sl
	ldrb r0, [r2]
	bl CreateObject
	adds r3, r0, #0
	str r5, [r3, #0x70]
	ldr r6, [sp, #4]
	str r3, [r6]
	adds r1, r3, #0
	adds r1, #0x50
	movs r0, #0xd4
	lsls r0, r0, #8
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x52
	strh r4, [r0]
	movs r1, #0xa
	rsbs r1, r1, #0
	movs r2, #4
	rsbs r2, r2, #0
	movs r0, #0xc
	str r0, [sp]
	adds r0, r3, #0
	movs r3, #6
	bl sub_0803E2B0
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08107778: .4byte gUnk_020229D4
_0810777C: .4byte gUnk_020229E0

	thumb_func_start sub_08107780
sub_08107780: @ 0x08107780
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _081077B4 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _081077B8 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081077BC
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _081077C4
	.align 2, 0
_081077B4: .4byte ObjectMain
_081077B8: .4byte ObjectDestroy
_081077BC:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_081077C4:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	adds r1, #0xc0
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0x12
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r0, [r4, #0x5c]
	movs r2, #8
	rsbs r2, r2, #0
	ands r0, r2
	movs r1, #7
	orrs r0, r1
	ldr r1, _0810783C @ =0x0000FFFF
	orrs r0, r1
	str r0, [r4, #0x5c]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _08107840 @ =sub_0809F840
	str r0, [r4, #0x7c]
	movs r0, #8
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r2, #0
	movs r3, #8
	bl sub_0803E2B0
	adds r0, r4, #0
	bl ObjectInitSprite
	adds r0, r4, #0
	bl sub_081099C0
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0810783C: .4byte 0x0000FFFF
_08107840: .4byte sub_0809F840

	thumb_func_start sub_08107844
sub_08107844: @ 0x08107844
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, _08107874 @ =sub_0810792C
	movs r2, #0xd4
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08107878
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _08107880
	.align 2, 0
_08107874: .4byte sub_0810792C
_08107878:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_08107880:
	adds r0, r4, #0
	bl sub_0803E380
	movs r3, #0
	movs r0, #2
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	str r5, [r4, #0x70]
	strh r3, [r4, #4]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x60
	strh r1, [r0]
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _08107920 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r5, #1
	adds r0, r5, #0
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _081078D0
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
_081078D0:
	adds r0, r4, #0
	adds r0, #0x64
	strh r3, [r0]
	adds r0, #2
	strh r3, [r0]
	subs r0, #3
	strb r5, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x15
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x68]
	ldr r1, _08107924 @ =0x20000043
	orrs r0, r1
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	ldr r1, _08107928 @ =0x0000FFFF
	orrs r0, r1
	str r0, [r4, #0x5c]
	movs r1, #0x78
	rsbs r1, r1, #0
	movs r2, #0x50
	rsbs r2, r2, #0
	movs r0, #0x50
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0x78
	bl sub_0803E2B0
	movs r0, #4
	strh r0, [r4, #4]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08107920: .4byte gUnk_03000510
_08107924: .4byte 0x20000043
_08107928: .4byte 0x0000FFFF

	thumb_func_start sub_0810792C
sub_0810792C: @ 0x0810792C
	push {r4, r5, r6, lr}
	ldr r2, _08107948 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0810794C
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08107954
	.align 2, 0
_08107948: .4byte gCurTask
_0810794C:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08107954:
	adds r4, r0, #0
	ldr r6, [r4, #0x70]
	ldr r1, [r4, #8]
	movs r5, #0x80
	lsls r5, r5, #5
	adds r0, r1, #0
	ands r0, r5
	cmp r0, #0
	beq _0810796E
	ldr r0, [r2]
	bl TaskDestroy
	b _08107A3A
_0810796E:
	ldr r0, [r6, #8]
	ands r0, r5
	cmp r0, #0
	beq _0810797C
	orrs r1, r5
	str r1, [r4, #8]
	b _08107A3A
_0810797C:
	adds r0, r4, #0
	bl sub_0806F780
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08107A3A
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0810799C
	ldr r0, [r4, #8]
	orrs r0, r5
	str r0, [r4, #8]
	b _08107A3A
_0810799C:
	ldr r0, [r4, #8]
	movs r1, #0x90
	lsls r1, r1, #5
	ands r0, r1
	ldr r5, _081079C8 @ =gCurLevelInfo
	cmp r0, #0
	bne _08107A0A
	adds r1, r4, #0
	adds r1, #0x56
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _081079D0
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r5
	ldr r1, _081079CC @ =0x0000065E
	adds r0, r0, r1
	ldrb r1, [r0]
	b _081079D2
	.align 2, 0
_081079C8: .4byte gCurLevelInfo
_081079CC: .4byte 0x0000065E
_081079D0:
	movs r1, #0xff
_081079D2:
	cmp r1, #0xff
	beq _08107A0A
	lsls r3, r1, #6
	ldrb r0, [r4]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _08107A40 @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r2, [r4]
	adds r1, r1, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08107A44 @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r4, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_08107A0A:
	adds r3, r6, #0
	adds r3, #0x56
	ldrb r0, [r3]
	movs r2, #0xcd
	lsls r2, r2, #3
	muls r0, r2, r0
	adds r1, r5, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0xf0
	lsls r1, r1, #7
	adds r0, r0, r1
	str r0, [r4, #0x40]
	ldrb r0, [r3]
	muls r0, r2, r0
	adds r1, r5, #0
	adds r1, #0x10
	adds r0, r0, r1
	ldr r0, [r0]
	movs r2, #0xa0
	lsls r2, r2, #7
	adds r0, r0, r2
	str r0, [r4, #0x44]
_08107A3A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08107A40: .4byte gUnk_02022EB0
_08107A44: .4byte gUnk_02022F50

	thumb_func_start sub_08107A48
sub_08107A48: @ 0x08107A48
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r4, r0, #0
	ldr r0, _08107A7C @ =sub_08107BA8
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _08107A80 @ =sub_0810A104
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08107A84
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08107A8C
	.align 2, 0
_08107A7C: .4byte sub_08107BA8
_08107A80: .4byte sub_0810A104
_08107A84:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08107A8C:
	adds r5, r0, #0
	bl sub_0803E380
	movs r3, #0
	movs r0, #2
	strb r0, [r5]
	ldr r0, [r4, #0x40]
	str r0, [r5, #0x40]
	ldr r0, [r4, #0x44]
	str r0, [r5, #0x44]
	str r4, [r5, #0x70]
	movs r7, #0
	strh r3, [r5, #4]
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r0, [r0]
	movs r1, #0x60
	adds r1, r1, r5
	mov r8, r1
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r1, #0x56
	strb r0, [r1]
	ldr r0, _08107B7C @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08107ADE
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r5, #8]
_08107ADE:
	adds r0, r5, #0
	adds r0, #0x63
	strb r7, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #0x15
	orrs r0, r1
	str r0, [r5, #8]
	movs r0, #0x80
	str r0, [r5, #0x68]
	ldr r0, [r5, #0x5c]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x5c]
	movs r0, #0x80
	lsls r0, r0, #8
	str r0, [r5, #0x40]
	str r3, [r5, #0x44]
	movs r4, #4
	rsbs r4, r4, #0
	movs r0, #4
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #4
	bl sub_0803E2B0
	movs r0, #8
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #4
	bl sub_0803E308
	adds r1, r5, #0
	adds r1, #0x10
	ldr r6, _08107B80 @ =0x000002C3
	movs r0, #3
	str r0, [sp]
	movs r0, #0x1a
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r2, #0x10
	adds r3, r6, #0
	bl sub_080708DC
	adds r4, r5, #0
	adds r4, #0x2f
	strb r7, [r4]
	ldr r2, _08107B84 @ =gUnk_02020EE0
	ldr r0, _08107B88 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, r8
	ldrh r2, [r2]
	cmp r0, r2
	bne _08107B8C
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08107B8E
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08107B8E
	.align 2, 0
_08107B7C: .4byte gUnk_03000510
_08107B80: .4byte 0x000002C3
_08107B84: .4byte gUnk_02020EE0
_08107B88: .4byte gUnk_0203AD3C
_08107B8C:
	strb r7, [r4]
_08107B8E:
	ldr r1, _08107BA4 @ =gUnk_0203AD34
	movs r0, #1
	strb r0, [r1]
	adds r0, r5, #0
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08107BA4: .4byte gUnk_0203AD34

	thumb_func_start sub_08107BA8
sub_08107BA8: @ 0x08107BA8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r0, _08107BCC @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08107BD0
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08107BD8
	.align 2, 0
_08107BCC: .4byte gCurTask
_08107BD0:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08107BD8:
	adds r5, r0, #0
	ldr r0, [r5, #0x70]
	mov r8, r0
	ldr r2, _08107C48 @ =gUnk_02020EE0
	ldr r0, _08107C4C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08107C90
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _08107C58
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _08107CB4
	ldrh r1, [r5, #0x1c]
	adds r0, r5, #0
	adds r0, #0x2a
	ldrb r2, [r0]
	movs r0, #0x10
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _08107C50 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _08107C54 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _08107CB4
	.align 2, 0
_08107C48: .4byte gUnk_02020EE0
_08107C4C: .4byte gUnk_0203AD3C
_08107C50: .4byte 0xFFF7FFFF
_08107C54: .4byte 0x0400000A
_08107C58:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _08107CB4
	movs r0, #0x10
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0x10
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x18]
	ldr r1, _08107C88 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _08107C8C @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _08107CB4
	.align 2, 0
_08107C88: .4byte 0xFFF7FFFF
_08107C8C: .4byte 0x0400000A
_08107C90:
	ldr r1, [r5, #0x10]
	cmp r1, #0
	beq _08107CAA
	ldr r4, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r4, r0
	cmp r4, #0
	bne _08107CAA
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0x10]
_08107CAA:
	ldr r0, [r5, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x18]
_08107CB4:
	ldr r2, _08107CFC @ =gUnk_02020EE0
	ldr r0, _08107D00 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r1, [r7]
	cmp r0, r1
	bne _08107D08
	adds r4, r5, #0
	adds r4, #0x2f
	ldrb r0, [r4]
	cmp r0, #0
	bne _08107D10
	ldr r6, _08107D04 @ =0x000002C3
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08107D10
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08107D10
	.align 2, 0
_08107CFC: .4byte gUnk_02020EE0
_08107D00: .4byte gUnk_0203AD3C
_08107D04: .4byte 0x000002C3
_08107D08:
	adds r1, r5, #0
	adds r1, #0x2f
	movs r0, #0
	strb r0, [r1]
_08107D10:
	mov r2, r8
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	bne _08107D2A
	mov r0, r8
	adds r0, #0x60
	ldrh r1, [r0]
	ldr r0, _08107D78 @ =0x0000FFFF
	cmp r1, r0
	bne _08107D2E
_08107D2A:
	ldr r0, _08107D78 @ =0x0000FFFF
	strh r0, [r7]
_08107D2E:
	adds r0, r5, #0
	bl sub_0806F780
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08107D3C
	b _08107EB2
_08107D3C:
	ldr r1, [r5, #8]
	movs r0, #4
	orrs r1, r0
	str r1, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08107DBE
	movs r0, #0x90
	lsls r0, r0, #5
	ands r1, r0
	cmp r1, #0
	bne _08107DBE
	adds r1, r5, #0
	adds r1, #0x56
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _08107D84
	ldr r2, _08107D7C @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _08107D80 @ =0x0000065E
	adds r0, r0, r1
	ldrb r1, [r0]
	b _08107D86
	.align 2, 0
_08107D78: .4byte 0x0000FFFF
_08107D7C: .4byte gCurLevelInfo
_08107D80: .4byte 0x0000065E
_08107D84:
	movs r1, #0xff
_08107D86:
	cmp r1, #0xff
	beq _08107DBE
	lsls r3, r1, #6
	ldrb r0, [r5]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _08107EC0 @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r2, [r5]
	adds r1, r1, r2
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08107EC4 @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r5, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_08107DBE:
	ldr r6, [r5, #8]
	movs r7, #0x80
	lsls r7, r7, #1
	ands r6, r7
	cmp r6, #0
	bne _08107E32
	adds r4, r5, #0
	adds r4, #0x52
	ldrh r0, [r4]
	subs r0, #0x20
	strh r0, [r4]
	lsls r0, r0, #0x10
	movs r1, #0xfd
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _08107DE4
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r4]
_08107DE4:
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	bne _08107E08
	adds r0, r5, #0
	adds r0, #0x50
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	str r0, [r5, #0x40]
	movs r0, #0
	ldrsh r1, [r4, r0]
	ldr r0, [r5, #0x44]
	subs r0, r0, r1
	str r0, [r5, #0x44]
_08107E08:
	adds r0, r5, #0
	bl sub_0809D8C8
	adds r0, r5, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r2, #4
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _08107E32
	adds r0, r5, #0
	adds r0, #0x2a
	strb r2, [r0]
	ldr r0, [r5, #8]
	orrs r0, r7
	str r0, [r5, #8]
	strh r6, [r4]
	adds r0, r5, #0
	bl sub_08107ED4
_08107E32:
	adds r0, r5, #0
	bl sub_0806F8BC
	ldr r1, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #0xb
	ands r0, r1
	cmp r0, #0
	beq _08107EB2
	ldr r2, [r5, #0x6c]
	ldr r0, _08107EC8 @ =0xFFFBFFFF
	ands r1, r0
	str r1, [r5, #8]
	cmp r2, #0
	beq _08107EB2
	ldrb r0, [r2]
	cmp r0, #0
	bne _08107EB2
	adds r0, r2, #0
	adds r0, #0x56
	ldr r1, _08107ECC @ =gUnk_0203AD30
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bhs _08107EB2
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r2, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _08107EB2
	adds r4, r2, #0
	adds r4, #0xd4
	ldrh r0, [r4]
	cmp r0, #0x27
	beq _08107EB2
	cmp r0, #0x7a
	bhi _08107EB2
	adds r1, #0x10
	adds r0, r2, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08107EB2
	ldr r0, [r2, #8]
	ldr r1, _08107ED0 @ =0x03800B00
	ands r0, r1
	cmp r0, #0
	bne _08107EB2
	adds r1, r2, #0
	adds r1, #0xdd
	movs r0, #0x1a
	strb r0, [r1]
	adds r0, r2, #0
	bl sub_08054C0C
	movs r0, #0xf
	strh r0, [r4]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r5, #8]
_08107EB2:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08107EC0: .4byte gUnk_02022EB0
_08107EC4: .4byte gUnk_02022F50
_08107EC8: .4byte 0xFFFBFFFF
_08107ECC: .4byte gUnk_0203AD30
_08107ED0: .4byte 0x03800B00

	thumb_func_start sub_08107ED4
sub_08107ED4: @ 0x08107ED4
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r0, #0
	ldr r0, _08107F04 @ =sub_08107FC4
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _08107F08 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08107F0C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r5, r0, r1
	b _08107F14
	.align 2, 0
_08107F04: .4byte sub_08107FC4
_08107F08: .4byte sub_0803DCCC
_08107F0C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
_08107F14:
	adds r0, r5, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r5]
	ldr r0, [r4, #0x40]
	str r0, [r5, #0x34]
	ldr r0, [r4, #0x44]
	str r0, [r5, #0x38]
	str r4, [r5, #0x44]
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r6, r5, #0
	adds r6, #0x42
	movs r7, #0
	strh r0, [r6]
	ldr r0, [r5, #0x38]
	ldr r1, _08107FA0 @ =0xFFFFD800
	adds r0, r0, r1
	str r0, [r5, #0x38]
	adds r1, r5, #0
	adds r1, #0xc
	ldr r4, _08107FA4 @ =gUnk_083572D0
	ldr r0, _08107FA8 @ =gUnk_08D60A80
	ldrh r0, [r0]
	lsls r0, r0, #2
	adds r2, r0, r4
	ldrh r3, [r2]
	adds r4, #2
	adds r0, r0, r4
	ldrb r0, [r0]
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r2, #0x14
	bl sub_080709F8
	adds r4, r5, #0
	adds r4, #0x2b
	strb r7, [r4]
	ldr r2, _08107FAC @ =gUnk_02020EE0
	ldr r0, _08107FB0 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r6]
	cmp r0, r6
	bne _08107FB8
	ldr r5, _08107FB4 @ =0x000002C3
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08107FBA
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08107FBA
	.align 2, 0
_08107FA0: .4byte 0xFFFFD800
_08107FA4: .4byte gUnk_083572D0
_08107FA8: .4byte gUnk_08D60A80
_08107FAC: .4byte gUnk_02020EE0
_08107FB0: .4byte gUnk_0203AD3C
_08107FB4: .4byte 0x000002C3
_08107FB8:
	strb r7, [r4]
_08107FBA:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08107FC4
sub_08107FC4: @ 0x08107FC4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x28
	ldr r2, _08107FE4 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08107FE8
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08107FF0
	.align 2, 0
_08107FE4: .4byte gCurTask
_08107FE8:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08107FF0:
	adds r5, r0, #0
	ldr r0, [r5, #0x44]
	adds r0, #0x2f
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r1, #0x2b
	strb r0, [r1]
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _08108014
	ldr r0, [r2]
	bl TaskDestroy
	b _0810826C
_08108014:
	ldr r0, [r5, #0x44]
	ldr r0, [r0, #8]
	ands r0, r1
	cmp r0, #0
	beq _08108026
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _0810826C
_08108026:
	ldr r2, _08108090 @ =gUnk_02020EE0
	ldr r0, _08108094 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r1, [r7]
	cmp r0, r1
	bne _081080D8
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _081080A0
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _081080FE
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x14
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _08108098 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _0810809C @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _081080FE
	.align 2, 0
_08108090: .4byte gUnk_02020EE0
_08108094: .4byte gUnk_0203AD3C
_08108098: .4byte 0xFFF7FFFF
_0810809C: .4byte 0x0400000A
_081080A0:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _081080FE
	movs r0, #0x14
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _081080D0 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _081080D4 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _081080FE
	.align 2, 0
_081080D0: .4byte 0xFFF7FFFF
_081080D4: .4byte 0x0400000A
_081080D8:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _081080F4
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _081080F4
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_081080F4:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_081080FE:
	ldr r2, _08108140 @ =gUnk_02020EE0
	ldr r0, _08108144 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r2, [r7]
	cmp r0, r2
	bne _0810814C
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _08108154
	ldr r6, _08108148 @ =0x000002C3
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08108154
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08108154
	.align 2, 0
_08108140: .4byte gUnk_02020EE0
_08108144: .4byte gUnk_0203AD3C
_08108148: .4byte 0x000002C3
_0810814C:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_08108154:
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _081081A8
	ldrb r0, [r3]
	cmp r0, #0
	beq _08108172
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _08108172
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_08108172:
	cmp r3, #0
	beq _081081A8
	ldr r0, _081081A4 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08108214
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08108214
	adds r0, r5, #0
	bl sub_0803DBC8
	b _0810826C
	.align 2, 0
_081081A4: .4byte gUnk_03000510
_081081A8:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _0810820C @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _081081E6
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _081081E6
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _081081E6
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _081081E6
	movs r3, #4
_081081E6:
	ldr r0, _08108210 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08108214
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08108214
	adds r0, r4, #0
	bl sub_0803DBC8
	b _0810826C
	.align 2, 0
_0810820C: .4byte gUnk_02020EE0
_08108210: .4byte gUnk_03000510
_08108214:
	ldr r0, _08108274 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r0, #0
	beq _08108254
	ldr r6, _08108278 @ =gCurLevelInfo
	ldrh r3, [r7]
	ldr r4, _0810827C @ =gUnk_02026D50
_08108222:
	subs r2, r0, #1
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r1, r0, r6
	movs r7, #0xbf
	lsls r7, r7, #3
	adds r0, r1, r7
	ldrh r0, [r0]
	cmp r0, r3
	bne _0810824C
	adds r7, #0x66
	adds r0, r1, r7
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08108266
_0810824C:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _08108222
_08108254:
	movs r0, #1
	cmp r0, #0
	beq _08108266
	ldrh r1, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
_08108266:
	adds r0, r5, #0
	bl sub_0806FAC8
_0810826C:
	add sp, #0x28
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08108274: .4byte gUnk_0203AD44
_08108278: .4byte gCurLevelInfo
_0810827C: .4byte gUnk_02026D50

	thumb_func_start sub_08108280
sub_08108280: @ 0x08108280
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _081082B0 @ =sub_08108368
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _081082B4 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081082B8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _081082C0
	.align 2, 0
_081082B0: .4byte sub_08108368
_081082B4: .4byte sub_0803DCCC
_081082B8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_081082C0:
	adds r0, r4, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r6, r4, #0
	adds r6, #0x42
	movs r7, #0
	strh r0, [r6]
	ldr r0, [r4, #0x38]
	ldr r1, _08108348 @ =0xFFFFC000
	adds r0, r0, r1
	str r0, [r4, #0x38]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r3, _0810834C @ =0x00000399
	movs r0, #0xf
	str r0, [sp]
	movs r0, #0x19
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x30
	bl sub_080709F8
	adds r5, r4, #0
	adds r5, #0x2b
	strb r7, [r5]
	movs r0, #0xe
	strh r0, [r4, #4]
	ldr r2, _08108350 @ =gUnk_02020EE0
	ldr r0, _08108354 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r6]
	cmp r0, r6
	bne _0810835C
	ldrb r0, [r5]
	cmp r0, #0
	bne _0810835E
	ldr r4, _08108358 @ =0x0000039A
	adds r0, r4, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _0810835E
	adds r0, r4, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _0810835E
	.align 2, 0
_08108348: .4byte 0xFFFFC000
_0810834C: .4byte 0x00000399
_08108350: .4byte gUnk_02020EE0
_08108354: .4byte gUnk_0203AD3C
_08108358: .4byte 0x0000039A
_0810835C:
	strb r7, [r5]
_0810835E:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08108368
sub_08108368: @ 0x08108368
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	ldr r2, _08108390 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08108394
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0810839C
	.align 2, 0
_08108390: .4byte gCurTask
_08108394:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0810839C:
	adds r6, r0, #0
	ldr r7, [r6, #0x44]
	ldrh r3, [r6, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _081083B6
	ldr r0, [r2]
	bl TaskDestroy
	b _0810894E
_081083B6:
	ldr r0, [r7, #8]
	ands r0, r1
	cmp r0, #0
	beq _081083C6
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r6, #6]
	b _0810894E
_081083C6:
	ldr r2, _08108430 @ =gUnk_02020EE0
	ldr r0, _08108434 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x42
	ldrh r0, [r0]
	mov sb, r1
	ldrh r1, [r1]
	cmp r0, r1
	bne _08108478
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _08108440
	ldr r0, [r6, #0xc]
	cmp r0, #0
	bne _0810849E
	ldrh r1, [r6, #0x18]
	adds r0, r6, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x30
	bl sub_0803DE54
	adds r4, r6, #0
	adds r4, #0xc
	str r0, [r6, #0xc]
	ldr r0, [r6, #0x14]
	ldr r1, _08108438 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _0810843C @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r6, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _0810849E
	.align 2, 0
_08108430: .4byte gUnk_02020EE0
_08108434: .4byte gUnk_0203AD3C
_08108438: .4byte 0xFFF7FFFF
_0810843C: .4byte 0x0400000A
_08108440:
	ldr r0, [r6, #0xc]
	cmp r0, #0
	bne _0810849E
	movs r0, #0x30
	bl sub_081570B0
	adds r3, r6, #0
	adds r3, #0xc
	str r0, [r6, #0xc]
	ldr r0, [r6, #0x14]
	ldr r1, _08108470 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _08108474 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r6, #1]
	mov r0, sp
	bl sub_0815521C
	b _0810849E
	.align 2, 0
_08108470: .4byte 0xFFF7FFFF
_08108474: .4byte 0x0400000A
_08108478:
	ldr r1, [r6, #0xc]
	cmp r1, #0
	beq _08108494
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _08108494
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r6, #0xc]
_08108494:
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r6, #0x14]
_0810849E:
	ldr r2, _081084E0 @ =gUnk_02020EE0
	ldr r0, _081084E4 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, sb
	ldrh r2, [r2]
	cmp r0, r2
	bne _081084EC
	adds r4, r6, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _081084F4
	ldr r5, _081084E8 @ =0x0000039A
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _081084F4
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _081084F4
	.align 2, 0
_081084E0: .4byte gUnk_02020EE0
_081084E4: .4byte gUnk_0203AD3C
_081084E8: .4byte 0x0000039A
_081084EC:
	adds r1, r6, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_081084F4:
	ldr r0, _081085A0 @ =gUnk_0203AD44
	ldrb r0, [r0]
	ldr r4, _081085A4 @ =gUnk_03000510
	mov ip, r4
	movs r5, #0x56
	adds r5, r5, r7
	mov r8, r5
	cmp r0, #0
	beq _08108544
	ldr r1, _081085A8 @ =gCurLevelInfo
	mov sl, r1
	mov r2, sb
	ldrh r3, [r2]
	ldr r4, _081085AC @ =gUnk_02026D50
_08108510:
	subs r2, r0, #1
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	mov r5, sl
	adds r1, r0, r5
	movs r5, #0xbf
	lsls r5, r5, #3
	adds r0, r1, r5
	ldrh r0, [r0]
	cmp r0, r3
	bne _0810853C
	adds r5, #0x66
	adds r0, r1, r5
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08108556
_0810853C:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _08108510
_08108544:
	movs r0, #1
	cmp r0, #0
	beq _08108556
	ldrh r1, [r6, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r6, #6]
_08108556:
	ldr r0, [r7, #0x40]
	str r0, [r6, #0x34]
	ldr r0, [r7, #0x44]
	str r0, [r6, #0x38]
	mov r4, ip
	ldrb r2, [r4, #4]
	movs r3, #1
	adds r0, r3, #0
	mov r5, r8
	ldrb r5, [r5]
	lsls r0, r5
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08108584
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	bne _08108584
	b _081086D6
_08108584:
	ldrh r0, [r6, #4]
	subs r0, #1
	movs r2, #0
	strh r0, [r6, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _081085B0
	ldrh r0, [r6, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r6, #6]
	b _0810894E
	.align 2, 0
_081085A0: .4byte gUnk_0203AD44
_081085A4: .4byte gUnk_03000510
_081085A8: .4byte gCurLevelInfo
_081085AC: .4byte gUnk_02026D50
_081085B0:
	ldrh r0, [r6, #6]
	movs r1, #4
	orrs r0, r1
	orrs r0, r2
	strh r0, [r6, #6]
	ands r0, r3
	cmp r0, #0
	beq _081085CE
	adds r0, r6, #0
	adds r0, #0xc
	ldr r1, [r6, #0x14]
	movs r2, #0x80
	lsls r2, r2, #3
	orrs r1, r2
	b _081085D8
_081085CE:
	adds r0, r6, #0
	adds r0, #0xc
	ldr r1, [r6, #0x14]
	ldr r2, _08108660 @ =0xFFFFFBFF
	ands r1, r2
_081085D8:
	str r1, [r0, #8]
	adds r4, r0, #0
	ldrh r5, [r6, #6]
	movs r0, #8
	ands r0, r5
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	movs r0, #0x28
	adds r0, r0, r6
	mov r8, r0
	cmp r3, #0
	bne _0810867E
	adds r0, r6, #0
	adds r0, #0x27
	adds r2, r6, #0
	adds r2, #0x26
	ldrb r1, [r0]
	adds r7, r0, #0
	ldrb r2, [r2]
	cmp r1, r2
	bne _0810860A
	ldrh r0, [r6, #0x24]
	ldrh r1, [r6, #0x18]
	cmp r0, r1
	beq _08108620
_0810860A:
	adds r0, r6, #0
	adds r0, #0x28
	ldrb r1, [r0]
	mov r8, r0
	cmp r1, #0
	beq _08108620
	strb r3, [r6, #1]
	strh r3, [r6, #2]
	ldr r0, _08108664 @ =0x0000FFFB
	ands r0, r5
	strh r0, [r6, #6]
_08108620:
	adds r0, r4, #0
	bl sub_08155128
	adds r2, r0, #0
	cmp r2, #0
	bne _08108668
	ldrh r0, [r6, #6]
	movs r1, #2
	movs r3, #0
	orrs r1, r0
	strh r1, [r6, #6]
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _0810867E
	mov r5, r8
	ldrb r0, [r5]
	cmp r0, #0
	beq _0810867E
	movs r0, #0xff
	strb r0, [r7]
	ldrh r1, [r6, #6]
	ldr r0, _08108664 @ =0x0000FFFB
	ands r0, r1
	strh r0, [r6, #6]
	strb r3, [r6, #1]
	strh r2, [r6, #2]
	adds r0, r4, #0
	bl sub_08155128
	b _0810867E
	.align 2, 0
_08108660: .4byte 0xFFFFFBFF
_08108664: .4byte 0x0000FFFB
_08108668:
	mov r0, r8
	ldrb r1, [r0]
	ldrh r0, [r6, #2]
	adds r0, r0, r1
	strh r0, [r6, #2]
	lsrs r0, r0, #4
	strb r0, [r6, #1]
	ldrh r1, [r6, #6]
	ldr r0, _08108754 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r6, #6]
_0810867E:
	ldr r2, [r6, #0x34]
	asrs r2, r2, #8
	ldr r3, _08108758 @ =gCurLevelInfo
	ldr r5, _0810875C @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	adds r7, r6, #0
	adds r7, #0x40
	movs r0, #0
	ldrsb r0, [r7, r0]
	adds r0, r0, r2
	movs r1, #0
	mov ip, r1
	strh r0, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r1, r1, r0
	adds r2, r6, #0
	adds r2, #0x41
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r0, r1
	strh r0, [r6, #0x1e]
	mov r4, r8
	ldrb r0, [r4]
	cmp r0, #0
	beq _081086D6
	mov r5, ip
	strb r5, [r7]
	strb r5, [r2]
_081086D6:
	ldr r2, [r6, #0x34]
	movs r0, #0xc0
	lsls r0, r0, #6
	adds r2, r2, r0
	asrs r2, r2, #8
	ldr r3, _08108758 @ =gCurLevelInfo
	ldr r5, _0810875C @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r7, r2, r0
	strh r7, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r4, [r6, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	bne _08108770
	ldr r2, _08108760 @ =gUnk_02020EE0
	ldrb r1, [r5]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sb
	ldrh r1, [r1]
	cmp r0, r1
	bne _08108770
	ldr r1, _08108764 @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r7, r0
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r4
	cmp r0, #0
	beq _08108768
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _08108770
	.align 2, 0
_08108754: .4byte 0x0000FFFD
_08108758: .4byte gCurLevelInfo
_0810875C: .4byte gUnk_0203AD3C
_08108760: .4byte gUnk_02020EE0
_08108764: .4byte gUnk_0203AD18
_08108768:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_08108770:
	ldr r2, [r6, #0x34]
	movs r4, #0xe0
	lsls r4, r4, #7
	adds r2, r2, r4
	asrs r2, r2, #8
	ldr r3, _081087F0 @ =gCurLevelInfo
	ldr r5, _081087F4 @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r7, r2, r0
	strh r7, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r4, [r6, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	bne _08108808
	ldr r2, _081087F8 @ =gUnk_02020EE0
	ldrb r1, [r5]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r5, sb
	ldrh r5, [r5]
	cmp r0, r5
	bne _08108808
	ldr r1, _081087FC @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r7, r0
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r4
	cmp r0, #0
	beq _08108800
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _08108808
	.align 2, 0
_081087F0: .4byte gCurLevelInfo
_081087F4: .4byte gUnk_0203AD3C
_081087F8: .4byte gUnk_02020EE0
_081087FC: .4byte gUnk_0203AD18
_08108800:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_08108808:
	ldr r0, [r6, #0x14]
	movs r4, #0x80
	lsls r4, r4, #3
	eors r0, r4
	str r0, [r6, #0x14]
	ldr r2, [r6, #0x34]
	ldr r0, _08108890 @ =0xFFFFD000
	adds r2, r2, r0
	asrs r2, r2, #8
	ldr r3, _08108894 @ =gCurLevelInfo
	ldr r7, _08108898 @ =gUnk_0203AD3C
	ldrb r0, [r7]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	mov r8, r2
	mov r1, r8
	strh r1, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r7]
	muls r0, r5, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r5, [r6, #6]
	ands r4, r5
	cmp r4, #0
	bne _081088AC
	ldr r2, _0810889C @ =gUnk_02020EE0
	ldrb r1, [r7]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, sb
	ldrh r2, [r2]
	cmp r0, r2
	bne _081088AC
	ldr r1, _081088A0 @ =gUnk_0203AD18
	ldrh r0, [r1]
	add r0, r8
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r5
	cmp r0, #0
	beq _081088A4
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _081088AC
	.align 2, 0
_08108890: .4byte 0xFFFFD000
_08108894: .4byte gCurLevelInfo
_08108898: .4byte gUnk_0203AD3C
_0810889C: .4byte gUnk_02020EE0
_081088A0: .4byte gUnk_0203AD18
_081088A4:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_081088AC:
	ldr r2, [r6, #0x34]
	ldr r4, _08108928 @ =0xFFFF9000
	adds r2, r2, r4
	asrs r2, r2, #8
	ldr r3, _0810892C @ =gCurLevelInfo
	ldr r5, _08108930 @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r7, r2, r0
	strh r7, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r4, [r6, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	bne _08108944
	ldr r2, _08108934 @ =gUnk_02020EE0
	ldrb r1, [r5]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r5, sb
	ldrh r5, [r5]
	cmp r0, r5
	bne _08108944
	ldr r1, _08108938 @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r7, r0
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r4
	cmp r0, #0
	beq _0810893C
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _08108944
	.align 2, 0
_08108928: .4byte 0xFFFF9000
_0810892C: .4byte gCurLevelInfo
_08108930: .4byte gUnk_0203AD3C
_08108934: .4byte gUnk_02020EE0
_08108938: .4byte gUnk_0203AD18
_0810893C:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_08108944:
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #3
	eors r0, r1
	str r0, [r6, #0x14]
_0810894E:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08108960
sub_08108960: @ 0x08108960
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r4, r0, #0
	ldr r0, _08108994 @ =sub_08108A50
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _08108998 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0810899C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r5, r0, r1
	b _081089A4
	.align 2, 0
_08108994: .4byte sub_08108A50
_08108998: .4byte sub_0803DCCC
_0810899C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
_081089A4:
	adds r0, r5, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r5]
	ldr r0, [r4, #0x40]
	str r0, [r5, #0x34]
	ldr r0, [r4, #0x44]
	str r0, [r5, #0x38]
	str r4, [r5, #0x44]
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r7, r5, #0
	adds r7, #0x42
	movs r1, #0
	mov r8, r1
	strh r0, [r7]
	ldr r0, [r5, #0x38]
	ldr r1, _08108A2C @ =0xFFFFC000
	adds r0, r0, r1
	str r0, [r5, #0x38]
	adds r1, r5, #0
	adds r1, #0xc
	ldr r3, _08108A30 @ =0x00000399
	movs r4, #0xe
	str r4, [sp]
	movs r0, #0x19
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r2, #0x30
	bl sub_080709F8
	adds r6, r5, #0
	adds r6, #0x2b
	mov r0, r8
	strb r0, [r6]
	strh r4, [r5, #4]
	ldr r2, _08108A34 @ =gUnk_02020EE0
	ldr r0, _08108A38 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _08108A40
	ldrb r0, [r6]
	cmp r0, #0
	bne _08108A44
	ldr r4, _08108A3C @ =0x0000039A
	adds r0, r4, #0
	bl sub_0803DF24
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08108A44
	adds r0, r4, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r6]
	b _08108A44
	.align 2, 0
_08108A2C: .4byte 0xFFFFC000
_08108A30: .4byte 0x00000399
_08108A34: .4byte gUnk_02020EE0
_08108A38: .4byte gUnk_0203AD3C
_08108A3C: .4byte 0x0000039A
_08108A40:
	mov r1, r8
	strb r1, [r6]
_08108A44:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08108A50
sub_08108A50: @ 0x08108A50
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	ldr r2, _08108A78 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08108A7C
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08108A84
	.align 2, 0
_08108A78: .4byte gCurTask
_08108A7C:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08108A84:
	adds r6, r0, #0
	ldr r7, [r6, #0x44]
	ldrh r3, [r6, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _08108AA0
	ldr r0, [r2]
	bl TaskDestroy
	bl _081092F2
_08108AA0:
	ldr r0, [r7, #8]
	ands r0, r1
	cmp r0, #0
	beq _08108AB2
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r6, #6]
	bl _081092F2
_08108AB2:
	ldr r2, _08108B1C @ =gUnk_02020EE0
	ldr r0, _08108B20 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x42
	ldrh r0, [r0]
	mov sb, r1
	ldrh r1, [r1]
	cmp r0, r1
	bne _08108B64
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _08108B2C
	ldr r0, [r6, #0xc]
	cmp r0, #0
	bne _08108B8A
	ldrh r1, [r6, #0x18]
	adds r0, r6, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x30
	bl sub_0803DE54
	adds r4, r6, #0
	adds r4, #0xc
	str r0, [r6, #0xc]
	ldr r0, [r6, #0x14]
	ldr r1, _08108B24 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _08108B28 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r6, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _08108B8A
	.align 2, 0
_08108B1C: .4byte gUnk_02020EE0
_08108B20: .4byte gUnk_0203AD3C
_08108B24: .4byte 0xFFF7FFFF
_08108B28: .4byte 0x0400000A
_08108B2C:
	ldr r0, [r6, #0xc]
	cmp r0, #0
	bne _08108B8A
	movs r0, #0x30
	bl sub_081570B0
	adds r3, r6, #0
	adds r3, #0xc
	str r0, [r6, #0xc]
	ldr r0, [r6, #0x14]
	ldr r1, _08108B5C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _08108B60 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r6, #1]
	mov r0, sp
	bl sub_0815521C
	b _08108B8A
	.align 2, 0
_08108B5C: .4byte 0xFFF7FFFF
_08108B60: .4byte 0x0400000A
_08108B64:
	ldr r1, [r6, #0xc]
	cmp r1, #0
	beq _08108B80
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _08108B80
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r6, #0xc]
_08108B80:
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r6, #0x14]
_08108B8A:
	ldr r2, _08108BCC @ =gUnk_02020EE0
	ldr r0, _08108BD0 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, sb
	ldrh r2, [r2]
	cmp r0, r2
	bne _08108BD8
	adds r4, r6, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _08108BE0
	ldr r5, _08108BD4 @ =0x0000039A
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08108BE0
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08108BE0
	.align 2, 0
_08108BCC: .4byte gUnk_02020EE0
_08108BD0: .4byte gUnk_0203AD3C
_08108BD4: .4byte 0x0000039A
_08108BD8:
	adds r1, r6, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_08108BE0:
	ldr r0, _08108C8C @ =gUnk_0203AD44
	ldrb r0, [r0]
	ldr r4, _08108C90 @ =gUnk_03000510
	mov ip, r4
	movs r5, #0x56
	adds r5, r5, r7
	mov r8, r5
	cmp r0, #0
	beq _08108C30
	ldr r1, _08108C94 @ =gCurLevelInfo
	mov sl, r1
	mov r2, sb
	ldrh r3, [r2]
	ldr r4, _08108C98 @ =gUnk_02026D50
_08108BFC:
	subs r2, r0, #1
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	mov r5, sl
	adds r1, r0, r5
	movs r5, #0xbf
	lsls r5, r5, #3
	adds r0, r1, r5
	ldrh r0, [r0]
	cmp r0, r3
	bne _08108C28
	adds r5, #0x66
	adds r0, r1, r5
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08108C42
_08108C28:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _08108BFC
_08108C30:
	movs r0, #1
	cmp r0, #0
	beq _08108C42
	ldrh r1, [r6, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r6, #6]
_08108C42:
	ldr r0, [r7, #0x40]
	str r0, [r6, #0x34]
	ldr r0, [r7, #0x44]
	str r0, [r6, #0x38]
	mov r4, ip
	ldrb r2, [r4, #4]
	movs r3, #1
	adds r0, r3, #0
	mov r5, r8
	ldrb r5, [r5]
	lsls r0, r5
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08108C70
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	bne _08108C70
	b _08108DC2
_08108C70:
	ldrh r0, [r6, #4]
	subs r0, #1
	movs r2, #0
	strh r0, [r6, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08108C9C
	ldrh r0, [r6, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r6, #6]
	b _081092F2
	.align 2, 0
_08108C8C: .4byte gUnk_0203AD44
_08108C90: .4byte gUnk_03000510
_08108C94: .4byte gCurLevelInfo
_08108C98: .4byte gUnk_02026D50
_08108C9C:
	ldrh r0, [r6, #6]
	movs r1, #4
	orrs r0, r1
	orrs r0, r2
	strh r0, [r6, #6]
	ands r0, r3
	cmp r0, #0
	beq _08108CBA
	adds r0, r6, #0
	adds r0, #0xc
	ldr r1, [r6, #0x14]
	movs r2, #0x80
	lsls r2, r2, #3
	orrs r1, r2
	b _08108CC4
_08108CBA:
	adds r0, r6, #0
	adds r0, #0xc
	ldr r1, [r6, #0x14]
	ldr r2, _08108D4C @ =0xFFFFFBFF
	ands r1, r2
_08108CC4:
	str r1, [r0, #8]
	adds r4, r0, #0
	ldrh r5, [r6, #6]
	movs r0, #8
	ands r0, r5
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	movs r0, #0x28
	adds r0, r0, r6
	mov r8, r0
	cmp r3, #0
	bne _08108D6A
	adds r0, r6, #0
	adds r0, #0x27
	adds r2, r6, #0
	adds r2, #0x26
	ldrb r1, [r0]
	adds r7, r0, #0
	ldrb r2, [r2]
	cmp r1, r2
	bne _08108CF6
	ldrh r0, [r6, #0x24]
	ldrh r1, [r6, #0x18]
	cmp r0, r1
	beq _08108D0C
_08108CF6:
	adds r0, r6, #0
	adds r0, #0x28
	ldrb r1, [r0]
	mov r8, r0
	cmp r1, #0
	beq _08108D0C
	strb r3, [r6, #1]
	strh r3, [r6, #2]
	ldr r0, _08108D50 @ =0x0000FFFB
	ands r0, r5
	strh r0, [r6, #6]
_08108D0C:
	adds r0, r4, #0
	bl sub_08155128
	adds r2, r0, #0
	cmp r2, #0
	bne _08108D54
	ldrh r0, [r6, #6]
	movs r1, #2
	movs r3, #0
	orrs r1, r0
	strh r1, [r6, #6]
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _08108D6A
	mov r5, r8
	ldrb r0, [r5]
	cmp r0, #0
	beq _08108D6A
	movs r0, #0xff
	strb r0, [r7]
	ldrh r1, [r6, #6]
	ldr r0, _08108D50 @ =0x0000FFFB
	ands r0, r1
	strh r0, [r6, #6]
	strb r3, [r6, #1]
	strh r2, [r6, #2]
	adds r0, r4, #0
	bl sub_08155128
	b _08108D6A
	.align 2, 0
_08108D4C: .4byte 0xFFFFFBFF
_08108D50: .4byte 0x0000FFFB
_08108D54:
	mov r0, r8
	ldrb r1, [r0]
	ldrh r0, [r6, #2]
	adds r0, r0, r1
	strh r0, [r6, #2]
	lsrs r0, r0, #4
	strb r0, [r6, #1]
	ldrh r1, [r6, #6]
	ldr r0, _08108E50 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r6, #6]
_08108D6A:
	ldr r2, [r6, #0x34]
	asrs r2, r2, #8
	ldr r3, _08108E54 @ =gCurLevelInfo
	ldr r5, _08108E58 @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	adds r7, r6, #0
	adds r7, #0x40
	movs r0, #0
	ldrsb r0, [r7, r0]
	adds r0, r0, r2
	movs r1, #0
	mov ip, r1
	strh r0, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r1, r1, r0
	adds r2, r6, #0
	adds r2, #0x41
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r0, r1
	strh r0, [r6, #0x1e]
	mov r4, r8
	ldrb r0, [r4]
	cmp r0, #0
	beq _08108DC2
	mov r5, ip
	strb r5, [r7]
	strb r5, [r2]
_08108DC2:
	ldr r0, [r6, #0x14]
	movs r4, #0x80
	lsls r4, r4, #3
	eors r0, r4
	str r0, [r6, #0x14]
	ldr r2, [r6, #0x34]
	movs r0, #0xa0
	lsls r0, r0, #5
	adds r2, r2, r0
	asrs r2, r2, #8
	ldr r3, _08108E54 @ =gCurLevelInfo
	ldr r7, _08108E58 @ =gUnk_0203AD3C
	ldrb r0, [r7]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	mov r8, r2
	mov r1, r8
	strh r1, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	ldr r2, _08108E5C @ =0xFFFFDC00
	adds r1, r1, r2
	asrs r1, r1, #8
	ldrb r0, [r7]
	muls r0, r5, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r5, [r6, #6]
	ands r4, r5
	cmp r4, #0
	bne _08108E70
	ldr r2, _08108E60 @ =gUnk_02020EE0
	ldrb r1, [r7]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r4, sb
	ldrh r4, [r4]
	cmp r0, r4
	bne _08108E70
	ldr r1, _08108E64 @ =gUnk_0203AD18
	ldrh r0, [r1]
	add r0, r8
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r5
	cmp r0, #0
	beq _08108E68
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _08108E70
	.align 2, 0
_08108E50: .4byte 0x0000FFFD
_08108E54: .4byte gCurLevelInfo
_08108E58: .4byte gUnk_0203AD3C
_08108E5C: .4byte 0xFFFFDC00
_08108E60: .4byte gUnk_02020EE0
_08108E64: .4byte gUnk_0203AD18
_08108E68:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_08108E70:
	ldr r2, [r6, #0x34]
	movs r5, #0xb0
	lsls r5, r5, #6
	adds r2, r2, r5
	asrs r2, r2, #8
	ldr r3, _08108EF4 @ =gCurLevelInfo
	ldr r5, _08108EF8 @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r7, r2, r0
	strh r7, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	ldr r0, _08108EFC @ =0xFFFF9C00
	adds r1, r1, r0
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r4, [r6, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	bne _08108F10
	ldr r2, _08108F00 @ =gUnk_02020EE0
	ldrb r1, [r5]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sb
	ldrh r1, [r1]
	cmp r0, r1
	bne _08108F10
	ldr r1, _08108F04 @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r7, r0
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r4
	cmp r0, #0
	beq _08108F08
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _08108F10
	.align 2, 0
_08108EF4: .4byte gCurLevelInfo
_08108EF8: .4byte gUnk_0203AD3C
_08108EFC: .4byte 0xFFFF9C00
_08108F00: .4byte gUnk_02020EE0
_08108F04: .4byte gUnk_0203AD18
_08108F08:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_08108F10:
	ldr r0, [r6, #0x14]
	movs r4, #0x80
	lsls r4, r4, #3
	eors r0, r4
	str r0, [r6, #0x14]
	ldr r2, [r6, #0x34]
	ldr r5, _08108F9C @ =0xFFFFEC00
	adds r2, r2, r5
	asrs r2, r2, #8
	ldr r3, _08108FA0 @ =gCurLevelInfo
	ldr r7, _08108FA4 @ =gUnk_0203AD3C
	ldrb r0, [r7]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	mov r8, r2
	mov r0, r8
	strh r0, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	ldr r2, _08108FA8 @ =0xFFFFDC00
	adds r1, r1, r2
	asrs r1, r1, #8
	ldrb r0, [r7]
	muls r0, r5, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r5, [r6, #6]
	ands r4, r5
	cmp r4, #0
	bne _08108FBC
	ldr r2, _08108FAC @ =gUnk_02020EE0
	ldrb r1, [r7]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r4, sb
	ldrh r4, [r4]
	cmp r0, r4
	bne _08108FBC
	ldr r1, _08108FB0 @ =gUnk_0203AD18
	ldrh r0, [r1]
	add r0, r8
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r5
	cmp r0, #0
	beq _08108FB4
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _08108FBC
	.align 2, 0
_08108F9C: .4byte 0xFFFFEC00
_08108FA0: .4byte gCurLevelInfo
_08108FA4: .4byte gUnk_0203AD3C
_08108FA8: .4byte 0xFFFFDC00
_08108FAC: .4byte gUnk_02020EE0
_08108FB0: .4byte gUnk_0203AD18
_08108FB4:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_08108FBC:
	ldr r2, [r6, #0x34]
	ldr r5, _0810903C @ =0xFFFFD400
	adds r2, r2, r5
	asrs r2, r2, #8
	ldr r3, _08109040 @ =gCurLevelInfo
	ldr r5, _08109044 @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r7, r2, r0
	strh r7, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	ldr r0, _08109048 @ =0xFFFF9C00
	adds r1, r1, r0
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r4, [r6, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	bne _0810905C
	ldr r2, _0810904C @ =gUnk_02020EE0
	ldrb r1, [r5]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sb
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810905C
	ldr r1, _08109050 @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r7, r0
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r4
	cmp r0, #0
	beq _08109054
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _0810905C
	.align 2, 0
_0810903C: .4byte 0xFFFFD400
_08109040: .4byte gCurLevelInfo
_08109044: .4byte gUnk_0203AD3C
_08109048: .4byte 0xFFFF9C00
_0810904C: .4byte gUnk_02020EE0
_08109050: .4byte gUnk_0203AD18
_08109054:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_0810905C:
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #4
	eors r0, r1
	str r0, [r6, #0x14]
	ldr r2, [r6, #0x34]
	ldr r4, _081090E8 @ =0xFFFFEC00
	adds r2, r2, r4
	asrs r2, r2, #8
	ldr r3, _081090EC @ =gCurLevelInfo
	ldr r5, _081090F0 @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r7, r2, r0
	strh r7, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	movs r0, #0x90
	lsls r0, r0, #6
	adds r1, r1, r0
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r4, [r6, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	bne _08109104
	ldr r2, _081090F4 @ =gUnk_02020EE0
	ldrb r1, [r5]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sb
	ldrh r1, [r1]
	cmp r0, r1
	bne _08109104
	ldr r1, _081090F8 @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r7, r0
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r4
	cmp r0, #0
	beq _081090FC
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _08109104
	.align 2, 0
_081090E8: .4byte 0xFFFFEC00
_081090EC: .4byte gCurLevelInfo
_081090F0: .4byte gUnk_0203AD3C
_081090F4: .4byte gUnk_02020EE0
_081090F8: .4byte gUnk_0203AD18
_081090FC:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_08109104:
	ldr r2, [r6, #0x34]
	ldr r4, _08109188 @ =0xFFFFD400
	adds r2, r2, r4
	asrs r2, r2, #8
	ldr r3, _0810918C @ =gCurLevelInfo
	ldr r5, _08109190 @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r7, r2, r0
	strh r7, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	movs r0, #0xc8
	lsls r0, r0, #7
	adds r1, r1, r0
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r4, [r6, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	bne _081091A4
	ldr r2, _08109194 @ =gUnk_02020EE0
	ldrb r1, [r5]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sb
	ldrh r1, [r1]
	cmp r0, r1
	bne _081091A4
	ldr r1, _08109198 @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r7, r0
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r4
	cmp r0, #0
	beq _0810919C
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _081091A4
	.align 2, 0
_08109188: .4byte 0xFFFFD400
_0810918C: .4byte gCurLevelInfo
_08109190: .4byte gUnk_0203AD3C
_08109194: .4byte gUnk_02020EE0
_08109198: .4byte gUnk_0203AD18
_0810919C:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_081091A4:
	ldr r0, [r6, #0x14]
	movs r4, #0x80
	lsls r4, r4, #3
	eors r0, r4
	str r0, [r6, #0x14]
	ldr r2, [r6, #0x34]
	movs r5, #0xa0
	lsls r5, r5, #5
	adds r2, r2, r5
	asrs r2, r2, #8
	ldr r3, _08109234 @ =gCurLevelInfo
	ldr r7, _08109238 @ =gUnk_0203AD3C
	ldrb r0, [r7]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	mov r8, r2
	mov r0, r8
	strh r0, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	movs r2, #0x90
	lsls r2, r2, #6
	adds r1, r1, r2
	asrs r1, r1, #8
	ldrb r0, [r7]
	muls r0, r5, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r5, [r6, #6]
	ands r4, r5
	cmp r4, #0
	bne _0810924C
	ldr r2, _0810923C @ =gUnk_02020EE0
	ldrb r1, [r7]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r4, sb
	ldrh r4, [r4]
	cmp r0, r4
	bne _0810924C
	ldr r1, _08109240 @ =gUnk_0203AD18
	ldrh r0, [r1]
	add r0, r8
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r5
	cmp r0, #0
	beq _08109244
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _0810924C
	.align 2, 0
_08109234: .4byte gCurLevelInfo
_08109238: .4byte gUnk_0203AD3C
_0810923C: .4byte gUnk_02020EE0
_08109240: .4byte gUnk_0203AD18
_08109244:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_0810924C:
	ldr r2, [r6, #0x34]
	movs r5, #0xb0
	lsls r5, r5, #6
	adds r2, r2, r5
	asrs r2, r2, #8
	ldr r3, _081092D0 @ =gCurLevelInfo
	ldr r5, _081092D4 @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r7, r2, r0
	strh r7, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	movs r0, #0xc8
	lsls r0, r0, #7
	adds r1, r1, r0
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r6, #0x1e]
	ldrh r4, [r6, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	bne _081092E8
	ldr r2, _081092D8 @ =gUnk_02020EE0
	ldrb r1, [r5]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, sb
	ldrh r1, [r1]
	cmp r0, r1
	bne _081092E8
	ldr r1, _081092DC @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r7, r0
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r6, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r4
	cmp r0, #0
	beq _081092E0
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_081564D8
	b _081092E8
	.align 2, 0
_081092D0: .4byte gCurLevelInfo
_081092D4: .4byte gUnk_0203AD3C
_081092D8: .4byte gUnk_02020EE0
_081092DC: .4byte gUnk_0203AD18
_081092E0:
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0815604C
_081092E8:
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #4
	eors r0, r1
	str r0, [r6, #0x14]
_081092F2:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08109304
sub_08109304: @ 0x08109304
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	str r0, [sp, #0x10]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldr r0, _08109344 @ =sub_081094C4
	ldr r2, _08109348 @ =0x00003501
	ldr r1, _0810934C @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x78
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	ldr r0, [sp, #0xc]
	ands r0, r1
	cmp r0, #0
	beq _08109350
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08109358
	.align 2, 0
_08109344: .4byte sub_081094C4
_08109348: .4byte 0x00003501
_0810934C: .4byte sub_0803DCCC
_08109350:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08109358:
	adds r4, r0, #0
	adds r5, r4, #0
	bl sub_0803E3B0
	movs r1, #0
	movs r0, #3
	strb r0, [r4]
	ldr r2, [sp, #0x10]
	ldr r0, [r2, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r2, #0x44]
	str r0, [r4, #0x38]
	str r2, [r4, #0x44]
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r2, r4, #0
	adds r2, #0x42
	strh r0, [r2]
	ldr r3, [sp, #0x10]
	ldr r0, [r3, #0x70]
	str r0, [r4, #0x44]
	strh r1, [r4, #4]
	mov ip, r1
	ldr r6, _08109490 @ =gRngVal
	ldr r7, _08109494 @ =0x00196225
	mov sb, r7
	ldr r0, _08109498 @ =0x3C6EF35F
	mov r8, r0
	movs r1, #1
	mov sl, r1
_08109396:
	mov r3, ip
	lsls r2, r3, #3
	adds r0, r5, #0
	adds r0, #0x48
	adds r0, r0, r2
	ldr r7, [sp, #0x10]
	ldr r1, [r7, #0x40]
	str r1, [r0]
	adds r0, r5, #0
	adds r0, #0x4c
	adds r0, r0, r2
	ldr r1, [r7, #0x44]
	str r1, [r0]
	lsls r2, r3, #2
	adds r0, r5, #0
	adds r0, #0x68
	adds r3, r0, r2
	ldr r0, [r6]
	mov r1, sb
	muls r1, r0, r1
	add r1, r8
	str r1, [r6]
	lsrs r0, r1, #0x10
	ldr r7, _0810949C @ =0x000003FF
	ands r0, r7
	subs r7, #0xff
	adds r0, r0, r7
	strh r0, [r3]
	adds r0, r5, #0
	adds r0, #0x6a
	adds r2, r0, r2
	mov r0, sb
	muls r0, r1, r0
	adds r1, r0, #0
	add r1, r8
	str r1, [r6]
	lsrs r0, r1, #0x10
	adds r7, #0xff
	ands r0, r7
	subs r7, #0xff
	adds r0, r0, r7
	strh r0, [r2]
	mov r0, sb
	muls r0, r1, r0
	add r0, r8
	str r0, [r6]
	lsrs r0, r0, #0x10
	mov r1, sl
	ands r0, r1
	cmp r0, #0
	beq _08109402
	ldrh r0, [r3]
	rsbs r0, r0, #0
	strh r0, [r3]
_08109402:
	ldr r0, [r6]
	mov r3, sb
	muls r3, r0, r3
	adds r0, r3, #0
	add r0, r8
	str r0, [r6]
	lsrs r0, r0, #0x10
	mov r7, sl
	ands r0, r7
	cmp r0, #0
	beq _0810941E
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_0810941E:
	mov r0, ip
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov ip, r0
	cmp r0, #3
	bls _08109396
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _08109436
	movs r1, #0x11
	str r1, [sp, #0xc]
_08109436:
	adds r1, r4, #0
	adds r1, #0xc
	ldr r3, _081094A0 @ =0x00000399
	ldr r2, [sp, #0xc]
	str r2, [sp]
	movs r0, #0x18
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #4
	bl sub_080709F8
	adds r5, r4, #0
	adds r5, #0x2b
	movs r3, #0
	strb r3, [r5]
	ldr r2, _081094A4 @ =gUnk_02020EE0
	ldr r0, _081094A8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081094B0
	ldr r6, _081094AC @ =0x0000039A
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _081094B2
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _081094B2
	.align 2, 0
_08109490: .4byte gRngVal
_08109494: .4byte 0x00196225
_08109498: .4byte 0x3C6EF35F
_0810949C: .4byte 0x000003FF
_081094A0: .4byte 0x00000399
_081094A4: .4byte gUnk_02020EE0
_081094A8: .4byte gUnk_0203AD3C
_081094AC: .4byte 0x0000039A
_081094B0:
	strb r3, [r5]
_081094B2:
	adds r0, r4, #0
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_081094C4
sub_081094C4: @ 0x081094C4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x4c
	ldr r2, _081094EC @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081094F0
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081094F8
	.align 2, 0
_081094EC: .4byte gCurTask
_081094F0:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081094F8:
	adds r6, r0, #0
	ldr r0, [r6, #0x44]
	str r0, [sp, #0x28]
	str r6, [sp, #0x2c]
	ldrh r3, [r6, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _08109516
	ldr r0, [r2]
	bl TaskDestroy
	b _08109950
_08109516:
	ldr r2, [sp, #0x28]
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _08109526
	adds r0, r1, #0
	orrs r0, r3
	b _0810994E
_08109526:
	ldr r2, _08109590 @ =gUnk_02020EE0
	ldr r0, _08109594 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x42
	ldrh r0, [r0]
	str r1, [sp, #0x38]
	ldrh r5, [r1]
	cmp r0, r5
	bne _081095D8
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _081095A0
	ldr r0, [r6, #0xc]
	cmp r0, #0
	bne _081095FE
	ldrh r1, [r6, #0x18]
	adds r0, r6, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #4
	bl sub_0803DE54
	adds r4, r6, #0
	adds r4, #0xc
	str r0, [r6, #0xc]
	ldr r0, [r6, #0x14]
	ldr r1, _08109598 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _0810959C @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r6, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _081095FE
	.align 2, 0
_08109590: .4byte gUnk_02020EE0
_08109594: .4byte gUnk_0203AD3C
_08109598: .4byte 0xFFF7FFFF
_0810959C: .4byte 0x0400000A
_081095A0:
	ldr r0, [r6, #0xc]
	cmp r0, #0
	bne _081095FE
	movs r0, #4
	bl sub_081570B0
	adds r3, r6, #0
	adds r3, #0xc
	str r0, [r6, #0xc]
	ldr r0, [r6, #0x14]
	ldr r1, _081095D0 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _081095D4 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r6, #1]
	mov r0, sp
	bl sub_0815521C
	b _081095FE
	.align 2, 0
_081095D0: .4byte 0xFFF7FFFF
_081095D4: .4byte 0x0400000A
_081095D8:
	ldr r1, [r6, #0xc]
	cmp r1, #0
	beq _081095F4
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _081095F4
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r6, #0xc]
_081095F4:
	ldr r0, [r6, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r6, #0x14]
_081095FE:
	ldr r2, _08109640 @ =gUnk_02020EE0
	ldr r0, _08109644 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r1, [sp, #0x38]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810964C
	adds r4, r6, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _08109654
	ldr r5, _08109648 @ =0x0000039A
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08109654
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08109654
	.align 2, 0
_08109640: .4byte gUnk_02020EE0
_08109644: .4byte gUnk_0203AD3C
_08109648: .4byte 0x0000039A
_0810964C:
	adds r1, r6, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_08109654:
	ldr r0, [sp, #0x28]
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r2, [sp, #0x38]
	strh r0, [r2]
	ldr r0, _081096C4 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	ldr r1, [sp, #0x28]
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _081096C8
	ldr r5, [sp, #0x28]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	bne _081096C8
	ldr r4, [r6, #0x34]
	ldr r5, [r6, #0x38]
	movs r0, #0
	mov r8, r0
	ldr r1, [sp, #0x2c]
	adds r1, #0x48
	mov sl, r1
	ldr r2, [sp, #0x2c]
	adds r2, #0x4c
	mov sb, r2
_08109698:
	mov r0, r8
	lsls r1, r0, #3
	mov r2, sl
	adds r0, r2, r1
	ldr r0, [r0]
	str r0, [r6, #0x34]
	add r1, sb
	ldr r0, [r1]
	str r0, [r6, #0x38]
	adds r0, r6, #0
	bl sub_0803DBC8
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #3
	bls _08109698
	str r4, [r6, #0x34]
	str r5, [r6, #0x38]
	b _08109950
	.align 2, 0
_081096C4: .4byte gUnk_03000510
_081096C8:
	ldrh r1, [r6, #6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _081096E0
	adds r0, r6, #0
	adds r0, #0xc
	ldr r1, [r6, #0x14]
	movs r2, #0x80
	lsls r2, r2, #3
	orrs r1, r2
	b _081096EA
_081096E0:
	adds r0, r6, #0
	adds r0, #0xc
	ldr r1, [r6, #0x14]
	ldr r2, _08109770 @ =0xFFFFFBFF
	ands r1, r2
_081096EA:
	str r1, [r0, #8]
	str r0, [sp, #0x34]
	ldrh r4, [r6, #6]
	movs r0, #8
	ands r0, r4
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	movs r5, #0x28
	adds r5, r5, r6
	mov r8, r5
	cmp r3, #0
	bne _0810978E
	adds r0, r6, #0
	adds r0, #0x27
	adds r2, r6, #0
	adds r2, #0x26
	ldrb r1, [r0]
	adds r5, r0, #0
	ldrb r2, [r2]
	cmp r1, r2
	bne _0810971C
	ldrh r0, [r6, #0x24]
	ldrh r1, [r6, #0x18]
	cmp r0, r1
	beq _08109732
_0810971C:
	adds r0, r6, #0
	adds r0, #0x28
	ldrb r1, [r0]
	mov r8, r0
	cmp r1, #0
	beq _08109732
	strb r3, [r6, #1]
	strh r3, [r6, #2]
	ldr r0, _08109774 @ =0x0000FFFB
	ands r0, r4
	strh r0, [r6, #6]
_08109732:
	ldr r0, [sp, #0x34]
	bl sub_08155128
	adds r2, r0, #0
	cmp r2, #0
	bne _08109778
	ldrh r0, [r6, #6]
	movs r1, #2
	movs r3, #0
	orrs r1, r0
	strh r1, [r6, #6]
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _0810978E
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #0
	beq _0810978E
	movs r0, #0xff
	strb r0, [r5]
	ldrh r1, [r6, #6]
	ldr r0, _08109774 @ =0x0000FFFB
	ands r0, r1
	strh r0, [r6, #6]
	strb r3, [r6, #1]
	strh r2, [r6, #2]
	ldr r0, [sp, #0x34]
	bl sub_08155128
	b _0810978E
	.align 2, 0
_08109770: .4byte 0xFFFFFBFF
_08109774: .4byte 0x0000FFFB
_08109778:
	mov r2, r8
	ldrb r1, [r2]
	ldrh r0, [r6, #2]
	adds r0, r0, r1
	strh r0, [r6, #2]
	lsrs r0, r0, #4
	strb r0, [r6, #1]
	ldrh r1, [r6, #6]
	ldr r0, _0810984C @ =0x0000FFFD
	ands r0, r1
	strh r0, [r6, #6]
_0810978E:
	ldr r2, [r6, #0x34]
	asrs r2, r2, #8
	ldr r4, _08109850 @ =gCurLevelInfo
	ldr r3, _08109854 @ =gUnk_0203AD3C
	ldrb r0, [r3]
	movs r7, #0xcd
	lsls r7, r7, #3
	muls r0, r7, r0
	adds r1, r4, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	adds r5, r6, #0
	adds r5, #0x40
	movs r0, #0
	ldrsb r0, [r5, r0]
	adds r0, r0, r2
	movs r1, #0
	mov sb, r1
	strh r0, [r6, #0x1c]
	ldr r1, [r6, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r3]
	muls r0, r7, r0
	adds r3, r4, #0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r1, r1, r0
	adds r2, r6, #0
	adds r2, #0x41
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r0, r1
	strh r0, [r6, #0x1e]
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #0
	beq _081097E8
	mov r0, sb
	strb r0, [r5]
	strb r0, [r2]
_081097E8:
	movs r1, #0
	mov r8, r1
	ldr r2, [sp, #0x2c]
	adds r2, #0x48
	mov sl, r2
	ldr r5, [sp, #0x2c]
	adds r5, #0x4c
	mov sb, r5
	ldr r0, [sp, #0x2c]
	adds r0, #0x68
	str r0, [sp, #0x44]
	ldr r1, [sp, #0x2c]
	adds r1, #0x6a
	str r1, [sp, #0x48]
	ldr r2, [sp, #0x28]
	adds r2, #0x54
	str r2, [sp, #0x3c]
	ldr r5, [sp, #0x28]
	adds r5, #0x55
	str r5, [sp, #0x40]
	str r4, [sp, #0x30]
_08109812:
	mov r0, r8
	lsls r4, r0, #3
	mov r1, sb
	adds r2, r1, r4
	lsls r3, r0, #2
	ldr r5, [sp, #0x44]
	adds r0, r5, r3
	movs r5, #0
	ldrsh r1, [r0, r5]
	ldr r0, [r2]
	subs r0, r0, r1
	str r0, [r2]
	mov r0, sl
	adds r2, r0, r4
	ldr r1, [sp, #0x48]
	adds r5, r1, r3
	movs r0, #0
	ldrsh r1, [r5, r0]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	ldrh r1, [r5]
	movs r2, #0
	ldrsh r0, [r5, r2]
	cmp r0, #0
	bge _08109858
	adds r0, r1, #0
	adds r0, #8
	b _0810985C
	.align 2, 0
_0810984C: .4byte 0x0000FFFD
_08109850: .4byte gCurLevelInfo
_08109854: .4byte gUnk_0203AD3C
_08109858:
	adds r0, r1, #0
	subs r0, #8
_0810985C:
	strh r0, [r5]
	ldr r5, [sp, #0x44]
	adds r3, r5, r3
	ldrh r1, [r3]
	movs r2, #0
	ldrsh r0, [r3, r2]
	cmp r0, #0
	bge _08109872
	adds r0, r1, #0
	adds r0, #8
	b _08109876
_08109872:
	adds r0, r1, #0
	subs r0, #8
_08109876:
	strh r0, [r3]
	mov r5, sl
	adds r1, r5, r4
	ldr r2, [sp, #0x3c]
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
	ldr r2, [r1]
	adds r2, r2, r0
	asrs r2, r2, #8
	ldr r5, _08109910 @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r1, #0xcd
	lsls r1, r1, #3
	muls r0, r1, r0
	ldr r1, [sp, #0x30]
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r7, r2, r0
	strh r7, [r6, #0x1c]
	mov r2, sb
	adds r1, r2, r4
	ldr r2, [sp, #0x40]
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
	ldr r1, [r1]
	adds r1, r1, r0
	asrs r1, r1, #8
	ldrb r0, [r5]
	movs r2, #0xcd
	lsls r2, r2, #3
	muls r0, r2, r0
	ldr r2, _08109914 @ =gUnk_02023540
	adds r0, r0, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r4, r1, r0
	strh r4, [r6, #0x1e]
	ldrh r3, [r6, #6]
	movs r1, #0x80
	lsls r1, r1, #3
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	bne _08109926
	ldr r2, _08109918 @ =gUnk_02020EE0
	ldrb r1, [r5]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r2, [sp, #0x38]
	ldrh r2, [r2]
	cmp r0, r2
	bne _08109926
	ldr r1, _0810991C @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r7, r0
	strh r0, [r6, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r4, r0
	strh r0, [r6, #0x1e]
	movs r5, #0x80
	lsls r5, r5, #7
	adds r0, r5, #0
	ands r0, r3
	cmp r0, #0
	beq _08109920
	ldr r0, [sp, #0x34]
	bl sub_081564D8
	b _08109926
	.align 2, 0
_08109910: .4byte gUnk_0203AD3C
_08109914: .4byte gUnk_02023540
_08109918: .4byte gUnk_02020EE0
_0810991C: .4byte gUnk_0203AD18
_08109920:
	ldr r0, [sp, #0x34]
	bl sub_0815604C
_08109926:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #3
	bhi _08109936
	b _08109812
_08109936:
	ldrh r0, [r6, #4]
	adds r0, #1
	strh r0, [r6, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x20
	ble _08109950
	ldrh r0, [r6, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
_0810994E:
	strh r0, [r6, #6]
_08109950:
	add sp, #0x4c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08109960
sub_08109960: @ 0x08109960
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _0810998C @ =sub_08105CE0
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0xa0
	adds r2, r4, #0
	adds r2, #0xa2
	adds r0, r4, #0
	bl sub_08109DC4
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _08109990
	movs r0, #0
	b _08109994
	.align 2, 0
_0810998C: .4byte sub_08105CE0
_08109990:
	movs r0, #0x80
	lsls r0, r0, #2
_08109994:
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_081099A4
sub_081099A4: @ 0x081099A4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _081099BC @ =sub_08107408
	movs r1, #0
	bl ObjectSetFunc
	adds r4, #0x9f
	movs r0, #0
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081099BC: .4byte sub_08107408

	thumb_func_start sub_081099C0
sub_081099C0: @ 0x081099C0
	push {lr}
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _081099D0 @ =sub_0810A098
	bl ObjectSetFunc
	pop {r0}
	bx r0
	.align 2, 0
_081099D0: .4byte sub_0810A098

	thumb_func_start sub_081099D4
sub_081099D4: @ 0x081099D4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _081099FC @ =sub_081003EC
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081099FC: .4byte sub_081003EC

	thumb_func_start sub_08109A00
sub_08109A00: @ 0x08109A00
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08109A32
	adds r1, r2, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r2, #8]
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08109A32
	adds r0, r2, #0
	bl sub_08102A80
_08109A32:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08109A38
sub_08109A38: @ 0x08109A38
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08109A84
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08109A84
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	cmp r0, #1
	bne _08109A7E
	adds r1, r4, #0
	adds r1, #0xda
	ldrb r0, [r1]
	cmp r0, #0xd
	bne _08109A7E
	movs r0, #0xe
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_0810487C
	adds r0, r4, #0
	bl sub_08102938
	b _08109A84
_08109A7E:
	adds r0, r4, #0
	bl sub_08103138
_08109A84:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08109A8C
sub_08109A8C: @ 0x08109A8C
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0xd5
	movs r4, #0
	movs r0, #4
	strb r0, [r1]
	ldr r2, _08109AD0 @ =sub_08103404
	adds r0, r5, #0
	movs r1, #8
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	movs r2, #0
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	movs r0, #0x78
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x9e
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08109AD0: .4byte sub_08103404

	thumb_func_start sub_08109AD4
sub_08109AD4: @ 0x08109AD4
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0xd5
	movs r4, #0
	movs r0, #4
	strb r0, [r1]
	ldr r2, _08109B18 @ =sub_08103688
	adds r0, r5, #0
	movs r1, #8
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	movs r2, #0
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	movs r0, #0x10
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x9e
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08109B18: .4byte sub_08103688

	thumb_func_start sub_08109B1C
sub_08109B1C: @ 0x08109B1C
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0xd5
	movs r4, #0
	movs r0, #5
	strb r0, [r1]
	ldr r2, _08109B60 @ =sub_08103E60
	adds r0, r5, #0
	movs r1, #0xa
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	movs r2, #0
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x43
	ands r0, r1
	str r0, [r5, #8]
	movs r0, #0x28
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x9e
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08109B60: .4byte sub_08103E60

	thumb_func_start sub_08109B64
sub_08109B64: @ 0x08109B64
	push {r4, lr}
	adds r4, r0, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	subs r1, #0x27
	movs r0, #1
	strb r0, [r1]
	adds r1, #0x55
	movs r0, #8
	strb r0, [r1]
	subs r1, #4
	movs r0, #0x7e
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x28
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_08102938
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08109B98
sub_08109B98: @ 0x08109B98
	push {r4, lr}
	adds r4, r0, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	subs r1, #0x27
	movs r0, #1
	strb r0, [r1]
	adds r1, #0x55
	movs r0, #0xa
	strb r0, [r1]
	subs r1, #4
	movs r0, #0xe6
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x18
	strh r0, [r1]
	subs r1, #4
	movs r0, #2
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_08102938
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_08109BD0
sub_08109BD0: @ 0x08109BD0
	push {r4, lr}
	adds r4, r0, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	subs r1, #0x27
	movs r0, #1
	strb r0, [r1]
	adds r1, #0x55
	movs r0, #0xd
	strb r0, [r1]
	adds r1, #8
	movs r0, #8
	strb r0, [r1]
	subs r1, #0xc
	movs r0, #0x7e
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x48
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_08102938
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_08109C08
sub_08109C08: @ 0x08109C08
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	bne _08109C3A
	adds r0, r2, #0
	adds r0, #0xd8
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	adds r1, r2, #0
	adds r1, #0xda
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	bl sub_08102938
_08109C3A:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08109C40
sub_08109C40: @ 0x08109C40
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08109C6C @ =sub_08109C74
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, _08109C70 @ =0xFFFFD000
	str r0, [r4, #0x44]
	movs r1, #0
	movs r0, #0xb4
	strh r0, [r4, #4]
	adds r4, #0x9f
	strb r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08109C6C: .4byte sub_08109C74
_08109C70: .4byte 0xFFFFD000

	thumb_func_start sub_08109C74
sub_08109C74: @ 0x08109C74
	push {lr}
	adds r1, r0, #0
	adds r0, #0xc8
	ldr r0, [r0]
	cmp r0, #0
	bne _08109C86
	adds r0, r1, #0
	bl sub_08100EA0
_08109C86:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08109C8C
sub_08109C8C: @ 0x08109C8C
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #1]
	cmp r0, #1
	bne _08109C9E
	ldr r0, [r2, #8]
	movs r1, #8
	orrs r0, r1
	str r0, [r2, #8]
_08109C9E:
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08109CB0
	adds r0, r2, #0
	bl sub_081026E0
_08109CB0:
	pop {r0}
	bx r0

	thumb_func_start sub_08109CB4
sub_08109CB4: @ 0x08109CB4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08109CE8 @ =sub_08109CEC
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r0, #0x40
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08109CE8: .4byte sub_08109CEC

	thumb_func_start sub_08109CEC
sub_08109CEC: @ 0x08109CEC
	push {r4, r5, lr}
	adds r2, r0, #0
	movs r0, #0x83
	adds r0, r0, r2
	mov ip, r0
	ldrb r4, [r0]
	cmp r4, #1
	bne _08109D44
	ldr r3, [r2, #8]
	movs r5, #2
	adds r0, r3, #0
	ands r0, r5
	cmp r0, #0
	beq _08109D54
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r1, r3
	str r1, [r2, #8]
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08109D54
	movs r0, #3
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #0xfc
	lsls r0, r0, #7
	str r0, [r2, #0x40]
	movs r0, #0xb0
	lsls r0, r0, #7
	str r0, [r2, #0x44]
	orrs r1, r4
	str r1, [r2, #8]
	mov r0, ip
	strb r5, [r0]
	ldr r0, [r2, #8]
	ldr r1, _08109D40 @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r2, #8]
	b _08109D54
	.align 2, 0
_08109D40: .4byte 0xFFFFFBFF
_08109D44:
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08109D54
	adds r0, r2, #0
	bl sub_08109D5C
_08109D54:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08109D5C
sub_08109D5C: @ 0x08109D5C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08109D94 @ =sub_081013C8
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	adds r3, r4, #0
	adds r3, #0x52
	movs r2, #0
	movs r1, #0
	movs r0, #0x20
	strh r0, [r3]
	strh r1, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r2, [r0]
	movs r0, #6
	adds r1, r4, #0
	bl sub_0806FE64
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08109D94: .4byte sub_081013C8

	thumb_func_start sub_08109D98
sub_08109D98: @ 0x08109D98
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08109DC0 @ =sub_08101560
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #0
	movs r0, #0
	strh r0, [r4, #4]
	adds r4, #0x9e
	strb r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08109DC0: .4byte sub_08101560

	thumb_func_start sub_08109DC4
sub_08109DC4: @ 0x08109DC4
	push {r4, lr}
	adds r3, r2, #0
	movs r4, #0x80
	lsls r4, r4, #6
	adds r2, r4, #0
	strh r2, [r1]
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _08109DEC
	cmp r0, #1
	bgt _08109DE2
	cmp r0, #0
	beq _08109DE8
	b _08109DF4
_08109DE2:
	cmp r0, #2
	beq _08109DF0
	b _08109DF4
_08109DE8:
	movs r0, #8
	b _08109DF6
_08109DEC:
	movs r0, #0xa
	b _08109DF6
_08109DF0:
	movs r0, #0xd
	b _08109DF6
_08109DF4:
	movs r0, #0x12
_08109DF6:
	strh r0, [r3]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08109E00
sub_08109E00: @ 0x08109E00
	adds r1, r0, #0
	adds r1, #0x83
	movs r3, #0
	strb r3, [r1]
	ldr r1, [r0, #8]
	ldr r2, _08109E1C @ =0xFFFFFDFF
	ands r1, r2
	str r1, [r0, #8]
	ldr r1, _08109E20 @ =sub_08105CE0
	str r1, [r0, #0x78]
	adds r0, #0x9f
	strb r3, [r0]
	bx lr
	.align 2, 0
_08109E1C: .4byte 0xFFFFFDFF
_08109E20: .4byte sub_08105CE0

	thumb_func_start sub_08109E24
sub_08109E24: @ 0x08109E24
	adds r2, r0, #0
	adds r3, r2, #0
	adds r3, #0x83
	movs r1, #0
	movs r0, #1
	strb r0, [r3]
	adds r0, r2, #0
	adds r0, #0x9e
	strb r1, [r0]
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r2, #8]
	ldr r0, _08109E48 @ =sub_08105D78
	str r0, [r2, #0x78]
	bx lr
	.align 2, 0
_08109E48: .4byte sub_08105D78

	thumb_func_start sub_08109E4C
sub_08109E4C: @ 0x08109E4C
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r2, _08109E7C @ =sub_08105BF0
	movs r1, #2
	bl ObjectSetFunc
	adds r1, r5, #0
	adds r1, #0xa0
	adds r4, r5, #0
	adds r4, #0xa2
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08109DC4
	movs r1, #0
	strh r1, [r4]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _08109E80
	strh r1, [r5, #4]
	b _08109E86
	.align 2, 0
_08109E7C: .4byte sub_08105BF0
_08109E80:
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r5, #4]
_08109E86:
	adds r0, r5, #0
	adds r0, #0x9f
	movs r1, #0
	strb r1, [r0]
	subs r0, #1
	strb r1, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_08109E98
sub_08109E98: @ 0x08109E98
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	cmp r0, #0
	beq _08109EC4
	ldr r0, [r4, #0x44]
	ldr r1, _08109EF0 @ =0xFFFFEFFF
	adds r0, r0, r1
	ldr r1, _08109EF4 @ =0x00007BFE
	cmp r0, r1
	bls _08109EC4
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
_08109EC4:
	ldr r0, [r4, #0x58]
	movs r1, #0x80
	lsls r1, r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08109EE8
	movs r2, #0xa6
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
_08109EE8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08109EF0: .4byte 0xFFFFEFFF
_08109EF4: .4byte 0x00007BFE

	thumb_func_start sub_08109EF8
sub_08109EF8: @ 0x08109EF8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08109F3C @ =sub_08106874
	movs r1, #0
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x82
	adds r0, #0x35
	ldrb r1, [r1]
	adds r0, r0, r1
	movs r1, #0
	strb r0, [r2]
	adds r0, r4, #0
	adds r0, #0x50
	movs r2, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08109F3C: .4byte sub_08106874

	thumb_func_start sub_08109F40
sub_08109F40: @ 0x08109F40
	push {lr}
	adds r3, r0, #0
	ldr r1, [r3, #0x70]
	ldr r2, [r3, #8]
	movs r0, #4
	orrs r2, r0
	str r2, [r3, #8]
	adds r1, #0x83
	ldrb r0, [r1]
	cmp r0, #7
	beq _08109F76
	cmp r0, #9
	beq _08109F76
	ldr r0, _08109F7C @ =0xFFFFFEFF
	ands r2, r0
	ldr r0, _08109F80 @ =0xFFFFFDFF
	ands r2, r0
	ldr r0, _08109F84 @ =0xFFFFF7FF
	ands r2, r0
	ldr r0, _08109F88 @ =0xFFFFFBFF
	ands r2, r0
	str r2, [r3, #8]
	ldr r0, _08109F8C @ =sub_08109E98
	str r0, [r3, #0x78]
	adds r0, r3, #0
	bl sub_08106AD0
_08109F76:
	pop {r0}
	bx r0
	.align 2, 0
_08109F7C: .4byte 0xFFFFFEFF
_08109F80: .4byte 0xFFFFFDFF
_08109F84: .4byte 0xFFFFF7FF
_08109F88: .4byte 0xFFFFFBFF
_08109F8C: .4byte sub_08109E98

	thumb_func_start sub_08109F90
sub_08109F90: @ 0x08109F90
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08109FB8 @ =sub_08107560
	movs r1, #2
	bl ObjectSetFunc
	movs r2, #0
	movs r0, #0x28
	strh r0, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	adds r4, #0x9f
	strb r2, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08109FB8: .4byte sub_08107560

	thumb_func_start sub_08109FBC
sub_08109FBC: @ 0x08109FBC
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08109FF0 @ =sub_08109FF4
	movs r1, #3
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r1, #0
	movs r0, #0x18
	strh r0, [r4, #4]
	adds r4, #0x9f
	strb r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08109FF0: .4byte sub_08109FF4

	thumb_func_start sub_08109FF4
sub_08109FF4: @ 0x08109FF4
	push {lr}
	adds r2, r0, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #4
	bne _0810A014
	ldr r1, [r2, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0810A01C
	movs r0, #0x80
	lsls r0, r0, #5
	orrs r1, r0
	str r1, [r2, #8]
	b _0810A030
_0810A014:
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
_0810A01C:
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0810A030
	adds r1, r2, #0
	adds r1, #0x83
	movs r0, #4
	strb r0, [r1]
_0810A030:
	pop {r0}
	bx r0

	thumb_func_start sub_0810A034
sub_0810A034: @ 0x0810A034
	push {r4, lr}
	adds r4, r0, #0
	bl sub_0809F840
	ldr r0, _0810A090 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r4, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	bne _0810A088
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x11
	ands r0, r1
	cmp r0, #0
	beq _0810A074
	adds r2, r4, #0
	adds r2, #0x54
	ldr r0, _0810A094 @ =gUnk_0203AD40
	ldr r1, [r0]
	movs r0, #2
	ands r1, r0
	lsls r1, r1, #1
	ldrb r0, [r2]
	adds r0, r0, r1
	strb r0, [r2]
_0810A074:
	adds r0, r4, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _0810A088
	ldr r0, [r4, #0xc]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0xc]
_0810A088:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0810A090: .4byte gUnk_03000510
_0810A094: .4byte gUnk_0203AD40

	thumb_func_start sub_0810A098
sub_0810A098: @ 0x0810A098
	push {lr}
	mov ip, r0
	ldr r2, [r0, #0x70]
	ldr r1, [r0, #8]
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	mov r0, ip
	str r1, [r0, #8]
	ldr r0, [r2, #8]
	movs r3, #1
	ands r0, r3
	orrs r1, r0
	mov r0, ip
	str r1, [r0, #8]
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r1, [r0]
	mov r0, ip
	adds r0, #0x60
	strh r1, [r0]
	ldr r1, [r2, #0x40]
	mov r0, ip
	str r1, [r0, #0x40]
	ldr r0, [r2, #0x44]
	mov r2, ip
	str r0, [r2, #0x44]
	ldr r0, [r2, #8]
	ands r0, r3
	cmp r0, #0
	beq _0810A0E2
	mov r0, ip
	adds r0, #0x50
	movs r2, #0
	ldrsh r0, [r0, r2]
	subs r0, r1, r0
	b _0810A0EC
_0810A0E2:
	mov r0, ip
	adds r0, #0x50
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, r1, r0
_0810A0EC:
	mov r1, ip
	str r0, [r1, #0x40]
	mov r0, ip
	adds r0, #0x52
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov r2, ip
	ldr r0, [r2, #0x44]
	adds r0, r0, r1
	str r0, [r2, #0x44]
	pop {r0}
	bx r0

	thumb_func_start sub_0810A104
sub_0810A104: @ 0x0810A104
	push {lr}
	ldr r2, _0810A114 @ =gUnk_0203AD34
	movs r1, #0
	strb r1, [r2]
	bl sub_0803DCCC
	pop {r0}
	bx r0
	.align 2, 0
_0810A114: .4byte gUnk_0203AD34

	thumb_func_start sub_0810A118
sub_0810A118: @ 0x0810A118
	push {lr}
	ldr r2, _0810A12C @ =gBldRegs
	movs r1, #0
	strh r1, [r2, #2]
	strh r1, [r2]
	bl sub_0803DCCC
	pop {r0}
	bx r0
	.align 2, 0
_0810A12C: .4byte gBldRegs

	thumb_func_start sub_0810A130
sub_0810A130: @ 0x0810A130
	push {r4, lr}
	adds r4, r0, #0
	ldrh r1, [r4, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0810A14A
	ldrh r0, [r4, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0810A152
_0810A14A:
	ldrh r1, [r4, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0810A152:
	adds r0, #0x2b
	ldrb r0, [r0]
	bl sub_0803E4D4
	adds r0, r4, #0
	bl sub_0803DCCC
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810A168
sub_0810A168: @ 0x0810A168
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	movs r0, #3
	mov r8, r0
	movs r1, #1
	mov sl, r1
	movs r2, #1
	str r2, [sp]
	adds r6, r7, #0
	ldr r2, _0810A20C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810A210 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810A214 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r0, #7
	ands r3, r0
	movs r4, #0
	ldr r0, _0810A218 @ =gUnk_0203AD34
	ldrb r0, [r0]
	mov sb, r2
	cmp r0, #0
	beq _0810A1A6
	b _0810A2AC
_0810A1A6:
	ldr r0, _0810A21C @ =gUnk_0203AD44
	ldrb r1, [r0]
	subs r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0xff
	beq _0810A1D8
	ldr r2, _0810A220 @ =gUnk_02020EE0
	mov ip, r2
	movs r2, #0xd4
	lsls r2, r2, #1
	ldr r5, _0810A224 @ =0x00000103
_0810A1BE:
	adds r0, r1, #0
	muls r0, r2, r0
	add r0, ip
	adds r0, r0, r5
	ldrb r0, [r0]
	cmp r0, #0x1a
	bne _0810A1CE
	movs r4, #1
_0810A1CE:
	subs r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0xff
	bne _0810A1BE
_0810A1D8:
	cmp r4, #0
	bne _0810A2AC
	mov r0, sb
	ldr r1, [r0]
	ldr r0, _0810A210 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810A214 @ =0x3C6EF35F
	adds r0, r0, r1
	mov r2, sb
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #7
	ands r0, r1
	cmp r0, #2
	bhs _0810A2AC
	movs r4, #0
	ldr r1, _0810A228 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r5, _0810A22C @ =gUnk_020229E0
	adds r6, r7, #0
	adds r6, #0x56
	b _0810A244
	.align 2, 0
_0810A20C: .4byte gRngVal
_0810A210: .4byte 0x00196225
_0810A214: .4byte 0x3C6EF35F
_0810A218: .4byte gUnk_0203AD34
_0810A21C: .4byte gUnk_0203AD44
_0810A220: .4byte gUnk_02020EE0
_0810A224: .4byte 0x00000103
_0810A228: .4byte gUnk_020229D4
_0810A22C: .4byte gUnk_020229E0
_0810A230:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _0810A24C
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_0810A244:
	cmp r0, #0
	bne _0810A230
	orrs r2, r3
	str r2, [r1]
_0810A24C:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r5
	movs r3, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r2, #0
	movs r4, #0xf0
	strh r4, [r1, #6]
	movs r0, #0x84
	strh r0, [r1, #8]
	strb r2, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r2, [r1, #4]
	strb r2, [r1, #5]
	movs r0, #0x36
	strb r0, [r1, #0xc]
	movs r0, #6
	strb r0, [r1, #0xe]
	strb r2, [r1, #0xf]
	strb r2, [r1, #0x10]
	strh r3, [r1, #0x22]
	ldr r0, _0810A2A8 @ =0x0000FF10
	strh r0, [r1, #0x1a]
	adds r0, #0x64
	strh r0, [r1, #0x1c]
	strh r4, [r1, #0x1e]
	movs r0, #0xa0
	strh r0, [r1, #0x20]
	strb r2, [r1, #0x11]
	strh r3, [r1, #0x12]
	strh r3, [r1, #0x14]
	strh r3, [r1, #0x16]
	strh r3, [r1, #0x18]
	ldrb r0, [r6]
	bl CreateObject
	adds r0, r7, #0
	bl sub_0810C9C8
	b _0810A3C0
	.align 2, 0
_0810A2A8: .4byte 0x0000FF10
_0810A2AC:
	movs r1, #0x93
	lsls r1, r1, #1
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0xa
	beq _0810A2C4
	movs r2, #0x9a
	lsls r2, r2, #1
	adds r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810A2C8
_0810A2C4:
	movs r0, #0
	mov sl, r0
_0810A2C8:
	movs r1, #0x93
	lsls r1, r1, #1
	adds r0, r6, r1
	ldrb r1, [r0]
	subs r0, r1, #6
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _0810A2DE
	movs r2, #0
	mov r8, r2
_0810A2DE:
	cmp r1, #9
	bne _0810A2E6
	movs r0, #0
	str r0, [sp]
_0810A2E6:
	ldr r1, _0810A318 @ =0x00000133
	adds r5, r6, r1
	ldrb r0, [r5]
	cmp r0, #2
	bls _0810A2FA
	movs r2, #0
	mov r8, r2
	movs r0, #0
	str r0, [sp]
	mov sl, r0
_0810A2FA:
	adds r0, r7, #0
	adds r0, #0x80
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r0, r6, r2
	ldrb r0, [r0]
	cmp r1, r0
	ble _0810A31C
	adds r0, r7, #0
	bl sub_0810CC90
	b _0810A3C0
	.align 2, 0
_0810A318: .4byte 0x00000133
_0810A31C:
	ldr r2, _0810A348 @ =0x00000139
	adds r0, r6, r2
	ldrb r0, [r0]
	cmp r1, r0
	ble _0810A34C
	mov r1, r8
	subs r0, r3, r1
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0810A3B6
	adds r0, r7, #0
	bl sub_0810DCA4
	movs r2, #0x99
	lsls r2, r2, #1
	adds r1, r6, r2
	movs r0, #0
	strb r0, [r1]
	ldrb r0, [r5]
	adds r0, #1
	b _0810A3BE
	.align 2, 0
_0810A348: .4byte 0x00000139
_0810A34C:
	movs r0, #1
	mov r8, r0
	subs r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _0810A378
	movs r1, #0x9a
	lsls r1, r1, #1
	adds r0, r6, r1
	movs r4, #0
	strb r4, [r0]
	adds r0, r7, #0
	bl sub_0810DCA4
	movs r2, #0x99
	lsls r2, r2, #1
	adds r0, r6, r2
	strb r4, [r0]
	ldrb r0, [r5]
	adds r0, #1
	b _0810A3BE
_0810A378:
	mov r1, sl
	subs r0, r3, r1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r0, #0
	bge _0810A3A4
	movs r2, #0x9a
	lsls r2, r2, #1
	adds r0, r6, r2
	movs r4, #0
	mov r1, r8
	strb r1, [r0]
	adds r0, r7, #0
	bl sub_081142B0
	movs r2, #0x99
	lsls r2, r2, #1
	adds r0, r6, r2
	strb r4, [r0]
	ldrb r0, [r5]
	adds r0, #1
	b _0810A3BE
_0810A3A4:
	ldr r1, [sp]
	subs r0, r3, r1
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0810A3B6
	adds r0, r7, #0
	bl sub_0810EA50
	b _0810A3C0
_0810A3B6:
	adds r0, r7, #0
	bl sub_0810CC90
	movs r0, #0
_0810A3BE:
	strb r0, [r5]
_0810A3C0:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0810A3D0
sub_0810A3D0: @ 0x0810A3D0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov ip, r0
	movs r2, #2
	movs r5, #1
	mov sb, r5
	mov r3, ip
	ldr r0, _0810A408 @ =0x0000012B
	add r0, ip
	ldrb r0, [r0]
	cmp r0, #6
	bne _0810A412
	movs r2, #1
	mov r0, ip
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	ldr r1, _0810A40C @ =0x00000139
	add r1, ip
	ldrb r1, [r1]
	cmp r0, r1
	bgt _0810A410
	movs r4, #2
	mov sb, r4
	b _0810A412
	.align 2, 0
_0810A408: .4byte 0x0000012B
_0810A40C: .4byte 0x00000139
_0810A410:
	movs r5, #2
_0810A412:
	ldr r6, _0810A450 @ =gRngVal
	ldr r0, [r6]
	ldr r1, _0810A454 @ =0x00196225
	mov r8, r1
	mov r4, r8
	muls r4, r0, r4
	adds r0, r4, #0
	ldr r7, _0810A458 @ =0x3C6EF35F
	adds r4, r0, r7
	str r4, [r6]
	lsrs r0, r4, #0x10
	movs r1, #3
	ands r0, r1
	subs r0, r0, r2
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _0810A460
	movs r5, #0x93
	lsls r5, r5, #1
	adds r2, r3, r5
	movs r1, #0
	movs r0, #6
	strb r0, [r2]
	ldr r4, _0810A45C @ =0x0000012B
	adds r2, r3, r4
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x85
	strb r1, [r0]
	b _0810A526
	.align 2, 0
_0810A450: .4byte gRngVal
_0810A454: .4byte 0x00196225
_0810A458: .4byte 0x3C6EF35F
_0810A45C: .4byte 0x0000012B
_0810A460:
	subs r0, r1, r5
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _0810A4EC
	movs r5, #0x95
	lsls r5, r5, #1
	adds r1, r3, r5
	movs r0, #0
	strb r0, [r1]
	movs r0, #0x93
	lsls r0, r0, #1
	adds r1, r3, r0
	movs r0, #7
	strb r0, [r1]
	ldr r2, _0810A4C8 @ =0x0000012B
	adds r1, r3, r2
	strb r0, [r1]
	mov r1, ip
	adds r1, #0x85
	movs r0, #4
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x80
	movs r5, #0
	ldrsh r0, [r0, r5]
	ldr r5, _0810A4CC @ =0x00000139
	adds r2, r3, r5
	adds r5, r1, #0
	ldrb r2, [r2]
	cmp r0, r2
	bgt _0810A526
	mov r0, r8
	muls r0, r4, r0
	adds r2, r0, r7
	str r2, [r6]
	lsrs r0, r2, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810A526
	adds r3, r5, #0
	mov r0, r8
	muls r0, r2, r0
	adds r0, r0, r7
	str r0, [r6]
	lsrs r2, r0, #0x10
	ldr r0, _0810A4D0 @ =0x00005554
	cmp r2, r0
	bhi _0810A4D4
	movs r1, #0
	b _0810A4DE
	.align 2, 0
_0810A4C8: .4byte 0x0000012B
_0810A4CC: .4byte 0x00000139
_0810A4D0: .4byte 0x00005554
_0810A4D4:
	ldr r0, _0810A4E8 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _0810A4DE
	movs r1, #1
_0810A4DE:
	ldrb r0, [r3]
	adds r0, r0, r1
	strb r0, [r5]
	b _0810A526
	.align 2, 0
_0810A4E8: .4byte 0x0000AAA9
_0810A4EC:
	mov r2, sb
	subs r0, r1, r2
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0810A514
	movs r4, #0x93
	lsls r4, r4, #1
	adds r1, r3, r4
	movs r0, #8
	strb r0, [r1]
	ldr r5, _0810A510 @ =0x0000012B
	adds r1, r3, r5
	strb r0, [r1]
	mov r1, ip
	adds r1, #0x85
	movs r0, #6
	b _0810A524
	.align 2, 0
_0810A510: .4byte 0x0000012B
_0810A514:
	movs r0, #0x93
	lsls r0, r0, #1
	adds r2, r3, r0
	movs r0, #0
	movs r1, #6
	strb r1, [r2]
	mov r1, ip
	adds r1, #0x85
_0810A524:
	strb r0, [r1]
_0810A526:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810A534
sub_0810A534: @ 0x0810A534
	push {r4, r5, lr}
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r3, r0, #0
	cmp r1, #1
	beq _0810A5C0
	cmp r1, #1
	bgt _0810A62C
	cmp r1, #0
	bne _0810A62C
	ldr r2, _0810A55C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810A560 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810A564 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r4, r0, #0x10
	movs r2, #0
	b _0810A570
	.align 2, 0
_0810A55C: .4byte gRngVal
_0810A560: .4byte 0x00196225
_0810A564: .4byte 0x3C6EF35F
_0810A568:
	lsls r0, r1, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	bne _0810A57C
_0810A570:
	adds r1, r2, #1
	lsls r0, r1, #0xf
	cmp r4, r0
	bge _0810A568
	cmp r2, #0
	beq _0810A582
_0810A57C:
	cmp r2, #1
	beq _0810A59C
	b _0810A5AA
_0810A582:
	ldr r2, _0810A594 @ =0x0000012D
	adds r1, r3, r2
	movs r0, #1
	strb r0, [r1]
	adds r1, r3, #0
	adds r1, #0xe0
	ldr r0, _0810A598 @ =gUnk_083572E8
	b _0810A5A8
	.align 2, 0
_0810A594: .4byte 0x0000012D
_0810A598: .4byte gUnk_083572E8
_0810A59C:
	ldr r1, _0810A5B8 @ =0x0000012D
	adds r0, r3, r1
	strb r2, [r0]
	adds r1, r3, #0
	adds r1, #0xe0
	ldr r0, _0810A5BC @ =gUnk_083572F3
_0810A5A8:
	str r0, [r1]
_0810A5AA:
	ldr r2, _0810A5B8 @ =0x0000012D
	adds r0, r3, r2
	ldrb r0, [r0]
	subs r0, #1
	subs r2, #1
	b _0810A708
	.align 2, 0
_0810A5B8: .4byte 0x0000012D
_0810A5BC: .4byte gUnk_083572F3
_0810A5C0:
	ldr r2, _0810A5D4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810A5D8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810A5DC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r4, r0, #0x10
	movs r2, #0
	b _0810A5E8
	.align 2, 0
_0810A5D4: .4byte gRngVal
_0810A5D8: .4byte 0x00196225
_0810A5DC: .4byte 0x3C6EF35F
_0810A5E0:
	lsls r0, r1, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	bne _0810A5F4
_0810A5E8:
	adds r1, r2, #1
	lsls r0, r1, #0xf
	cmp r4, r0
	bge _0810A5E0
	cmp r2, #0
	beq _0810A5FA
_0810A5F4:
	cmp r2, #1
	beq _0810A614
	b _0810A6FC
_0810A5FA:
	ldr r2, _0810A60C @ =0x0000012D
	adds r1, r3, r2
	movs r0, #3
	strb r0, [r1]
	adds r1, r3, #0
	adds r1, #0xe0
	ldr r0, _0810A610 @ =gUnk_083572E8
	b _0810A6FA
	.align 2, 0
_0810A60C: .4byte 0x0000012D
_0810A610: .4byte gUnk_083572E8
_0810A614:
	ldr r0, _0810A624 @ =0x0000012D
	adds r1, r3, r0
	movs r0, #3
	strb r0, [r1]
	adds r1, r3, #0
	adds r1, #0xe0
	ldr r0, _0810A628 @ =gUnk_083572F3
	b _0810A6FA
	.align 2, 0
_0810A624: .4byte 0x0000012D
_0810A628: .4byte gUnk_083572F3
_0810A62C:
	ldr r1, _0810A644 @ =gRngVal
	ldr r2, [r1]
	ldr r0, _0810A648 @ =0x00196225
	muls r0, r2, r0
	ldr r2, _0810A64C @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r1]
	lsrs r4, r0, #0x10
	movs r2, #0
	adds r5, r1, #0
	b _0810A654
	.align 2, 0
_0810A644: .4byte gRngVal
_0810A648: .4byte 0x00196225
_0810A64C: .4byte 0x3C6EF35F
_0810A650:
	lsls r0, r1, #0x10
	lsrs r2, r0, #0x10
_0810A654:
	cmp r2, #2
	bhi _0810A660
	adds r1, r2, #1
	lsls r0, r1, #0xe
	cmp r4, r0
	bge _0810A650
_0810A660:
	cmp r2, #1
	beq _0810A690
	cmp r2, #1
	bgt _0810A66E
	cmp r2, #0
	beq _0810A678
	b _0810A6FC
_0810A66E:
	cmp r2, #2
	beq _0810A6D4
	cmp r2, #3
	beq _0810A6EC
	b _0810A6FC
_0810A678:
	ldr r0, _0810A688 @ =0x0000012D
	adds r1, r3, r0
	movs r0, #5
	strb r0, [r1]
	adds r1, r3, #0
	adds r1, #0xe0
	ldr r0, _0810A68C @ =gUnk_083572E8
	b _0810A6FA
	.align 2, 0
_0810A688: .4byte 0x0000012D
_0810A68C: .4byte gUnk_083572E8
_0810A690:
	ldr r1, [r5]
	ldr r0, _0810A6B0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810A6B4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r5]
	lsrs r0, r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _0810A6BC
	ldr r2, _0810A6B8 @ =0x0000012D
	adds r1, r3, r2
	movs r0, #5
	strb r0, [r1]
	b _0810A6C2
	.align 2, 0
_0810A6B0: .4byte 0x00196225
_0810A6B4: .4byte 0x3C6EF35F
_0810A6B8: .4byte 0x0000012D
_0810A6BC:
	ldr r1, _0810A6CC @ =0x0000012D
	adds r0, r3, r1
	strb r2, [r0]
_0810A6C2:
	adds r1, r3, #0
	adds r1, #0xe0
	ldr r0, _0810A6D0 @ =gUnk_083572F3
	b _0810A6FA
	.align 2, 0
_0810A6CC: .4byte 0x0000012D
_0810A6D0: .4byte gUnk_083572F3
_0810A6D4:
	ldr r2, _0810A6E4 @ =0x0000012D
	adds r1, r3, r2
	movs r0, #4
	strb r0, [r1]
	adds r1, r3, #0
	adds r1, #0xe0
	ldr r0, _0810A6E8 @ =gUnk_083572EE
	b _0810A6FA
	.align 2, 0
_0810A6E4: .4byte 0x0000012D
_0810A6E8: .4byte gUnk_083572EE
_0810A6EC:
	ldr r0, _0810A714 @ =0x0000012D
	adds r1, r3, r0
	movs r0, #5
	strb r0, [r1]
	adds r1, r3, #0
	adds r1, #0xe0
	ldr r0, _0810A718 @ =gUnk_083572F9
_0810A6FA:
	str r0, [r1]
_0810A6FC:
	ldr r1, _0810A714 @ =0x0000012D
	adds r0, r3, r1
	ldrb r0, [r0]
	subs r0, #1
	movs r2, #0x96
	lsls r2, r2, #1
_0810A708:
	adds r1, r3, r2
	strb r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810A714: .4byte 0x0000012D
_0810A718: .4byte gUnk_083572F9

	thumb_func_start sub_0810A71C
sub_0810A71C: @ 0x0810A71C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r4, r0, #0
	str r4, [sp]
	adds r0, #0xfc
	ldr r0, [r0]
	mov r8, r0
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r0, [r0]
	mov sb, r0
	ldr r1, _0810A7C0 @ =gRngVal
	ldr r0, [r1]
	ldr r7, _0810A7C4 @ =0x00196225
	muls r0, r7, r0
	ldr r2, _0810A7C8 @ =0x3C6EF35F
	mov ip, r2
	adds r2, r0, r2
	str r2, [r1]
	lsrs r3, r2, #0x10
	movs r0, #7
	ands r3, r0
	mov sl, r3
	adds r0, r4, #0
	adds r0, #0x80
	movs r5, #0
	ldrsh r3, [r0, r5]
	movs r5, #0x9c
	lsls r5, r5, #1
	adds r0, r4, r5
	adds r5, r1, #0
	ldrb r0, [r0]
	cmp r3, r0
	bgt _0810A76C
	b _0810A890
_0810A76C:
	movs r0, #3
	str r0, [sp, #4]
	movs r6, #4
	movs r1, #0x93
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	rsbs r1, r0, #0
	orrs r1, r0
	asrs r1, r1, #0x1f
	ands r6, r1
	movs r2, #0x99
	lsls r2, r2, #1
	adds r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #2
	bls _0810A794
	movs r6, #0
	movs r3, #8
	str r3, [sp, #4]
_0810A794:
	mov r0, r8
	adds r0, #0xe1
	movs r1, #0
	strb r1, [r0]
	mov r0, sb
	adds r0, #0xe1
	strb r1, [r0]
	ldr r0, [r5]
	muls r0, r7, r0
	add r0, ip
	str r0, [r5]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810A7CC
	movs r0, #0x94
	lsls r0, r0, #1
	adds r1, r4, r0
	movs r0, #2
	strb r0, [r1]
	b _0810A7D4
	.align 2, 0
_0810A7C0: .4byte gRngVal
_0810A7C4: .4byte 0x00196225
_0810A7C8: .4byte 0x3C6EF35F
_0810A7CC:
	movs r2, #0x94
	lsls r2, r2, #1
	adds r0, r4, r2
	strb r1, [r0]
_0810A7D4:
	mov r3, sl
	lsls r0, r3, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r6
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0810A7EC
	movs r5, #0x93
	lsls r5, r5, #1
	adds r1, r4, r5
	movs r0, #0
	b _0810AAF4
_0810A7EC:
	ldr r0, [r5]
	ldr r6, _0810A820 @ =0x00196225
	muls r0, r6, r0
	ldr r1, _0810A824 @ =0x3C6EF35F
	adds r2, r0, r1
	str r2, [r5]
	lsrs r0, r2, #0x10
	movs r1, #7
	ands r0, r1
	ldr r3, [sp, #4]
	subs r0, r0, r3
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0810A85C
	adds r0, r2, #0
	muls r0, r6, r0
	ldr r1, _0810A824 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r5]
	lsrs r2, r0, #0x10
	ldr r0, _0810A828 @ =0x00005554
	cmp r2, r0
	bhi _0810A82C
	movs r1, #0
	b _0810A836
	.align 2, 0
_0810A820: .4byte 0x00196225
_0810A824: .4byte 0x3C6EF35F
_0810A828: .4byte 0x00005554
_0810A82C:
	ldr r0, _0810A854 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _0810A836
	movs r1, #1
_0810A836:
	adds r0, r1, #3
	movs r3, #0x93
	lsls r3, r3, #1
	adds r2, r4, r3
	movs r1, #0
	strb r0, [r2]
	ldr r5, _0810A858 @ =0x00000127
	adds r0, r4, r5
	strb r1, [r0]
	movs r2, #0x99
	lsls r2, r2, #1
	adds r0, r4, r2
	strb r1, [r0]
	b _0810AB02
	.align 2, 0
_0810A854: .4byte 0x0000AAA9
_0810A858: .4byte 0x00000127
_0810A85C:
	ldr r0, [sp]
	movs r1, #0
	bl sub_0810A534
	movs r3, #0x93
	lsls r3, r3, #1
	adds r0, r4, r3
	movs r1, #1
	strb r1, [r0]
	ldr r0, [r5]
	muls r0, r6, r0
	ldr r2, _0810A88C @ =0x3C6EF35F
	adds r0, r0, r2
	str r0, [r5]
	lsrs r0, r0, #0x10
	ands r0, r1
	adds r3, #1
	adds r1, r4, r3
	strb r0, [r1]
	movs r5, #0x99
	lsls r5, r5, #1
	adds r1, r4, r5
	b _0810AAFC
	.align 2, 0
_0810A88C: .4byte 0x3C6EF35F
_0810A890:
	ldr r1, _0810A8FC @ =0x00000139
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r3, r0
	ble _0810A990
	movs r2, #3
	str r2, [sp, #4]
	movs r6, #3
	movs r3, #0x93
	lsls r3, r3, #1
	adds r0, r4, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _0810A8AE
	movs r6, #0
_0810A8AE:
	movs r1, #0x99
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #2
	bls _0810A8C0
	movs r6, #0
	movs r2, #8
	str r2, [sp, #4]
_0810A8C0:
	mov r0, r8
	adds r0, #0xe1
	movs r2, #1
	strb r2, [r0]
	mov r0, sb
	adds r0, #0xe1
	strb r2, [r0]
	ldr r0, [r5]
	muls r0, r7, r0
	mov r3, ip
	adds r1, r0, r3
	str r1, [r5]
	lsrs r0, r1, #0x10
	movs r3, #3
	ands r0, r3
	cmp r0, #0
	beq _0810A900
	adds r0, r1, #0
	muls r0, r7, r0
	add r0, ip
	str r0, [r5]
	lsrs r0, r0, #0x10
	ands r0, r2
	adds r0, #4
	movs r2, #0x94
	lsls r2, r2, #1
	adds r1, r4, r2
	strb r0, [r1]
	b _0810A908
	.align 2, 0
_0810A8FC: .4byte 0x00000139
_0810A900:
	movs r1, #0x94
	lsls r1, r1, #1
	adds r0, r4, r1
	strb r3, [r0]
_0810A908:
	mov r2, sl
	lsls r0, r2, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r6
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0810A928
	movs r3, #0x93
	lsls r3, r3, #1
	adds r1, r4, r3
	movs r0, #0
	strb r0, [r1]
	movs r5, #0x99
	lsls r5, r5, #1
	adds r1, r4, r5
	b _0810AAFC
_0810A928:
	ldr r0, [r5]
	ldr r6, _0810A95C @ =0x00196225
	muls r0, r6, r0
	ldr r1, _0810A960 @ =0x3C6EF35F
	adds r2, r0, r1
	str r2, [r5]
	lsrs r0, r2, #0x10
	movs r1, #7
	ands r0, r1
	ldr r3, [sp, #4]
	subs r0, r0, r3
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0810A968
	adds r0, r2, #0
	muls r0, r6, r0
	ldr r1, _0810A960 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r5]
	lsrs r2, r0, #0x10
	ldr r0, _0810A964 @ =0x00005554
	cmp r2, r0
	bhi _0810A958
	b _0810AA76
_0810A958:
	b _0810AA88
	.align 2, 0
_0810A95C: .4byte 0x00196225
_0810A960: .4byte 0x3C6EF35F
_0810A964: .4byte 0x00005554
_0810A968:
	ldr r0, [sp]
	movs r1, #1
	bl sub_0810A534
	movs r2, #0x93
	lsls r2, r2, #1
	adds r1, r4, r2
	movs r0, #2
	strb r0, [r1]
	ldr r0, [r5]
	muls r0, r6, r0
	ldr r3, _0810A98C @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r5]
	lsrs r0, r0, #0x10
	movs r1, #1
	b _0810AAEE
	.align 2, 0
_0810A98C: .4byte 0x3C6EF35F
_0810A990:
	movs r1, #3
	str r1, [sp, #4]
	movs r3, #0x93
	lsls r3, r3, #1
	adds r0, r4, r3
	ldrb r0, [r0]
	movs r1, #0x99
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #2
	bls _0810A9AC
	movs r3, #8
	str r3, [sp, #4]
_0810A9AC:
	movs r6, #3
	adds r0, r2, #0
	muls r0, r7, r0
	add r0, ip
	str r0, [r5]
	lsrs r0, r0, #0x10
	movs r3, #1
	ands r0, r3
	mov r2, r8
	adds r2, #0xe1
	strb r0, [r2]
	mov r1, sb
	adds r1, #0xe1
	strb r0, [r1]
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0
	beq _0810AA04
	ldr r0, [r5]
	muls r0, r7, r0
	mov r2, ip
	adds r1, r0, r2
	str r1, [r5]
	lsrs r0, r1, #0x10
	ands r0, r6
	cmp r0, #0
	beq _0810A9FA
	adds r0, r1, #0
	muls r0, r7, r0
	add r0, ip
	str r0, [r5]
	lsrs r0, r0, #0x10
	ands r0, r3
	adds r0, #4
	movs r3, #0x94
	lsls r3, r3, #1
	adds r1, r4, r3
	strb r0, [r1]
	b _0810AA28
_0810A9FA:
	movs r1, #0x94
	lsls r1, r1, #1
	adds r0, r4, r1
	strb r6, [r0]
	b _0810AA28
_0810AA04:
	ldr r0, [r5]
	muls r0, r7, r0
	add r0, ip
	str r0, [r5]
	lsrs r0, r0, #0x10
	ands r0, r3
	cmp r0, #0
	beq _0810AA20
	movs r2, #0x94
	lsls r2, r2, #1
	adds r1, r4, r2
	movs r0, #2
	strb r0, [r1]
	b _0810AA28
_0810AA20:
	movs r1, #0x94
	lsls r1, r1, #1
	adds r0, r4, r1
	strb r3, [r0]
_0810AA28:
	mov r2, sl
	lsls r0, r2, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r6
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0810AA48
	movs r3, #0x93
	lsls r3, r3, #1
	adds r1, r4, r3
	movs r0, #0
	strb r0, [r1]
	movs r5, #0x99
	lsls r5, r5, #1
	adds r1, r4, r5
	b _0810AAFC
_0810AA48:
	ldr r0, [r5]
	ldr r6, _0810AA7C @ =0x00196225
	muls r0, r6, r0
	ldr r1, _0810AA80 @ =0x3C6EF35F
	adds r2, r0, r1
	str r2, [r5]
	lsrs r0, r2, #0x10
	movs r1, #7
	ands r0, r1
	ldr r3, [sp, #4]
	subs r0, r0, r3
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0810AAD0
	adds r0, r2, #0
	muls r0, r6, r0
	ldr r1, _0810AA80 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r5]
	lsrs r2, r0, #0x10
	ldr r0, _0810AA84 @ =0x00005554
	cmp r2, r0
	bhi _0810AA88
_0810AA76:
	movs r1, #0
	b _0810AA92
	.align 2, 0
_0810AA7C: .4byte 0x00196225
_0810AA80: .4byte 0x3C6EF35F
_0810AA84: .4byte 0x00005554
_0810AA88:
	ldr r0, _0810AAC0 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _0810AA92
	movs r1, #1
_0810AA92:
	adds r0, r1, #3
	movs r2, #0x93
	lsls r2, r2, #1
	adds r1, r4, r2
	movs r2, #0
	strb r0, [r1]
	ldr r1, [r5]
	ldr r0, _0810AAC4 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _0810AAC8 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r5]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	ldr r5, _0810AACC @ =0x00000127
	adds r1, r4, r5
	strb r0, [r1]
	movs r1, #0x99
	lsls r1, r1, #1
	adds r0, r4, r1
	strb r2, [r0]
	b _0810AB02
	.align 2, 0
_0810AAC0: .4byte 0x0000AAA9
_0810AAC4: .4byte 0x00196225
_0810AAC8: .4byte 0x3C6EF35F
_0810AACC: .4byte 0x00000127
_0810AAD0:
	ldr r0, [sp]
	movs r1, #2
	bl sub_0810A534
	movs r2, #0x93
	lsls r2, r2, #1
	adds r0, r4, r2
	movs r1, #1
	strb r1, [r0]
	ldr r0, [r5]
	muls r0, r6, r0
	ldr r3, _0810AB14 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r5]
	lsrs r0, r0, #0x10
_0810AAEE:
	ands r0, r1
	ldr r5, _0810AB18 @ =0x00000127
	adds r1, r4, r5
_0810AAF4:
	strb r0, [r1]
	movs r0, #0x99
	lsls r0, r0, #1
	adds r1, r4, r0
_0810AAFC:
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0810AB02:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0810AB14: .4byte 0x3C6EF35F
_0810AB18: .4byte 0x00000127

	thumb_func_start sub_0810AB1C
sub_0810AB1C: @ 0x0810AB1C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r4, #3
	movs r6, #3
	movs r0, #0x9a
	lsls r0, r0, #1
	adds r3, r5, r0
	ldrb r0, [r3]
	cmp r0, #0
	beq _0810AB34
	movs r4, #5
	movs r6, #1
_0810AB34:
	ldr r2, _0810AB60 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810AB64 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810AB68 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #7
	ands r0, r1
	subs r0, r0, r4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _0810AB6C
	movs r4, #0
	strb r4, [r3]
	adds r0, r5, #0
	bl sub_0810DCA4
	b _0810AB80
	.align 2, 0
_0810AB60: .4byte gRngVal
_0810AB64: .4byte 0x00196225
_0810AB68: .4byte 0x3C6EF35F
_0810AB6C:
	subs r0, r1, r6
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0810AB98
	movs r4, #0
	movs r0, #1
	strb r0, [r3]
	adds r0, r5, #0
	bl sub_081142B0
_0810AB80:
	movs r1, #0x99
	lsls r1, r1, #1
	adds r0, r5, r1
	strb r4, [r0]
	ldr r0, _0810AB94 @ =0x00000133
	adds r1, r5, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _0810ABB4
	.align 2, 0
_0810AB94: .4byte 0x00000133
_0810AB98:
	ldr r0, _0810ABBC @ =0x00000133
	adds r1, r5, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r0, #0x99
	lsls r0, r0, #1
	adds r1, r5, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_0810C9C8
_0810ABB4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0810ABBC: .4byte 0x00000133

	thumb_func_start sub_0810ABC0
sub_0810ABC0: @ 0x0810ABC0
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	movs r5, #0
	adds r4, r3, #0
	adds r0, r4, #0
	adds r0, #0xfc
	ldr r2, [r0]
	movs r0, #0x93
	lsls r0, r0, #1
	adds r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _0810ABEC
	movs r5, #3
	adds r0, r2, #0
	adds r0, #0xe1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _0810ABF8
	b _0810ABF6
_0810ABEC:
	subs r0, #3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _0810ABF8
_0810ABF6:
	movs r5, #5
_0810ABF8:
	ldr r2, _0810AC3C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810AC40 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810AC44 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #7
	ands r1, r0
	adds r0, r3, #0
	adds r0, #0x80
	movs r6, #0
	ldrsh r2, [r0, r6]
	movs r6, #0x9c
	lsls r6, r6, #1
	adds r0, r4, r6
	ldrb r0, [r0]
	cmp r2, r0
	bgt _0810AC48
	adds r6, #1
	adds r0, r4, r6
	ldrb r0, [r0]
	cmp r2, r0
	bgt _0810AC48
	subs r0, r1, r5
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0810AC48
	adds r0, r3, #0
	bl sub_0810EA50
	b _0810AC64
	.align 2, 0
_0810AC3C: .4byte gRngVal
_0810AC40: .4byte 0x00196225
_0810AC44: .4byte 0x3C6EF35F
_0810AC48:
	adds r0, r3, #0
	bl sub_0810C9C8
	movs r0, #0x99
	lsls r0, r0, #1
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r6, _0810AC6C @ =0x00000133
	adds r1, r4, r6
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0810AC64:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0810AC6C: .4byte 0x00000133

	thumb_func_start sub_0810AC70
sub_0810AC70: @ 0x0810AC70
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	ldr r0, _0810AC98 @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0810AC9C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0810ACA4
	.align 2, 0
_0810AC98: .4byte gCurTask
_0810AC9C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0810ACA4:
	adds r7, r0, #0
	mov sl, r7
	ldr r2, [r7, #0x40]
	asrs r2, r2, #8
	ldr r4, _0810ADF0 @ =gCurLevelInfo
	ldr r0, _0810ADF4 @ =gUnk_0203AD3C
	ldrb r5, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	adds r3, r5, #0
	muls r3, r0, r3
	adds r0, r4, #0
	adds r0, #0xc
	adds r0, r3, r0
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	adds r0, r7, #0
	adds r0, #0x54
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r1, r1, r2
	ldr r2, [r7, #0x44]
	asrs r2, r2, #8
	adds r4, #0x10
	adds r3, r3, r4
	ldr r0, [r3]
	asrs r0, r0, #8
	subs r2, r2, r0
	adds r0, r7, #0
	adds r0, #0x55
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r2
	ldr r2, _0810ADF8 @ =gUnk_0203AD18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r3, [r2]
	adds r1, r1, r3
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r2, [r2, #2]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	movs r1, #0x8f
	lsls r1, r1, #1
	adds r0, r7, r1
	ldrh r2, [r0]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r7, r3
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	ldr r0, _0810ADFC @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #8
	mov r8, r1
	ands r0, r1
	cmp r0, #0
	beq _0810AD58
	movs r1, #0xa0
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	rsbs r0, r2, #0
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r3, #0
	mov r3, sb
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	subs r1, r1, r0
	mov sb, r1
	ldr r1, _0810AE00 @ =0x000003FF
	adds r0, r1, #0
	mov r3, sb
	ands r3, r0
	mov sb, r3
_0810AD58:
	ldr r1, _0810AE04 @ =gUnk_02020EE0
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r5, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x60
	ldrh r0, [r0]
	str r1, [sp, #0x10]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810AD9C
	mov r0, sb
	movs r3, #0x8e
	lsls r3, r3, #1
	adds r1, r7, r3
	movs r3, #0
	ldrsh r1, [r1, r3]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #0x40
	str r3, [sp]
	lsls r3, r6, #0x10
	asrs r3, r3, #0x10
	str r3, [sp, #4]
	lsls r3, r4, #0x10
	asrs r3, r3, #0x10
	str r3, [sp, #8]
	ldr r3, _0810AE08 @ =gBgAffineRegs
	str r3, [sp, #0xc]
	movs r3, #0x40
	bl sub_081548A8
_0810AD9C:
	adds r6, r7, #0
	adds r6, #0xb4
	ldr r0, [r7, #8]
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _0810ADAC
	b _0810B06A
_0810ADAC:
	ldr r2, _0810AE0C @ =0x00000135
	adds r1, r7, r2
	ldrb r4, [r1]
	movs r5, #0
	strh r0, [r6, #0xc]
	strb r5, [r6, #0x1a]
	ldr r1, [r7, #8]
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r1, r0
	str r1, [r7, #8]
	subs r0, #0xca
	adds r3, r7, r0
	ldrb r2, [r3]
	cmp r2, #0
	beq _0810AE3A
	cmp r4, #2
	beq _0810ADD4
	cmp r4, #0
	bne _0810AE28
_0810ADD4:
	movs r4, #5
	ldr r0, _0810AE10 @ =0x00000131
	ldrb r0, [r0, r7]
	cmp r0, #0
	bne _0810AE3A
	cmp r2, #2
	bne _0810AE14
	movs r4, #0
	ands r1, r2
	cmp r1, #0
	beq _0810AE1A
	strb r5, [r3]
	b _0810AE1A
	.align 2, 0
_0810ADF0: .4byte gCurLevelInfo
_0810ADF4: .4byte gUnk_0203AD3C
_0810ADF8: .4byte gUnk_0203AD18
_0810ADFC: .4byte gUnk_0203AD20
_0810AE00: .4byte 0x000003FF
_0810AE04: .4byte gUnk_02020EE0
_0810AE08: .4byte gBgAffineRegs
_0810AE0C: .4byte 0x00000135
_0810AE10: .4byte 0x00000131
_0810AE14:
	movs r4, #0
	movs r0, #2
	strb r0, [r3]
_0810AE1A:
	ldr r0, [r7, #8]
	ldr r1, _0810AE24 @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r7, #8]
	b _0810AE3A
	.align 2, 0
_0810AE24: .4byte 0xFFFFFBFF
_0810AE28:
	ldr r2, _0810AE60 @ =0x00000131
	adds r0, r7, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _0810AE3A
	ldr r0, _0810AE64 @ =0xFFFFFBFF
	ands r1, r0
	str r1, [r7, #8]
	strb r5, [r3]
_0810AE3A:
	movs r0, #0x8e
	lsls r0, r0, #1
	add r0, sl
	movs r3, #0
	ldrsh r0, [r0, r3]
	movs r3, #0x80
	lsls r3, r3, #1
	cmp r0, r3
	beq _0810AE4E
	movs r4, #5
_0810AE4E:
	cmp r4, #1
	bne _0810AE54
	b _0810AF98
_0810AE54:
	cmp r4, #1
	bgt _0810AE68
	cmp r4, #0
	beq _0810AF00
	b _0810AFEE
	.align 2, 0
_0810AE60: .4byte 0x00000131
_0810AE64: .4byte 0xFFFFFBFF
_0810AE68:
	cmp r4, #2
	beq _0810AE74
	cmp r4, #3
	bne _0810AE72
	b _0810AFD4
_0810AE72:
	b _0810AFEE
_0810AE74:
	mov r1, sb
	lsls r0, r1, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	beq _0810AE86
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r2, r0
	bne _0810AED0
_0810AE86:
	ldr r0, _0810AEAC @ =gUnk_08357304
	ldrh r1, [r0, #8]
	strh r1, [r6, #0xc]
	ldrb r0, [r0, #0xa]
	strb r0, [r6, #0x1a]
	cmp r2, #0
	beq _0810AEB0
	movs r1, #8
	rsbs r1, r1, #0
	movs r2, #0x20
	rsbs r2, r2, #0
	movs r0, #0x10
	rsbs r0, r0, #0
	str r0, [sp]
	adds r0, r7, #0
	movs r3, #8
	bl sub_0803E2B0
	b _0810AEC2
	.align 2, 0
_0810AEAC: .4byte gUnk_08357304
_0810AEB0:
	movs r1, #8
	rsbs r1, r1, #0
	movs r0, #0x20
	str r0, [sp]
	adds r0, r7, #0
	movs r2, #0x10
	movs r3, #8
	bl sub_0803E2B0
_0810AEC2:
	ldr r0, [r7, #8]
	ldr r1, _0810AECC @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r7, #8]
	b _0810AFEE
	.align 2, 0
_0810AECC: .4byte 0xFFFFFDFF
_0810AED0:
	cmp r2, r3
	beq _0810AEDE
	movs r0, #0xc0
	lsls r0, r0, #2
	cmp r2, r0
	beq _0810AEDE
	b _0810AFEE
_0810AEDE:
	ldr r1, _0810AEF8 @ =gUnk_08357304
	ldrh r0, [r1, #0x14]
	strh r0, [r6, #0xc]
	ldrb r0, [r1, #0x16]
	strb r0, [r6, #0x1a]
	ldr r0, [r7, #8]
	ldr r1, _0810AEFC @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r7, #8]
	cmp r2, r3
	beq _0810AF66
	b _0810AF84
	.align 2, 0
_0810AEF8: .4byte gUnk_08357304
_0810AEFC: .4byte 0xFFFFFDFF
_0810AF00:
	mov r2, sb
	lsls r0, r2, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	beq _0810AF12
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r2, r0
	bne _0810AF4C
_0810AF12:
	ldr r0, _0810AF34 @ =gUnk_08357304
	ldrh r1, [r0]
	strh r1, [r6, #0xc]
	ldrb r0, [r0, #2]
	strb r0, [r6, #0x1a]
	cmp r2, #0
	beq _0810AF38
	movs r1, #8
	rsbs r1, r1, #0
	movs r2, #0x20
	rsbs r2, r2, #0
	movs r0, #0x10
	rsbs r0, r0, #0
	str r0, [sp]
	adds r0, r7, #0
	b _0810AF44
	.align 2, 0
_0810AF34: .4byte gUnk_08357304
_0810AF38:
	movs r1, #8
	rsbs r1, r1, #0
	movs r0, #0x20
	str r0, [sp]
	adds r0, r7, #0
	movs r2, #0x10
_0810AF44:
	movs r3, #8
	bl sub_0803E2B0
	b _0810AFEE
_0810AF4C:
	cmp r2, r3
	beq _0810AF58
	movs r0, #0xc0
	lsls r0, r0, #2
	cmp r2, r0
	bne _0810AFEE
_0810AF58:
	ldr r0, _0810AF80 @ =gUnk_08357304
	ldrh r1, [r0, #0xc]
	strh r1, [r6, #0xc]
	ldrb r0, [r0, #0xe]
	strb r0, [r6, #0x1a]
	cmp r2, r3
	bne _0810AF84
_0810AF66:
	movs r1, #0x20
	rsbs r1, r1, #0
	movs r2, #8
	rsbs r2, r2, #0
	movs r3, #0x10
	rsbs r3, r3, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r7, #0
	bl sub_0803E2B0
	b _0810AFEE
	.align 2, 0
_0810AF80: .4byte gUnk_08357304
_0810AF84:
	movs r2, #8
	rsbs r2, r2, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r7, #0
	movs r1, #0x10
	movs r3, #0x20
	bl sub_0803E2B0
	b _0810AFEE
_0810AF98:
	mov r1, sb
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	beq _0810AFAA
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r1, r0
	bne _0810AFB8
_0810AFAA:
	ldr r0, _0810AFB4 @ =gUnk_08357304
	ldrh r1, [r0, #4]
	strh r1, [r6, #0xc]
	ldrb r0, [r0, #6]
	b _0810AFEC
	.align 2, 0
_0810AFB4: .4byte gUnk_08357304
_0810AFB8:
	cmp r1, r3
	beq _0810AFC4
	movs r0, #0xc0
	lsls r0, r0, #2
	cmp r1, r0
	bne _0810AFEE
_0810AFC4:
	ldr r0, _0810AFD0 @ =gUnk_08357304
	ldrh r1, [r0, #0x10]
	strh r1, [r6, #0xc]
	ldrb r0, [r0, #0x12]
	b _0810AFEC
	.align 2, 0
_0810AFD0: .4byte gUnk_08357304
_0810AFD4:
	mov r2, sb
	lsls r0, r2, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	beq _0810AFE6
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r1, r0
	bne _0810AFEE
_0810AFE6:
	ldr r0, _0810AFFC @ =0x00000399
	strh r0, [r6, #0xc]
	movs r0, #0x27
_0810AFEC:
	strb r0, [r6, #0x1a]
_0810AFEE:
	ldrh r1, [r6, #0xc]
	cmp r1, #0
	bne _0810B000
	adds r0, r7, #0
	adds r0, #0x54
	b _0810B0AA
	.align 2, 0
_0810AFFC: .4byte 0x00000399
_0810B000:
	ldrb r0, [r6, #0x1b]
	ldrb r3, [r6, #0x1a]
	cmp r0, r3
	bne _0810B00E
	ldrh r0, [r6, #0x18]
	cmp r0, r1
	beq _0810B01E
_0810B00E:
	movs r0, #0
	strb r0, [r7, #1]
	strh r0, [r7, #2]
	ldr r0, [r7, #8]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r7, #8]
_0810B01E:
	adds r0, r6, #0
	bl sub_08155128
	adds r2, r0, #0
	cmp r2, #0
	bne _0810B054
	ldr r0, [r7, #8]
	movs r1, #2
	orrs r0, r1
	str r0, [r7, #8]
	subs r0, r4, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _0810B06A
	movs r0, #0xff
	strb r0, [r6, #0x1b]
	strb r2, [r7, #1]
	strh r2, [r7, #2]
	ldr r0, [r7, #8]
	subs r1, #7
	ands r0, r1
	str r0, [r7, #8]
	adds r0, r6, #0
	bl sub_08155128
	b _0810B06A
_0810B054:
	ldr r0, [r7, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r7, #8]
	ldrb r1, [r6, #0x1c]
	ldrh r0, [r7, #2]
	adds r0, r0, r1
	strh r0, [r7, #2]
	lsrs r0, r0, #4
	strb r0, [r7, #1]
_0810B06A:
	ldr r0, _0810B0B4 @ =0x00000135
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #1
	bne _0810B07E
	ldr r0, [r7, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _0810B0A4
_0810B07E:
	ldr r0, _0810B0B4 @ =0x00000135
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	bne _0810B098
	ldr r1, [r7, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0810B098
	ldr r0, _0810B0B8 @ =0xFFFFFDFF
	ands r1, r0
	str r1, [r7, #8]
_0810B098:
	ldr r3, [r7, #8]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r3, r0
	cmp r3, #0
	beq _0810B0BC
_0810B0A4:
	adds r0, r7, #0
	adds r0, #0x54
	movs r1, #0
_0810B0AA:
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	b _0810B1D8
	.align 2, 0
_0810B0B4: .4byte 0x00000135
_0810B0B8: .4byte 0xFFFFFDFF
_0810B0BC:
	ldr r2, _0810B0E4 @ =gUnk_02020EE0
	ldr r1, _0810B0E8 @ =gUnk_0203AD3C
	ldrb r5, [r1]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r5, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r1, [sp, #0x10]
	ldrh r1, [r1]
	cmp r0, r1
	beq _0810B0EC
	adds r0, r7, #0
	adds r0, #0x54
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	b _0810B1D8
	.align 2, 0
_0810B0E4: .4byte gUnk_02020EE0
_0810B0E8: .4byte gUnk_0203AD3C
_0810B0EC:
	ldr r2, [r7, #0x40]
	asrs r2, r2, #8
	ldr r4, _0810B16C @ =gCurLevelInfo
	movs r3, #0xcd
	lsls r3, r3, #3
	mov ip, r3
	mov r0, ip
	muls r0, r5, r0
	adds r1, r4, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	movs r0, #0x54
	adds r0, r0, r7
	mov r8, r0
	movs r3, #0
	ldrsb r3, [r0, r3]
	adds r3, r3, r2
	movs r1, #0
	mov sl, r1
	strh r3, [r6, #0x10]
	ldr r2, [r7, #0x44]
	asrs r2, r2, #8
	ldr r1, _0810B170 @ =gUnk_0203AD3C
	ldrb r0, [r1]
	mov r1, ip
	muls r1, r0, r1
	adds r0, r1, #0
	adds r4, #0x10
	adds r0, r0, r4
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	adds r4, r7, #0
	adds r4, #0x55
	movs r1, #0
	ldrsb r1, [r4, r1]
	adds r1, r1, r2
	strh r1, [r6, #0x12]
	ldr r2, _0810B174 @ =gUnk_0203AD18
	ldrh r0, [r2]
	adds r3, r3, r0
	strh r3, [r6, #0x10]
	ldrh r0, [r2, #2]
	adds r1, r1, r0
	strh r1, [r6, #0x12]
	mov r2, sl
	strb r2, [r4]
	mov r3, r8
	strb r2, [r3]
	mov r1, sb
	lsls r0, r1, #0x10
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r2, r0, #0
	cmp r2, r1
	bne _0810B178
	ldr r0, [r6, #8]
	movs r3, #0x80
	lsls r3, r3, #3
	orrs r0, r3
	b _0810B17E
	.align 2, 0
_0810B16C: .4byte gCurLevelInfo
_0810B170: .4byte gUnk_0203AD3C
_0810B174: .4byte gUnk_0203AD18
_0810B178:
	ldr r0, [r6, #8]
	ldr r1, _0810B1A8 @ =0xFFFFFBFF
	ands r0, r1
_0810B17E:
	str r0, [r6, #8]
	ldr r0, _0810B1AC @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _0810B196
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	eors r0, r1
	str r0, [r6, #8]
_0810B196:
	movs r0, #0x80
	lsls r0, r0, #0x12
	cmp r2, r0
	bne _0810B1B0
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	b _0810B1B6
	.align 2, 0
_0810B1A8: .4byte 0xFFFFFBFF
_0810B1AC: .4byte gUnk_0203AD20
_0810B1B0:
	ldr r0, [r6, #8]
	ldr r1, _0810B1E8 @ =0xFFFFF7FF
	ands r0, r1
_0810B1B6:
	str r0, [r6, #8]
	ldr r0, _0810B1EC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	ldr r1, _0810B1F0 @ =gUnk_02020EE0
	adds r0, r0, r1
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r2, [sp, #0x10]
	ldrh r2, [r2]
	cmp r0, r2
	bne _0810B1D8
	adds r0, r6, #0
	bl sub_0815604C
_0810B1D8:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0810B1E8: .4byte 0xFFFFF7FF
_0810B1EC: .4byte gUnk_0203AD3C
_0810B1F0: .4byte gUnk_02020EE0

	thumb_func_start sub_0810B1F4
sub_0810B1F4: @ 0x0810B1F4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x44
	ldr r2, _0810B21C @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	adds r5, r2, #0
	cmp r0, #0
	beq _0810B220
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0810B228
	.align 2, 0
_0810B21C: .4byte gCurTask
_0810B220:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0810B228:
	mov r8, r0
	mov sl, r8
	ldr r0, [r0, #8]
	movs r4, #0x80
	lsls r4, r4, #5
	ands r0, r4
	cmp r0, #0
	beq _0810B280
	mov r0, r8
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _0810B26E
	ldr r1, _0810B278 @ =gUnk_02020EE0
	mov r0, r8
	adds r0, #0x86
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r2, r0, r2
	adds r1, #0xec
	adds r2, r2, r1
	ldr r3, _0810B27C @ =gUnk_08351648
	mov r0, r8
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r3
	ldrh r1, [r0, #2]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
_0810B26E:
	ldr r0, [r5]
	bl TaskDestroy
	b _0810B81E
	.align 2, 0
_0810B278: .4byte gUnk_02020EE0
_0810B27C: .4byte gUnk_08351648
_0810B280:
	mov r0, r8
	bl sub_0803D6B4
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0810B29E
	mov r1, r8
	adds r1, #0x80
	movs r0, #1
	strh r0, [r1]
	mov r2, r8
	ldr r0, [r2, #8]
	orrs r0, r4
	str r0, [r2, #8]
	b _0810B81E
_0810B29E:
	ldr r2, _0810B2E4 @ =gUnk_02020EE0
	ldr r3, _0810B2E8 @ =gUnk_0203AD3C
	ldrb r1, [r3]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	mov r1, r8
	adds r1, #0x60
	ldrh r0, [r0]
	adds r5, r2, #0
	str r1, [sp, #0x40]
	ldrh r4, [r1]
	cmp r0, r4
	beq _0810B2C0
	b _0810B3D8
_0810B2C0:
	ldr r2, _0810B2EC @ =gWinRegs
	movs r0, #0xf0
	strh r0, [r2]
	ldr r0, _0810B2F0 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #8
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	beq _0810B2F8
	ldr r0, _0810B2F4 @ =gUnk_0203AD18
	ldrh r2, [r0, #2]
	movs r0, #9
	subs r0, r0, r2
	lsls r0, r0, #8
	movs r1, #0x18
	subs r1, r1, r2
	b _0810B304
	.align 2, 0
_0810B2E4: .4byte gUnk_02020EE0
_0810B2E8: .4byte gUnk_0203AD3C
_0810B2EC: .4byte gWinRegs
_0810B2F0: .4byte gUnk_0203AD20
_0810B2F4: .4byte gUnk_0203AD18
_0810B2F8:
	ldr r0, _0810B388 @ =gUnk_0203AD18
	ldrh r1, [r0, #2]
	adds r0, r1, #0
	adds r0, #0x88
	lsls r0, r0, #8
	adds r1, #0x97
_0810B304:
	orrs r0, r1
	strh r0, [r4, #4]
	movs r0, #0x33
	strh r0, [r4, #8]
	movs r0, #0x1f
	strh r0, [r4, #0xa]
	ldr r2, _0810B38C @ =gDispCnt
	ldrh r0, [r2]
	movs r6, #0x80
	lsls r6, r6, #6
	adds r1, r6, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0810B390 @ =gBldRegs
	movs r0, #0xb0
	lsls r0, r0, #4
	strh r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #5
	strh r0, [r1, #2]
	ldrb r1, [r3]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r5
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r7, [sp, #0x40]
	ldrh r7, [r7]
	cmp r0, r7
	bne _0810B3D8
	mov r1, r8
	ldr r0, [r1, #8]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _0810B39C
	mov r0, sl
	adds r0, #0xb4
	ldr r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	bne _0810B404
	ldrh r1, [r6, #0xc]
	ldrb r2, [r6, #0x1a]
	movs r0, #0x18
	bl sub_0803DE54
	str r0, [r6]
	ldr r0, [r6, #8]
	ldr r1, _0810B394 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r6, #8]
	mov r0, r8
	adds r0, #0x10
	ldr r2, _0810B398 @ =0x0400000A
	add r1, sp, #0x10
	bl CpuSet
	mov r2, r8
	ldrb r1, [r2, #1]
	add r0, sp, #0x10
	bl sub_0815521C
	b _0810B3FA
	.align 2, 0
_0810B388: .4byte gUnk_0203AD18
_0810B38C: .4byte gDispCnt
_0810B390: .4byte gBldRegs
_0810B394: .4byte 0xFFF7FFFF
_0810B398: .4byte 0x0400000A
_0810B39C:
	mov r0, sl
	adds r0, #0xb4
	ldr r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	bne _0810B404
	movs r0, #0x18
	bl sub_081570B0
	str r0, [r6]
	ldr r0, [r6, #8]
	ldr r1, _0810B3D0 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r6, #8]
	mov r0, r8
	adds r0, #0x10
	ldr r2, _0810B3D4 @ =0x0400000A
	add r1, sp, #0x10
	bl CpuSet
	mov r3, r8
	ldrb r1, [r3, #1]
	add r0, sp, #0x10
	bl sub_0815521C
	b _0810B404
	.align 2, 0
_0810B3D0: .4byte 0xFFF7FFFF
_0810B3D4: .4byte 0x0400000A
_0810B3D8:
	mov r0, sl
	adds r0, #0xb4
	ldr r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	beq _0810B3FA
	mov r7, r8
	ldr r4, [r7, #8]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r4, r0
	cmp r4, #0
	bne _0810B3FA
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r6]
_0810B3FA:
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r6, #8]
_0810B404:
	ldr r0, _0810B5C8 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	mov r3, r8
	adds r3, #0x56
	movs r0, #1
	ldrb r1, [r3]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	adds r4, r3, #0
	cmp r2, #0
	bne _0810B420
	b _0810B670
_0810B420:
	mov r2, r8
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	beq _0810B430
	b _0810B670
_0810B430:
	ldr r2, [r2, #0x40]
	asrs r2, r2, #8
	ldr r4, _0810B5CC @ =gCurLevelInfo
	ldr r0, _0810B5D0 @ =gUnk_0203AD3C
	ldrb r0, [r0]
	mov sb, r0
	movs r0, #0xcd
	lsls r0, r0, #3
	mov r3, sb
	muls r3, r0, r3
	adds r0, r4, #0
	adds r0, #0xc
	adds r0, r3, r0
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	mov r5, r8
	adds r5, #0x54
	movs r1, #0
	ldrsb r1, [r5, r1]
	adds r1, r1, r2
	mov r7, r8
	ldr r2, [r7, #0x44]
	asrs r2, r2, #8
	adds r4, #0x10
	adds r3, r3, r4
	ldr r0, [r3]
	asrs r0, r0, #8
	subs r2, r2, r0
	mov r3, r8
	adds r3, #0x55
	movs r0, #0
	ldrsb r0, [r3, r0]
	adds r0, r0, r2
	ldr r2, _0810B5D4 @ =gUnk_0203AD18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r4, [r2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov ip, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r2, [r2, #2]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r0, #0x8f
	lsls r0, r0, #1
	add r0, sl
	ldrh r2, [r0]
	movs r0, #0x90
	lsls r0, r0, #1
	add r0, sl
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, _0810B5D8 @ =gUnk_0203AD20
	ldr r1, [r0]
	movs r0, #8
	ands r1, r0
	str r5, [sp, #0x38]
	str r3, [sp, #0x3c]
	cmp r1, #0
	beq _0810B4DC
	movs r1, #0xa0
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	rsbs r0, r2, #0
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	movs r0, #0x80
	lsls r0, r0, #3
	adds r1, r0, #0
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	subs r4, r1, r0
	ldr r1, _0810B5DC @ =0x000003FF
	adds r0, r1, #0
	ands r4, r0
_0810B4DC:
	ldr r1, _0810B5E0 @ =gUnk_02020EE0
	movs r0, #0xd4
	lsls r0, r0, #1
	mov r3, sb
	muls r3, r0, r3
	adds r0, r3, #0
	adds r0, r0, r1
	adds r0, #0x60
	ldrh r0, [r0]
	lsls r4, r4, #0x10
	mov sb, r4
	ldr r4, [sp, #0x40]
	ldrh r4, [r4]
	cmp r0, r4
	bne _0810B528
	mov r1, sb
	lsrs r0, r1, #0x10
	movs r1, #0x8e
	lsls r1, r1, #1
	add r1, sl
	movs r3, #0
	ldrsh r1, [r1, r3]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #0x40
	str r3, [sp]
	mov r4, ip
	lsls r3, r4, #0x10
	asrs r3, r3, #0x10
	str r3, [sp, #4]
	lsls r3, r7, #0x10
	asrs r3, r3, #0x10
	str r3, [sp, #8]
	ldr r3, _0810B5E4 @ =gBgAffineRegs
	str r3, [sp, #0xc]
	movs r3, #0x40
	bl sub_081548A8
_0810B528:
	mov r7, sb
	asrs r1, r7, #0x10
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r1, r0
	beq _0810B54A
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r1, r0
	beq _0810B54A
	movs r0, #0xc0
	lsls r0, r0, #2
	cmp r1, r0
	beq _0810B54A
	cmp r1, #0
	beq _0810B54A
	b _0810B81E
_0810B54A:
	movs r0, #0x8e
	lsls r0, r0, #1
	add r0, sl
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r1, r0
	beq _0810B55E
	b _0810B81E
_0810B55E:
	adds r7, r6, #0
	mov r3, r8
	ldr r2, [r3, #0x40]
	asrs r2, r2, #8
	ldr r4, _0810B5CC @ =gCurLevelInfo
	ldr r6, _0810B5D0 @ =gUnk_0203AD3C
	ldrb r0, [r6]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r1, r4, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	ldr r0, [sp, #0x38]
	movs r3, #0
	ldrsb r3, [r0, r3]
	adds r3, r3, r2
	strh r3, [r7, #0x10]
	mov r1, r8
	ldr r2, [r1, #0x44]
	asrs r2, r2, #8
	ldrb r0, [r6]
	muls r0, r5, r0
	adds r4, #0x10
	adds r0, r0, r4
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	ldr r4, [sp, #0x3c]
	movs r1, #0
	ldrsb r1, [r4, r1]
	adds r1, r1, r2
	strh r1, [r7, #0x12]
	ldr r2, _0810B5D4 @ =gUnk_0203AD18
	ldrh r0, [r2]
	adds r3, r3, r0
	strh r3, [r7, #0x10]
	ldrh r0, [r2, #2]
	adds r1, r1, r0
	strh r1, [r7, #0x12]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	cmp sb, r0
	bne _0810B5E8
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	b _0810B5EE
	.align 2, 0
_0810B5C8: .4byte gUnk_03000510
_0810B5CC: .4byte gCurLevelInfo
_0810B5D0: .4byte gUnk_0203AD3C
_0810B5D4: .4byte gUnk_0203AD18
_0810B5D8: .4byte gUnk_0203AD20
_0810B5DC: .4byte 0x000003FF
_0810B5E0: .4byte gUnk_02020EE0
_0810B5E4: .4byte gBgAffineRegs
_0810B5E8:
	ldr r0, [r7, #8]
	ldr r1, _0810B618 @ =0xFFFFFBFF
	ands r0, r1
_0810B5EE:
	str r0, [r7, #8]
	ldr r0, _0810B61C @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _0810B606
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	eors r0, r1
	str r0, [r7, #8]
_0810B606:
	movs r0, #0x80
	lsls r0, r0, #0x12
	cmp sb, r0
	bne _0810B620
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	b _0810B626
	.align 2, 0
_0810B618: .4byte 0xFFFFFBFF
_0810B61C: .4byte gUnk_0203AD20
_0810B620:
	ldr r0, [r7, #8]
	ldr r1, _0810B664 @ =0xFFFFF7FF
	ands r0, r1
_0810B626:
	str r0, [r7, #8]
	ldrh r0, [r7, #0xc]
	cmp r0, #0
	bne _0810B630
	b _0810B81E
_0810B630:
	movs r0, #0
	strb r0, [r7, #0x1c]
	adds r0, r7, #0
	bl sub_08155128
	movs r0, #0x10
	strb r0, [r7, #0x1c]
	ldr r2, _0810B668 @ =gUnk_02020EE0
	ldr r0, _0810B66C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r6, [sp, #0x40]
	ldrh r6, [r6]
	cmp r0, r6
	beq _0810B65A
	b _0810B81E
_0810B65A:
	adds r0, r7, #0
	bl sub_0815604C
	b _0810B81E
	.align 2, 0
_0810B664: .4byte 0xFFFFF7FF
_0810B668: .4byte gUnk_02020EE0
_0810B66C: .4byte gUnk_0203AD3C
_0810B670:
	mov r7, r8
	ldr r1, [r7, #0x7c]
	cmp r1, #0
	beq _0810B67E
	mov r0, r8
	bl _call_via_r1
_0810B67E:
	mov r0, r8
	ldr r1, [r0, #0x78]
	bl _call_via_r1
	mov r2, r8
	ldr r1, [r2, #8]
	movs r0, #0x80
	lsls r0, r0, #0xb
	ands r0, r1
	cmp r0, #0
	beq _0810B69A
	ldr r0, _0810B6C4 @ =0xFFFBFFFF
	ands r1, r0
	str r1, [r2, #8]
_0810B69A:
	mov r3, r8
	ldr r0, [r3, #8]
	movs r1, #0x90
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	bne _0810B70C
	ldrb r0, [r4]
	cmp r0, #0xff
	beq _0810B6D0
	ldr r2, _0810B6C8 @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r4, _0810B6CC @ =0x0000065E
	adds r0, r0, r4
	ldrb r1, [r0]
	b _0810B6D2
	.align 2, 0
_0810B6C4: .4byte 0xFFFBFFFF
_0810B6C8: .4byte gCurLevelInfo
_0810B6CC: .4byte 0x0000065E
_0810B6D0:
	movs r1, #0xff
_0810B6D2:
	cmp r1, #0xff
	beq _0810B70C
	lsls r3, r1, #6
	mov r6, r8
	ldrb r0, [r6]
	subs r0, #1
	lsls r0, r0, #5
	adds r3, r3, r0
	ldr r0, _0810B7AC @ =gUnk_02022EB0
	lsls r1, r1, #1
	subs r1, #1
	ldrb r7, [r6]
	adds r1, r1, r7
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0810B7B0 @ =gUnk_02022F50
	lsls r1, r0, #2
	adds r1, r1, r2
	str r6, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_0810B70C:
	mov r0, r8
	ldr r1, [r0, #8]
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _0810B80C
	movs r3, #0x80
	lsls r3, r3, #0x13
	mov sb, r3
	ands r1, r3
	cmp r1, #0
	bne _0810B746
	mov r1, r8
	adds r1, #0x50
	mov r0, r8
	adds r0, #0x98
	ldrh r0, [r0]
	ldrh r4, [r1]
	adds r0, r0, r4
	strh r0, [r1]
	adds r1, #2
	mov r0, r8
	adds r0, #0x9a
	ldrh r0, [r0]
	ldrh r6, [r1]
	adds r0, r0, r6
	strh r0, [r1]
_0810B746:
	mov r7, r8
	ldr r3, [r7, #8]
	adds r5, r3, #0
	ands r5, r2
	cmp r5, #0
	bne _0810B80C
	ldr r1, [r7, #0x40]
	str r1, [r7, #0x48]
	ldr r2, [r7, #0x44]
	str r2, [r7, #0x4c]
	mov r4, r8
	adds r4, #0x50
	movs r6, #0
	ldrsh r0, [r4, r6]
	adds r1, r1, r0
	str r1, [r7, #0x40]
	mov r1, r8
	adds r1, #0x52
	movs r7, #0
	ldrsh r0, [r1, r7]
	subs r2, r2, r0
	mov r0, r8
	str r2, [r0, #0x44]
	mov r2, r8
	adds r2, #0x98
	ldrh r6, [r2]
	movs r7, #0
	ldrsh r0, [r2, r7]
	adds r7, r1, #0
	cmp r0, #0
	beq _0810B7C2
	mov r0, sb
	ands r3, r0
	cmp r3, #0
	bne _0810B792
	ldrh r0, [r4]
	subs r0, r0, r6
	strh r0, [r4]
_0810B792:
	ldrh r1, [r2]
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0
	bge _0810B7B4
	adds r0, r1, #0
	adds r0, #0x10
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810B7C2
	b _0810B7C0
	.align 2, 0
_0810B7AC: .4byte gUnk_02022EB0
_0810B7B0: .4byte gUnk_02022F50
_0810B7B4:
	adds r0, r1, #0
	subs r0, #0x10
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810B7C2
_0810B7C0:
	strh r5, [r2]
_0810B7C2:
	mov r2, r8
	adds r2, #0x9a
	ldrh r3, [r2]
	movs r4, #0
	ldrsh r0, [r2, r4]
	cmp r0, #0
	beq _0810B80C
	mov r6, r8
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	ands r0, r1
	cmp r0, #0
	bne _0810B7E4
	ldrh r0, [r7]
	subs r0, r0, r3
	strh r0, [r7]
_0810B7E4:
	ldrh r1, [r2]
	movs r7, #0
	ldrsh r0, [r2, r7]
	cmp r0, #0
	bge _0810B7FC
	adds r0, r1, #0
	adds r0, #0x10
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810B80C
	b _0810B808
_0810B7FC:
	adds r0, r1, #0
	subs r0, #0x10
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810B80C
_0810B808:
	movs r0, #0
	strh r0, [r2]
_0810B80C:
	bl sub_0810AC70
	mov r1, r8
	ldr r0, [r1, #0xc]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, r8
	str r0, [r2, #0xc]
_0810B81E:
	add sp, #0x44
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810B830
sub_0810B830: @ 0x0810B830
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	ldr r0, _0810B8F0 @ =0x06008000
	str r0, [sp]
	mov r1, sp
	movs r2, #0
	movs r4, #0
	movs r0, #0xd0
	lsls r0, r0, #3
	strh r0, [r1, #0x14]
	ldr r0, _0810B8F4 @ =0x0000039B
	strh r0, [r1, #0xc]
	mov r0, sp
	strb r2, [r0, #0x1a]
	strh r4, [r0, #0x16]
	movs r0, #0xff
	strb r0, [r1, #0x1b]
	movs r0, #0x10
	strb r0, [r1, #0x1c]
	mov r0, sp
	strb r2, [r0, #0x1f]
	strh r4, [r0, #0x10]
	strh r4, [r0, #0x12]
	movs r0, #0x90
	lsls r0, r0, #0xb
	str r0, [sp, #8]
	mov r0, sp
	bl sub_08153D78
	str r4, [sp, #0x28]
	add r0, sp, #0x28
	ldr r4, _0810B8F8 @ =0x0600E800
	ldr r2, _0810B8FC @ =0x05000400
	adds r1, r4, #0
	bl CpuSet
	adds r6, r4, #0
	movs r5, #0
_0810B87C:
	movs r3, #0
	lsls r4, r5, #3
_0810B880:
	lsrs r1, r3, #1
	lsls r1, r1, #1
	adds r1, r1, r6
	adds r2, r3, r4
	adds r0, r3, #1
	adds r0, r0, r4
	lsls r0, r0, #8
	orrs r2, r0
	strh r2, [r1]
	adds r0, r3, #2
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #7
	bls _0810B880
	adds r6, #0x20
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0xf
	bls _0810B87C
	ldr r6, _0810B900 @ =0x0600E808
	movs r5, #0
_0810B8AC:
	movs r3, #0
	adds r7, r6, #0
	adds r7, #0x20
	adds r0, r5, #1
	mov ip, r0
	lsls r4, r5, #3
_0810B8B8:
	lsrs r2, r3, #1
	lsls r2, r2, #1
	adds r2, r2, r6
	adds r1, r3, #0
	adds r1, #0x80
	adds r1, r1, r4
	adds r0, r3, #0
	adds r0, #0x81
	adds r0, r0, r4
	lsls r0, r0, #8
	orrs r1, r0
	strh r1, [r2]
	adds r0, r3, #2
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #7
	bls _0810B8B8
	adds r6, r7, #0
	mov r1, ip
	lsls r0, r1, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0xf
	bls _0810B8AC
	add sp, #0x2c
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0810B8F0: .4byte 0x06008000
_0810B8F4: .4byte 0x0000039B
_0810B8F8: .4byte 0x0600E800
_0810B8FC: .4byte 0x05000400
_0810B900: .4byte 0x0600E808

	thumb_func_start sub_0810B904
sub_0810B904: @ 0x0810B904
	push {r4, r5, lr}
	adds r5, r0, #0
	ldrh r1, [r5, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0810B91E
	ldrh r0, [r5, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0810B926
_0810B91E:
	ldrh r1, [r5, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0810B926:
	adds r4, r0, #0
	adds r4, #0xb4
	ldr r0, [r4]
	cmp r0, #0
	beq _0810B938
	bl sub_08157190
	movs r0, #0
	str r0, [r4]
_0810B938:
	ldr r0, _0810B960 @ =gWinRegs
	movs r1, #0
	strh r1, [r0]
	strh r1, [r0, #4]
	strh r1, [r0, #8]
	strh r1, [r0, #0xa]
	ldr r3, _0810B964 @ =gDispCnt
	ldrh r2, [r3]
	ldr r0, _0810B968 @ =0x0000DFFF
	ands r0, r2
	strh r0, [r3]
	ldr r0, _0810B96C @ =gBldRegs
	strh r1, [r0]
	strh r1, [r0, #2]
	adds r0, r5, #0
	bl ObjectDestroy
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810B960: .4byte gWinRegs
_0810B964: .4byte gDispCnt
_0810B968: .4byte 0x0000DFFF
_0810B96C: .4byte gBldRegs

	thumb_func_start CreateDarkMindMirrors
CreateDarkMindMirrors: @ 0x0810B970
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _0810B9AC @ =sub_0810B1F4
	movs r1, #0x9e
	lsls r1, r1, #1
	ldr r2, _0810B9B0 @ =0x00000FFF
	ldr r3, _0810B9B4 @ =sub_0810B904
	str r3, [sp]
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0810B9B8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0810B9C0
	.align 2, 0
_0810B9AC: .4byte sub_0810B1F4
_0810B9B0: .4byte 0x00000FFF
_0810B9B4: .4byte sub_0810B904
_0810B9B8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0810B9C0:
	adds r7, r0, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	adds r0, r7, #0
	adds r0, #0x91
	movs r4, #0
	movs r1, #0xfb
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r7, #0
	adds r1, #0x97
	movs r0, #0xe8
	strb r0, [r1]
	movs r1, #0x93
	lsls r1, r1, #1
	adds r0, r7, r1
	strb r4, [r0]
	ldr r2, _0810BCE4 @ =0x00000129
	adds r0, r7, r2
	strb r4, [r0]
	adds r1, #1
	adds r0, r7, r1
	strb r4, [r0]
	adds r2, #5
	adds r0, r7, r2
	strb r4, [r0]
	adds r1, #0xa
	adds r0, r7, r1
	strb r4, [r0]
	subs r2, #2
	adds r0, r7, r2
	strb r4, [r0]
	subs r1, #2
	adds r0, r7, r1
	strb r4, [r0]
	adds r2, #4
	adds r0, r7, r2
	strb r4, [r0]
	ldr r0, _0810BCE8 @ =0x00000135
	adds r1, r7, r0
	movs r0, #2
	strb r0, [r1]
	movs r1, #0x9b
	lsls r1, r1, #1
	adds r0, r7, r1
	strb r4, [r0]
	adds r2, #7
	adds r0, r7, r2
	strb r4, [r0]
	subs r1, #9
	adds r0, r7, r1
	strb r4, [r0]
	subs r2, #0xc
	adds r0, r7, r2
	strb r4, [r0]
	subs r1, #5
	adds r0, r7, r1
	strb r4, [r0]
	adds r2, #9
	adds r0, r7, r2
	strb r4, [r0]
	adds r1, #0xa
	adds r0, r7, r1
	strb r4, [r0]
	subs r2, #1
	adds r0, r7, r2
	strb r4, [r0]
	subs r1, #8
	adds r0, r7, r1
	strb r4, [r0]
	subs r2, #0x23
	adds r0, r7, r2
	str r4, [r0]
	subs r1, #0x16
	adds r0, r7, r1
	str r4, [r0]
	adds r2, #8
	adds r0, r7, r2
	str r4, [r0]
	subs r1, #0x10
	adds r0, r7, r1
	str r4, [r0]
	subs r2, #0x10
	adds r0, r7, r2
	str r4, [r0]
	adds r1, #8
	adds r0, r7, r1
	str r4, [r0]
	adds r0, r7, #0
	adds r0, #0xfc
	str r4, [r0]
	movs r6, #0x80
	lsls r6, r6, #1
	adds r0, r7, r6
	str r4, [r0]
	adds r0, r7, #0
	adds r0, #0xdc
	str r4, [r0]
	adds r2, #0x14
	adds r0, r7, r2
	movs r1, #0
	mov sb, r1
	strh r6, [r0]
	adds r2, #2
	adds r0, r7, r2
	strh r6, [r0]
	movs r1, #0x90
	lsls r1, r1, #1
	adds r0, r7, r1
	strh r4, [r0]
	adds r2, #4
	adds r0, r7, r2
	strh r4, [r0]
	adds r1, #4
	adds r0, r7, r1
	strh r4, [r0]
	adds r5, r7, #0
	adds r5, #0x80
	movs r2, #0
	ldrsh r0, [r5, r2]
	movs r1, #3
	mov r8, r1
	bl __divsi3
	lsls r0, r0, #1
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r1, r7, r2
	strb r0, [r1]
	movs r1, #0
	ldrsh r0, [r5, r1]
	movs r1, #3
	bl __divsi3
	ldr r2, _0810BCEC @ =0x00000139
	adds r1, r7, r2
	strb r0, [r1]
	ldr r2, [r7, #0xc]
	movs r5, #1
	orrs r2, r5
	movs r0, #4
	mov sl, r0
	orrs r2, r0
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #0x12
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	orrs r0, r6
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x49
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r2, r1
	str r2, [r7, #0xc]
	orrs r0, r5
	str r0, [r7, #8]
	ldr r0, [r7, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, r8
	orrs r0, r2
	ldr r2, _0810BCF0 @ =0x001080A0
	orrs r0, r2
	str r0, [r7, #0x5c]
	str r4, [r7, #0x68]
	movs r0, #0x20
	str r0, [sp]
	adds r0, r7, #0
	movs r2, #0x10
	movs r3, #8
	bl sub_0803E2B0
	movs r1, #0x28
	rsbs r1, r1, #0
	movs r2, #0x1e
	rsbs r2, r2, #0
	movs r0, #0x14
	str r0, [sp]
	adds r0, r7, #0
	movs r3, #0x28
	bl sub_0803E308
	ldr r0, _0810BCF4 @ =0x06008000
	str r0, [r7, #0x10]
	movs r0, #0xd0
	lsls r0, r0, #3
	strh r0, [r7, #0x24]
	ldr r2, _0810BCF8 @ =gUnk_08351648
	adds r6, r7, #0
	adds r6, #0x82
	ldrb r1, [r6]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x14
	adds r0, r0, r2
	adds r3, r7, #0
	adds r3, #0x83
	ldrb r1, [r3]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r7, #0x1c]
	ldrb r1, [r6]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrb r1, [r3]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrb r0, [r1, #2]
	adds r1, r7, #0
	adds r1, #0x2a
	strb r0, [r1]
	strh r4, [r7, #0x26]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	subs r6, #0x53
	mov r0, sb
	strb r0, [r6]
	strh r4, [r7, #0x20]
	strh r4, [r7, #0x22]
	movs r0, #0x90
	lsls r0, r0, #0xb
	str r0, [r7, #0x18]
	str r4, [r7, #0x10]
	ldr r0, _0810BCFC @ =gUnk_02022EA0
	mov r1, sb
	strb r1, [r0]
	ldr r0, _0810BD00 @ =gUnk_03000524
	strb r5, [r0]
	adds r1, r7, #0
	adds r1, #0xb4
	ldr r4, _0810BD04 @ =0x00000399
	movs r0, #0x2c
	str r0, [sp]
	movs r0, #0x1e
	str r0, [sp, #4]
	adds r0, r7, #0
	movs r2, #0x18
	adds r3, r4, #0
	bl sub_080708DC
	adds r2, r7, #0
	adds r2, #0xbc
	ldr r0, [r2]
	movs r1, #0x80
	orrs r0, r1
	str r0, [r2]
	adds r0, r4, #0
	bl sub_0803DF24
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _0810BC02
	adds r0, r4, #0
	movs r1, #0
	bl sub_0803DFAC
	adds r0, r4, #0
	bl sub_0803DF24
	strb r0, [r6]
_0810BC02:
	ldr r4, _0810BD08 @ =0x0000039A
	adds r0, r4, #0
	bl sub_0803DF24
	adds r5, r7, #0
	adds r5, #0xd3
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _0810BC28
	adds r0, r4, #0
	movs r1, #0
	bl sub_0803DFAC
	adds r0, r4, #0
	bl sub_0803DF24
	strb r0, [r5]
_0810BC28:
	adds r0, r7, #0
	adds r0, #0xe4
	ldr r4, _0810BD0C @ =gUnk_083B66F4
	ldr r1, [r4]
	bl sub_0814F3C4
	adds r0, r7, #0
	adds r0, #0xf0
	ldr r1, [r4, #8]
	bl sub_0814F3C4
	adds r2, r7, #0
	adds r2, #0xea
	ldrh r0, [r2]
	movs r1, #0x40
	orrs r0, r1
	strh r0, [r2]
	adds r2, #0xc
	ldrh r0, [r2]
	orrs r0, r1
	strh r0, [r2]
	ldr r2, _0810BD10 @ =gCurLevelInfo
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r2, _0810BD14 @ =0x0000065E
	adds r0, r0, r2
	ldrb r4, [r0]
	adds r0, r4, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	movs r2, #0
	bl sub_08002A44
	adds r0, r4, #0
	movs r1, #0
	bl sub_08002A1C
	ldr r2, _0810BD18 @ =gUnk_02020EE0
	ldr r0, _0810BD1C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810BCBA
	ldr r0, _0810BD20 @ =gUnk_0203AD20
	ldr r0, [r0]
	mov r1, sl
	ands r0, r1
	cmp r0, #0
	bne _0810BCBA
	adds r0, r4, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_0810BCBA:
	adds r1, r7, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _0810BD24 @ =sub_0810EDEC
	str r0, [r7, #0x7c]
	adds r0, r7, #0
	bl sub_080700D8
	adds r0, r7, #0
	bl sub_08113DE8
	adds r0, r7, #0
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0810BCE4: .4byte 0x00000129
_0810BCE8: .4byte 0x00000135
_0810BCEC: .4byte 0x00000139
_0810BCF0: .4byte 0x001080A0
_0810BCF4: .4byte 0x06008000
_0810BCF8: .4byte gUnk_08351648
_0810BCFC: .4byte gUnk_02022EA0
_0810BD00: .4byte gUnk_03000524
_0810BD04: .4byte 0x00000399
_0810BD08: .4byte 0x0000039A
_0810BD0C: .4byte gUnk_083B66F4
_0810BD10: .4byte gCurLevelInfo
_0810BD14: .4byte 0x0000065E
_0810BD18: .4byte gUnk_02020EE0
_0810BD1C: .4byte gUnk_0203AD3C
_0810BD20: .4byte gUnk_0203AD20
_0810BD24: .4byte sub_0810EDEC

	thumb_func_start sub_0810BD28
sub_0810BD28: @ 0x0810BD28
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	bl sub_0803D368
	adds r6, r0, #0
	adds r7, r5, #0
	adds r7, #0xac
	str r6, [r7]
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r6, #0xc]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _0810BDFC
	adds r0, r5, #0
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810BDFC
	ldr r1, [r5, #0x40]
	ldr r2, [r5, #0x44]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r4, [r0]
	movs r3, #0x1a
	ldrsh r0, [r4, r3]
	mov ip, r0
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	adds r0, r6, #0
	mov r3, ip
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0810BDFC
	ldr r3, _0810BE04 @ =gCurLevelInfo
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	movs r2, #0xcd
	lsls r2, r2, #3
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa0
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa4
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa4
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa6
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xa8
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r5, #0
	adds r1, #0xa8
	strh r0, [r1]
	ldr r0, [r7]
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r2, r0
	adds r1, r3, #0
	adds r1, #0xac
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r2, r5, #0
	adds r2, #0xaa
	strh r0, [r2]
	adds r0, r5, #0
	bl sub_0810F13C
	adds r0, r5, #0
	bl sub_0810BE08
_0810BDFC:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0810BE04: .4byte gCurLevelInfo

	thumb_func_start sub_0810BE08
sub_0810BE08: @ 0x0810BE08
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r0, #1
	movs r1, #0xb
	movs r2, #0
	bl sub_08002888
	adds r1, r0, #0
	ldr r5, [r1]
	cmp r5, #0
	beq _0810BE26
	adds r0, r4, #0
	bl sub_0810C15C
	b _0810BE70
_0810BE26:
	movs r0, #1
	str r0, [r1]
	ldr r2, _0810BE78 @ =sub_0810BE7C
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r2, #0
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	movs r0, #0xfc
	lsls r0, r0, #7
	str r0, [r4, #0x40]
	movs r0, #0xe0
	lsls r0, r0, #6
	str r0, [r4, #0x44]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, #0xdc
	adds r0, r4, r1
	movs r1, #0x80
	strh r1, [r0]
	movs r3, #0x8f
	lsls r3, r3, #1
	adds r0, r4, r3
	strh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	strh r5, [r4, #4]
_0810BE70:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810BE78: .4byte sub_0810BE7C

	thumb_func_start sub_0810BE7C
sub_0810BE7C: @ 0x0810BE7C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r5, #0
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x3d
	ble _0810BF10
	adds r1, r5, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r0, #0
	strh r0, [r5, #4]
	adds r0, r5, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #2
	bls _0810BF10
	ldr r1, _0810BF4C @ =gUnk_02020EE0
	ldr r0, _0810BF50 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810BF10
	ldrb r0, [r5]
	cmp r0, #0
	bne _0810BED4
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810BF10
_0810BED4:
	ldr r1, _0810BF54 @ =gUnk_08D60FA4
	ldr r4, _0810BF58 @ =gSongTable
	ldr r2, _0810BF5C @ =0x000010DC
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810BEF8
	ldr r1, _0810BF60 @ =0x000010D8
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810BF10
_0810BEF8:
	cmp r3, #0
	beq _0810BF0A
	ldr r0, _0810BF64 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810BF10
_0810BF0A:
	ldr r0, _0810BF68 @ =0x0000021B
	bl m4aSongNumStart
_0810BF10:
	adds r0, r5, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r4, r0, #0
	movs r2, #0x9e
	adds r2, r2, r5
	mov ip, r2
	cmp r1, #0
	beq _0810BFAC
	ldrb r0, [r2]
	cmp r0, #2
	bls _0810BF92
	cmp r1, #3
	bhi _0810BF6C
	movs r1, #0x8e
	lsls r1, r1, #1
	adds r0, r6, r1
	ldrb r1, [r4]
	lsls r1, r1, #1
	ldrh r2, [r0]
	adds r1, r1, r2
	strh r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #1
	adds r1, r6, r0
	ldrb r0, [r4]
	lsls r0, r0, #1
	ldrh r2, [r1]
	adds r0, r0, r2
	b _0810BF90
	.align 2, 0
_0810BF4C: .4byte gUnk_02020EE0
_0810BF50: .4byte gUnk_0203AD3C
_0810BF54: .4byte gUnk_08D60FA4
_0810BF58: .4byte gSongTable
_0810BF5C: .4byte 0x000010DC
_0810BF60: .4byte 0x000010D8
_0810BF64: .4byte gUnk_0203AD10
_0810BF68: .4byte 0x0000021B
_0810BF6C:
	movs r0, #0x8e
	lsls r0, r0, #1
	adds r3, r6, r0
	ldrb r1, [r4]
	movs r2, #8
	subs r1, r2, r1
	lsls r1, r1, #1
	ldrh r0, [r3]
	subs r0, r0, r1
	strh r0, [r3]
	movs r0, #0x8f
	lsls r0, r0, #1
	adds r1, r6, r0
	ldrb r0, [r4]
	subs r2, r2, r0
	lsls r2, r2, #1
	ldrh r0, [r1]
	subs r0, r0, r2
_0810BF90:
	strh r0, [r1]
_0810BF92:
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #6
	bls _0810BFAC
	movs r0, #0
	strb r0, [r4]
	mov r1, ip
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0810BFAC:
	mov r2, ip
	ldrb r0, [r2]
	cmp r0, #5
	bls _0810BFBA
	adds r0, r5, #0
	bl sub_08113C9C
_0810BFBA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_0810BFC0
sub_0810BFC0: @ 0x0810BFC0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r5, #0
	adds r1, r5, #0
	adds r1, #0x9e
	ldrh r0, [r5, #4]
	ldrb r1, [r1]
	adds r0, r0, r1
	strh r0, [r5, #4]
	movs r1, #4
	ldrsh r0, [r5, r1]
	adds r1, r5, #0
	adds r1, #0x85
	ldrb r1, [r1]
	cmp r0, r1
	ble _0810C0B6
	adds r1, r5, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r0, #0
	strh r0, [r5, #4]
	ldr r1, _0810C070 @ =gUnk_02020EE0
	ldr r0, _0810C074 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810C05A
	ldrb r0, [r5]
	cmp r0, #0
	bne _0810C01A
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810C05A
_0810C01A:
	ldr r1, _0810C078 @ =gUnk_08D60FA4
	ldr r4, _0810C07C @ =gSongTable
	ldr r2, _0810C080 @ =0x00000C54
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810C040
	movs r1, #0xc5
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810C05A
_0810C040:
	cmp r3, #0
	beq _0810C052
	ldr r0, _0810C084 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810C05A
_0810C052:
	movs r0, #0xc5
	lsls r0, r0, #1
	bl m4aSongNumStart
_0810C05A:
	adds r0, r5, #0
	adds r0, #0x85
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #0x3d
	bne _0810C088
	movs r0, #4
	adds r1, r5, #0
	bl sub_0806FE64
	b _0810C09A
	.align 2, 0
_0810C070: .4byte gUnk_02020EE0
_0810C074: .4byte gUnk_0203AD3C
_0810C078: .4byte gUnk_08D60FA4
_0810C07C: .4byte gSongTable
_0810C080: .4byte 0x00000C54
_0810C084: .4byte gUnk_0203AD10
_0810C088:
	adds r1, r6, #0
	adds r1, #0xe4
	ldrh r0, [r1]
	lsls r0, r0, #1
	strh r0, [r1]
	adds r1, #0xc
	ldrh r0, [r1]
	lsls r0, r0, #1
	strh r0, [r1]
_0810C09A:
	ldrb r0, [r4]
	lsrs r0, r0, #1
	strb r0, [r4]
	cmp r0, #0xf
	bhi _0810C0B6
	movs r0, #0x10
	strb r0, [r4]
	adds r0, r6, #0
	adds r0, #0xe4
	movs r1, #0x80
	lsls r1, r1, #3
	strh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
_0810C0B6:
	adds r0, r5, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #0
	beq _0810C136
	cmp r1, #0x10
	bhi _0810C0F4
	movs r0, #0x8e
	lsls r0, r0, #1
	adds r2, r6, r0
	ldrb r0, [r4]
	adds r3, r5, #0
	adds r3, #0x9e
	ldrb r1, [r3]
	adds r0, r0, r1
	lsrs r0, r0, #2
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2]
	movs r0, #0x8f
	lsls r0, r0, #1
	adds r2, r6, r0
	ldrb r0, [r4]
	ldrb r1, [r3]
	adds r0, r0, r1
	lsrs r0, r0, #2
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2]
	b _0810C11A
_0810C0F4:
	movs r2, #0x8e
	lsls r2, r2, #1
	adds r3, r6, r2
	ldrb r1, [r4]
	movs r2, #0x20
	subs r1, r2, r1
	asrs r1, r1, #2
	ldrh r0, [r3]
	subs r0, r0, r1
	strh r0, [r3]
	movs r0, #0x8f
	lsls r0, r0, #1
	adds r1, r6, r0
	ldrb r0, [r4]
	subs r2, r2, r0
	asrs r2, r2, #2
	ldrh r0, [r1]
	subs r0, r0, r2
	strh r0, [r1]
_0810C11A:
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1f
	bls _0810C136
	movs r0, #0
	strb r0, [r4]
	adds r1, r5, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0810C136:
	movs r1, #0x8e
	lsls r1, r1, #1
	adds r0, r6, r1
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r1, r0
	ble _0810C154
	adds r0, r5, #0
	bl sub_080700D8
	adds r0, r5, #0
	bl sub_0810C15C
_0810C154:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810C15C
sub_0810C15C: @ 0x0810C15C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	adds r5, r0, #0
	mov r8, r5
	ldr r2, _0810C2D0 @ =sub_08113D2C
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r5, #0
	bl sub_08034E14
	adds r1, r0, #0
	cmp r1, #0
	beq _0810C184
	movs r0, #0
	strb r0, [r1, #9]
_0810C184:
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r7, [r0]
	adds r4, r7, #0
	subs r4, #0x38
	ldr r2, _0810C2D4 @ =gCurLevelInfo
	adds r3, r5, #0
	adds r3, #0x56
	ldrb r1, [r3]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _0810C2D8 @ =0x0000065E
	adds r0, r0, r1
	ldrb r6, [r0]
	lsls r4, r4, #0x10
	asrs r1, r4, #0x10
	str r3, [sp]
	adds r2, r5, #0
	adds r2, #0x60
	str r2, [sp, #4]
	movs r3, #0x50
	adds r3, r3, r5
	mov sb, r3
	movs r0, #0x52
	adds r0, r0, r5
	mov sl, r0
	adds r2, #0x3e
	str r2, [sp, #0xc]
	adds r3, r5, #0
	adds r3, #0x9f
	str r3, [sp, #0x10]
	adds r0, r5, #0
	adds r0, #0x85
	str r0, [sp, #8]
	cmp r1, #0
	blt _0810C276
	ldr r0, _0810C2DC @ =gUnk_08352D80
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _0810C276
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _0810C276
	adds r0, r7, #0
	subs r0, #0x43
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r7, r4, #0
	cmp r0, #0xf
	bls _0810C234
	movs r4, #1
_0810C1FC:
	subs r1, r4, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl sub_08002A2C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	adds r2, r4, #0
	bl sub_08002A44
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _0810C1FC
	adds r0, r6, #0
	bl sub_08002A0C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	movs r2, #0
	bl sub_08002A44
_0810C234:
	ldr r1, _0810C2DC @ =gUnk_08352D80
	asrs r0, r7, #0xf
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r6, #0
	bl sub_08002A1C
	ldr r2, _0810C2E0 @ =gUnk_02020EE0
	ldr r0, _0810C2E4 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r1, [sp, #4]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810C276
	ldr r0, _0810C2E8 @ =gUnk_0203AD20
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	bne _0810C276
	adds r0, r6, #0
	bl sub_08002A0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl m4aSongNumStartOrChange
_0810C276:
	movs r1, #0x8e
	lsls r1, r1, #1
	add r1, r8
	movs r3, #0
	movs r2, #0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	movs r1, #0x8f
	lsls r1, r1, #1
	add r1, r8
	strh r0, [r1]
	mov r0, sb
	strh r2, [r0]
	mov r1, sl
	strh r2, [r1]
	movs r0, #0xfc
	lsls r0, r0, #7
	str r0, [r5, #0x40]
	movs r0, #0xe0
	lsls r0, r0, #6
	str r0, [r5, #0x44]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r5, #8]
	movs r0, #4
	ldr r2, [sp, #0xc]
	strb r0, [r2]
	ldr r0, [sp, #0x10]
	strb r3, [r0]
	movs r0, #0x80
	strh r0, [r5, #4]
	movs r0, #0x7a
	ldr r1, [sp, #8]
	strb r0, [r1]
	movs r4, #0
	ldr r1, _0810C2EC @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r6, _0810C2F0 @ =gUnk_020229E0
	b _0810C308
	.align 2, 0
_0810C2D0: .4byte sub_08113D2C
_0810C2D4: .4byte gCurLevelInfo
_0810C2D8: .4byte 0x0000065E
_0810C2DC: .4byte gUnk_08352D80
_0810C2E0: .4byte gUnk_02020EE0
_0810C2E4: .4byte gUnk_0203AD3C
_0810C2E8: .4byte gUnk_0203AD20
_0810C2EC: .4byte gUnk_020229D4
_0810C2F0: .4byte gUnk_020229E0
_0810C2F4:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _0810C310
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_0810C308:
	cmp r0, #0
	bne _0810C2F4
	orrs r2, r3
	str r2, [r1]
_0810C310:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r6
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r4, #0
	movs r3, #0xf0
	strh r3, [r1, #6]
	movs r0, #0x78
	strh r0, [r1, #8]
	strb r4, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r4, [r1, #4]
	strb r4, [r1, #5]
	movs r0, #0x36
	strb r0, [r1, #0xc]
	movs r0, #6
	strb r0, [r1, #0xe]
	strb r4, [r1, #0xf]
	strb r4, [r1, #0x10]
	strh r2, [r1, #0x22]
	ldr r0, _0810C3E8 @ =0x0000FF10
	strh r0, [r1, #0x1a]
	adds r0, #0x64
	strh r0, [r1, #0x1c]
	strh r3, [r1, #0x1e]
	movs r0, #0xa0
	strh r0, [r1, #0x20]
	strb r4, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldr r2, [sp]
	ldrb r0, [r2]
	bl CreateObject
	ldr r0, [r5, #8]
	ldr r1, _0810C3EC @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r5, #8]
	ldr r0, _0810C3F0 @ =0x00000135
	add r0, r8
	strb r4, [r0]
	ldr r1, _0810C3F4 @ =gUnk_02020EE0
	ldr r0, _0810C3F8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r3, [sp, #4]
	ldrh r3, [r3]
	cmp r0, r3
	bne _0810C3D6
	ldrb r0, [r5]
	cmp r0, #0
	bne _0810C39A
	ldr r1, [sp]
	ldrb r0, [r1]
	cmp r0, r2
	bne _0810C3D6
_0810C39A:
	ldr r1, _0810C3FC @ =gUnk_08D60FA4
	ldr r4, _0810C400 @ =gSongTable
	ldr r2, _0810C404 @ =0x00000D7C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810C3BE
	ldr r1, _0810C408 @ =0x00000D78
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810C3D6
_0810C3BE:
	cmp r3, #0
	beq _0810C3D0
	ldr r0, _0810C40C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810C3D6
_0810C3D0:
	ldr r0, _0810C410 @ =0x000001AF
	bl m4aSongNumStart
_0810C3D6:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0810C3E8: .4byte 0x0000FF10
_0810C3EC: .4byte 0xFFFFFBFF
_0810C3F0: .4byte 0x00000135
_0810C3F4: .4byte gUnk_02020EE0
_0810C3F8: .4byte gUnk_0203AD3C
_0810C3FC: .4byte gUnk_08D60FA4
_0810C400: .4byte gSongTable
_0810C404: .4byte 0x00000D7C
_0810C408: .4byte 0x00000D78
_0810C40C: .4byte gUnk_0203AD10
_0810C410: .4byte 0x000001AF

	thumb_func_start sub_0810C414
sub_0810C414: @ 0x0810C414
	push {r4, r5, lr}
	adds r5, r0, #0
	bl sub_080886A8
	adds r0, r5, #0
	movs r1, #0x11
	bl sub_08088700
	adds r0, r5, #0
	bl sub_0810CBE8
	ldr r2, _0810C4A4 @ =sub_08113D68
	adds r0, r5, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r5, #0
	adds r1, #0x50
	movs r4, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r5, #8]
	adds r1, #0xdc
	adds r0, r5, r1
	subs r1, #0x1c
	strh r1, [r0]
	movs r2, #0x8f
	lsls r2, r2, #1
	adds r0, r5, r2
	strh r1, [r0]
	ldr r0, _0810C4A8 @ =0x00000135
	adds r1, r5, r0
	movs r0, #1
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x9e
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	movs r0, #0x20
	strh r0, [r5, #4]
	adds r0, r5, #0
	bl sub_08086C48
	movs r0, #4
	adds r1, r5, #0
	bl sub_0806FE64
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	bl sub_08033540
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r5, #8]
	adds r2, r5, #0
	adds r2, #0xea
	ldrh r0, [r2]
	movs r1, #0x10
	orrs r0, r1
	strh r0, [r2]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810C4A4: .4byte sub_08113D68
_0810C4A8: .4byte 0x00000135

	thumb_func_start sub_0810C4AC
sub_0810C4AC: @ 0x0810C4AC
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _0810C508 @ =sub_0810C510
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r3, #0
	movs r2, #0
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, #0xdc
	adds r0, r4, r1
	subs r1, #0x1c
	strh r1, [r0]
	movs r5, #0x8f
	lsls r5, r5, #1
	adds r0, r4, r5
	strh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	strh r2, [r4, #4]
	movs r0, #3
	adds r1, r4, #0
	bl sub_0806FE64
	adds r0, r4, #0
	bl sub_08098184
	ldr r1, _0810C50C @ =gUnk_083573AC
	adds r0, r4, #0
	bl sub_080860A8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810C508: .4byte sub_0810C510
_0810C50C: .4byte gUnk_083573AC

	thumb_func_start sub_0810C510
sub_0810C510: @ 0x0810C510
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _0810C608 @ =gUnk_02020EE0
	ldr r0, _0810C60C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810C53A
	adds r0, r4, #0
	adds r0, #0xf0
	bl sub_0814F274
_0810C53A:
	movs r0, #4
	ldrsh r1, [r4, r0]
	cmp r1, #0x20
	beq _0810C562
	cmp r1, #0x90
	beq _0810C562
	cmp r1, #0x9c
	beq _0810C562
	cmp r1, #0xec
	beq _0810C562
	movs r0, #0x96
	lsls r0, r0, #1
	cmp r1, r0
	beq _0810C562
	adds r0, #0xc
	cmp r1, r0
	beq _0810C562
	adds r0, #0x24
	cmp r1, r0
	bne _0810C5EC
_0810C562:
	movs r2, #0x8e
	lsls r2, r2, #1
	adds r1, r5, r2
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	adds r2, #2
	adds r1, r5, r2
	strh r0, [r1]
	ldr r1, _0810C610 @ =gUnk_083573AC
	adds r0, r4, #0
	bl sub_080860A8
	movs r0, #2
	adds r1, r4, #0
	bl sub_0806FE64
	ldr r1, _0810C608 @ =gUnk_02020EE0
	ldr r0, _0810C60C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810C5EC
	ldrb r0, [r4]
	cmp r0, #0
	bne _0810C5B0
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810C5EC
_0810C5B0:
	ldr r1, _0810C614 @ =gUnk_08D60FA4
	ldr r5, _0810C618 @ =gSongTable
	ldr r2, _0810C61C @ =0x00001294
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810C5D4
	ldr r1, _0810C620 @ =0x00001290
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810C5EC
_0810C5D4:
	cmp r3, #0
	beq _0810C5E6
	ldr r0, _0810C624 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810C5EC
_0810C5E6:
	ldr r0, _0810C628 @ =0x00000252
	bl m4aSongNumStart
_0810C5EC:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	movs r1, #0xb6
	lsls r1, r1, #0x11
	cmp r0, r1
	ble _0810C602
	adds r0, r4, #0
	bl sub_0810C62C
_0810C602:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810C608: .4byte gUnk_02020EE0
_0810C60C: .4byte gUnk_0203AD3C
_0810C610: .4byte gUnk_083573AC
_0810C614: .4byte gUnk_08D60FA4
_0810C618: .4byte gSongTable
_0810C61C: .4byte 0x00001294
_0810C620: .4byte 0x00001290
_0810C624: .4byte gUnk_0203AD10
_0810C628: .4byte 0x00000252

	thumb_func_start sub_0810C62C
sub_0810C62C: @ 0x0810C62C
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r2, _0810C69C @ =sub_0810C6A4
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r5, #0
	adds r1, #0x50
	movs r4, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r5, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x9e
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	movs r0, #0xb4
	lsls r0, r0, #1
	strh r0, [r5, #4]
	movs r0, #5
	adds r1, r5, #0
	bl sub_0806FE64
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r1, [r0]
	movs r0, #5
	bl sub_0803C83C
	movs r1, #3
	strb r1, [r0]
	ldrh r1, [r0, #8]
	movs r2, #0x40
	orrs r1, r2
	strh r1, [r0, #8]
	movs r1, #0x20
	strh r1, [r0, #0xa]
	movs r1, #0x1f
	strb r1, [r0, #2]
	ldr r1, _0810C6A0 @ =0x0000FFFF
	strh r1, [r0, #4]
	movs r1, #1
	rsbs r1, r1, #0
	strh r1, [r0, #6]
	movs r1, #0xf
	strb r1, [r0, #3]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810C69C: .4byte sub_0810C6A4
_0810C6A0: .4byte 0x0000FFFF

	thumb_func_start sub_0810C6A4
sub_0810C6A4: @ 0x0810C6A4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r7, r0, #0
	ldr r0, _0810C7D0 @ =gUnk_02020EE0
	mov r8, r0
	ldr r6, _0810C7D4 @ =gUnk_0203AD3C
	ldrb r0, [r6]
	movs r5, #0xd4
	lsls r5, r5, #1
	muls r0, r5, r0
	add r0, r8
	adds r0, #0x60
	adds r4, r7, #0
	adds r4, #0x60
	ldrh r0, [r0]
	ldrh r1, [r4]
	cmp r0, r1
	bne _0810C6D6
	adds r0, r7, #0
	adds r0, #0xf0
	bl sub_0814F274
_0810C6D6:
	ldrh r1, [r7, #4]
	movs r0, #0x1f
	ands r0, r1
	cmp r0, #0
	bne _0810C73E
	ldrb r1, [r6]
	adds r0, r1, #0
	muls r0, r5, r0
	add r0, r8
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r4, [r4]
	cmp r0, r4
	bne _0810C73E
	ldrb r0, [r7]
	cmp r0, #0
	bne _0810C702
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r1
	bne _0810C73E
_0810C702:
	ldr r1, _0810C7D8 @ =gUnk_08D60FA4
	ldr r4, _0810C7DC @ =gSongTable
	ldr r2, _0810C7E0 @ =0x0000129C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810C726
	ldr r1, _0810C7E4 @ =0x00001298
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810C73E
_0810C726:
	cmp r3, #0
	beq _0810C738
	ldr r0, _0810C7E8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810C73E
_0810C738:
	ldr r0, _0810C7EC @ =0x00000253
	bl m4aSongNumStart
_0810C73E:
	ldrh r0, [r7, #4]
	subs r0, #1
	strh r0, [r7, #4]
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _0810C74E
	b _0810C9A2
_0810C74E:
	movs r0, #0x1b
	bl m4aSongNumStartOrChange
	str r4, [sp]
	ldr r1, _0810C7F0 @ =0x0600E800
	ldr r2, _0810C7F4 @ =0x05000400
	mov r0, sp
	bl CpuSet
	ldr r1, _0810C7D0 @ =gUnk_02020EE0
	ldr r0, _0810C7D4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x60
	ldrh r0, [r0]
	mov sb, r1
	ldrh r3, [r1]
	cmp r0, r3
	bne _0810C78C
	ldr r1, _0810C7F8 @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r1
	movs r1, #1
	str r1, [r0]
_0810C78C:
	mov r0, sb
	ldrh r1, [r0]
	movs r0, #5
	bl sub_0803C83C
	movs r1, #3
	strb r1, [r0]
	movs r1, #0xff
	lsls r1, r1, #8
	strh r1, [r0, #0xa]
	movs r1, #0xf8
	lsls r1, r1, #5
	strh r1, [r0, #0xc]
	movs r1, #0x1f
	strb r1, [r0, #1]
	movs r1, #0
	strb r1, [r0, #2]
	ldr r1, _0810C7FC @ =0x0000FFFF
	strh r1, [r0, #4]
	movs r1, #1
	rsbs r1, r1, #0
	strh r1, [r0, #6]
	movs r1, #0xf
	strb r1, [r0, #3]
	movs r4, #0
	ldr r3, _0810C800 @ =gUnk_020229D4
	movs r2, #1
	ldr r1, [r3]
	adds r0, r1, #0
	ands r0, r2
	adds r6, r7, #0
	adds r6, #0x56
	b _0810C81A
	.align 2, 0
_0810C7D0: .4byte gUnk_02020EE0
_0810C7D4: .4byte gUnk_0203AD3C
_0810C7D8: .4byte gUnk_08D60FA4
_0810C7DC: .4byte gSongTable
_0810C7E0: .4byte 0x0000129C
_0810C7E4: .4byte 0x00001298
_0810C7E8: .4byte gUnk_0203AD10
_0810C7EC: .4byte 0x00000253
_0810C7F0: .4byte 0x0600E800
_0810C7F4: .4byte 0x05000400
_0810C7F8: .4byte gCurLevelInfo
_0810C7FC: .4byte 0x0000FFFF
_0810C800: .4byte gUnk_020229D4
_0810C804:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _0810C822
	ldr r3, _0810C888 @ =gUnk_020229D4
	movs r2, #1
	lsls r2, r4
	ldr r1, [r3]
	adds r0, r1, #0
	ands r0, r2
_0810C81A:
	cmp r0, #0
	bne _0810C804
	orrs r1, r2
	str r1, [r3]
_0810C822:
	ldr r0, _0810C88C @ =gUnk_020229E0
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r0
	movs r2, #0
	movs r5, #1
	strb r5, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	ldr r0, [r7, #0x40]
	asrs r0, r0, #8
	movs r3, #0
	strh r0, [r1, #6]
	ldr r0, [r7, #0x44]
	asrs r0, r0, #8
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0x51
	strb r0, [r1, #0xc]
	strb r5, [r1, #0xe]
	strb r3, [r1, #0xf]
	strb r3, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldrb r0, [r6]
	bl CreateObject
	movs r4, #0
	ldr r2, _0810C888 @ =gUnk_020229D4
	ldr r1, [r2]
	adds r0, r1, #0
	ands r0, r5
	cmp r0, #0
	bne _0810C890
	orrs r1, r5
	str r1, [r2]
	b _0810C8AE
	.align 2, 0
_0810C888: .4byte gUnk_020229D4
_0810C88C: .4byte gUnk_020229E0
_0810C890:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _0810C8AE
	ldr r3, _0810C9B0 @ =gUnk_020229D4
	movs r2, #1
	lsls r2, r4
	ldr r1, [r3]
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _0810C890
	orrs r1, r2
	str r1, [r3]
_0810C8AE:
	ldr r0, _0810C9B4 @ =gUnk_020229E0
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r0
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	strh r2, [r1, #6]
	strh r2, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0x8e
	strb r0, [r1, #0xc]
	movs r0, #2
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	strb r3, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldrb r0, [r6]
	bl CreateObject
	movs r6, #0
	ldr r0, _0810C9B8 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r6, r0
	bhs _0810C998
	ldr r1, _0810C9BC @ =gUnk_0203AD34
	mov r8, r1
_0810C906:
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r1, r6, #0
	muls r1, r0, r1
	ldr r0, _0810C9C0 @ =gUnk_02020EE0
	adds r4, r1, r0
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, sb
	ldrh r2, [r2]
	cmp r0, r2
	bne _0810C98A
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r4, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _0810C98A
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x11
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_0804BAD8
	ldr r0, _0810C9C4 @ =0x00000103
	adds r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0x1a
	bne _0810C950
	movs r0, #0
	mov r2, r8
	strb r0, [r2]
_0810C950:
	movs r5, #0
	strb r5, [r1]
	adds r0, r4, #0
	adds r0, #0xdb
	strb r5, [r0]
	movs r0, #0
	bl sub_08035E28
	movs r0, #2
	bl sub_08034C9C
	adds r2, r4, #0
	adds r2, #0xdd
	ldrb r1, [r2]
	movs r0, #0x1f
	ands r0, r1
	cmp r0, #0x1a
	bne _0810C978
	mov r3, r8
	strb r5, [r3]
_0810C978:
	strb r5, [r2]
	adds r0, r4, #0
	bl sub_0806F260
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	bl sub_0803E558
_0810C98A:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, _0810C9B8 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r6, r0
	blo _0810C906
_0810C998:
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r7, #8]
_0810C9A2:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0810C9B0: .4byte gUnk_020229D4
_0810C9B4: .4byte gUnk_020229E0
_0810C9B8: .4byte gUnk_0203AD44
_0810C9BC: .4byte gUnk_0203AD34
_0810C9C0: .4byte gUnk_02020EE0
_0810C9C4: .4byte 0x00000103

	thumb_func_start sub_0810C9C8
sub_0810C9C8: @ 0x0810C9C8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _0810CA14 @ =sub_0810CA50
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, _0810CA18 @ =0x00000135
	adds r1, r4, r0
	movs r0, #2
	strb r0, [r1]
	ldr r2, _0810CA1C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810CA20 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810CA24 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #3
	ands r1, r0
	cmp r1, #1
	beq _0810CA28
	cmp r1, #1
	blo _0810CA38
	cmp r1, #2
	beq _0810CA30
	b _0810CA38
	.align 2, 0
_0810CA14: .4byte sub_0810CA50
_0810CA18: .4byte 0x00000135
_0810CA1C: .4byte gRngVal
_0810CA20: .4byte 0x00196225
_0810CA24: .4byte 0x3C6EF35F
_0810CA28:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0x78
	b _0810CA3E
_0810CA30:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0x3c
	b _0810CA3E
_0810CA38:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0x5a
_0810CA3E:
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810CA50
sub_0810CA50: @ 0x0810CA50
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	ldr r2, _0810CAB0 @ =gUnk_0835736C
	ldrh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	movs r1, #7
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	strh r0, [r1]
	ldrh r1, [r4, #4]
	movs r0, #0x1f
	ands r0, r1
	cmp r0, #0
	bne _0810CACE
	ldr r2, _0810CAB4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810CAB8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810CABC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r5, #1
	ands r0, r5
	cmp r0, #0
	beq _0810CACE
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	bge _0810CAC0
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _0810CAC4
	.align 2, 0
_0810CAB0: .4byte gUnk_0835736C
_0810CAB4: .4byte gRngVal
_0810CAB8: .4byte 0x00196225
_0810CABC: .4byte 0x3C6EF35F
_0810CAC0:
	ldr r0, [r4, #8]
	orrs r0, r5
_0810CAC4:
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0x10
	strb r0, [r1]
_0810CACE:
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r3, [r0]
	adds r5, r0, #0
	cmp r3, #0
	beq _0810CB3C
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810CB10
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _0810CB00 @ =0xFFFFFE00
	cmp r2, r0
	bge _0810CB04
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r1]
	b _0810CB2E
	.align 2, 0
_0810CB00: .4byte 0xFFFFFE00
_0810CB04:
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r2, r0
	ble _0810CB2E
	strh r0, [r1]
	b _0810CB2E
_0810CB10:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	bgt _0810CB2C
	ldr r2, _0810CB38 @ =0xFFFFFE00
	cmp r0, r2
	bge _0810CB2E
_0810CB2C:
	strh r2, [r1]
_0810CB2E:
	ldrb r0, [r5]
	subs r0, #1
	strb r0, [r5]
	b _0810CB62
	.align 2, 0
_0810CB38: .4byte 0xFFFFFE00
_0810CB3C:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _0810CB56
	adds r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810CB62
	b _0810CB60
_0810CB56:
	subs r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810CB62
_0810CB60:
	strh r3, [r1]
_0810CB62:
	ldr r1, [r4, #0x40]
	ldr r0, _0810CBB0 @ =0x00003DFF
	cmp r1, r0
	bgt _0810CB6E
	adds r0, #1
	str r0, [r4, #0x40]
_0810CB6E:
	ldr r0, [r4, #0x40]
	movs r1, #0xbe
	lsls r1, r1, #8
	cmp r0, r1
	ble _0810CB7A
	str r1, [r4, #0x40]
_0810CB7A:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	ldr r0, _0810CBB4 @ =0x00000135
	adds r0, r0, r6
	mov ip, r0
	ldrb r0, [r0]
	cmp r0, #2
	bne _0810CBCC
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r3, r4, #0
	adds r3, #0x9f
	ldrb r2, [r3]
	adds r1, r2, #0
	cmp r1, #0
	bne _0810CBB8
	adds r0, r4, #0
	adds r0, #0x52
	strh r1, [r0]
	movs r0, #1
	mov r1, ip
	strb r0, [r1]
	b _0810CBE0
	.align 2, 0
_0810CBB0: .4byte 0x00003DFF
_0810CBB4: .4byte 0x00000135
_0810CBB8:
	ldr r5, _0810CBC8 @ =0x00000129
	adds r0, r6, r5
	ldrb r0, [r0]
	cmp r0, #0
	bne _0810CBE0
	subs r0, r2, #1
	strb r0, [r3]
	b _0810CBE0
	.align 2, 0
_0810CBC8: .4byte 0x00000129
_0810CBCC:
	cmp r0, #1
	bne _0810CBE0
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0810CBE0
	adds r0, r4, #0
	bl sub_0810A168
_0810CBE0:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810CBE8
sub_0810CBE8: @ 0x0810CBE8
	push {lr}
	adds r3, r0, #0
	mov ip, r3
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r3, r1
	ldr r2, [r0]
	cmp r2, #0
	beq _0810CC0E
	ldr r1, [r2, #0xc]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	bne _0810CC0E
	movs r0, #0x80
	lsls r0, r0, #6
	orrs r1, r0
	str r1, [r2, #0xc]
_0810CC0E:
	movs r0, #0x8a
	lsls r0, r0, #1
	add r0, ip
	ldr r2, [r0]
	cmp r2, #0
	beq _0810CC2E
	ldr r1, [r2, #0xc]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	bne _0810CC2E
	movs r0, #0x80
	lsls r0, r0, #6
	orrs r1, r0
	str r1, [r2, #0xc]
_0810CC2E:
	movs r0, #0x8c
	lsls r0, r0, #1
	add r0, ip
	ldr r2, [r0]
	cmp r2, #0
	beq _0810CC4E
	ldr r1, [r2, #0xc]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	bne _0810CC4E
	movs r0, #0x80
	lsls r0, r0, #6
	orrs r1, r0
	str r1, [r2, #0xc]
_0810CC4E:
	ldr r2, _0810CC80 @ =gUnk_02020EE0
	ldr r0, _0810CC84 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r3, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810CC7A
	ldr r1, _0810CC88 @ =gUnk_02022EA0
	movs r0, #2
	strb r0, [r1]
	ldr r1, _0810CC8C @ =gUnk_03000524
	movs r0, #1
	strb r0, [r1]
	bl sub_0803E458
_0810CC7A:
	pop {r0}
	bx r0
	.align 2, 0
_0810CC80: .4byte gUnk_02020EE0
_0810CC84: .4byte gUnk_0203AD3C
_0810CC88: .4byte gUnk_02022EA0
_0810CC8C: .4byte gUnk_03000524

	thumb_func_start sub_0810CC90
sub_0810CC90: @ 0x0810CC90
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	ldr r2, _0810CD70 @ =sub_08113E14
	movs r1, #1
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _0810CD74 @ =gUnk_02020EE0
	ldr r0, _0810CD78 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810CD24
	ldrb r0, [r4]
	cmp r0, #0
	bne _0810CCE8
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810CD24
_0810CCE8:
	ldr r1, _0810CD7C @ =gUnk_08D60FA4
	ldr r5, _0810CD80 @ =gSongTable
	ldr r2, _0810CD84 @ =0x00000D7C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810CD0C
	ldr r1, _0810CD88 @ =0x00000D78
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810CD24
_0810CD0C:
	cmp r3, #0
	beq _0810CD1E
	ldr r0, _0810CD8C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810CD24
_0810CD1E:
	ldr r0, _0810CD90 @ =0x000001AF
	bl m4aSongNumStart
_0810CD24:
	adds r0, r4, #0
	bl sub_0810A71C
	ldr r2, _0810CD94 @ =0x00000129
	adds r1, r6, r2
	movs r0, #1
	strb r0, [r1]
	movs r1, #0x94
	lsls r1, r1, #1
	adds r0, r6, r1
	ldrb r1, [r0]
	subs r0, r1, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _0810CD50
	cmp r1, #2
	beq _0810CD50
	adds r2, #0xc
	adds r1, r6, r2
	movs r0, #0
	strb r0, [r1]
_0810CD50:
	movs r1, #0x93
	lsls r1, r1, #1
	adds r0, r6, r1
	ldrb r0, [r0]
	subs r0, #3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _0810CD68
	adds r0, r4, #0
	bl sub_0810CBE8
_0810CD68:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0810CD70: .4byte sub_08113E14
_0810CD74: .4byte gUnk_02020EE0
_0810CD78: .4byte gUnk_0203AD3C
_0810CD7C: .4byte gUnk_08D60FA4
_0810CD80: .4byte gSongTable
_0810CD84: .4byte 0x00000D7C
_0810CD88: .4byte 0x00000D78
_0810CD8C: .4byte gUnk_0203AD10
_0810CD90: .4byte 0x000001AF
_0810CD94: .4byte 0x00000129

	thumb_func_start sub_0810CD98
sub_0810CD98: @ 0x0810CD98
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r1, [r4, #0x44]
	movs r0, #0xa0
	lsls r0, r0, #7
	cmp r1, r0
	ble _0810CDD8
	adds r0, r4, #0
	adds r0, #0x52
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r3, r0, #0
	cmp r1, #0
	bge _0810CDC6
	adds r0, r2, #0
	adds r0, #0x28
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810CDF0
	b _0810CDD2
_0810CDC6:
	adds r0, r2, #0
	subs r0, #0x28
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810CDF0
_0810CDD2:
	movs r0, #0
	strh r0, [r3]
	b _0810CDF0
_0810CDD8:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0xd
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _0810CE0C @ =0xFFFFFE80
	adds r3, r1, #0
	cmp r0, r2
	bge _0810CDF0
	strh r2, [r3]
_0810CDF0:
	adds r1, r5, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r6, #0
	ldrsh r0, [r1, r6]
	cmp r0, #0
	bge _0810CE10
	adds r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810CE1E
	b _0810CE1A
	.align 2, 0
_0810CE0C: .4byte 0xFFFFFE80
_0810CE10:
	subs r0, r2, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810CE1E
_0810CE1A:
	movs r0, #0
	strh r0, [r1]
_0810CE1E:
	adds r0, r5, #0
	adds r0, #0x83
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #2
	beq _0810CE2E
	cmp r1, #4
	bne _0810CE7E
_0810CE2E:
	adds r0, r4, #0
	adds r0, #0xfc
	ldr r0, [r0]
	adds r0, #0x83
	ldrb r2, [r0]
	cmp r2, #1
	beq _0810CE7E
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r0, [r0]
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #1
	beq _0810CE7E
	cmp r2, #3
	beq _0810CE7E
	cmp r0, #3
	beq _0810CE7E
	adds r0, r4, #0
	adds r0, #0xe4
	strh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
	adds r1, #0x26
	adds r0, r4, r1
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _0810CE76
	adds r0, r5, #0
	bl sub_0811406C
	b _0810CEAA
_0810CE76:
	adds r0, r5, #0
	bl sub_08113E98
	b _0810CEAA
_0810CE7E:
	movs r1, #0
	ldrsh r0, [r3, r1]
	cmp r0, #0
	bne _0810CEAA
	ldrb r0, [r6]
	cmp r0, #4
	beq _0810CEAA
	cmp r0, #2
	beq _0810CEAA
	movs r0, #2
	adds r1, r5, #0
	bl sub_0806FE64
	adds r0, r4, #0
	adds r0, #0xe4
	movs r1, #0x80
	lsls r1, r1, #4
	strh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
	movs r0, #2
	strb r0, [r6]
_0810CEAA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_0810CEB0
sub_0810CEB0: @ 0x0810CEB0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _0810CEE8 @ =sub_0810CF60
	movs r1, #1
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, _0810CEEC @ =0x00007DFF
	cmp r1, r0
	bgt _0810CEF0
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _0810CEF6
	.align 2, 0
_0810CEE8: .4byte sub_0810CF60
_0810CEEC: .4byte 0x00007DFF
_0810CEF0:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_0810CEF6:
	str r0, [r4, #8]
	ldr r2, _0810CF24 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810CF28 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810CF2C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	movs r0, #3
	ands r2, r0
	cmp r2, #0
	beq _0810CF30
	adds r0, r5, #0
	adds r0, #0x9e
	movs r1, #0
	strb r1, [r0]
	movs r2, #0x92
	lsls r2, r2, #1
	adds r0, r4, r2
	strh r1, [r0]
	b _0810CF4C
	.align 2, 0
_0810CF24: .4byte gRngVal
_0810CF28: .4byte 0x00196225
_0810CF2C: .4byte 0x3C6EF35F
_0810CF30:
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x92
	lsls r0, r0, #1
	adds r1, r4, r0
	movs r0, #0x80
	lsls r0, r0, #6
	strh r0, [r1]
	movs r1, #0x91
	lsls r1, r1, #1
	adds r0, r4, r1
	strh r2, [r0]
_0810CF4C:
	ldr r2, _0810CF5C @ =0x00000129
	adds r1, r4, r2
	movs r0, #1
	strb r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810CF5C: .4byte 0x00000129

	thumb_func_start sub_0810CF60
sub_0810CF60: @ 0x0810CF60
	push {r4, r5, lr}
	adds r3, r0, #0
	mov ip, r3
	movs r0, #0x91
	lsls r0, r0, #1
	adds r1, r3, r0
	ldrh r0, [r1]
	adds r0, #8
	movs r5, #0
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc0
	ble _0810CF80
	movs r0, #0xc0
	strh r0, [r1]
_0810CF80:
	adds r0, r3, #0
	adds r0, #0x9e
	ldrb r4, [r0]
	cmp r4, #0
	beq _0810CFDC
	ldr r1, [r3, #0x44]
	movs r0, #0xf0
	lsls r0, r0, #7
	cmp r1, r0
	ble _0810CFC2
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _0810CFB2
	adds r0, r2, #0
	adds r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810D030
	strh r5, [r1]
	b _0810D030
_0810CFB2:
	adds r0, r2, #0
	subs r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810D030
	strh r5, [r1]
	b _0810D030
_0810CFC2:
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0xd
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _0810CFD8 @ =0xFFFFFE80
	cmp r0, r2
	bge _0810D030
	b _0810D02E
	.align 2, 0
_0810CFD8: .4byte 0xFFFFFE80
_0810CFDC:
	ldr r1, [r3, #0x44]
	ldr r0, _0810D004 @ =0x000017FF
	cmp r1, r0
	bgt _0810D018
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _0810D008
	adds r0, r2, #0
	adds r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810D030
	strh r4, [r1]
	b _0810D030
	.align 2, 0
_0810D004: .4byte 0x000017FF
_0810D008:
	adds r0, r2, #0
	subs r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810D030
	strh r4, [r1]
	b _0810D030
_0810D018:
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0xd
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	ble _0810D030
_0810D02E:
	strh r2, [r1]
_0810D030:
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810D06C
	adds r0, r3, #0
	adds r0, #0x50
	ldrh r1, [r0]
	subs r1, #0x20
	strh r1, [r0]
	lsls r1, r1, #0x10
	asrs r4, r1, #0x10
	ldr r1, _0810D058 @ =0xFFFFFEC0
	adds r2, r0, #0
	cmp r4, r1
	bge _0810D060
	ldr r0, _0810D05C @ =0x0000FEC0
	strh r0, [r2]
	b _0810D090
	.align 2, 0
_0810D058: .4byte 0xFFFFFEC0
_0810D05C: .4byte 0x0000FEC0
_0810D060:
	movs r0, #0xa0
	lsls r0, r0, #1
	cmp r4, r0
	ble _0810D090
	strh r0, [r2]
	b _0810D090
_0810D06C:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0xa0
	lsls r4, r4, #1
	adds r2, r1, #0
	cmp r0, r4
	ble _0810D088
	strh r4, [r2]
	b _0810D090
_0810D088:
	ldr r1, _0810D0AC @ =0xFFFFFEC0
	cmp r0, r1
	bge _0810D090
	strh r1, [r2]
_0810D090:
	ldr r1, [r3, #8]
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _0810D0B4
	ldr r1, [r3, #0x40]
	ldr r0, _0810D0B0 @ =0x00007DFF
	cmp r1, r0
	bgt _0810D0C2
	adds r0, #1
	str r0, [r3, #0x40]
	movs r0, #0
	strh r0, [r2]
	b _0810D0C2
	.align 2, 0
_0810D0AC: .4byte 0xFFFFFEC0
_0810D0B0: .4byte 0x00007DFF
_0810D0B4:
	ldr r0, [r3, #0x40]
	movs r4, #0xfc
	lsls r4, r4, #7
	cmp r0, r4
	ble _0810D0C2
	str r4, [r3, #0x40]
	strh r1, [r2]
_0810D0C2:
	ldr r0, [r3, #0x50]
	cmp r0, #0
	bne _0810D0E6
	movs r0, #0x92
	lsls r0, r0, #1
	add r0, ip
	movs r1, #0x90
	lsls r1, r1, #1
	add r1, ip
	movs r4, #0
	ldrsh r2, [r0, r4]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r2, r0
	bne _0810D0E6
	adds r0, r3, #0
	bl sub_08113F50
_0810D0E6:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0810D0EC
sub_0810D0EC: @ 0x0810D0EC
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #4
	beq _0810D1BE
	ldrh r0, [r3, #4]
	movs r1, #4
	ldrsh r6, [r3, r1]
	cmp r6, #0
	bne _0810D1C6
	adds r0, r3, #0
	adds r0, #0x9f
	ldrb r5, [r0]
	cmp r5, #0
	beq _0810D162
	ldr r1, [r3, #0x44]
	ldr r0, _0810D134 @ =0x000017FF
	cmp r1, r0
	bgt _0810D148
	adds r0, r3, #0
	adds r0, #0x52
	ldrh r4, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #0
	bge _0810D138
	adds r0, r4, #0
	adds r0, #0x28
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810D1B6
	strh r6, [r2]
	b _0810D1B6
	.align 2, 0
_0810D134: .4byte 0x000017FF
_0810D138:
	adds r0, r4, #0
	subs r0, #0x28
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810D1B6
	strh r6, [r2]
	b _0810D1B6
_0810D148:
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r2, r1, #0
	cmp r0, #0x80
	ble _0810D1B6
	movs r0, #0x80
	strh r0, [r2]
	b _0810D1B6
_0810D162:
	ldr r1, [r3, #0x44]
	movs r0, #0xf0
	lsls r0, r0, #7
	cmp r1, r0
	ble _0810D19C
	adds r0, r3, #0
	adds r0, #0x52
	ldrh r4, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #0
	bge _0810D18C
	adds r0, r4, #0
	adds r0, #0x28
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810D1B6
	strh r5, [r2]
	b _0810D1B6
_0810D18C:
	adds r0, r4, #0
	subs r0, #0x28
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810D1B6
	strh r5, [r2]
	b _0810D1B6
_0810D19C:
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0x80
	rsbs r4, r4, #0
	adds r2, r1, #0
	cmp r0, r4
	bge _0810D1B6
	strh r4, [r2]
_0810D1B6:
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	bne _0810D1CA
_0810D1BE:
	adds r0, r3, #0
	bl sub_08113FF8
	b _0810D1CA
_0810D1C6:
	subs r0, #1
	strh r0, [r3, #4]
_0810D1CA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_0810D1D0
sub_0810D1D0: @ 0x0810D1D0
	push {lr}
	adds r1, r0, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	beq _0810D1E0
	cmp r0, #4
	bne _0810D22E
_0810D1E0:
	adds r0, r1, #0
	adds r0, #0xfc
	ldr r0, [r0]
	adds r0, #0x83
	ldrb r3, [r0]
	cmp r3, #1
	beq _0810D22E
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	ldr r0, [r0]
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #1
	beq _0810D22E
	cmp r3, #3
	beq _0810D22E
	cmp r0, #3
	beq _0810D22E
	adds r0, r1, #0
	adds r0, #0xe4
	strh r2, [r0]
	adds r0, #0xc
	strh r2, [r0]
	adds r2, #0x26
	adds r0, r1, r2
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _0810D228
	adds r0, r1, #0
	bl sub_0811406C
	b _0810D22E
_0810D228:
	adds r0, r1, #0
	bl sub_08113E98
_0810D22E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810D234
sub_0810D234: @ 0x0810D234
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _0810D26C @ =sub_0810D2EC
	movs r1, #1
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, _0810D270 @ =0x00007DFF
	cmp r1, r0
	bgt _0810D274
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _0810D27A
	.align 2, 0
_0810D26C: .4byte sub_0810D2EC
_0810D270: .4byte 0x00007DFF
_0810D274:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_0810D27A:
	str r0, [r4, #8]
	ldr r1, _0810D2C4 @ =0x00000129
	adds r0, r5, r1
	movs r3, #1
	strb r3, [r0]
	ldr r2, _0810D2C8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810D2CC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810D2D0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	beq _0810D2D4
	adds r1, r4, #0
	adds r1, #0xa2
	movs r0, #0xb0
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r3, [r0]
	movs r0, #0x92
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #0x80
	lsls r0, r0, #6
	strh r0, [r1]
	movs r0, #0x91
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #0
	strh r0, [r1]
	b _0810D2E4
	.align 2, 0
_0810D2C4: .4byte 0x00000129
_0810D2C8: .4byte gRngVal
_0810D2CC: .4byte 0x00196225
_0810D2D0: .4byte 0x3C6EF35F
_0810D2D4:
	adds r2, r4, #0
	adds r2, #0xa2
	movs r0, #0
	movs r1, #0x18
	strh r1, [r2]
	adds r1, r4, #0
	adds r1, #0x9f
	strb r0, [r1]
_0810D2E4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810D2EC
sub_0810D2EC: @ 0x0810D2EC
	push {r4, lr}
	adds r3, r0, #0
	mov ip, r3
	movs r0, #0x91
	lsls r0, r0, #1
	adds r1, r3, r0
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc0
	ble _0810D30A
	movs r0, #0xc0
	strh r0, [r1]
_0810D30A:
	adds r0, r3, #0
	adds r0, #0x9f
	ldrb r4, [r0]
	cmp r4, #0
	beq _0810D348
	adds r2, r3, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x18
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _0810D344 @ =0xFFFFFE50
	cmp r0, r1
	bge _0810D32A
	strh r1, [r2]
_0810D32A:
	adds r0, r3, #0
	adds r0, #0xa2
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #8
	ldr r0, [r3, #0x44]
	cmp r0, r1
	blt _0810D374
	str r1, [r3, #0x44]
	movs r0, #0
	strh r0, [r2]
	b _0810D374
	.align 2, 0
_0810D344: .4byte 0xFFFFFE50
_0810D348:
	adds r2, r3, #0
	adds r2, #0x52
	ldrh r0, [r2]
	adds r0, #0x18
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xd8
	lsls r1, r1, #1
	cmp r0, r1
	ble _0810D360
	strh r1, [r2]
_0810D360:
	adds r0, r3, #0
	adds r0, #0xa2
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #8
	ldr r0, [r3, #0x44]
	cmp r0, r1
	bgt _0810D374
	str r1, [r3, #0x44]
	strh r4, [r2]
_0810D374:
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810D3B0
	adds r0, r3, #0
	adds r0, #0x50
	ldrh r1, [r0]
	subs r1, #0x20
	strh r1, [r0]
	lsls r1, r1, #0x10
	asrs r2, r1, #0x10
	ldr r1, _0810D39C @ =0xFFFFFDE0
	adds r4, r0, #0
	cmp r2, r1
	bge _0810D3A4
	ldr r0, _0810D3A0 @ =0x0000FDE0
	strh r0, [r4]
	b _0810D3D4
	.align 2, 0
_0810D39C: .4byte 0xFFFFFDE0
_0810D3A0: .4byte 0x0000FDE0
_0810D3A4:
	movs r0, #0x88
	lsls r0, r0, #2
	cmp r2, r0
	ble _0810D3D4
	strh r0, [r4]
	b _0810D3D4
_0810D3B0:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x88
	lsls r2, r2, #2
	adds r4, r1, #0
	cmp r0, r2
	ble _0810D3CC
	strh r2, [r4]
	b _0810D3D4
_0810D3CC:
	ldr r1, _0810D3F0 @ =0xFFFFFDE0
	cmp r0, r1
	bge _0810D3D4
	strh r1, [r4]
_0810D3D4:
	ldr r2, [r3, #8]
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _0810D3F4
	ldr r0, [r3, #0x40]
	movs r1, #0xf0
	lsls r1, r1, #5
	cmp r0, r1
	bgt _0810D402
	str r1, [r3, #0x40]
	movs r0, #0
	strh r0, [r4]
	b _0810D402
	.align 2, 0
_0810D3F0: .4byte 0xFFFFFDE0
_0810D3F4:
	ldr r1, [r3, #0x40]
	ldr r0, _0810D42C @ =0x0000DDFF
	cmp r1, r0
	ble _0810D402
	adds r0, #1
	str r0, [r3, #0x40]
	strh r2, [r4]
_0810D402:
	ldr r0, [r3, #0x50]
	cmp r0, #0
	bne _0810D426
	movs r0, #0x90
	lsls r0, r0, #1
	add r0, ip
	movs r1, #0x92
	lsls r1, r1, #1
	add r1, ip
	movs r4, #0
	ldrsh r2, [r0, r4]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r2, r0
	bne _0810D426
	adds r0, r3, #0
	bl sub_0811401C
_0810D426:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0810D42C: .4byte 0x0000DDFF

	thumb_func_start sub_0810D430
sub_0810D430: @ 0x0810D430
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _0810D498 @ =sub_0810D4E0
	movs r1, #2
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r5, #1
	eors r0, r5
	str r0, [r4, #8]
	movs r0, #0x18
	strh r0, [r4, #4]
	adds r3, r4, #0
	adds r3, #0x9f
	strb r2, [r3]
	adds r0, r4, #0
	adds r0, #0x80
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r0, r4, r2
	ldrb r0, [r0]
	cmp r1, r0
	bgt _0810D4C2
	ldr r1, [r4, #0x44]
	movs r0, #0xb0
	lsls r0, r0, #7
	cmp r1, r0
	ble _0810D4A8
	ldr r2, _0810D49C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810D4A0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810D4A4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _0810D4C2
	movs r0, #2
	strb r0, [r3]
	b _0810D4C2
	.align 2, 0
_0810D498: .4byte sub_0810D4E0
_0810D49C: .4byte gRngVal
_0810D4A0: .4byte 0x00196225
_0810D4A4: .4byte 0x3C6EF35F
_0810D4A8:
	ldr r2, _0810D4D0 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810D4D4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810D4D8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	beq _0810D4C2
	strb r5, [r3]
_0810D4C2:
	ldr r2, _0810D4DC @ =0x00000135
	adds r1, r4, r2
	movs r0, #2
	strb r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810D4D0: .4byte gRngVal
_0810D4D4: .4byte 0x00196225
_0810D4D8: .4byte 0x3C6EF35F
_0810D4DC: .4byte 0x00000135

	thumb_func_start sub_0810D4E0
sub_0810D4E0: @ 0x0810D4E0
	push {r4, lr}
	mov ip, r0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #4
	bne _0810D514
	ldr r0, _0810D510 @ =sub_0810D1D0
	mov r1, ip
	str r0, [r1, #0x78]
	mov r0, ip
	adds r0, #0x50
	movs r2, #0
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r4, ip
	str r0, [r4, #8]
	strh r2, [r4, #4]
	b _0810D6BA
	.align 2, 0
_0810D510: .4byte sub_0810D1D0
_0810D514:
	mov r1, ip
	ldrh r0, [r1, #4]
	movs r2, #4
	ldrsh r3, [r1, r2]
	cmp r3, #0
	beq _0810D522
	b _0810D6B4
_0810D522:
	mov r0, ip
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r0, #1
	beq _0810D532
	cmp r0, #2
	beq _0810D568
	b _0810D5BC
_0810D532:
	mov r4, ip
	ldr r1, [r4, #0x44]
	movs r0, #0xb0
	lsls r0, r0, #7
	cmp r1, r0
	ble _0810D54E
	mov r1, ip
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	blt _0810D580
	b _0810D594
_0810D54E:
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _0810D564 @ =0xFFFFFEC0
	cmp r0, r2
	bge _0810D5BC
	b _0810D5BA
	.align 2, 0
_0810D564: .4byte 0xFFFFFEC0
_0810D568:
	mov r0, ip
	ldr r1, [r0, #0x44]
	ldr r0, _0810D590 @ =0x000057FF
	cmp r1, r0
	bgt _0810D5A4
	mov r1, ip
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _0810D594
_0810D580:
	adds r0, r2, #0
	adds r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810D5BC
	strh r3, [r1]
	b _0810D5BC
	.align 2, 0
_0810D590: .4byte 0x000057FF
_0810D594:
	adds r0, r2, #0
	subs r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810D5BC
	strh r3, [r1]
	b _0810D5BC
_0810D5A4:
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #1
	cmp r0, r2
	ble _0810D5BC
_0810D5BA:
	strh r2, [r1]
_0810D5BC:
	mov r0, ip
	ldr r3, [r0, #8]
	movs r0, #1
	ands r3, r0
	cmp r3, #0
	beq _0810D62C
	mov r2, ip
	ldr r1, [r2, #0x40]
	ldr r0, _0810D5F0 @ =0x000035FF
	cmp r1, r0
	bgt _0810D606
	mov r0, ip
	adds r0, #0x50
	ldrh r3, [r0]
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r2, r0, #0
	cmp r1, #0
	bge _0810D5F4
	adds r0, r3, #0
	adds r0, #0x80
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810D686
	b _0810D600
	.align 2, 0
_0810D5F0: .4byte 0x000035FF
_0810D5F4:
	adds r0, r3, #0
	subs r0, #0x80
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810D686
_0810D600:
	movs r0, #0
	strh r0, [r2]
	b _0810D686
_0810D606:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x68
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _0810D628 @ =0xFFFFFD60
	adds r2, r1, #0
	cmp r0, r3
	blt _0810D654
	movs r1, #0xa8
	lsls r1, r1, #2
	cmp r0, r1
	ble _0810D686
	b _0810D684
	.align 2, 0
_0810D628: .4byte 0xFFFFFD60
_0810D62C:
	mov r0, ip
	ldr r1, [r0, #0x40]
	movs r0, #0xc6
	lsls r0, r0, #8
	cmp r1, r0
	ble _0810D666
	mov r0, ip
	adds r0, #0x50
	ldrh r4, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #0
	bge _0810D658
	adds r0, r4, #0
	adds r0, #0x80
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810D686
_0810D654:
	strh r3, [r2]
	b _0810D686
_0810D658:
	adds r0, r4, #0
	subs r0, #0x80
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810D686
	b _0810D654
_0810D666:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x68
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0xa8
	lsls r3, r3, #2
	adds r2, r1, #0
	cmp r0, r3
	bgt _0810D654
	ldr r1, _0810D6AC @ =0xFFFFFD60
	cmp r0, r1
	bge _0810D686
_0810D684:
	strh r1, [r2]
_0810D686:
	movs r4, #0
	ldrsh r3, [r2, r4]
	cmp r3, #0
	bne _0810D6BA
	ldr r0, _0810D6B0 @ =sub_0810D1D0
	mov r1, ip
	str r0, [r1, #0x78]
	strh r3, [r2]
	mov r0, ip
	adds r0, #0x52
	strh r3, [r0]
	ldr r0, [r1, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, ip
	str r0, [r2, #8]
	strh r3, [r2, #4]
	b _0810D6BA
	.align 2, 0
_0810D6AC: .4byte 0xFFFFFD60
_0810D6B0: .4byte sub_0810D1D0
_0810D6B4:
	subs r0, #1
	mov r4, ip
	strh r0, [r4, #4]
_0810D6BA:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_0810D6C0
sub_0810D6C0: @ 0x0810D6C0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _0810D6F4 @ =sub_0810D730
	movs r1, #5
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, _0810D6F8 @ =0x00007DFF
	cmp r1, r0
	bgt _0810D6FC
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _0810D702
	.align 2, 0
_0810D6F4: .4byte sub_0810D730
_0810D6F8: .4byte 0x00007DFF
_0810D6FC:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_0810D702:
	str r0, [r4, #8]
	movs r0, #0x91
	lsls r0, r0, #1
	adds r1, r4, r0
	movs r0, #0
	strh r0, [r1]
	movs r2, #0x92
	lsls r2, r2, #1
	adds r1, r4, r2
	strh r0, [r1]
	movs r1, #0x93
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0810D72A
	adds r2, #5
	adds r1, r4, r2
	movs r0, #0
	strb r0, [r1]
_0810D72A:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_0810D730
sub_0810D730: @ 0x0810D730
	push {r4, r5, lr}
	adds r3, r0, #0
	mov ip, r3
	movs r0, #0x91
	lsls r0, r0, #1
	adds r1, r3, r0
	ldrh r0, [r1]
	adds r0, #6
	movs r4, #0
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xa0
	ble _0810D750
	movs r0, #0xa0
	strh r0, [r1]
_0810D750:
	ldr r0, [r3, #0x40]
	ldr r1, _0810D77C @ =0xFFFF91FF
	adds r0, r0, r1
	ldr r1, _0810D780 @ =0x00001FFE
	cmp r0, r1
	bhi _0810D794
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _0810D784
	adds r0, r2, #0
	adds r0, #0x22
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810D7DE
	strh r4, [r1]
	b _0810D7DE
	.align 2, 0
_0810D77C: .4byte 0xFFFF91FF
_0810D780: .4byte 0x00001FFE
_0810D784:
	adds r0, r2, #0
	subs r0, #0x22
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810D7DE
	strh r4, [r1]
	b _0810D7DE
_0810D794:
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810D7C0
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _0810D7BC @ =0xFFFFFE00
	cmp r0, r2
	blt _0810D7DC
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _0810D7DE
	b _0810D7DC
	.align 2, 0
_0810D7BC: .4byte 0xFFFFFE00
_0810D7C0:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	bgt _0810D7DC
	ldr r2, _0810D804 @ =0xFFFFFE00
	cmp r0, r2
	bge _0810D7DE
_0810D7DC:
	strh r2, [r1]
_0810D7DE:
	ldr r1, [r3, #0x44]
	ldr r0, _0810D808 @ =0x00002FFF
	cmp r1, r0
	bgt _0810D81E
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _0810D80C
	adds r0, r2, #0
	adds r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810D836
	b _0810D818
	.align 2, 0
_0810D804: .4byte 0xFFFFFE00
_0810D808: .4byte 0x00002FFF
_0810D80C:
	adds r0, r2, #0
	subs r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810D836
_0810D818:
	movs r0, #0
	strh r0, [r1]
	b _0810D836
_0810D81E:
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0xd
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #1
	cmp r0, r2
	ble _0810D836
	strh r2, [r1]
_0810D836:
	ldr r0, [r3, #0x50]
	cmp r0, #0
	bne _0810D864
	movs r0, #0x90
	lsls r0, r0, #1
	add r0, ip
	movs r5, #0
	ldrsh r0, [r0, r5]
	cmp r0, #0
	bne _0810D864
	ldr r0, _0810D86C @ =0x00000129
	add r0, ip
	ldrb r0, [r0]
	cmp r0, #0
	bne _0810D864
	ldr r0, [r3, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r3, #8]
	adds r0, r3, #0
	bl sub_08113F00
_0810D864:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810D86C: .4byte 0x00000129

	thumb_func_start sub_0810D870
sub_0810D870: @ 0x0810D870
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _0810D8B4 @ =sub_0810D914
	movs r1, #5
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _0810D8B8 @ =0x00000135
	adds r0, r4, r1
	movs r1, #0
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x50
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r2, #0x91
	lsls r2, r2, #1
	adds r0, r4, r2
	strh r1, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, _0810D8BC @ =0x00007DFF
	cmp r1, r0
	bgt _0810D8C0
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _0810D8C6
	.align 2, 0
_0810D8B4: .4byte sub_0810D914
_0810D8B8: .4byte 0x00000135
_0810D8BC: .4byte 0x00007DFF
_0810D8C0:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_0810D8C6:
	str r0, [r4, #8]
	ldr r1, _0810D8E0 @ =0x00000127
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0810D8E4
	movs r2, #0x92
	lsls r2, r2, #1
	adds r1, r5, r2
	movs r0, #0x80
	lsls r0, r0, #5
	b _0810D8EE
	.align 2, 0
_0810D8E0: .4byte 0x00000127
_0810D8E4:
	movs r0, #0x92
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #0xc0
	lsls r0, r0, #6
_0810D8EE:
	strh r0, [r1]
	movs r0, #8
	strh r0, [r4, #4]
	ldr r1, [r4, #0x44]
	movs r0, #0xc8
	lsls r0, r0, #6
	cmp r1, r0
	ble _0810D906
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	b _0810D90C
_0810D906:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #1
_0810D90C:
	strb r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0810D914
sub_0810D914: @ 0x0810D914
	push {r4, r5, lr}
	adds r3, r0, #0
	mov ip, r3
	ldr r0, [r3, #0x40]
	ldr r1, _0810D944 @ =0xFFFF91FF
	adds r0, r0, r1
	ldr r1, _0810D948 @ =0x00001FFE
	cmp r0, r1
	bhi _0810D95E
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _0810D94C
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810D9AA
	b _0810D958
	.align 2, 0
_0810D944: .4byte 0xFFFF91FF
_0810D948: .4byte 0x00001FFE
_0810D94C:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810D9AA
_0810D958:
	movs r0, #0
	strh r0, [r1]
	b _0810D9AA
_0810D95E:
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810D98C
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _0810D988 @ =0xFFFFFDC0
	cmp r0, r2
	blt _0810D9A8
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	ble _0810D9AA
	b _0810D9A8
	.align 2, 0
_0810D988: .4byte 0xFFFFFDC0
_0810D98C:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	bgt _0810D9A8
	ldr r2, _0810D9F8 @ =0xFFFFFDC0
	cmp r0, r2
	bge _0810D9AA
_0810D9A8:
	strh r2, [r1]
_0810D9AA:
	movs r1, #0x91
	lsls r1, r1, #1
	add r1, ip
	ldrh r0, [r1]
	adds r0, #8
	movs r5, #0
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc0
	ble _0810D9C4
	movs r0, #0xc0
	strh r0, [r1]
_0810D9C4:
	adds r0, r3, #0
	adds r0, #0x9f
	ldrb r4, [r0]
	cmp r4, #0
	beq _0810DA2C
	ldr r1, [r3, #0x44]
	ldr r0, _0810D9FC @ =0x000031FF
	cmp r1, r0
	ble _0810DA10
	adds r0, #1
	str r0, [r3, #0x44]
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _0810DA00
	adds r0, r2, #0
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810DA7E
	strh r5, [r1]
	b _0810DA7E
	.align 2, 0
_0810D9F8: .4byte 0xFFFFFDC0
_0810D9FC: .4byte 0x000031FF
_0810DA00:
	adds r0, r2, #0
	subs r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810DA7E
	strh r5, [r1]
	b _0810DA7E
_0810DA10:
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0x1d
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _0810DA28 @ =0xFFFFFDC0
	cmp r0, r2
	bge _0810DA7E
	b _0810DA7C
	.align 2, 0
_0810DA28: .4byte 0xFFFFFDC0
_0810DA2C:
	ldr r0, [r3, #0x44]
	movs r1, #0xc8
	lsls r1, r1, #6
	cmp r0, r1
	bgt _0810DA66
	str r1, [r3, #0x44]
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r2, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _0810DA56
	adds r0, r2, #0
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810DA7E
	strh r4, [r1]
	b _0810DA7E
_0810DA56:
	adds r0, r2, #0
	subs r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810DA7E
	strh r4, [r1]
	b _0810DA7E
_0810DA66:
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x1d
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	cmp r0, r2
	ble _0810DA7E
_0810DA7C:
	strh r2, [r1]
_0810DA7E:
	ldr r0, [r3, #0x50]
	cmp r0, #0
	bne _0810DB0E
	ldr r0, _0810DAA0 @ =0x00000127
	add r0, ip
	ldrb r0, [r0]
	cmp r0, #0
	bne _0810DAA4
	movs r0, #0x90
	lsls r0, r0, #1
	add r0, ip
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r0, #0x80
	lsls r0, r0, #5
	b _0810DAB2
	.align 2, 0
_0810DAA0: .4byte 0x00000127
_0810DAA4:
	movs r0, #0x90
	lsls r0, r0, #1
	add r0, ip
	movs r4, #0
	ldrsh r1, [r0, r4]
	movs r0, #0xc0
	lsls r0, r0, #6
_0810DAB2:
	cmp r1, r0
	bne _0810DB0E
	mov r0, ip
	adds r0, #0xfc
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #1
	bls _0810DAD6
	movs r0, #0x80
	lsls r0, r0, #1
	add r0, ip
	ldr r0, [r0]
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #1
	bhi _0810DAE2
_0810DAD6:
	ldr r0, [r1, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _0810DB0E
_0810DAE2:
	ldrh r1, [r3, #4]
	movs r5, #4
	ldrsh r0, [r3, r5]
	cmp r0, #0
	beq _0810DAF6
	subs r0, r1, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0810DB0E
_0810DAF6:
	ldr r1, [r3, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0810DB0E
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r3, #8]
	adds r0, r3, #0
	bl sub_081140BC
_0810DB0E:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0810DB14
sub_0810DB14: @ 0x0810DB14
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _0810DBA0
	adds r5, r4, #0
	adds r5, #0x50
	cmp r0, #0x14
	bne _0810DB4A
	adds r0, r4, #0
	bl sub_08111314
	ldr r2, _0810DB94 @ =0x0000FE30
	strh r2, [r5]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r4, r3
	movs r3, #0
	ldrsh r1, [r0, r3]
	movs r0, #0x80
	lsls r0, r0, #5
	cmp r1, r0
	bne _0810DB4A
	rsbs r0, r2, #0
	strh r0, [r5]
_0810DB4A:
	ldrh r2, [r4, #4]
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0xf
	ble _0810DB64
	ldr r1, _0810DB98 @ =gUnk_0835737C
	movs r0, #3
	ands r0, r2
	adds r0, r0, r1
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x54
	strb r1, [r0]
_0810DB64:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	bne _0810DBC6
	ldr r3, _0810DB9C @ =0x00000135
	adds r1, r6, r3
	movs r0, #1
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r1, #0x92
	lsls r1, r1, #1
	adds r0, r6, r1
	strh r2, [r0]
	subs r3, #0x13
	adds r0, r6, r3
	strh r2, [r0]
	b _0810DBC6
	.align 2, 0
_0810DB94: .4byte 0x0000FE30
_0810DB98: .4byte gUnk_0835737C
_0810DB9C: .4byte 0x00000135
_0810DBA0:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	adds r5, r4, #0
	adds r5, #0x50
	cmp r0, #0
	beq _0810DBC6
	movs r0, #0x91
	lsls r0, r0, #1
	adds r1, r4, r0
	ldrh r0, [r1]
	adds r0, #6
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xa0
	ble _0810DBC6
	movs r0, #0xa0
	strh r0, [r1]
_0810DBC6:
	adds r1, r5, #0
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _0810DBE4
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810DBF4
	movs r0, #0
	strh r0, [r1]
	b _0810DBF4
_0810DBE4:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810DBF4
	movs r0, #0
	strh r0, [r5]
_0810DBF4:
	adds r0, r6, #0
	adds r0, #0xfc
	ldr r0, [r0]
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _0810DC26
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r6, r2
	ldr r0, [r0]
	ldr r0, [r0, #8]
	ands r0, r1
	cmp r0, #0
	beq _0810DC26
	movs r3, #0x92
	lsls r3, r3, #1
	adds r1, r6, r3
	movs r0, #0
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_081140F4
_0810DC26:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_0810DC2C
sub_0810DC2C: @ 0x0810DC2C
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0x44]
	movs r0, #0x80
	lsls r0, r0, #6
	cmp r1, r0
	ble _0810DC6A
	adds r0, r4, #0
	adds r0, #0x52
	ldrh r3, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #0
	bge _0810DC58
	adds r0, r3, #0
	adds r0, #0x28
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810DC82
	b _0810DC64
_0810DC58:
	adds r0, r3, #0
	subs r0, #0x28
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810DC82
_0810DC64:
	movs r0, #0
	strh r0, [r2]
	b _0810DC82
_0810DC6A:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0xd
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _0810DCA0 @ =0xFFFFFE80
	adds r2, r1, #0
	cmp r0, r3
	bge _0810DC82
	strh r3, [r2]
_0810DC82:
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	bne _0810DC9A
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0810DC9A
	adds r0, r4, #0
	bl sub_0810C9C8
_0810DC9A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0810DCA0: .4byte 0xFFFFFE80

	thumb_func_start sub_0810DCA4
sub_0810DCA4: @ 0x0810DCA4
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _0810DCEC @ =sub_0810DD60
	movs r1, #5
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	movs r0, #0x93
	lsls r0, r0, #1
	adds r5, r4, r0
	movs r0, #6
	strb r0, [r5]
	ldr r1, _0810DCF0 @ =0x00000135
	adds r0, r4, r1
	strb r2, [r0]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_0810A3D0
	ldrb r0, [r5]
	cmp r0, #6
	bne _0810DCF4
	movs r0, #0x96
	lsls r0, r0, #1
	b _0810DD56
	.align 2, 0
_0810DCEC: .4byte sub_0810DD60
_0810DCF0: .4byte 0x00000135
_0810DCF4:
	ldr r2, _0810DD20 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810DD24 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810DD28 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #3
	ands r1, r0
	cmp r1, #1
	beq _0810DD2C
	cmp r1, #1
	blo _0810DD18
	cmp r1, #2
	beq _0810DD32
	cmp r1, #3
	beq _0810DD36
_0810DD18:
	movs r0, #0x96
	lsls r0, r0, #1
	b _0810DD56
	.align 2, 0
_0810DD20: .4byte gRngVal
_0810DD24: .4byte 0x00196225
_0810DD28: .4byte 0x3C6EF35F
_0810DD2C:
	movs r0, #0x82
	lsls r0, r0, #1
	b _0810DD56
_0810DD32:
	movs r0, #0xdc
	b _0810DD56
_0810DD36:
	adds r0, r4, #0
	adds r0, #0x80
	movs r2, #0
	ldrsh r0, [r0, r2]
	ldr r2, _0810DD50 @ =0x00000139
	adds r1, r4, r2
	ldrb r1, [r1]
	cmp r0, r1
	ble _0810DD54
	movs r0, #0x82
	lsls r0, r0, #1
	b _0810DD56
	.align 2, 0
_0810DD50: .4byte 0x00000139
_0810DD54:
	movs r0, #0xb4
_0810DD56:
	strh r0, [r4, #4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810DD60
sub_0810DD60: @ 0x0810DD60
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0810DD76
	ldr r2, _0810DDDC @ =0x00000135
	adds r0, r4, r2
	strb r1, [r0]
_0810DD76:
	ldr r2, _0810DDE0 @ =gUnk_0835736C
	ldrh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	movs r1, #7
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	strh r0, [r1]
	ldr r1, [r4, #0x40]
	movs r0, #0xc0
	lsls r0, r0, #8
	cmp r1, r0
	ble _0810DDA0
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_0810DDA0:
	ldr r1, [r4, #0x40]
	ldr r0, _0810DDE4 @ =0x000037FF
	cmp r1, r0
	bgt _0810DDB2
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
_0810DDB2:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810DDEC
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _0810DDE8 @ =0xFFFFFE00
	cmp r0, r2
	blt _0810DE08
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	ble _0810DE0A
	b _0810DE08
	.align 2, 0
_0810DDDC: .4byte 0x00000135
_0810DDE0: .4byte gUnk_0835736C
_0810DDE4: .4byte 0x000037FF
_0810DDE8: .4byte 0xFFFFFE00
_0810DDEC:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x10
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	bgt _0810DE08
	ldr r2, _0810DEA0 @ =0xFFFFFE00
	cmp r0, r2
	bge _0810DE0A
_0810DE08:
	strh r2, [r1]
_0810DE0A:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0810DECA
	adds r0, r4, #0
	bl sub_0810CBE8
	ldr r1, _0810DEA4 @ =gUnk_02020EE0
	ldr r0, _0810DEA8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810DE84
	ldrb r0, [r4]
	cmp r0, #0
	bne _0810DE48
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810DE84
_0810DE48:
	ldr r1, _0810DEAC @ =gUnk_08D60FA4
	ldr r5, _0810DEB0 @ =gSongTable
	ldr r2, _0810DEB4 @ =0x00000D8C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810DE6C
	ldr r1, _0810DEB8 @ =0x00000D88
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810DE84
_0810DE6C:
	cmp r3, #0
	beq _0810DE7E
	ldr r0, _0810DEBC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810DE84
_0810DE7E:
	ldr r0, _0810DEC0 @ =0x000001B1
	bl m4aSongNumStart
_0810DE84:
	movs r2, #0x93
	lsls r2, r2, #1
	adds r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #6
	blt _0810DE98
	cmp r0, #7
	ble _0810DE98
	cmp r0, #8
	beq _0810DEC4
_0810DE98:
	adds r0, r4, #0
	bl sub_0810DED0
	b _0810DECA
	.align 2, 0
_0810DEA0: .4byte 0xFFFFFE00
_0810DEA4: .4byte gUnk_02020EE0
_0810DEA8: .4byte gUnk_0203AD3C
_0810DEAC: .4byte gUnk_08D60FA4
_0810DEB0: .4byte gSongTable
_0810DEB4: .4byte 0x00000D8C
_0810DEB8: .4byte 0x00000D88
_0810DEBC: .4byte gUnk_0203AD10
_0810DEC0: .4byte 0x000001B1
_0810DEC4:
	adds r0, r4, #0
	bl sub_0810E590
_0810DECA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_0810DED0
sub_0810DED0: @ 0x0810DED0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	ldr r2, _0810DF14 @ =sub_0810DF60
	movs r1, #5
	bl ObjectSetFunc
	adds r5, r4, #0
	adds r5, #0x52
	movs r0, #0
	strh r0, [r5]
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r0, _0810DF18 @ =0x00000135
	adds r1, r4, r0
	movs r0, #2
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_0803D46C
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x44]
	movs r0, #0x80
	lsls r0, r0, #3
	cmp r1, r0
	ble _0810DF1C
	movs r0, #0x80
	b _0810DF24
	.align 2, 0
_0810DF14: .4byte sub_0810DF60
_0810DF18: .4byte 0x00000135
_0810DF1C:
	ldr r0, _0810DF48 @ =0x000003FF
	cmp r1, r0
	bgt _0810DF26
	ldr r0, _0810DF4C @ =0x0000FF80
_0810DF24:
	strh r0, [r5]
_0810DF26:
	movs r0, #0
	movs r1, #0x3c
	strh r1, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	strb r0, [r1]
	movs r1, #0x95
	lsls r1, r1, #1
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810DF50
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #8
	b _0810DF56
	.align 2, 0
_0810DF48: .4byte 0x000003FF
_0810DF4C: .4byte 0x0000FF80
_0810DF50:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0x3c
_0810DF56:
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810DF60
sub_0810DF60: @ 0x0810DF60
	push {r4, r5, lr}
	mov ip, r0
	mov r5, ip
	ldr r2, _0810DFA0 @ =gUnk_0835737C
	mov r3, ip
	adds r3, #0x9e
	ldrb r1, [r3]
	movs r0, #3
	ands r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	mov r1, ip
	adds r1, #0x55
	movs r4, #0
	strb r0, [r1]
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	mov r2, ip
	adds r2, #0x52
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	ble _0810DFA8
	mov r3, ip
	ldr r1, [r3, #0x44]
	ldr r0, _0810DFA4 @ =0x000003FF
	cmp r1, r0
	bgt _0810DFBE
	adds r0, #1
	str r0, [r3, #0x44]
	b _0810DFBC
	.align 2, 0
_0810DFA0: .4byte gUnk_0835737C
_0810DFA4: .4byte 0x000003FF
_0810DFA8:
	cmp r0, #0
	bge _0810DFBE
	mov r1, ip
	ldr r0, [r1, #0x44]
	movs r1, #0x80
	lsls r1, r1, #3
	cmp r0, r1
	ble _0810DFBE
	mov r3, ip
	str r1, [r3, #0x44]
_0810DFBC:
	strh r4, [r2]
_0810DFBE:
	mov r0, ip
	ldr r2, [r0, #0x40]
	ldr r1, _0810DFF8 @ =0xFFFFE800
	adds r0, r2, r1
	mov r1, ip
	adds r1, #0xac
	ldr r1, [r1]
	ldr r1, [r1, #0x40]
	cmp r0, r1
	ble _0810E01A
	mov r2, ip
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810E010
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _0810DFFC @ =0xFFFFFD80
	cmp r2, r0
	bge _0810E004
	ldr r0, _0810E000 @ =0x0000FD80
	strh r0, [r1]
	b _0810E0CA
	.align 2, 0
_0810DFF8: .4byte 0xFFFFE800
_0810DFFC: .4byte 0xFFFFFD80
_0810E000: .4byte 0x0000FD80
_0810E004:
	movs r0, #0xa0
	lsls r0, r0, #2
	cmp r2, r0
	ble _0810E0CA
	strh r0, [r1]
	b _0810E0CA
_0810E010:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	b _0810E05C
_0810E01A:
	movs r3, #0xc0
	lsls r3, r3, #5
	adds r0, r2, r3
	cmp r0, r1
	bge _0810E078
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810E054
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _0810E050 @ =0xFFFFFD80
	cmp r0, r2
	blt _0810E04C
	movs r2, #0xa0
	lsls r2, r2, #2
	cmp r0, r2
	ble _0810E0CA
_0810E04C:
	strh r2, [r1]
	b _0810E0CA
	.align 2, 0
_0810E050: .4byte 0xFFFFFD80
_0810E054:
	mov r1, ip
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
_0810E05C:
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #2
	cmp r0, r2
	bgt _0810E04C
	ldr r2, _0810E074 @ =0xFFFFFD80
	cmp r0, r2
	bge _0810E0CA
	b _0810E04C
	.align 2, 0
_0810E074: .4byte 0xFFFFFD80
_0810E078:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _0810E094
	adds r0, r2, #0
	adds r0, #0x38
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810E0A4
	b _0810E0A0
_0810E094:
	adds r0, r2, #0
	subs r0, #0x38
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810E0A4
_0810E0A0:
	movs r0, #0
	strh r0, [r1]
_0810E0A4:
	movs r1, #0x93
	lsls r1, r1, #1
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #7
	bne _0810E0CA
	mov r1, ip
	adds r1, #0x9f
	ldrb r0, [r1]
	cmp r0, #0
	beq _0810E0CA
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _0810E0CA
	mov r2, ip
	strh r0, [r2, #4]
_0810E0CA:
	mov r3, ip
	ldrh r1, [r3, #4]
	movs r2, #4
	ldrsh r0, [r3, r2]
	cmp r0, #0
	bne _0810E102
	mov r0, ip
	adds r0, #0x52
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r0, #0
	bne _0810E108
	movs r1, #0x93
	lsls r1, r1, #1
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #6
	beq _0810E0F2
	cmp r0, #7
	beq _0810E0FA
_0810E0F2:
	mov r0, ip
	bl sub_08114170
	b _0810E108
_0810E0FA:
	mov r0, ip
	bl sub_0810E300
	b _0810E108
_0810E102:
	subs r0, r1, #1
	mov r2, ip
	strh r0, [r2, #4]
_0810E108:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810E110
sub_0810E110: @ 0x0810E110
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	ldr r2, _0810E148 @ =sub_0810E230
	movs r1, #5
	bl ObjectSetFunc
	ldr r0, _0810E14C @ =0x00000135
	adds r2, r4, r0
	movs r1, #0
	movs r0, #2
	strb r0, [r2]
	adds r0, r4, #0
	adds r0, #0x50
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #0x5a
	ldr r0, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _0810E150
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _0810E158
	.align 2, 0
_0810E148: .4byte sub_0810E230
_0810E14C: .4byte 0x00000135
_0810E150:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_0810E158:
	str r0, [r4, #8]
	ldr r2, [r4, #0x40]
	movs r0, #0x80
	lsls r0, r0, #6
	cmp r2, r0
	bgt _0810E16E
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
_0810E16E:
	ldr r0, _0810E214 @ =0x0000DFFF
	cmp r2, r0
	ble _0810E17C
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_0810E17C:
	movs r0, #0xa0
	strh r0, [r4, #4]
	adds r0, r4, #0
	bl sub_08111EF4
	ldr r1, _0810E218 @ =gUnk_02020EE0
	ldr r0, _0810E21C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810E1F2
	ldrb r0, [r4]
	cmp r0, #0
	bne _0810E1B2
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810E1F2
_0810E1B2:
	ldr r1, _0810E220 @ =gUnk_08D60FA4
	ldr r5, _0810E224 @ =gSongTable
	ldr r2, _0810E228 @ =0x00000D94
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810E1D8
	movs r1, #0xd9
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810E1F2
_0810E1D8:
	cmp r3, #0
	beq _0810E1EA
	ldr r0, _0810E22C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810E1F2
_0810E1EA:
	movs r0, #0xd9
	lsls r0, r0, #1
	bl m4aSongNumStart
_0810E1F2:
	adds r0, r4, #0
	bl sub_08111824
	adds r0, r6, #0
	adds r0, #0xe4
	movs r2, #0
	movs r1, #0x80
	lsls r1, r1, #4
	strh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r2, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0810E214: .4byte 0x0000DFFF
_0810E218: .4byte gUnk_02020EE0
_0810E21C: .4byte gUnk_0203AD3C
_0810E220: .4byte gUnk_08D60FA4
_0810E224: .4byte gSongTable
_0810E228: .4byte 0x00000D94
_0810E22C: .4byte gUnk_0203AD10

	thumb_func_start sub_0810E230
sub_0810E230: @ 0x0810E230
	push {lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810E266
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	movs r0, #0x80
	rsbs r0, r0, #0
	cmp r2, r0
	bge _0810E260
	ldr r0, _0810E25C @ =0x0000FF80
	strh r0, [r1]
	b _0810E288
	.align 2, 0
_0810E25C: .4byte 0x0000FF80
_0810E260:
	cmp r2, #0x80
	ble _0810E288
	b _0810E278
_0810E266:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x80
	ble _0810E27E
_0810E278:
	movs r0, #0x80
	strh r0, [r1]
	b _0810E288
_0810E27E:
	movs r2, #0x80
	rsbs r2, r2, #0
	cmp r0, r2
	bge _0810E288
	strh r2, [r1]
_0810E288:
	adds r0, r3, #0
	adds r0, #0x9e
	ldrb r1, [r0]
	adds r2, r0, #0
	cmp r1, #0xf
	bls _0810E2B8
	cmp r1, #0x1c
	bls _0810E2A6
	movs r1, #0
	movs r0, #0x1c
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x52
	strh r1, [r0]
	b _0810E2B8
_0810E2A6:
	ldr r0, _0810E2F8 @ =gUnk_083573B4
	ldrb r1, [r2]
	subs r1, #0x10
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r1, r3, #0
	adds r1, #0x52
	strh r0, [r1]
_0810E2B8:
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldr r2, [r3, #0x40]
	ldr r0, _0810E2FC @ =0xFFFFF000
	cmp r2, r0
	bge _0810E2D0
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810E2EE
_0810E2D0:
	movs r0, #0x84
	lsls r0, r0, #9
	cmp r2, r0
	ble _0810E2E2
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810E2EE
_0810E2E2:
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0810E2F4
_0810E2EE:
	adds r0, r3, #0
	bl sub_0810E8D0
_0810E2F4:
	pop {r0}
	bx r0
	.align 2, 0
_0810E2F8: .4byte gUnk_083573B4
_0810E2FC: .4byte 0xFFFFF000

	thumb_func_start sub_0810E300
sub_0810E300: @ 0x0810E300
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _0810E330 @ =sub_081141D0
	movs r1, #5
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #2
	ands r0, r1
	str r0, [r4, #8]
	movs r1, #0x95
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810E334
	movs r0, #0x10
	b _0810E336
	.align 2, 0
_0810E330: .4byte sub_081141D0
_0810E334:
	movs r0, #0x20
_0810E336:
	strh r0, [r4, #4]
	ldr r0, _0810E350 @ =0x00000135
	adds r1, r4, r0
	movs r0, #3
	strb r0, [r1]
	movs r0, #0x95
	lsls r0, r0, #1
	adds r1, r4, r0
	movs r0, #1
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0810E350: .4byte 0x00000135

	thumb_func_start sub_0810E354
sub_0810E354: @ 0x0810E354
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	ldr r2, _0810E38C @ =sub_0810E4A0
	movs r1, #5
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, _0810E390 @ =0x00000135
	adds r1, r4, r0
	movs r0, #2
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _0810E394
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _0810E39C
	.align 2, 0
_0810E38C: .4byte sub_0810E4A0
_0810E390: .4byte 0x00000135
_0810E394:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_0810E39C:
	str r0, [r4, #8]
	ldr r2, [r4, #0x40]
	movs r0, #0x80
	lsls r0, r0, #6
	cmp r2, r0
	bgt _0810E3B2
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
_0810E3B2:
	ldr r0, _0810E3E4 @ =0x0000DFFF
	cmp r2, r0
	ble _0810E3C0
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #8]
_0810E3C0:
	movs r1, #0x93
	lsls r1, r1, #1
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #8
	bne _0810E3F0
	movs r2, #0x95
	lsls r2, r2, #1
	adds r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810E3E8
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _0810E3EE
	.align 2, 0
_0810E3E4: .4byte 0x0000DFFF
_0810E3E8:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_0810E3EE:
	str r0, [r4, #8]
_0810E3F0:
	movs r0, #0x20
	strh r0, [r4, #4]
	adds r0, r4, #0
	bl sub_08111EF4
	ldr r1, _0810E488 @ =gUnk_02020EE0
	ldr r0, _0810E48C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810E466
	ldrb r0, [r4]
	cmp r0, #0
	bne _0810E426
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810E466
_0810E426:
	ldr r1, _0810E490 @ =gUnk_08D60FA4
	ldr r5, _0810E494 @ =gSongTable
	ldr r2, _0810E498 @ =0x00000D94
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810E44C
	movs r1, #0xd9
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810E466
_0810E44C:
	cmp r3, #0
	beq _0810E45E
	ldr r0, _0810E49C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810E466
_0810E45E:
	movs r0, #0xd9
	lsls r0, r0, #1
	bl m4aSongNumStart
_0810E466:
	adds r0, r4, #0
	bl sub_08111824
	adds r0, r6, #0
	adds r0, #0xe4
	movs r2, #0
	movs r1, #0x80
	lsls r1, r1, #4
	strh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r2, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0810E488: .4byte gUnk_02020EE0
_0810E48C: .4byte gUnk_0203AD3C
_0810E490: .4byte gUnk_08D60FA4
_0810E494: .4byte gSongTable
_0810E498: .4byte 0x00000D94
_0810E49C: .4byte gUnk_0203AD10

	thumb_func_start sub_0810E4A0
sub_0810E4A0: @ 0x0810E4A0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810E4D6
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	movs r0, #0x80
	rsbs r0, r0, #0
	cmp r2, r0
	bge _0810E4D0
	ldr r0, _0810E4CC @ =0x0000FF80
	strh r0, [r1]
	b _0810E4F8
	.align 2, 0
_0810E4CC: .4byte 0x0000FF80
_0810E4D0:
	cmp r2, #0x80
	ble _0810E4F8
	b _0810E4E8
_0810E4D6:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x80
	ble _0810E4EE
_0810E4E8:
	movs r0, #0x80
	strh r0, [r1]
	b _0810E4F8
_0810E4EE:
	movs r2, #0x80
	rsbs r2, r2, #0
	cmp r0, r2
	bge _0810E4F8
	strh r2, [r1]
_0810E4F8:
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r1, [r0]
	adds r2, r0, #0
	cmp r1, #0xf
	bls _0810E528
	cmp r1, #0x1c
	bls _0810E516
	movs r1, #0
	movs r0, #0x1c
	strb r0, [r2]
	adds r0, r4, #0
	adds r0, #0x52
	strh r1, [r0]
	b _0810E528
_0810E516:
	ldr r0, _0810E554 @ =gUnk_083573B4
	ldrb r1, [r2]
	subs r1, #0x10
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r1, r4, #0
	adds r1, #0x52
	strh r0, [r1]
_0810E528:
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0810E58A
	adds r1, r4, #0
	adds r1, #0x85
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0810E558
	adds r0, r4, #0
	bl sub_0810E8D0
	b _0810E58A
	.align 2, 0
_0810E554: .4byte gUnk_083573B4
_0810E558:
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_0811473C
	adds r0, r5, #0
	adds r0, #0xe4
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
	adds r1, #0x26
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #7
	bne _0810E584
	adds r0, r4, #0
	bl sub_0810DED0
	b _0810E58A
_0810E584:
	adds r0, r4, #0
	bl sub_08114130
_0810E58A:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0810E590
sub_0810E590: @ 0x0810E590
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _0810E5C8 @ =sub_0810E65C
	movs r1, #5
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x52
	movs r3, #0
	strh r3, [r2]
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r0, _0810E5CC @ =0x00000135
	adds r1, r4, r0
	movs r0, #2
	strb r0, [r1]
	ldr r1, [r4, #0x44]
	movs r0, #0x80
	lsls r0, r0, #3
	cmp r1, r0
	ble _0810E5D0
	movs r0, #0x80
	strh r0, [r2]
	b _0810E5E6
	.align 2, 0
_0810E5C8: .4byte sub_0810E65C
_0810E5CC: .4byte 0x00000135
_0810E5D0:
	ldr r0, _0810E5DC @ =0x000003FF
	cmp r1, r0
	bgt _0810E5E4
	ldr r0, _0810E5E0 @ =0x0000FF80
	strh r0, [r2]
	b _0810E5E6
	.align 2, 0
_0810E5DC: .4byte 0x000003FF
_0810E5E0: .4byte 0x0000FF80
_0810E5E4:
	strh r3, [r2]
_0810E5E6:
	movs r0, #0
	movs r3, #0x20
	strh r3, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	strb r0, [r1]
	ldr r2, _0810E61C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810E620 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810E624 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	movs r2, #0x95
	lsls r2, r2, #1
	adds r1, r5, r2
	strb r0, [r1]
	cmp r0, #0
	beq _0810E628
	adds r0, r4, #0
	adds r0, #0xa0
	strh r3, [r0]
	b _0810E632
	.align 2, 0
_0810E61C: .4byte gRngVal
_0810E620: .4byte 0x00196225
_0810E624: .4byte 0x3C6EF35F
_0810E628:
	adds r1, r4, #0
	adds r1, #0xa0
	movs r0, #0xe0
	strh r0, [r1]
	adds r0, r1, #0
_0810E632:
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #8
	ldr r1, [r4, #0x40]
	cmp r1, r0
	ble _0810E64C
	adds r1, r4, #0
	adds r1, #0x50
	ldr r0, _0810E648 @ =0x0000FFE0
	b _0810E652
	.align 2, 0
_0810E648: .4byte 0x0000FFE0
_0810E64C:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0x20
_0810E652:
	strh r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810E65C
sub_0810E65C: @ 0x0810E65C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r2, _0810E698 @ =gUnk_0835737C
	adds r3, r5, #0
	adds r3, #0x9e
	ldrb r1, [r3]
	movs r0, #3
	ands r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r1, #0x55
	movs r4, #0
	strb r0, [r1]
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	adds r2, r5, #0
	adds r2, #0x52
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	ble _0810E6A0
	ldr r1, [r5, #0x44]
	ldr r0, _0810E69C @ =0x000003FF
	cmp r1, r0
	bgt _0810E6B2
	adds r0, #1
	str r0, [r5, #0x44]
	b _0810E6B0
	.align 2, 0
_0810E698: .4byte gUnk_0835737C
_0810E69C: .4byte 0x000003FF
_0810E6A0:
	cmp r0, #0
	bge _0810E6B2
	ldr r0, [r5, #0x44]
	movs r1, #0x80
	lsls r1, r1, #3
	cmp r0, r1
	ble _0810E6B2
	str r1, [r5, #0x44]
_0810E6B0:
	strh r4, [r2]
_0810E6B2:
	adds r0, r5, #0
	adds r0, #0x50
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r6, r0, #0
	cmp r1, #0
	bge _0810E728
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810E6F8
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r6]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	ldr r0, _0810E6E4 @ =0xFFFFFD80
	cmp r1, r0
	bge _0810E6EC
	ldr r0, _0810E6E8 @ =0x0000FD80
	strh r0, [r6]
	b _0810E712
	.align 2, 0
_0810E6E4: .4byte 0xFFFFFD80
_0810E6E8: .4byte 0x0000FD80
_0810E6EC:
	movs r0, #0xa0
	lsls r0, r0, #2
	cmp r1, r0
	ble _0810E712
	strh r0, [r6]
	b _0810E712
_0810E6F8:
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xa0
	lsls r1, r1, #2
	cmp r0, r1
	bgt _0810E710
	ldr r1, _0810E724 @ =0xFFFFFD80
	cmp r0, r1
	bge _0810E712
_0810E710:
	strh r1, [r6]
_0810E712:
	adds r0, r5, #0
	adds r0, #0xa0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #8
	ldr r0, [r5, #0x40]
	cmp r0, r1
	bge _0810E780
	b _0810E77A
	.align 2, 0
_0810E724: .4byte 0xFFFFFD80
_0810E728:
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810E750
	adds r0, r2, #0
	subs r0, #0x20
	strh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _0810E74C @ =0xFFFFFD80
	cmp r0, r1
	blt _0810E768
	movs r1, #0xa0
	lsls r1, r1, #2
	cmp r0, r1
	ble _0810E76A
	b _0810E768
	.align 2, 0
_0810E74C: .4byte 0xFFFFFD80
_0810E750:
	adds r0, r2, #0
	adds r0, #0x20
	strh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xa0
	lsls r1, r1, #2
	cmp r0, r1
	bgt _0810E768
	ldr r1, _0810E7C4 @ =0xFFFFFD80
	cmp r0, r1
	bge _0810E76A
_0810E768:
	strh r1, [r6]
_0810E76A:
	adds r0, r5, #0
	adds r0, #0xa0
	movs r3, #0
	ldrsh r0, [r0, r3]
	lsls r1, r0, #8
	ldr r0, [r5, #0x40]
	cmp r0, r1
	ble _0810E780
_0810E77A:
	str r1, [r5, #0x40]
	movs r0, #0
	strh r0, [r6]
_0810E780:
	ldr r0, [r5, #0x50]
	cmp r0, #0
	bne _0810E7BC
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _0810E7BC
	ldr r2, _0810E7C8 @ =sub_081141D0
	adds r0, r5, #0
	movs r1, #5
	bl ObjectSetFunc
	strh r4, [r6]
	adds r0, r5, #0
	adds r0, #0x52
	strh r4, [r0]
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #8]
	movs r0, #0xa
	strh r0, [r5, #4]
	ldr r0, _0810E7CC @ =0x00000135
	adds r1, r5, r0
	movs r0, #3
	strb r0, [r1]
_0810E7BC:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0810E7C4: .4byte 0xFFFFFD80
_0810E7C8: .4byte sub_081141D0
_0810E7CC: .4byte 0x00000135

	thumb_func_start sub_0810E7D0
sub_0810E7D0: @ 0x0810E7D0
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r1, #0x95
	lsls r1, r1, #1
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810E836
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810E81C
	adds r0, r6, #0
	adds r0, #0x50
	ldrh r1, [r0]
	subs r1, #0x20
	strh r1, [r0]
	lsls r1, r1, #0x10
	asrs r2, r1, #0x10
	ldr r1, _0810E808 @ =0xFFFFFD80
	adds r5, r0, #0
	cmp r2, r1
	bge _0810E810
	ldr r0, _0810E80C @ =0x0000FD80
	strh r0, [r5]
	b _0810E888
	.align 2, 0
_0810E808: .4byte 0xFFFFFD80
_0810E80C: .4byte 0x0000FD80
_0810E810:
	movs r0, #0xa0
	lsls r0, r0, #2
	cmp r2, r0
	ble _0810E888
	strh r0, [r5]
	b _0810E888
_0810E81C:
	adds r1, r6, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #2
	adds r5, r1, #0
	cmp r0, r2
	bgt _0810E87C
	b _0810E880
_0810E836:
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810E864
	adds r1, r6, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _0810E860 @ =0xFFFFFD80
	adds r5, r1, #0
	cmp r0, r2
	blt _0810E87C
	movs r1, #0xa0
	lsls r1, r1, #2
	cmp r0, r1
	ble _0810E888
	b _0810E886
	.align 2, 0
_0810E860: .4byte 0xFFFFFD80
_0810E864:
	adds r1, r6, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #2
	adds r5, r1, #0
	cmp r0, r2
	ble _0810E880
_0810E87C:
	strh r2, [r5]
	b _0810E888
_0810E880:
	ldr r1, _0810E8C4 @ =0xFFFFFD80
	cmp r0, r1
	bge _0810E888
_0810E886:
	strh r1, [r5]
_0810E888:
	ldrh r0, [r6, #4]
	subs r0, #1
	strh r0, [r6, #4]
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _0810E8BE
	ldr r2, _0810E8C8 @ =sub_081141D0
	adds r0, r6, #0
	movs r1, #5
	bl ObjectSetFunc
	strh r4, [r5]
	adds r0, r6, #0
	adds r0, #0x52
	strh r4, [r0]
	ldr r0, [r6, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r6, #8]
	movs r0, #0xa
	strh r0, [r6, #4]
	ldr r0, _0810E8CC @ =0x00000135
	adds r1, r6, r0
	movs r0, #3
	strb r0, [r1]
_0810E8BE:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0810E8C4: .4byte 0xFFFFFD80
_0810E8C8: .4byte sub_081141D0
_0810E8CC: .4byte 0x00000135

	thumb_func_start sub_0810E8D0
sub_0810E8D0: @ 0x0810E8D0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _0810E900 @ =sub_0810E938
	movs r1, #5
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	ldr r0, _0810E904 @ =0x00000135
	adds r1, r4, r0
	movs r0, #2
	strb r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, _0810E908 @ =0x00007DFF
	cmp r1, r0
	bgt _0810E90C
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _0810E912
	.align 2, 0
_0810E900: .4byte sub_0810E938
_0810E904: .4byte 0x00000135
_0810E908: .4byte 0x00007DFF
_0810E90C:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_0810E912:
	str r0, [r4, #8]
	movs r0, #0x20
	strh r0, [r5, #4]
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_0811473C
	adds r0, r4, #0
	adds r0, #0xe4
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0810E938
sub_0810E938: @ 0x0810E938
	push {r4, r5, lr}
	adds r2, r0, #0
	ldr r0, [r2, #0x40]
	ldr r1, _0810E964 @ =0xFFFF91FF
	adds r0, r0, r1
	ldr r1, _0810E968 @ =0x00001FFE
	cmp r0, r1
	bhi _0810E97E
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r3, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _0810E96C
	adds r0, r3, #0
	adds r0, #0x22
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810E9CA
	b _0810E978
	.align 2, 0
_0810E964: .4byte 0xFFFF91FF
_0810E968: .4byte 0x00001FFE
_0810E96C:
	adds r0, r3, #0
	subs r0, #0x22
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810E9CA
_0810E978:
	movs r0, #0
	strh r0, [r1]
	b _0810E9CA
_0810E97E:
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810E9AC
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _0810E9A8 @ =0xFFFFFE00
	cmp r0, r3
	blt _0810E9C8
	movs r3, #0x80
	lsls r3, r3, #2
	cmp r0, r3
	ble _0810E9CA
	b _0810E9C8
	.align 2, 0
_0810E9A8: .4byte 0xFFFFFE00
_0810E9AC:
	adds r1, r2, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #2
	cmp r0, r3
	bgt _0810E9C8
	ldr r3, _0810E9FC @ =0xFFFFFE00
	cmp r0, r3
	bge _0810E9CA
_0810E9C8:
	strh r3, [r1]
_0810E9CA:
	ldrh r0, [r2, #4]
	movs r5, #4
	ldrsh r4, [r2, r5]
	cmp r4, #0
	bne _0810EA44
	ldr r1, [r2, #0x44]
	movs r0, #0x80
	lsls r0, r0, #6
	cmp r1, r0
	ble _0810EA10
	adds r1, r2, #0
	adds r1, #0x52
	ldrh r3, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _0810EA00
	adds r0, r3, #0
	adds r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0810EA26
	strh r4, [r1]
	b _0810EA26
	.align 2, 0
_0810E9FC: .4byte 0xFFFFFE00
_0810EA00:
	adds r0, r3, #0
	subs r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0810EA26
	strh r4, [r1]
	b _0810EA26
_0810EA10:
	adds r1, r2, #0
	adds r1, #0x52
	ldrh r0, [r1]
	subs r0, #0xd
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r3, _0810EA40 @ =0xFFFFFE80
	cmp r0, r3
	bge _0810EA26
	strh r3, [r1]
_0810EA26:
	ldr r0, [r2, #0x50]
	cmp r0, #0
	bne _0810EA48
	ldr r0, [r2, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2, #8]
	adds r0, r2, #0
	bl sub_0810C9C8
	b _0810EA48
	.align 2, 0
_0810EA40: .4byte 0xFFFFFE80
_0810EA44:
	subs r0, #1
	strh r0, [r2, #4]
_0810EA48:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810EA50
sub_0810EA50: @ 0x0810EA50
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _0810EB0C @ =sub_081141F4
	movs r1, #5
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #2
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x78
	strh r0, [r4, #4]
	adds r0, #0xae
	adds r1, r4, r0
	movs r0, #9
	strb r0, [r1]
	movs r0, #5
	adds r1, r4, #0
	bl sub_0806FE64
	ldr r1, _0810EB10 @ =gUnk_02020EE0
	ldr r0, _0810EB14 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810EAF6
	ldrb r0, [r4]
	cmp r0, #0
	bne _0810EABA
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810EAF6
_0810EABA:
	ldr r1, _0810EB18 @ =gUnk_08D60FA4
	ldr r5, _0810EB1C @ =gSongTable
	ldr r2, _0810EB20 @ =0x00000D8C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810EADE
	ldr r1, _0810EB24 @ =0x00000D88
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810EAF6
_0810EADE:
	cmp r3, #0
	beq _0810EAF0
	ldr r0, _0810EB28 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810EAF6
_0810EAF0:
	ldr r0, _0810EB2C @ =0x000001B1
	bl m4aSongNumStart
_0810EAF6:
	adds r0, r4, #0
	adds r0, #0xe4
	movs r1, #0x80
	lsls r1, r1, #4
	strh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810EB0C: .4byte sub_081141F4
_0810EB10: .4byte gUnk_02020EE0
_0810EB14: .4byte gUnk_0203AD3C
_0810EB18: .4byte gUnk_08D60FA4
_0810EB1C: .4byte gSongTable
_0810EB20: .4byte 0x00000D8C
_0810EB24: .4byte 0x00000D88
_0810EB28: .4byte gUnk_0203AD10
_0810EB2C: .4byte 0x000001B1

	thumb_func_start sub_0810EB30
sub_0810EB30: @ 0x0810EB30
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #8
	bne _0810EBC0
	adds r0, r4, #0
	bl sub_08111EF4
	ldr r1, _0810EBF0 @ =gUnk_02020EE0
	ldr r0, _0810EBF4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810EBB8
	ldrb r0, [r4]
	cmp r0, #0
	bne _0810EB78
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810EBB8
_0810EB78:
	ldr r1, _0810EBF8 @ =gUnk_08D60FA4
	ldr r5, _0810EBFC @ =gSongTable
	ldr r2, _0810EC00 @ =0x00000D94
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810EB9E
	movs r1, #0xd9
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810EBB8
_0810EB9E:
	cmp r3, #0
	beq _0810EBB0
	ldr r0, _0810EC04 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810EBB8
_0810EBB0:
	movs r0, #0xd9
	lsls r0, r0, #1
	bl m4aSongNumStart
_0810EBB8:
	ldr r2, _0810EC08 @ =0x00000135
	adds r1, r6, r2
	movs r0, #2
	strb r0, [r1]
_0810EBC0:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0810EBE8
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r0, r4, #0
	bl sub_08113508
	adds r1, r0, #0
	cmp r1, #0
	beq _0810EBE2
	adds r0, r6, #0
	adds r0, #0xdc
	str r1, [r0]
_0810EBE2:
	adds r0, r4, #0
	bl sub_0810AB1C
_0810EBE8:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0810EBF0: .4byte gUnk_02020EE0
_0810EBF4: .4byte gUnk_0203AD3C
_0810EBF8: .4byte gUnk_08D60FA4
_0810EBFC: .4byte gSongTable
_0810EC00: .4byte 0x00000D94
_0810EC04: .4byte gUnk_0203AD10
_0810EC08: .4byte 0x00000135

	thumb_func_start sub_0810EC0C
sub_0810EC0C: @ 0x0810EC0C
	push {r4, lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810EC48
	adds r0, r3, #0
	adds r0, #0x50
	ldrh r1, [r0]
	subs r1, #0x20
	strh r1, [r0]
	lsls r1, r1, #0x10
	asrs r4, r1, #0x10
	ldr r1, _0810EC38 @ =0xFFFFFE00
	adds r2, r0, #0
	cmp r4, r1
	bge _0810EC3C
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r2]
	b _0810EC6C
	.align 2, 0
_0810EC38: .4byte 0xFFFFFE00
_0810EC3C:
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r4, r0
	ble _0810EC6C
	strh r0, [r2]
	b _0810EC6C
_0810EC48:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0x80
	lsls r4, r4, #2
	adds r2, r1, #0
	cmp r0, r4
	ble _0810EC64
	strh r4, [r2]
	b _0810EC6C
_0810EC64:
	ldr r1, _0810EC88 @ =0xFFFFFE00
	cmp r0, r1
	bge _0810EC6C
	strh r1, [r2]
_0810EC6C:
	ldr r1, [r3, #8]
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _0810EC90
	ldr r1, [r3, #0x40]
	ldr r0, _0810EC8C @ =0x00007DFF
	cmp r1, r0
	bgt _0810EC9E
	adds r0, #1
	str r0, [r3, #0x40]
	movs r0, #0
	strh r0, [r2]
	b _0810EC9E
	.align 2, 0
_0810EC88: .4byte 0xFFFFFE00
_0810EC8C: .4byte 0x00007DFF
_0810EC90:
	ldr r0, [r3, #0x40]
	movs r4, #0xfc
	lsls r4, r4, #7
	cmp r0, r4
	ble _0810EC9E
	str r4, [r3, #0x40]
	strh r1, [r2]
_0810EC9E:
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	bne _0810ECAC
	adds r0, r3, #0
	bl sub_08114310
_0810ECAC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810ECB4
sub_0810ECB4: @ 0x0810ECB4
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #8
	ble _0810ECE6
	ldr r2, _0810ED80 @ =gUnk_0835737C
	adds r3, r4, #0
	adds r3, #0x9e
	ldrb r1, [r3]
	movs r0, #3
	ands r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x55
	strb r0, [r1]
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
_0810ECE6:
	movs r2, #4
	ldrsh r0, [r4, r2]
	cmp r0, #8
	bne _0810ED68
	adds r0, r4, #0
	bl sub_08111EF4
	ldr r1, _0810ED84 @ =gUnk_02020EE0
	ldr r0, _0810ED88 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810ED60
	ldrb r0, [r4]
	cmp r0, #0
	bne _0810ED20
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810ED60
_0810ED20:
	ldr r1, _0810ED8C @ =gUnk_08D60FA4
	ldr r5, _0810ED90 @ =gSongTable
	ldr r2, _0810ED94 @ =0x00000D94
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810ED46
	movs r1, #0xd9
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810ED60
_0810ED46:
	cmp r3, #0
	beq _0810ED58
	ldr r0, _0810ED98 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810ED60
_0810ED58:
	movs r0, #0xd9
	lsls r0, r0, #1
	bl m4aSongNumStart
_0810ED60:
	ldr r2, _0810ED9C @ =0x00000135
	adds r1, r6, r2
	movs r0, #2
	strb r0, [r1]
_0810ED68:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0810ED7A
	adds r0, r4, #0
	bl sub_081143AC
_0810ED7A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0810ED80: .4byte gUnk_0835737C
_0810ED84: .4byte gUnk_02020EE0
_0810ED88: .4byte gUnk_0203AD3C
_0810ED8C: .4byte gUnk_08D60FA4
_0810ED90: .4byte gSongTable
_0810ED94: .4byte 0x00000D94
_0810ED98: .4byte gUnk_0203AD10
_0810ED9C: .4byte 0x00000135

	thumb_func_start sub_0810EDA0
sub_0810EDA0: @ 0x0810EDA0
	push {r4, lr}
	adds r2, r0, #0
	adds r4, r2, #0
	ldr r1, [r2, #0x44]
	ldr r0, _0810EDB8 @ =0xFFFFC000
	cmp r1, r0
	bge _0810EDBC
	adds r1, r2, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	b _0810EDD4
	.align 2, 0
_0810EDB8: .4byte 0xFFFFC000
_0810EDBC:
	adds r1, r2, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0xd
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0xc0
	lsls r3, r3, #1
	cmp r0, r3
	ble _0810EDD4
	strh r3, [r1]
_0810EDD4:
	movs r1, #0x86
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _0810EDE6
	adds r0, r2, #0
	bl sub_0810E8D0
_0810EDE6:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_0810EDEC
sub_0810EDEC: @ 0x0810EDEC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r4, r0, #0
	mov sb, r4
	adds r0, #0xfc
	ldr r0, [r0]
	str r0, [sp]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r0, [r0]
	str r0, [sp, #4]
	movs r3, #0x86
	lsls r3, r3, #1
	adds r2, r4, r3
	ldr r0, [r2]
	cmp r0, #0
	beq _0810EE28
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _0810EE28
	movs r0, #0
	str r0, [r2]
_0810EE28:
	movs r5, #0x84
	lsls r5, r5, #1
	adds r2, r4, r5
	ldr r0, [r2]
	cmp r0, #0
	beq _0810EE44
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _0810EE44
	movs r0, #0
	str r0, [r2]
_0810EE44:
	movs r6, #0x88
	lsls r6, r6, #1
	adds r2, r4, r6
	ldr r0, [r2]
	cmp r0, #0
	beq _0810EE60
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _0810EE60
	movs r0, #0
	str r0, [r2]
_0810EE60:
	movs r0, #0x8a
	lsls r0, r0, #1
	adds r2, r4, r0
	ldr r0, [r2]
	cmp r0, #0
	beq _0810EE7C
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _0810EE7C
	movs r0, #0
	str r0, [r2]
_0810EE7C:
	movs r1, #0x8c
	lsls r1, r1, #1
	adds r2, r4, r1
	ldr r0, [r2]
	cmp r0, #0
	beq _0810EE98
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _0810EE98
	movs r0, #0
	str r0, [r2]
_0810EE98:
	movs r3, #0x82
	lsls r3, r3, #1
	adds r2, r4, r3
	ldr r0, [r2]
	cmp r0, #0
	beq _0810EEB4
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _0810EEB4
	movs r0, #0
	str r0, [r2]
_0810EEB4:
	ldr r0, _0810EEE8 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	mov r1, sb
	adds r1, #0x56
	movs r5, #1
	mov sl, r5
	mov r0, sl
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _0810EED2
	b _0810F126
_0810EED2:
	mov r0, sb
	adds r0, #0x80
	movs r6, #0
	ldrsh r0, [r0, r6]
	cmp r0, #0
	bgt _0810EEEC
	mov r0, sb
	str r2, [r0, #0x7c]
	bl sub_0810C414
	b _0810F126
	.align 2, 0
_0810EEE8: .4byte gUnk_03000510
_0810EEEC:
	movs r1, #0x97
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810EF00
	ldr r2, _0810EF6C @ =0x00000131
	adds r1, r4, r2
	movs r0, #0x30
	strb r0, [r1]
_0810EF00:
	ldr r3, _0810EF6C @ =0x00000131
	adds r1, r4, r3
	ldrb r0, [r1]
	cmp r0, #0
	beq _0810EF7C
	adds r5, r4, #0
	adds r5, #0xe4
	ldrh r6, [r5]
	mov r8, r6
	subs r0, #1
	strb r0, [r1]
	movs r0, #0xa0
	lsls r0, r0, #4
	strh r0, [r5]
	adds r6, r4, #0
	adds r6, #0xf0
	strh r0, [r6]
	ldr r2, _0810EF70 @ =gUnk_02020EE0
	ldr r0, _0810EF74 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	mov r1, sb
	adds r1, #0x60
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r1, [r7]
	cmp r0, r1
	bne _0810EF4C
	adds r0, r5, #0
	bl sub_0814F274
	adds r0, r6, #0
	bl sub_0814F274
_0810EF4C:
	mov r2, r8
	strh r2, [r5]
	strh r2, [r6]
	ldr r3, _0810EF78 @ =0x00000137
	adds r1, r4, r3
	ldrb r0, [r1]
	cmp r0, #0
	beq _0810EFAA
	movs r5, #0x9b
	lsls r5, r5, #1
	adds r0, r4, r5
	mov r6, sl
	strb r6, [r0]
	movs r0, #0
	strb r0, [r1]
	b _0810EFAA
	.align 2, 0
_0810EF6C: .4byte 0x00000131
_0810EF70: .4byte gUnk_02020EE0
_0810EF74: .4byte gUnk_0203AD3C
_0810EF78: .4byte 0x00000137
_0810EF7C:
	ldr r2, _0810F03C @ =gUnk_02020EE0
	ldr r0, _0810F040 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	mov r1, sb
	adds r1, #0x60
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r1, [r7]
	cmp r0, r1
	bne _0810EFF0
	adds r0, r4, #0
	adds r0, #0xe4
	bl sub_0814F274
	adds r0, r4, #0
	adds r0, #0xf0
	bl sub_0814F274
_0810EFAA:
	ldr r2, _0810F03C @ =gUnk_02020EE0
	ldr r0, _0810F040 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _0810EFF0
	adds r0, r4, #0
	adds r0, #0xea
	ldrh r1, [r0]
	movs r5, #2
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _0810EFDA
	movs r0, #2
	movs r1, #0xd
	bl sub_0803D2A8
_0810EFDA:
	adds r0, r4, #0
	adds r0, #0xf6
	ldrh r1, [r0]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _0810EFF0
	movs r0, #0x13
	movs r1, #0xc
	bl sub_0803D2A8
_0810EFF0:
	movs r2, #0x98
	lsls r2, r2, #1
	adds r1, r4, r2
	ldrb r0, [r1]
	cmp r0, #0
	beq _0810F00E
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _0810F00E
	ldr r3, _0810F044 @ =0x0000012F
	adds r1, r4, r3
	strb r0, [r1]
_0810F00E:
	movs r5, #0x90
	lsls r5, r5, #1
	adds r3, r4, r5
	movs r6, #0x92
	lsls r6, r6, #1
	adds r2, r4, r6
	movs r0, #0
	ldrsh r1, [r3, r0]
	movs r5, #0
	ldrsh r0, [r2, r5]
	cmp r1, r0
	beq _0810F0F2
	adds r0, r1, #0
	movs r3, #0
	ldrsh r1, [r2, r3]
	subs r2, r0, r1
	cmp r2, #0
	blt _0810F048
	movs r0, #0x80
	lsls r0, r0, #6
	cmp r2, r0
	bgt _0810F052
	b _0810F09C
	.align 2, 0
_0810F03C: .4byte gUnk_02020EE0
_0810F040: .4byte gUnk_0203AD3C
_0810F044: .4byte 0x0000012F
_0810F048:
	subs r1, r1, r0
	movs r0, #0x80
	lsls r0, r0, #6
	cmp r1, r0
	ble _0810F09C
_0810F052:
	movs r5, #0x90
	lsls r5, r5, #1
	adds r2, r4, r5
	movs r6, #0
	ldrsh r0, [r2, r6]
	movs r3, #0x92
	lsls r3, r3, #1
	adds r1, r4, r3
	movs r5, #0
	ldrsh r1, [r1, r5]
	subs r0, r0, r1
	cmp r0, #0
	ble _0810F07A
	movs r6, #0x91
	lsls r6, r6, #1
	adds r0, r4, r6
	ldrh r0, [r0]
	ldrh r1, [r2]
	adds r0, r0, r1
	b _0810F086
_0810F07A:
	movs r3, #0x91
	lsls r3, r3, #1
	adds r1, r4, r3
	ldrh r0, [r2]
	ldrh r1, [r1]
	subs r0, r0, r1
_0810F086:
	strh r0, [r2]
	movs r5, #0x90
	lsls r5, r5, #1
	adds r2, r4, r5
	ldrh r1, [r2]
	ldr r0, _0810F098 @ =0x00003FFF
	ands r0, r1
	strh r0, [r2]
	b _0810F0F2
	.align 2, 0
_0810F098: .4byte 0x00003FFF
_0810F09C:
	movs r6, #0x90
	lsls r6, r6, #1
	adds r2, r4, r6
	movs r1, #0
	ldrsh r0, [r2, r1]
	movs r5, #0x92
	lsls r5, r5, #1
	adds r3, r4, r5
	movs r6, #0
	ldrsh r1, [r3, r6]
	subs r0, r0, r1
	cmp r0, #0
	bge _0810F0D4
	movs r1, #0x91
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrh r0, [r0]
	ldrh r5, [r2]
	adds r0, r0, r5
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r5, [r3]
	movs r6, #0
	ldrsh r1, [r3, r6]
	cmp r0, r1
	blt _0810F0F2
	b _0810F0F0
_0810F0D4:
	movs r0, #0x91
	lsls r0, r0, #1
	adds r1, r4, r0
	ldrh r0, [r2]
	ldrh r1, [r1]
	subs r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r5, [r3]
	movs r6, #0
	ldrsh r1, [r3, r6]
	cmp r0, r1
	bgt _0810F0F2
_0810F0F0:
	strh r5, [r2]
_0810F0F2:
	mov r0, sb
	ldr r1, [r0, #0xc]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0810F126
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r1, r0
	mov r2, sb
	str r1, [r2, #0xc]
	ldr r0, [sp]
	adds r0, #0xe3
	movs r1, #8
	strb r1, [r0]
	ldr r0, [sp, #4]
	adds r0, #0xe3
	strb r1, [r0]
	movs r3, #0x97
	lsls r3, r3, #1
	adds r1, r4, r3
	movs r0, #1
	strb r0, [r1]
	ldr r5, _0810F138 @ =0x00000137
	adds r1, r4, r5
	strb r0, [r1]
_0810F126:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0810F138: .4byte 0x00000137

	thumb_func_start sub_0810F13C
sub_0810F13C: @ 0x0810F13C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r5, r0, #0
	adds r7, r5, #0
	mov r8, r5
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810F178
	ldr r2, [r5, #0x40]
	asrs r2, r2, #8
	ldr r0, _0810F174 @ =gUnk_08D5FE14
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	subs r6, r2, r0
	b _0810F194
	.align 2, 0
_0810F174: .4byte gUnk_08D5FE14
_0810F178:
	mov r4, r8
	ldr r2, [r4, #0x40]
	asrs r2, r2, #8
	ldr r0, _0810F1B8 @ =gUnk_08D5FE14
	movs r6, #0x80
	lsls r6, r6, #2
	adds r0, r0, r6
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	adds r6, r2, r0
_0810F194:
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov sb, r0
	movs r4, #0
	ldr r1, _0810F1BC @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	adds r7, #0x87
	mov sl, r7
	adds r7, r5, #0
	adds r7, #0x56
	str r7, [sp]
	mov r7, r8
	adds r7, #0xfc
	b _0810F1D4
	.align 2, 0
_0810F1B8: .4byte gUnk_08D5FE14
_0810F1BC: .4byte gUnk_020229D4
_0810F1C0:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _0810F1DC
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_0810F1D4:
	cmp r0, #0
	bne _0810F1C0
	orrs r2, r3
	str r2, [r1]
_0810F1DC:
	ldr r0, _0810F258 @ =gUnk_020229E0
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r0
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	strh r6, [r1, #6]
	mov r0, sb
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xd0
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r6, sl
	ldrb r0, [r6]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldr r2, [sp]
	ldrb r0, [r2]
	bl CreateObject
	adds r1, r0, #0
	str r5, [r1, #0x70]
	str r1, [r7]
	ldr r0, [r5, #8]
	ands r0, r4
	cmp r0, #0
	beq _0810F260
	ldr r2, [r5, #0x40]
	asrs r2, r2, #8
	ldr r0, _0810F25C @ =gUnk_08D5FE14
	movs r4, #0x80
	lsls r4, r4, #2
	adds r0, r0, r4
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	adds r6, r2, r0
	b _0810F27A
	.align 2, 0
_0810F258: .4byte gUnk_020229E0
_0810F25C: .4byte gUnk_08D5FE14
_0810F260:
	ldr r2, [r5, #0x40]
	asrs r2, r2, #8
	ldr r0, _0810F28C @ =gUnk_08D5FE14
	movs r6, #0x80
	lsls r6, r6, #2
	adds r0, r0, r6
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	subs r6, r2, r0
_0810F27A:
	movs r4, #0
	ldr r1, _0810F290 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _0810F294 @ =gUnk_020229E0
	b _0810F2AC
	.align 2, 0
_0810F28C: .4byte gUnk_08D5FE14
_0810F290: .4byte gUnk_020229D4
_0810F294: .4byte gUnk_020229E0
_0810F298:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _0810F2B4
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_0810F2AC:
	cmp r0, #0
	bne _0810F298
	orrs r2, r3
	str r2, [r1]
_0810F2B4:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r7
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	strh r6, [r1, #6]
	mov r7, sb
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xd0
	strb r0, [r1, #0xc]
	strb r4, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r4, sl
	ldrb r0, [r4]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldr r6, [sp]
	ldrb r0, [r6]
	bl CreateObject
	adds r1, r0, #0
	str r5, [r1, #0x70]
	movs r0, #0x80
	lsls r0, r0, #1
	add r0, r8
	str r1, [r0]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810F320
sub_0810F320: @ 0x0810F320
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _0810F354 @ =ObjectMain
	ldr r2, _0810F358 @ =0x00000FFF
	ldr r1, _0810F35C @ =sub_081147F0
	str r1, [sp]
	movs r1, #0xe8
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0810F360
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _0810F368
	.align 2, 0
_0810F354: .4byte ObjectMain
_0810F358: .4byte 0x00000FFF
_0810F35C: .4byte sub_081147F0
_0810F360:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_0810F368:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	adds r0, r4, #0
	adds r0, #0xdc
	movs r2, #0
	str r2, [r0]
	adds r0, #6
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	subs r0, #0x63
	ldrh r1, [r0]
	adds r0, #0x64
	movs r3, #0
	strh r1, [r0]
	subs r0, #3
	strb r3, [r0]
	subs r0, #1
	strb r3, [r0]
	subs r0, #0x2c
	str r2, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	adds r1, #0xc0
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0x12
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0x13
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r0, [r4, #0x5c]
	subs r2, #8
	ands r0, r2
	movs r1, #3
	orrs r0, r1
	ldr r1, _0810F420 @ =0x001080A0
	orrs r0, r1
	str r0, [r4, #0x5c]
	adds r0, r4, #0
	adds r0, #0x91
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xea
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r3, [r0]
	ldr r0, _0810F424 @ =sub_08110F80
	str r0, [r4, #0x7c]
	movs r1, #4
	rsbs r1, r1, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #4
	bl sub_0803E2B0
	adds r0, r4, #0
	bl ObjectInitSprite
	adds r0, r4, #0
	bl sub_08114528
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0810F420: .4byte 0x001080A0
_0810F424: .4byte sub_08110F80

	thumb_func_start sub_0810F428
sub_0810F428: @ 0x0810F428
	push {r4, r5, r6, lr}
	mov ip, r0
	ldr r2, [r0, #0x70]
	ldr r0, [r0, #8]
	movs r1, #4
	orrs r0, r1
	mov r1, ip
	str r0, [r1, #8]
	ldr r3, [r2, #0x40]
	str r3, [r1, #0x40]
	ldr r4, [r2, #0x44]
	str r4, [r1, #0x44]
	mov r0, ip
	adds r0, #0xa0
	movs r2, #0
	ldrsh r6, [r0, r2]
	ldr r5, _0810F498 @ =gUnk_08D5FE14
	movs r0, #4
	ldrsh r1, [r1, r0]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	adds r2, r6, #0
	muls r2, r0, r2
	lsls r2, r2, #8
	lsls r1, r1, #1
	adds r1, r1, r5
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r6, r0
	lsls r0, r0, #8
	asrs r2, r2, #0x10
	adds r3, r3, r2
	mov r1, ip
	str r3, [r1, #0x40]
	asrs r0, r0, #0x10
	adds r4, r4, r0
	str r4, [r1, #0x44]
	mov r0, ip
	adds r0, #0xa2
	ldrh r0, [r0]
	ldrh r2, [r1, #4]
	adds r0, r0, r2
	ldr r1, _0810F49C @ =0x000003FF
	ands r0, r1
	mov r1, ip
	strh r0, [r1, #4]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0810F498: .4byte gUnk_08D5FE14
_0810F49C: .4byte 0x000003FF

	thumb_func_start sub_0810F4A0
sub_0810F4A0: @ 0x0810F4A0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	ldr r2, _0810F4D0 @ =sub_0810F5A4
	movs r1, #1
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0xa0
	movs r0, #0x90
	lsls r0, r0, #7
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x20
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _0810F4D4
	movs r0, #0
	b _0810F4D8
	.align 2, 0
_0810F4D0: .4byte sub_0810F5A4
_0810F4D4:
	movs r0, #0x80
	lsls r0, r0, #2
_0810F4D8:
	strh r0, [r4, #4]
	adds r2, r4, #0
	adds r2, #0x9f
	movs r1, #0
	movs r0, #3
	strb r0, [r2]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r1, [r0]
	adds r0, r4, #0
	bl sub_0803D46C
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	movs r1, #0x93
	lsls r1, r1, #1
	adds r0, r5, r1
	ldrb r0, [r0]
	subs r0, #3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _0810F56A
	adds r3, r5, #0
	adds r3, #0xfc
	ldr r6, [r3]
	ldr r0, [r6, #0x78]
	ldr r1, _0810F594 @ =sub_0810F5A4
	cmp r0, r1
	beq _0810F524
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r0, [r0, #0x78]
	cmp r0, r1
	bne _0810F56A
_0810F524:
	ldr r2, _0810F598 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810F59C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0810F5A0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810F56A
	adds r1, r6, #0
	adds r1, #0x9e
	movs r0, #0x40
	strb r0, [r1]
	ldr r0, [r3]
	adds r0, #0x9f
	movs r1, #2
	strb r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r1, [r2]
	ldr r0, [r3]
	adds r0, #0x9e
	ldrb r0, [r0]
	adds r1, #0x9e
	strb r0, [r1]
	ldr r1, [r2]
	ldr r0, [r3]
	adds r0, #0x9f
	ldrb r0, [r0]
	adds r1, #0x9f
	strb r0, [r1]
_0810F56A:
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xea
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0810F594: .4byte sub_0810F5A4
_0810F598: .4byte gRngVal
_0810F59C: .4byte 0x00196225
_0810F5A0: .4byte 0x3C6EF35F

	thumb_func_start sub_0810F5A4
sub_0810F5A4: @ 0x0810F5A4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	ldr r0, [r7, #0x70]
	mov r8, r0
	mov r5, r8
	ldr r0, [r7, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r7, #8]
	movs r0, #0x97
	lsls r0, r0, #1
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810F5CA
	b _0810F76A
_0810F5CA:
	adds r0, r7, #0
	adds r0, #0xb0
	ldr r1, [r0]
	ldrb r1, [r1, #0xe]
	mov sb, r0
	cmp r1, #0
	beq _0810F64C
	ldr r0, _0810F6BC @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	bne _0810F64C
	ldr r1, _0810F6C0 @ =gUnk_02020EE0
	ldr r0, _0810F6C4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810F64C
	ldrb r0, [r7]
	cmp r0, #0
	bne _0810F610
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810F64C
_0810F610:
	ldr r1, _0810F6C8 @ =gUnk_08D60FA4
	ldr r4, _0810F6CC @ =gSongTable
	ldr r2, _0810F6D0 @ =0x00000D6C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810F634
	ldr r1, _0810F6D4 @ =0x00000D68
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810F64C
_0810F634:
	cmp r3, #0
	beq _0810F646
	ldr r0, _0810F6D8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810F64C
_0810F646:
	ldr r0, _0810F6DC @ =0x000001AD
	bl m4aSongNumStart
_0810F64C:
	ldr r3, [r5, #0x40]
	str r3, [r7, #0x40]
	ldr r4, [r5, #0x44]
	str r4, [r7, #0x44]
	adds r0, r7, #0
	adds r0, #0xa0
	movs r2, #0
	ldrsh r6, [r0, r2]
	ldr r5, _0810F6E0 @ =gUnk_08D5FE14
	movs r0, #4
	ldrsh r1, [r7, r0]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	adds r2, r6, #0
	muls r2, r0, r2
	lsls r2, r2, #8
	lsls r1, r1, #1
	adds r1, r1, r5
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r6, r0
	lsls r0, r0, #8
	asrs r2, r2, #0x10
	adds r3, r3, r2
	str r3, [r7, #0x40]
	asrs r0, r0, #0x10
	adds r4, r4, r0
	str r4, [r7, #0x44]
	ldrh r2, [r7, #4]
	adds r3, r2, #0
	adds r0, r7, #0
	adds r0, #0xa2
	ldrh r0, [r0]
	adds r1, r2, r0
	ldr r0, _0810F6E4 @ =0x000003FF
	ands r1, r0
	strh r1, [r7, #4]
	mov r4, sb
	ldr r0, [r4]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _0810F6E8
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	adds r2, r7, #0
	adds r2, #0x9f
	cmp r1, r0
	bge _0810F70E
	b _0810F704
	.align 2, 0
_0810F6BC: .4byte gUnk_0203AD40
_0810F6C0: .4byte gUnk_02020EE0
_0810F6C4: .4byte gUnk_0203AD3C
_0810F6C8: .4byte gUnk_08D60FA4
_0810F6CC: .4byte gSongTable
_0810F6D0: .4byte 0x00000D6C
_0810F6D4: .4byte 0x00000D68
_0810F6D8: .4byte gUnk_0203AD10
_0810F6DC: .4byte 0x000001AD
_0810F6E0: .4byte gUnk_08D5FE14
_0810F6E4: .4byte 0x000003FF
_0810F6E8:
	movs r1, #4
	ldrsh r0, [r7, r1]
	ldr r2, _0810F728 @ =0xFFFFFE00
	adds r0, r0, r2
	adds r2, r7, #0
	adds r2, #0x9f
	cmp r0, #0
	blt _0810F70E
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	ldr r4, _0810F728 @ =0xFFFFFE00
	adds r0, r0, r4
	cmp r0, #0
	bge _0810F70E
_0810F704:
	ldrb r0, [r2]
	cmp r0, #0
	beq _0810F714
	subs r0, #1
	strb r0, [r2]
_0810F70E:
	ldrb r0, [r2]
	cmp r0, #0
	bne _0810F76A
_0810F714:
	adds r1, r7, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	cmp r0, #0
	bne _0810F72C
	adds r0, r7, #0
	bl sub_081143F0
	b _0810F76A
	.align 2, 0
_0810F728: .4byte 0xFFFFFE00
_0810F72C:
	subs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r0, #0x44]
	ldr r0, [r7, #0x44]
	subs r2, r1, r0
	cmp r2, #0
	blt _0810F74C
	ldr r0, _0810F748 @ =0x00000FFF
	cmp r2, r0
	ble _0810F754
	b _0810F76A
	.align 2, 0
_0810F748: .4byte 0x00000FFF
_0810F74C:
	subs r1, r0, r1
	ldr r0, _0810F778 @ =0x00000FFF
	cmp r1, r0
	bgt _0810F76A
_0810F754:
	mov r0, r8
	adds r0, #0xfc
	ldr r0, [r0]
	bl sub_081143F0
	movs r0, #0x80
	lsls r0, r0, #1
	add r0, r8
	ldr r0, [r0]
	bl sub_081143F0
_0810F76A:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0810F778: .4byte 0x00000FFF

	thumb_func_start sub_0810F77C
sub_0810F77C: @ 0x0810F77C
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	ldr r2, _0810F7C4 @ =sub_0810F818
	movs r1, #1
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0xa0
	movs r3, #0
	movs r2, #0
	movs r0, #0x80
	lsls r0, r0, #6
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x18
	strh r0, [r1]
	strh r2, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x85
	strb r3, [r0]
	subs r1, #3
	movs r0, #6
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _0810F7C8
	subs r1, #1
	movs r0, #1
	strb r0, [r1]
	adds r2, r1, #0
	b _0810F7D0
	.align 2, 0
_0810F7C4: .4byte sub_0810F818
_0810F7C8:
	adds r0, r4, #0
	adds r0, #0x9e
	strb r3, [r0]
	adds r2, r0, #0
_0810F7D0:
	movs r1, #0x94
	lsls r1, r1, #1
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #5
	bne _0810F7EC
	ldrb r0, [r2]
	movs r1, #1
	eors r0, r1
	strb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #1
	strb r0, [r1]
_0810F7EC:
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xea
	strb r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0810F818
sub_0810F818: @ 0x0810F818
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r6, [r4, #0x70]
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #0x97
	lsls r1, r1, #1
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810F834
	b _0810F9CA
_0810F834:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r1, [r0]
	ldrb r1, [r1, #0xe]
	adds r7, r0, #0
	cmp r1, #0
	beq _0810F900
	ldr r0, _0810F8D8 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #0xf
	ands r0, r1
	cmp r0, #0
	bne _0810F8B6
	ldr r1, _0810F8DC @ =gUnk_02020EE0
	ldr r0, _0810F8E0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810F8B6
	ldrb r0, [r4]
	cmp r0, #0
	bne _0810F87A
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810F8B6
_0810F87A:
	ldr r1, _0810F8E4 @ =gUnk_08D60FA4
	ldr r5, _0810F8E8 @ =gSongTable
	ldr r2, _0810F8EC @ =0x00000D6C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810F89E
	ldr r1, _0810F8F0 @ =0x00000D68
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810F8B6
_0810F89E:
	cmp r3, #0
	beq _0810F8B0
	ldr r0, _0810F8F4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810F8B6
_0810F8B0:
	ldr r0, _0810F8F8 @ =0x000001AD
	bl m4aSongNumStart
_0810F8B6:
	ldr r0, [r7]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _0810F900
	ldr r2, _0810F8FC @ =gUnk_08D5FE14
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #4
	ldr r0, [r6, #0x40]
	adds r0, r0, r1
	b _0810F918
	.align 2, 0
_0810F8D8: .4byte gUnk_0203AD40
_0810F8DC: .4byte gUnk_02020EE0
_0810F8E0: .4byte gUnk_0203AD3C
_0810F8E4: .4byte gUnk_08D60FA4
_0810F8E8: .4byte gSongTable
_0810F8EC: .4byte 0x00000D6C
_0810F8F0: .4byte 0x00000D68
_0810F8F4: .4byte gUnk_0203AD10
_0810F8F8: .4byte 0x000001AD
_0810F8FC: .4byte gUnk_08D5FE14
_0810F900:
	ldr r2, _0810F968 @ =gUnk_08D5FE14
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #4
	ldr r0, [r6, #0x40]
	subs r0, r0, r1
_0810F918:
	str r0, [r4, #0x40]
	adds r5, r2, #0
	ldr r0, [r6, #0x44]
	str r0, [r4, #0x44]
	adds r0, r4, #0
	adds r0, #0xa0
	movs r2, #0
	ldrsh r3, [r0, r2]
	movs r0, #4
	ldrsh r1, [r4, r0]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r3, r0
	lsls r0, r0, #8
	lsrs r2, r0, #0x10
	lsls r1, r1, #1
	adds r1, r1, r5
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r3, r0
	lsls r0, r0, #8
	lsrs r5, r0, #0x10
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	beq _0810F96C
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	subs r1, r3, r1
	b _0810F972
	.align 2, 0
_0810F968: .4byte gUnk_08D5FE14
_0810F96C:
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	subs r1, r1, r3
_0810F972:
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	str r0, [r4, #0x40]
	adds r0, r4, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r3, r0, #0
	cmp r1, #0
	beq _0810F98E
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	ldr r0, [r4, #0x44]
	subs r0, r0, r1
	b _0810F996
_0810F98E:
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	ldr r0, [r4, #0x44]
	adds r0, r0, r1
_0810F996:
	str r0, [r4, #0x44]
	ldrh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0xa2
	ldrh r1, [r1]
	adds r1, r0, r1
	ldr r2, _0810F9D0 @ =0x000003FF
	ands r1, r2
	strh r1, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bge _0810F9BE
	ldrb r0, [r3]
	subs r0, #1
	strb r0, [r3]
	ldrb r0, [r6]
	movs r1, #1
	eors r0, r1
	strb r0, [r6]
_0810F9BE:
	ldrb r0, [r3]
	cmp r0, #0
	bne _0810F9CA
	adds r0, r4, #0
	bl sub_081143F0
_0810F9CA:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0810F9D0: .4byte 0x000003FF

	thumb_func_start sub_0810F9D4
sub_0810F9D4: @ 0x0810F9D4
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	ldr r2, _0810FA08 @ =sub_081144A0
	movs r1, #3
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r2, #0x80
	lsls r2, r2, #2
	orrs r0, r2
	ldr r1, _0810FA0C @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xe1
	movs r1, #0
	ldrsb r1, [r0, r1]
	cmp r1, #0
	beq _0810FA10
	cmp r1, #1
	beq _0810FA74
	b _0810FAB6
	.align 2, 0
_0810FA08: .4byte sub_081144A0
_0810FA0C: .4byte 0xFFFFFBFF
_0810FA10:
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x44]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _0810FA28
	strh r1, [r4, #4]
	b _0810FA2A
_0810FA28:
	strh r2, [r4, #4]
_0810FA2A:
	adds r2, r4, #0
	adds r2, #0xa0
	movs r1, #0x90
	lsls r1, r1, #7
	strh r1, [r2]
	ldr r3, _0810FA70 @ =gUnk_08D5FE14
	movs r5, #4
	ldrsh r0, [r4, r5]
	movs r5, #0x80
	lsls r5, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r1, r0, r1
	asrs r1, r1, #8
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	str r0, [r4, #0x40]
	movs r0, #0
	ldrsh r1, [r2, r0]
	movs r2, #4
	ldrsh r0, [r4, r2]
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r1, r0, r1
	asrs r1, r1, #8
	ldr r0, [r4, #0x44]
	adds r0, r0, r1
	b _0810FAB4
	.align 2, 0
_0810FA70: .4byte gUnk_08D5FE14
_0810FA74:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _0810FA9C
	ldr r0, _0810FA98 @ =gUnk_08D5FE14
	adds r0, r2, r0
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #4
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	b _0810FAB0
	.align 2, 0
_0810FA98: .4byte gUnk_08D5FE14
_0810FA9C:
	ldr r0, _0810FB48 @ =gUnk_08D5FE14
	adds r0, r2, r0
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #4
	ldr r0, [r5, #0x40]
	subs r0, r0, r1
_0810FAB0:
	str r0, [r4, #0x40]
	ldr r0, [r5, #0x44]
_0810FAB4:
	str r0, [r4, #0x44]
_0810FAB6:
	ldr r0, [r4, #0x44]
	ldr r5, _0810FB4C @ =0xFFFF9200
	adds r0, r0, r5
	str r0, [r4, #0x44]
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	movs r0, #0xf6
	lsls r0, r0, #8
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_081146B0
	ldr r1, _0810FB50 @ =gUnk_02020EE0
	ldr r0, _0810FB54 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r5, #0xd4
	lsls r5, r5, #1
	adds r0, r2, #0
	muls r0, r5, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810FB40
	ldrb r0, [r4]
	cmp r0, #0
	bne _0810FB02
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810FB40
_0810FB02:
	ldr r1, _0810FB58 @ =gUnk_08D60FA4
	ldr r4, _0810FB5C @ =gSongTable
	ldr r2, _0810FB60 @ =0x00000D44
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810FB28
	movs r1, #0xd4
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810FB40
_0810FB28:
	cmp r3, #0
	beq _0810FB3A
	ldr r0, _0810FB64 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810FB40
_0810FB3A:
	adds r0, r5, #0
	bl m4aSongNumStart
_0810FB40:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810FB48: .4byte gUnk_08D5FE14
_0810FB4C: .4byte 0xFFFF9200
_0810FB50: .4byte gUnk_02020EE0
_0810FB54: .4byte gUnk_0203AD3C
_0810FB58: .4byte gUnk_08D60FA4
_0810FB5C: .4byte gSongTable
_0810FB60: .4byte 0x00000D44
_0810FB64: .4byte gUnk_0203AD10

	thumb_func_start sub_0810FB68
sub_0810FB68: @ 0x0810FB68
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _0810FC28 @ =sub_0810FC44
	movs r1, #0
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x50
	movs r1, #0
	strh r1, [r2]
	adds r0, r4, #0
	adds r0, #0x52
	strh r1, [r0]
	adds r0, #0x5e
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _0810FB8E
	strh r1, [r2]
_0810FB8E:
	movs r0, #0xc
	strh r0, [r4, #4]
	ldr r1, _0810FC2C @ =gUnk_02020EE0
	ldr r0, _0810FC30 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810FBFE
	ldrb r0, [r4]
	cmp r0, #0
	bne _0810FBBE
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810FBFE
_0810FBBE:
	ldr r1, _0810FC34 @ =gUnk_08D60FA4
	ldr r5, _0810FC38 @ =gSongTable
	ldr r2, _0810FC3C @ =0x00000DB4
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810FBE4
	movs r1, #0xdb
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810FBFE
_0810FBE4:
	cmp r3, #0
	beq _0810FBF6
	ldr r0, _0810FC40 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810FBFE
_0810FBF6:
	movs r0, #0xdb
	lsls r0, r0, #1
	bl m4aSongNumStart
_0810FBFE:
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0xfd
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xea
	strb r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810FC28: .4byte sub_0810FC44
_0810FC2C: .4byte gUnk_02020EE0
_0810FC30: .4byte gUnk_0203AD3C
_0810FC34: .4byte gUnk_08D60FA4
_0810FC38: .4byte gSongTable
_0810FC3C: .4byte 0x00000DB4
_0810FC40: .4byte gUnk_0203AD10

	thumb_func_start sub_0810FC44
sub_0810FC44: @ 0x0810FC44
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r3, r0, #0
	ldr r0, [r3, #0x70]
	mov ip, r0
	adds r5, r3, #0
	adds r0, #0xfc
	ldr r6, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	add r0, ip
	ldr r7, [r0]
	ldr r2, [r3, #8]
	movs r0, #4
	orrs r2, r0
	str r2, [r3, #8]
	movs r0, #0x97
	lsls r0, r0, #1
	add r0, ip
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810FC74
	b _0810FD9A
_0810FC74:
	adds r0, r3, #0
	adds r0, #0xb0
	ldr r1, [r0]
	ldrb r1, [r1, #0xe]
	mov r8, r0
	cmp r1, #0
	beq _0810FC88
	movs r0, #1
	orrs r2, r0
	str r2, [r3, #8]
_0810FC88:
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810FCB8
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r4, _0810FCB4 @ =0xFFFFFA00
	adds r2, r1, #0
	cmp r0, r4
	blt _0810FCD0
	movs r1, #0xc0
	lsls r1, r1, #3
	cmp r0, r1
	ble _0810FCDC
	b _0810FCDA
	.align 2, 0
_0810FCB4: .4byte 0xFFFFFA00
_0810FCB8:
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x30
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r4, #0xc0
	lsls r4, r4, #3
	adds r2, r1, #0
	cmp r0, r4
	ble _0810FCD4
_0810FCD0:
	strh r4, [r2]
	b _0810FCDC
_0810FCD4:
	ldr r1, _0810FD64 @ =0xFFFFFA00
	cmp r0, r1
	bge _0810FCDC
_0810FCDA:
	strh r1, [r2]
_0810FCDC:
	ldr r0, [r3, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r3, #8]
	ldr r1, [r3, #0x40]
	ldr r0, _0810FD68 @ =0xFFFFF400
	cmp r1, r0
	bge _0810FCF6
	movs r4, #0
	ldrsh r0, [r2, r4]
	cmp r0, #0
	blt _0810FD06
_0810FCF6:
	movs r0, #0x85
	lsls r0, r0, #9
	cmp r1, r0
	ble _0810FD9A
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	ble _0810FD9A
_0810FD06:
	ldr r0, [r3, #0x40]
	ldr r1, _0810FD68 @ =0xFFFFF400
	cmp r0, r1
	bge _0810FD10
	str r1, [r3, #0x40]
_0810FD10:
	ldr r0, [r3, #0x40]
	movs r1, #0x85
	lsls r1, r1, #9
	cmp r0, r1
	ble _0810FD1C
	str r1, [r3, #0x40]
_0810FD1C:
	movs r0, #0xc0
	lsls r0, r0, #6
	str r0, [r3, #0x44]
	movs r0, #0
	strh r0, [r2]
	adds r1, r5, #0
	adds r1, #0xe0
	movs r0, #1
	strb r0, [r1]
	adds r0, r6, #0
	adds r0, #0xe0
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810FD9A
	adds r0, r7, #0
	adds r0, #0xe0
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810FD9A
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0810FD9A
	movs r0, #0x93
	lsls r0, r0, #1
	add r0, ip
	ldrb r2, [r0]
	cmp r2, #5
	bne _0810FD6C
	adds r0, r3, #0
	bl sub_081106F4
	b _0810FD9A
	.align 2, 0
_0810FD64: .4byte 0xFFFFFA00
_0810FD68: .4byte 0xFFFFF400
_0810FD6C:
	mov r4, r8
	ldr r0, [r4]
	ldr r1, _0810FD88 @ =0x00000127
	add r1, ip
	ldrb r0, [r0, #0xe]
	ldrb r1, [r1]
	cmp r0, r1
	bne _0810FD94
	cmp r2, #4
	bne _0810FD8C
	adds r0, r3, #0
	bl sub_081103C8
	b _0810FD9A
	.align 2, 0
_0810FD88: .4byte 0x00000127
_0810FD8C:
	adds r0, r3, #0
	bl sub_0810FDA4
	b _0810FD9A
_0810FD94:
	adds r0, r3, #0
	bl sub_08110E60
_0810FD9A:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0810FDA4
sub_0810FDA4: @ 0x0810FDA4
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _0810FE80 @ =sub_0810FE9C
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x50
	movs r1, #0
	movs r0, #0x80
	lsls r0, r0, #4
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x52
	strh r1, [r0]
	movs r0, #0xc0
	lsls r0, r0, #6
	str r0, [r4, #0x44]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _0810FDE4
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_0810FDE4:
	movs r0, #0x24
	strh r0, [r4, #4]
	ldr r1, _0810FE84 @ =gUnk_02020EE0
	ldr r0, _0810FE88 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0810FE54
	ldrb r0, [r4]
	cmp r0, #0
	bne _0810FE14
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0810FE54
_0810FE14:
	ldr r1, _0810FE8C @ =gUnk_08D60FA4
	ldr r5, _0810FE90 @ =gSongTable
	ldr r2, _0810FE94 @ =0x00000DB4
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0810FE3A
	movs r1, #0xdb
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0810FE54
_0810FE3A:
	cmp r3, #0
	beq _0810FE4C
	ldr r0, _0810FE98 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0810FE54
_0810FE4C:
	movs r0, #0xdb
	lsls r0, r0, #1
	bl m4aSongNumStart
_0810FE54:
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0xfd
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xea
	strb r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0810FE80: .4byte sub_0810FE9C
_0810FE84: .4byte gUnk_02020EE0
_0810FE88: .4byte gUnk_0203AD3C
_0810FE8C: .4byte gUnk_08D60FA4
_0810FE90: .4byte gSongTable
_0810FE94: .4byte 0x00000DB4
_0810FE98: .4byte gUnk_0203AD10

	thumb_func_start sub_0810FE9C
sub_0810FE9C: @ 0x0810FE9C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r0, [r5, #0x70]
	mov sl, r0
	movs r1, #0
	mov sb, r1
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	movs r0, #0x97
	lsls r0, r0, #1
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	beq _0810FEC6
	b _08110390
_0810FEC6:
	movs r2, #4
	ldrsh r0, [r5, r2]
	cmp r0, #0xa
	beq _0810FED0
	b _0811004A
_0810FED0:
	ldr r2, _0810FF54 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _0810FF58 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _0810FF5C @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r1, #0
	ldr r0, _0810FF60 @ =0x00001999
	ldr r4, _0810FF64 @ =gUnk_0835738C
	mov ip, r4
	ldr r7, _0810FF68 @ =gUnk_020229D4
	adds r6, r5, #0
	adds r6, #0x56
	movs r4, #0x60
	adds r4, r4, r5
	mov r8, r4
	cmp r3, r0
	blt _0810FF0C
	adds r4, r0, #0
_0810FEFA:
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #8
	bhi _0810FF0C
	adds r0, r1, #1
	muls r0, r4, r0
	cmp r3, r0
	bge _0810FEFA
_0810FF0C:
	lsls r0, r1, #0x18
	lsrs r4, r0, #0x18
	mov r1, ip
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0x12
	bne _0810FF32
	ldr r1, [r2]
	ldr r0, _0810FF58 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _0810FF5C @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0810FF32
	mov sb, r1
_0810FF32:
	mov r1, ip
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0x18
	beq _0810FF48
	cmp r0, #0x25
	beq _0810FF48
	cmp r0, #0x1d
	beq _0810FF48
	cmp r0, #0x22
	bne _0810FF4C
_0810FF48:
	movs r2, #1
	mov sb, r2
_0810FF4C:
	movs r3, #0
	movs r2, #1
	b _0810FF7A
	.align 2, 0
_0810FF54: .4byte gRngVal
_0810FF58: .4byte 0x00196225
_0810FF5C: .4byte 0x3C6EF35F
_0810FF60: .4byte 0x00001999
_0810FF64: .4byte gUnk_0835738C
_0810FF68: .4byte gUnk_020229D4
_0810FF6C:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x1f
	bhi _0810FF88
	movs r2, #1
	lsls r2, r3
_0810FF7A:
	ldr r1, [r7]
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _0810FF6C
	orrs r1, r2
	str r1, [r7]
_0810FF88:
	lsls r1, r3, #3
	adds r1, r1, r3
	lsls r1, r1, #2
	ldr r3, _081100B4 @ =gUnk_020229E0
	adds r1, r1, r3
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	movs r3, #0
	strh r0, [r1, #6]
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	mov r7, ip
	adds r0, r4, r7
	ldrb r0, [r0]
	strb r0, [r1, #0xc]
	mov r0, sb
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	strb r3, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldrb r0, [r6]
	bl CreateObject
	adds r1, r0, #0
	movs r0, #0x88
	lsls r0, r0, #1
	add r0, sl
	str r1, [r0]
	ldr r1, _081100B8 @ =gUnk_02020EE0
	ldr r0, _081100BC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, r8
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811004A
	ldrb r0, [r5]
	cmp r0, #0
	bne _0811000E
	ldrb r0, [r6]
	cmp r0, r2
	bne _0811004A
_0811000E:
	ldr r1, _081100C0 @ =gUnk_08D60FA4
	ldr r4, _081100C4 @ =gSongTable
	ldr r2, _081100C8 @ =0x00000B3C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08110032
	ldr r7, _081100CC @ =0x00000B38
	adds r0, r4, r7
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811004A
_08110032:
	cmp r3, #0
	beq _08110044
	ldr r0, _081100D0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811004A
_08110044:
	ldr r0, _081100D4 @ =0x00000167
	bl m4aSongNumStart
_0811004A:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0x10
	beq _08110054
	b _081101CE
_08110054:
	ldr r2, _081100D8 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _081100DC @ =0x00196225
	muls r0, r1, r0
	ldr r3, _081100E0 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r2, r0, #0x10
	movs r1, #0
	ldr r0, _081100E4 @ =0x00001999
	ldr r7, _081100E8 @ =gUnk_020229D4
	adds r6, r5, #0
	adds r6, #0x56
	movs r4, #0x60
	adds r4, r4, r5
	mov r8, r4
	ldr r3, _081100EC @ =gUnk_08357396
	mov ip, r3
	cmp r2, r0
	blt _08110090
	adds r3, r0, #0
_0811007E:
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #8
	bhi _08110090
	adds r0, r1, #1
	muls r0, r3, r0
	cmp r2, r0
	bge _0811007E
_08110090:
	lsls r0, r1, #0x18
	lsrs r4, r0, #0x18
	mov r1, ip
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0x18
	beq _081100AA
	cmp r0, #0x25
	beq _081100AA
	cmp r0, #0x1d
	beq _081100AA
	cmp r0, #0x22
	bne _081100AE
_081100AA:
	movs r2, #1
	mov sb, r2
_081100AE:
	movs r3, #0
	movs r2, #1
	b _081100FE
	.align 2, 0
_081100B4: .4byte gUnk_020229E0
_081100B8: .4byte gUnk_02020EE0
_081100BC: .4byte gUnk_0203AD3C
_081100C0: .4byte gUnk_08D60FA4
_081100C4: .4byte gSongTable
_081100C8: .4byte 0x00000B3C
_081100CC: .4byte 0x00000B38
_081100D0: .4byte gUnk_0203AD10
_081100D4: .4byte 0x00000167
_081100D8: .4byte gRngVal
_081100DC: .4byte 0x00196225
_081100E0: .4byte 0x3C6EF35F
_081100E4: .4byte 0x00001999
_081100E8: .4byte gUnk_020229D4
_081100EC: .4byte gUnk_08357396
_081100F0:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x1f
	bhi _0811010C
	movs r2, #1
	lsls r2, r3
_081100FE:
	ldr r1, [r7]
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _081100F0
	orrs r1, r2
	str r1, [r7]
_0811010C:
	lsls r1, r3, #3
	adds r1, r1, r3
	lsls r1, r1, #2
	ldr r3, _0811025C @ =gUnk_020229E0
	adds r1, r1, r3
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	movs r3, #0
	strh r0, [r1, #6]
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	mov r7, ip
	adds r0, r4, r7
	ldrb r0, [r0]
	strb r0, [r1, #0xc]
	mov r0, sb
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	strb r3, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldrb r0, [r6]
	bl CreateObject
	adds r1, r0, #0
	movs r0, #0x8a
	lsls r0, r0, #1
	add r0, sl
	str r1, [r0]
	ldr r1, _08110260 @ =gUnk_02020EE0
	ldr r0, _08110264 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, r8
	ldrh r1, [r1]
	cmp r0, r1
	bne _081101CE
	ldrb r0, [r5]
	cmp r0, #0
	bne _08110192
	ldrb r0, [r6]
	cmp r0, r2
	bne _081101CE
_08110192:
	ldr r1, _08110268 @ =gUnk_08D60FA4
	ldr r4, _0811026C @ =gSongTable
	ldr r2, _08110270 @ =0x00000B3C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081101B6
	ldr r7, _08110274 @ =0x00000B38
	adds r0, r4, r7
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081101CE
_081101B6:
	cmp r3, #0
	beq _081101C8
	ldr r0, _08110278 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081101CE
_081101C8:
	ldr r0, _0811027C @ =0x00000167
	bl m4aSongNumStart
_081101CE:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0x16
	beq _081101D8
	b _08110376
_081101D8:
	ldr r2, _08110280 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08110284 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _08110288 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r1, #0
	ldr r0, _0811028C @ =0x00001999
	ldr r7, _08110290 @ =gUnk_020229D4
	adds r6, r5, #0
	adds r6, #0x56
	movs r4, #0x60
	adds r4, r4, r5
	mov r8, r4
	ldr r4, _08110294 @ =gUnk_083573A0
	mov ip, r4
	cmp r3, r0
	blt _08110214
	adds r4, r0, #0
_08110202:
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #8
	bhi _08110214
	adds r0, r1, #1
	muls r0, r4, r0
	cmp r3, r0
	bge _08110202
_08110214:
	lsls r0, r1, #0x18
	lsrs r4, r0, #0x18
	mov r1, ip
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0x1d
	bne _0811023A
	ldr r1, [r2]
	ldr r0, _08110284 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _08110288 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _0811023A
	movs r4, #0xa
_0811023A:
	mov r1, ip
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0x18
	beq _08110250
	cmp r0, #0x25
	beq _08110250
	cmp r0, #0x1d
	beq _08110250
	cmp r0, #0x22
	bne _08110254
_08110250:
	movs r2, #1
	mov sb, r2
_08110254:
	movs r3, #0
	movs r2, #1
	b _081102A6
	.align 2, 0
_0811025C: .4byte gUnk_020229E0
_08110260: .4byte gUnk_02020EE0
_08110264: .4byte gUnk_0203AD3C
_08110268: .4byte gUnk_08D60FA4
_0811026C: .4byte gSongTable
_08110270: .4byte 0x00000B3C
_08110274: .4byte 0x00000B38
_08110278: .4byte gUnk_0203AD10
_0811027C: .4byte 0x00000167
_08110280: .4byte gRngVal
_08110284: .4byte 0x00196225
_08110288: .4byte 0x3C6EF35F
_0811028C: .4byte 0x00001999
_08110290: .4byte gUnk_020229D4
_08110294: .4byte gUnk_083573A0
_08110298:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x1f
	bhi _081102B4
	movs r2, #1
	lsls r2, r3
_081102A6:
	ldr r1, [r7]
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _08110298
	orrs r1, r2
	str r1, [r7]
_081102B4:
	lsls r1, r3, #3
	adds r1, r1, r3
	lsls r1, r1, #2
	ldr r3, _081103A0 @ =gUnk_020229E0
	adds r1, r1, r3
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	movs r3, #0
	strh r0, [r1, #6]
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	mov r7, ip
	adds r0, r4, r7
	ldrb r0, [r0]
	strb r0, [r1, #0xc]
	mov r0, sb
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	strb r3, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldrb r0, [r6]
	bl CreateObject
	adds r1, r0, #0
	movs r0, #0x8c
	lsls r0, r0, #1
	add r0, sl
	str r1, [r0]
	ldr r1, _081103A4 @ =gUnk_02020EE0
	ldr r0, _081103A8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, r8
	ldrh r1, [r1]
	cmp r0, r1
	bne _08110376
	ldrb r0, [r5]
	cmp r0, #0
	bne _0811033A
	ldrb r0, [r6]
	cmp r0, r2
	bne _08110376
_0811033A:
	ldr r1, _081103AC @ =gUnk_08D60FA4
	ldr r4, _081103B0 @ =gSongTable
	ldr r2, _081103B4 @ =0x00000B3C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811035E
	ldr r7, _081103B8 @ =0x00000B38
	adds r0, r4, r7
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08110376
_0811035E:
	cmp r3, #0
	beq _08110370
	ldr r0, _081103BC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08110376
_08110370:
	ldr r0, _081103C0 @ =0x00000167
	bl m4aSongNumStart
_08110376:
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08110390
	ldr r1, _081103C4 @ =0x00000129
	add r1, sl
	movs r0, #0
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_08110E60
_08110390:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081103A0: .4byte gUnk_020229E0
_081103A4: .4byte gUnk_02020EE0
_081103A8: .4byte gUnk_0203AD3C
_081103AC: .4byte gUnk_08D60FA4
_081103B0: .4byte gSongTable
_081103B4: .4byte 0x00000B3C
_081103B8: .4byte 0x00000B38
_081103BC: .4byte gUnk_0203AD10
_081103C0: .4byte 0x00000167
_081103C4: .4byte 0x00000129

	thumb_func_start sub_081103C8
sub_081103C8: @ 0x081103C8
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _081103F0 @ =sub_081104C8
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D46C
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _081103F4
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _081103FC
	.align 2, 0
_081103F0: .4byte sub_081104C8
_081103F4:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_081103FC:
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #0x44]
	str r0, [r4, #0x44]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r0, #2
	strh r0, [r4, #4]
	ldr r1, _081104B0 @ =gUnk_02020EE0
	ldr r0, _081104B4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08110484
	ldrb r0, [r4]
	cmp r0, #0
	bne _08110444
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08110484
_08110444:
	ldr r1, _081104B8 @ =gUnk_08D60FA4
	ldr r5, _081104BC @ =gSongTable
	ldr r2, _081104C0 @ =0x00000DB4
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811046A
	movs r1, #0xdb
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08110484
_0811046A:
	cmp r3, #0
	beq _0811047C
	ldr r0, _081104C4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08110484
_0811047C:
	movs r0, #0xdb
	lsls r0, r0, #1
	bl m4aSongNumStart
_08110484:
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0xfd
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xea
	strb r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_081104B0: .4byte gUnk_02020EE0
_081104B4: .4byte gUnk_0203AD3C
_081104B8: .4byte gUnk_08D60FA4
_081104BC: .4byte gSongTable
_081104C0: .4byte 0x00000DB4
_081104C4: .4byte gUnk_0203AD10

	thumb_func_start sub_081104C8
sub_081104C8: @ 0x081104C8
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x70]
	ldr r2, [r4, #8]
	movs r1, #4
	orrs r2, r1
	str r2, [r4, #8]
	movs r1, #0x97
	lsls r1, r1, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _081104E4
	b _081106D6
_081104E4:
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _0811051C
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r1, [r0]
	subs r1, #0x28
	strh r1, [r0]
	lsls r1, r1, #0x10
	asrs r3, r1, #0x10
	ldr r1, _0811050C @ =0xFFFFFA00
	adds r2, r0, #0
	cmp r3, r1
	bge _08110510
	movs r0, #0xfa
	lsls r0, r0, #8
	strh r0, [r2]
	b _08110540
	.align 2, 0
_0811050C: .4byte 0xFFFFFA00
_08110510:
	movs r0, #0xc0
	lsls r0, r0, #3
	cmp r3, r0
	ble _08110540
	strh r0, [r2]
	b _08110540
_0811051C:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0xc0
	lsls r3, r3, #3
	adds r2, r1, #0
	cmp r0, r3
	ble _08110538
	strh r3, [r2]
	b _08110540
_08110538:
	ldr r1, _08110584 @ =0xFFFFFA00
	cmp r0, r1
	bge _08110540
	strh r1, [r2]
_08110540:
	ldr r1, [r4, #8]
	movs r5, #1
	ands r1, r5
	cmp r1, #0
	beq _08110620
	ldr r0, [r4, #0x40]
	ldr r1, _08110588 @ =0xFFFFF400
	cmp r0, r1
	blt _08110554
	b _081106D6
_08110554:
	str r1, [r4, #0x40]
	movs r0, #0
	strh r0, [r2]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0811063A
	adds r0, r4, #0
	bl sub_0803D46C
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r0, #0x44]
	str r1, [r4, #0x44]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _0811058C
	ldr r0, [r4, #8]
	orrs r0, r5
	b _08110594
	.align 2, 0
_08110584: .4byte 0xFFFFFA00
_08110588: .4byte 0xFFFFF400
_0811058C:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_08110594:
	str r0, [r4, #8]
	ldr r1, _08110608 @ =gUnk_02020EE0
	ldr r0, _0811060C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _081105B4
	b _081106D6
_081105B4:
	ldrb r0, [r4]
	cmp r0, #0
	bne _081105C6
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	beq _081105C6
	b _081106D6
_081105C6:
	ldr r1, _08110610 @ =gUnk_08D60FA4
	ldr r4, _08110614 @ =gSongTable
	ldr r2, _08110618 @ =0x00000DB4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081105EC
	movs r1, #0xdb
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081106D6
_081105EC:
	cmp r3, #0
	beq _081105FE
	ldr r0, _0811061C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081106D6
_081105FE:
	movs r0, #0xdb
	lsls r0, r0, #1
	bl m4aSongNumStart
	b _081106D6
	.align 2, 0
_08110608: .4byte gUnk_02020EE0
_0811060C: .4byte gUnk_0203AD3C
_08110610: .4byte gUnk_08D60FA4
_08110614: .4byte gSongTable
_08110618: .4byte 0x00000DB4
_0811061C: .4byte gUnk_0203AD10
_08110620:
	ldr r0, [r4, #0x40]
	movs r3, #0x85
	lsls r3, r3, #9
	cmp r0, r3
	ble _081106D6
	str r3, [r4, #0x40]
	strh r1, [r2]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08110642
_0811063A:
	adds r0, r4, #0
	bl sub_0810FDA4
	b _081106D6
_08110642:
	adds r0, r4, #0
	bl sub_0803D46C
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, [r0, #0x44]
	str r1, [r4, #0x44]
	ldr r1, [r4, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _08110660
	ldr r0, [r4, #8]
	orrs r0, r5
	b _08110668
_08110660:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_08110668:
	str r0, [r4, #8]
	ldr r1, _081106DC @ =gUnk_02020EE0
	ldr r0, _081106E0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081106D6
	ldrb r0, [r4]
	cmp r0, #0
	bne _08110696
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _081106D6
_08110696:
	ldr r1, _081106E4 @ =gUnk_08D60FA4
	ldr r4, _081106E8 @ =gSongTable
	ldr r2, _081106EC @ =0x00000DB4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081106BC
	movs r1, #0xdb
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081106D6
_081106BC:
	cmp r3, #0
	beq _081106CE
	ldr r0, _081106F0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081106D6
_081106CE:
	movs r0, #0xdb
	lsls r0, r0, #1
	bl m4aSongNumStart
_081106D6:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_081106DC: .4byte gUnk_02020EE0
_081106E0: .4byte gUnk_0203AD3C
_081106E4: .4byte gUnk_08D60FA4
_081106E8: .4byte gSongTable
_081106EC: .4byte 0x00000DB4
_081106F0: .4byte gUnk_0203AD10

	thumb_func_start sub_081106F4
sub_081106F4: @ 0x081106F4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08110714 @ =sub_0811076C
	movs r1, #0
	bl ObjectSetFunc
	ldr r1, [r4, #0x40]
	movs r0, #0xfc
	lsls r0, r0, #7
	cmp r1, r0
	ble _08110718
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _08110720
	.align 2, 0
_08110714: .4byte sub_0811076C
_08110718:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_08110720:
	str r0, [r4, #8]
	movs r0, #0x88
	lsls r0, r0, #8
	str r0, [r4, #0x44]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r0, #2
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0x28
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0xfd
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xea
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0811076C
sub_0811076C: @ 0x0811076C
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r7, [r4, #0x70]
	ldr r1, [r4, #8]
	movs r0, #4
	orrs r1, r0
	str r1, [r4, #8]
	movs r2, #0x97
	lsls r2, r2, #1
	adds r0, r7, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _08110788
	b _081109A6
_08110788:
	movs r2, #4
	ldrsh r0, [r4, r2]
	cmp r0, #1
	bne _08110810
	ands r1, r0
	cmp r1, #0
	beq _081107C4
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r1, [r0]
	subs r1, #0x40
	strh r1, [r0]
	lsls r1, r1, #0x10
	asrs r2, r1, #0x10
	ldr r1, _081107B4 @ =0xFFFFFA00
	adds r5, r0, #0
	cmp r2, r1
	bge _081107B8
	movs r0, #0xfa
	lsls r0, r0, #8
	strh r0, [r5]
	b _081107E8
	.align 2, 0
_081107B4: .4byte 0xFFFFFA00
_081107B8:
	movs r0, #0xc0
	lsls r0, r0, #3
	cmp r2, r0
	ble _081107E8
	strh r0, [r5]
	b _081107E8
_081107C4:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xc0
	lsls r2, r2, #3
	adds r5, r1, #0
	cmp r0, r2
	ble _081107E0
	strh r2, [r5]
	b _081107E8
_081107E0:
	ldr r1, _08110804 @ =0xFFFFFA00
	cmp r0, r1
	bge _081107E8
	strh r1, [r5]
_081107E8:
	adds r2, r4, #0
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, #0x18
	strh r0, [r2]
	lsls r0, r0, #0x10
	ldr r1, _08110808 @ =0xFE300000
	cmp r0, r1
	blt _081107FC
	b _081108FE
_081107FC:
	ldr r0, _0811080C @ =0x0000FE30
	strh r0, [r2]
	b _081108FE
	.align 2, 0
_08110804: .4byte 0xFFFFFA00
_08110808: .4byte 0xFE300000
_0811080C: .4byte 0x0000FE30
_08110810:
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _0811083C
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _08110838 @ =0xFFFFFB00
	adds r5, r1, #0
	cmp r0, r2
	blt _08110854
	movs r1, #0xa0
	lsls r1, r1, #3
	cmp r0, r1
	ble _08110860
	b _0811085E
	.align 2, 0
_08110838: .4byte 0xFFFFFB00
_0811083C:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0xa0
	lsls r2, r2, #3
	adds r5, r1, #0
	cmp r0, r2
	ble _08110858
_08110854:
	strh r2, [r5]
	b _08110860
_08110858:
	ldr r1, _08110884 @ =0xFFFFFB00
	cmp r0, r1
	bge _08110860
_0811085E:
	strh r1, [r5]
_08110860:
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	cmp r0, #0
	bne _08110888
	subs r1, #0x4d
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #3
	cmp r0, r2
	ble _081108FE
	strh r2, [r1]
	b _081108FE
	.align 2, 0
_08110884: .4byte 0xFFFFFB00
_08110888:
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _081108FE
	ldr r1, _08110938 @ =gUnk_02020EE0
	ldr r0, _0811093C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081108FE
	ldrb r0, [r4]
	cmp r0, #0
	bne _081108BE
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _081108FE
_081108BE:
	ldr r1, _08110940 @ =gUnk_08D60FA4
	ldr r6, _08110944 @ =gSongTable
	ldr r2, _08110948 @ =0x00000DB4
	adds r0, r6, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081108E4
	movs r1, #0xdb
	lsls r1, r1, #4
	adds r0, r6, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081108FE
_081108E4:
	cmp r3, #0
	beq _081108F6
	ldr r0, _0811094C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081108FE
_081108F6:
	movs r0, #0xdb
	lsls r0, r0, #1
	bl m4aSongNumStart
_081108FE:
	ldr r1, [r4, #8]
	movs r3, #1
	ands r1, r3
	cmp r1, #0
	beq _08110958
	ldr r0, [r4, #0x40]
	ldr r1, _08110950 @ =0xFFFFF400
	cmp r0, r1
	bge _081109A6
	str r1, [r4, #0x40]
	movs r1, #0
	strh r1, [r5]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08110998
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldr r2, _08110954 @ =0x00000127
	adds r1, r7, r2
	ldrb r0, [r0, #0xe]
	ldrb r1, [r1]
	cmp r0, r1
	beq _08110984
	b _08110990
	.align 2, 0
_08110938: .4byte gUnk_02020EE0
_0811093C: .4byte gUnk_0203AD3C
_08110940: .4byte gUnk_08D60FA4
_08110944: .4byte gSongTable
_08110948: .4byte 0x00000DB4
_0811094C: .4byte gUnk_0203AD10
_08110950: .4byte 0xFFFFF400
_08110954: .4byte 0x00000127
_08110958:
	ldr r0, [r4, #0x40]
	movs r2, #0x85
	lsls r2, r2, #9
	cmp r0, r2
	ble _081109A6
	str r2, [r4, #0x40]
	strh r1, [r5]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08110998
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldr r2, _0811098C @ =0x00000127
	adds r1, r7, r2
	ldrb r0, [r0, #0xe]
	ldrb r1, [r1]
	cmp r0, r1
	bne _08110990
_08110984:
	adds r0, r4, #0
	bl sub_081109AC
	b _081109A6
	.align 2, 0
_0811098C: .4byte 0x00000127
_08110990:
	adds r0, r4, #0
	bl sub_0810FDA4
	b _081109A6
_08110998:
	movs r0, #0x88
	lsls r0, r0, #8
	str r0, [r4, #0x44]
	ldr r0, [r4, #8]
	eors r0, r3
	str r0, [r4, #8]
	strh r1, [r5]
_081109A6:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_081109AC
sub_081109AC: @ 0x081109AC
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08110A1C @ =sub_081145EC
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x50
	movs r1, #0
	movs r0, #0x80
	lsls r0, r0, #4
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x52
	strh r1, [r0]
	movs r0, #0xc0
	lsls r0, r0, #6
	str r0, [r4, #0x44]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _081109EC
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_081109EC:
	movs r0, #0x24
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0xfd
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xea
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08110A1C: .4byte sub_081145EC

	thumb_func_start sub_08110A20
sub_08110A20: @ 0x08110A20
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	ldr r2, _08110A88 @ =sub_08110B64
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r1, _08110A8C @ =0x0000012D
	adds r0, r5, r1
	ldrb r1, [r0]
	ldr r2, _08110A90 @ =0x00000127
	adds r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _08110A54
	subs r2, #1
	adds r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #1
	beq _08110A60
_08110A54:
	movs r2, #0x93
	lsls r2, r2, #1
	adds r0, r5, r2
	ldrh r0, [r0]
	cmp r0, #2
	bne _08110A64
_08110A60:
	movs r0, #1
	ands r1, r0
_08110A64:
	ldr r1, _08110A8C @ =0x0000012D
	adds r0, r5, r1
	ldrb r1, [r0]
	adds r2, r5, #0
	adds r2, #0xe0
	ldr r0, [r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #0xf
	ands r1, r0
	cmp r1, #1
	beq _08110AA4
	cmp r1, #1
	bgt _08110A94
	cmp r1, #0
	beq _08110A9A
	b _08110AB4
	.align 2, 0
_08110A88: .4byte sub_08110B64
_08110A8C: .4byte 0x0000012D
_08110A90: .4byte 0x00000127
_08110A94:
	cmp r1, #2
	beq _08110AAA
	b _08110AB4
_08110A9A:
	movs r3, #0xc0
	lsls r3, r3, #5
	movs r6, #0xb0
	lsls r6, r6, #6
	b _08110ABC
_08110AA4:
	movs r3, #0xc0
	lsls r3, r3, #5
	b _08110AB8
_08110AAA:
	movs r3, #0xe8
	lsls r3, r3, #8
	movs r6, #0xb0
	lsls r6, r6, #6
	b _08110ABC
_08110AB4:
	movs r3, #0xe8
	lsls r3, r3, #8
_08110AB8:
	movs r6, #0x84
	lsls r6, r6, #8
_08110ABC:
	ldr r0, _08110B5C @ =0x0000012D
	adds r1, r5, r0
	ldrb r1, [r1]
	ldr r0, [r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	lsrs r0, r0, #4
	adds r1, r4, #0
	adds r1, #0x85
	strb r0, [r1]
	ldr r1, _08110B60 @ =0x00000127
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _08110AE6
	movs r2, #0x93
	lsls r2, r2, #1
	adds r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #1
	beq _08110AF2
_08110AE6:
	movs r1, #0x93
	lsls r1, r1, #1
	adds r0, r5, r1
	ldrh r0, [r0]
	cmp r0, #2
	bne _08110AF8
_08110AF2:
	movs r0, #0x80
	lsls r0, r0, #9
	subs r3, r0, r3
_08110AF8:
	ldr r2, _08110B5C @ =0x0000012D
	adds r1, r5, r2
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	ldr r0, [r4, #0x40]
	subs r0, r3, r0
	asrs r1, r0, #5
	adds r0, r4, #0
	adds r0, #0x50
	strh r1, [r0]
	asrs r1, r3, #8
	adds r0, #0x50
	strh r1, [r0]
	ldr r0, [r4, #0x44]
	subs r0, r0, r6
	asrs r0, r0, #5
	adds r2, r4, #0
	adds r2, #0x52
	strh r0, [r2]
	asrs r0, r6, #8
	adds r1, r4, #0
	adds r1, #0xa2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x91
	movs r1, #0xfd
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #0xea
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08110B5C: .4byte 0x0000012D
_08110B60: .4byte 0x00000127

	thumb_func_start sub_08110B64
sub_08110B64: @ 0x08110B64
	push {r4, r5, lr}
	adds r3, r0, #0
	ldr r0, [r3, #0x70]
	ldr r1, [r3, #8]
	movs r2, #4
	orrs r1, r2
	str r1, [r3, #8]
	movs r1, #0x97
	lsls r1, r1, #1
	adds r0, r0, r1
	ldrb r4, [r0]
	cmp r4, #0
	bne _08110C04
	adds r2, r3, #0
	adds r2, #0x50
	movs r5, #0
	ldrsh r0, [r2, r5]
	cmp r0, #0
	beq _08110BB6
	cmp r0, #0
	ble _08110BA0
	ldr r0, [r3, #0x40]
	asrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0xa0
	movs r5, #0
	ldrsh r1, [r1, r5]
	cmp r0, r1
	ble _08110BB6
	b _08110BB0
_08110BA0:
	ldr r0, [r3, #0x40]
	asrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0xa0
	movs r5, #0
	ldrsh r1, [r1, r5]
	cmp r0, r1
	bge _08110BB6
_08110BB0:
	lsls r0, r1, #8
	str r0, [r3, #0x40]
	strh r4, [r2]
_08110BB6:
	adds r2, r3, #0
	adds r2, #0x52
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	beq _08110BF0
	cmp r0, #0
	ble _08110BD8
	ldr r0, [r3, #0x44]
	asrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0xa2
	movs r4, #0
	ldrsh r1, [r1, r4]
	cmp r0, r1
	bge _08110BF0
	b _08110BE8
_08110BD8:
	ldr r0, [r3, #0x44]
	asrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0xa2
	movs r5, #0
	ldrsh r1, [r1, r5]
	cmp r0, r1
	ble _08110BF0
_08110BE8:
	lsls r0, r1, #8
	str r0, [r3, #0x44]
	movs r0, #0
	strh r0, [r2]
_08110BF0:
	ldr r0, [r3, #0x50]
	cmp r0, #0
	bne _08110C04
	ldr r0, [r3, #8]
	ldr r1, _08110C0C @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r3, #8]
	adds r0, r3, #0
	bl sub_0811461C
_08110C04:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08110C0C: .4byte 0xFFFFFDFF

	thumb_func_start sub_08110C10
sub_08110C10: @ 0x08110C10
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, [r4, #0x70]
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x82
	lsls r0, r0, #1
	adds r5, r2, r0
	ldr r1, [r5]
	adds r0, r4, #0
	bl sub_0803925C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08110C4E
	ldr r0, [r5]
	adds r1, r4, #0
	adds r1, #0x85
	ldrb r1, [r1]
	adds r0, #0x85
	strb r1, [r0]
	ldr r0, [r5]
	adds r1, r4, #0
	bl sub_08111534
	adds r0, r4, #0
	bl sub_08114674
	b _08110C60
_08110C4E:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08110C60
	adds r0, r4, #0
	bl sub_08110E60
_08110C60:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08110C68
sub_08110C68: @ 0x08110C68
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r5, [r4, #0x70]
	ldr r2, _08110CB0 @ =sub_08110DEC
	movs r1, #3
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	ldr r1, _08110CB4 @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #1
	eors r0, r1
	str r0, [r4, #8]
	ldr r1, _08110CB8 @ =0x0000012D
	adds r0, r5, r1
	ldrb r2, [r0]
	adds r0, r5, #0
	adds r0, #0xe0
	ldr r0, [r0]
	adds r0, r0, r2
	ldrb r0, [r0]
	movs r1, #0xf
	ands r1, r0
	cmp r1, #1
	beq _08110CD2
	cmp r1, #1
	bgt _08110CBC
	cmp r1, #0
	beq _08110CC6
	b _08110CF0
	.align 2, 0
_08110CB0: .4byte sub_08110DEC
_08110CB4: .4byte 0xFFFFFBFF
_08110CB8: .4byte 0x0000012D
_08110CBC:
	cmp r1, #2
	beq _08110CD8
	cmp r1, #3
	beq _08110CE4
	b _08110CF0
_08110CC6:
	movs r0, #0xc0
	lsls r0, r0, #5
	str r0, [r4, #0x40]
	movs r0, #0xb0
	lsls r0, r0, #6
	b _08110CEE
_08110CD2:
	movs r0, #0xc0
	lsls r0, r0, #5
	b _08110CE8
_08110CD8:
	movs r0, #0xe8
	lsls r0, r0, #8
	str r0, [r4, #0x40]
	movs r0, #0xb0
	lsls r0, r0, #6
	b _08110CEE
_08110CE4:
	movs r0, #0xe8
	lsls r0, r0, #8
_08110CE8:
	str r0, [r4, #0x40]
	movs r0, #0x84
	lsls r0, r0, #8
_08110CEE:
	str r0, [r4, #0x44]
_08110CF0:
	adds r0, r5, #0
	adds r0, #0xe0
	ldr r0, [r0]
	adds r0, r0, r2
	ldrb r0, [r0]
	lsrs r0, r0, #4
	adds r1, r4, #0
	adds r1, #0x85
	strb r0, [r1]
	ldr r2, _08110DC8 @ =0x00000127
	adds r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _08110D18
	movs r1, #0x93
	lsls r1, r1, #1
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #1
	beq _08110D24
_08110D18:
	movs r2, #0x93
	lsls r2, r2, #1
	adds r0, r5, r2
	ldrh r0, [r0]
	cmp r0, #2
	bne _08110D2E
_08110D24:
	ldr r1, [r4, #0x40]
	movs r0, #0x80
	lsls r0, r0, #9
	subs r0, r0, r1
	str r0, [r4, #0x40]
_08110D2E:
	ldr r0, _08110DCC @ =0x0000012D
	adds r2, r5, r0
	ldrb r0, [r2]
	subs r0, #1
	movs r1, #0
	strb r0, [r2]
	ldr r0, [r4, #0x44]
	ldr r2, _08110DD0 @ =0xFFFF9200
	adds r0, r0, r2
	str r0, [r4, #0x44]
	adds r0, r4, #0
	adds r0, #0x50
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0xf6
	lsls r0, r0, #8
	strh r0, [r1]
	movs r0, #0x80
	strh r0, [r4, #4]
	ldr r1, _08110DD4 @ =gUnk_02020EE0
	ldr r0, _08110DD8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r5, #0xd4
	lsls r5, r5, #1
	adds r0, r2, #0
	muls r0, r5, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08110DC2
	ldrb r0, [r4]
	cmp r0, #0
	bne _08110D84
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08110DC2
_08110D84:
	ldr r1, _08110DDC @ =gUnk_08D60FA4
	ldr r4, _08110DE0 @ =gSongTable
	ldr r2, _08110DE4 @ =0x00000D44
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08110DAA
	movs r1, #0xd4
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08110DC2
_08110DAA:
	cmp r3, #0
	beq _08110DBC
	ldr r0, _08110DE8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08110DC2
_08110DBC:
	adds r0, r5, #0
	bl m4aSongNumStart
_08110DC2:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08110DC8: .4byte 0x00000127
_08110DCC: .4byte 0x0000012D
_08110DD0: .4byte 0xFFFF9200
_08110DD4: .4byte gUnk_02020EE0
_08110DD8: .4byte gUnk_0203AD3C
_08110DDC: .4byte gUnk_08D60FA4
_08110DE0: .4byte gSongTable
_08110DE4: .4byte 0x00000D44
_08110DE8: .4byte gUnk_0203AD10

	thumb_func_start sub_08110DEC
sub_08110DEC: @ 0x08110DEC
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08110E5A
	ldr r0, _08110E24 @ =0xFFFFFDFF
	ands r1, r0
	str r1, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08110E28 @ =sub_08110C10
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	ldr r1, [r4, #0x40]
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r1, r0
	ble _08110E2C
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _08110E34
	.align 2, 0
_08110E24: .4byte 0xFFFFFDFF
_08110E28: .4byte sub_08110C10
_08110E2C:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_08110E34:
	str r0, [r4, #8]
	ldr r1, [r4, #0x44]
	ldr r0, _08110E48 @ =0x000057FF
	cmp r1, r0
	bgt _08110E4C
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #6
	b _08110E52
	.align 2, 0
_08110E48: .4byte 0x000057FF
_08110E4C:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #4
_08110E52:
	strb r0, [r1]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r4, #4]
_08110E5A:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_08110E60
sub_08110E60: @ 0x08110E60
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08110F00 @ =sub_081144EC
	movs r1, #2
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	movs r0, #0xa0
	lsls r0, r0, #4
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	ldr r1, _08110F04 @ =0xFFFFFBFF
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _08110F08 @ =gUnk_02020EE0
	ldr r0, _08110F0C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08110EF8
	ldrb r0, [r4]
	cmp r0, #0
	bne _08110EBC
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08110EF8
_08110EBC:
	ldr r1, _08110F10 @ =gUnk_08D60FA4
	ldr r4, _08110F14 @ =gSongTable
	ldr r2, _08110F18 @ =0x00000D3C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08110EE0
	ldr r1, _08110F1C @ =0x00000D38
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08110EF8
_08110EE0:
	cmp r3, #0
	beq _08110EF2
	ldr r0, _08110F20 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08110EF8
_08110EF2:
	ldr r0, _08110F24 @ =0x000001A7
	bl m4aSongNumStart
_08110EF8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08110F00: .4byte sub_081144EC
_08110F04: .4byte 0xFFFFFBFF
_08110F08: .4byte gUnk_02020EE0
_08110F0C: .4byte gUnk_0203AD3C
_08110F10: .4byte gUnk_08D60FA4
_08110F14: .4byte gSongTable
_08110F18: .4byte 0x00000D3C
_08110F1C: .4byte 0x00000D38
_08110F20: .4byte gUnk_0203AD10
_08110F24: .4byte 0x000001A7

	thumb_func_start sub_08110F28
sub_08110F28: @ 0x08110F28
	adds r2, r0, #0
	ldr r0, _08110F7C @ =sub_08114578
	str r0, [r2, #0x78]
	adds r3, r2, #0
	adds r3, #0x83
	movs r1, #0
	movs r0, #8
	strb r0, [r3]
	adds r0, r2, #0
	adds r0, #0x50
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2, #8]
	movs r0, #0x40
	strh r0, [r2, #4]
	adds r0, r2, #0
	adds r0, #0x91
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r2, #0
	adds r1, #0x97
	movs r0, #0xea
	strb r0, [r1]
	bx lr
	.align 2, 0
_08110F7C: .4byte sub_08114578

	thumb_func_start sub_08110F80
sub_08110F80: @ 0x08110F80
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	ldr r5, [r7, #0x70]
	mov sb, r5
	mov r8, r7
	ldr r0, [r5, #8]
	movs r2, #0x80
	lsls r2, r2, #5
	ands r0, r2
	cmp r0, #0
	bne _08110FAC
	adds r0, r5, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _08110FCA
_08110FAC:
	ldr r1, [r7, #0xc]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r1, r0
	cmp r1, #0
	bne _08110FCA
	adds r0, r7, #0
	adds r0, #0x80
	strh r1, [r0]
	ldr r0, [r7, #8]
	orrs r0, r2
	str r0, [r7, #8]
	adds r0, r7, #0
	bl sub_0809DA30
_08110FCA:
	ldr r0, _081110FC @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r6, r7, #0
	adds r6, #0x56
	movs r0, #1
	ldrb r3, [r6]
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08110FE4
	b _081111B4
_08110FE4:
	adds r1, r7, #0
	adds r1, #0x80
	ldrh r2, [r1]
	mov r0, r8
	adds r0, #0xe4
	strh r2, [r0]
	ldr r2, _08111100 @ =0x0000270F
	strh r2, [r1]
	movs r4, #0
	ldrsh r3, [r0, r4]
	mov sl, r1
	str r0, [sp]
	mov r4, r8
	adds r4, #0xe3
	cmp r3, r2
	bne _08111006
	b _0811115C
_08111006:
	ldr r1, _08111104 @ =gUnk_02020EE0
	ldr r0, _08111108 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811106E
	ldrb r0, [r7]
	cmp r0, #0
	bne _0811102E
	ldrb r0, [r6]
	cmp r0, r2
	bne _0811106E
_0811102E:
	ldr r1, _0811110C @ =gUnk_08D60FA4
	ldr r6, _08111110 @ =gSongTable
	ldr r2, _08111114 @ =0x00000D84
	adds r0, r6, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08111054
	movs r4, #0xd8
	lsls r4, r4, #4
	adds r0, r6, r4
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811106E
_08111054:
	cmp r3, #0
	beq _08111066
	ldr r0, _08111118 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811106E
_08111066:
	movs r0, #0xd8
	lsls r0, r0, #1
	bl m4aSongNumStart
_0811106E:
	mov r4, r8
	adds r4, #0xe3
	movs r1, #0
	movs r0, #8
	strb r0, [r4]
	movs r0, #0x97
	lsls r0, r0, #1
	adds r2, r5, r0
	movs r0, #1
	strb r0, [r2]
	ldr r2, _0811111C @ =0x00000137
	adds r0, r5, r2
	strb r1, [r0]
	movs r3, #0x98
	lsls r3, r3, #1
	adds r1, r5, r3
	movs r0, #0x3c
	strb r0, [r1]
	adds r0, #0xf3
	adds r6, r5, r0
	mov r1, sl
	ldrb r0, [r1]
	ldr r2, [sp]
	ldrb r1, [r2]
	subs r0, r0, r1
	ldrb r3, [r6]
	adds r0, r0, r3
	strb r0, [r6]
	mov r2, sb
	adds r2, #0x80
	mov r0, sl
	ldrh r1, [r0]
	ldr r3, [sp]
	ldrh r0, [r3]
	subs r1, r1, r0
	ldrh r0, [r2]
	subs r0, r0, r1
	strh r0, [r2]
	mov r0, sb
	bl sub_08034E14
	mov r0, sb
	adds r0, #0x83
	ldrb r1, [r0]
	mov r8, r0
	cmp r1, #2
	bne _0811115C
	ldrb r2, [r6]
	ldr r0, _08111120 @ =gUnk_0203AD30
	ldrb r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	adds r0, #5
	cmp r2, r0
	blt _0811115C
	adds r0, r7, #0
	bl sub_08110F28
	adds r0, r5, #0
	adds r0, #0xfc
	ldr r0, [r0]
	cmp r7, r0
	bne _08111124
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r5, r4
	ldr r0, [r0]
	bl sub_08110E60
	b _08111128
	.align 2, 0
_081110FC: .4byte gUnk_03000510
_08111100: .4byte 0x0000270F
_08111104: .4byte gUnk_02020EE0
_08111108: .4byte gUnk_0203AD3C
_0811110C: .4byte gUnk_08D60FA4
_08111110: .4byte gSongTable
_08111114: .4byte 0x00000D84
_08111118: .4byte gUnk_0203AD10
_0811111C: .4byte 0x00000137
_08111120: .4byte gUnk_0203AD30
_08111124:
	bl sub_08110E60
_08111128:
	ldr r0, _08111154 @ =0x00000129
	adds r1, r5, r0
	movs r0, #0
	strb r0, [r1]
	movs r2, #0x93
	lsls r2, r2, #1
	adds r1, r5, r2
	strb r0, [r1]
	movs r3, #0x96
	lsls r3, r3, #1
	adds r1, r5, r3
	strb r0, [r1]
	ldr r4, _08111158 @ =0x0000012D
	adds r1, r5, r4
	strb r0, [r1]
	adds r2, #1
	adds r1, r5, r2
	strb r0, [r1]
	movs r0, #4
	mov r3, r8
	strb r0, [r3]
	b _081111B4
	.align 2, 0
_08111154: .4byte 0x00000129
_08111158: .4byte 0x0000012D
_0811115C:
	movs r1, #0
	ldrsb r1, [r4, r1]
	cmp r1, #0
	beq _081111AC
	ldr r1, _081111A8 @ =gUnk_08357384
	movs r0, #0
	ldrsb r0, [r4, r0]
	subs r0, #1
	adds r0, r0, r1
	ldrb r1, [r0]
	mov r2, sb
	adds r2, #0x54
	strb r1, [r2]
	adds r0, r5, #0
	adds r0, #0xfc
	ldr r0, [r0]
	adds r0, #0x54
	strb r1, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	ldrb r1, [r2]
	adds r0, #0x54
	strb r1, [r0]
	ldrb r0, [r4]
	subs r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _081111B4
	movs r2, #0x97
	lsls r2, r2, #1
	adds r1, r5, r2
	strb r0, [r1]
	b _081111B4
	.align 2, 0
_081111A8: .4byte gUnk_08357384
_081111AC:
	movs r3, #0x97
	lsls r3, r3, #1
	adds r0, r5, r3
	strb r1, [r0]
_081111B4:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_081111C4
sub_081111C4: @ 0x081111C4
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r5, r6, #0
	adds r5, #0xb4
	ldr r2, [r5]
	cmp r2, #0
	bne _081111D4
	b _0811130E
_081111D4:
	adds r1, r6, #0
	adds r1, #0x83
	ldrb r0, [r1]
	cmp r0, #7
	bhi _0811121E
	lsls r0, r0, #2
	ldr r1, _081111E8 @ =_081111EC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_081111E8: .4byte _081111EC
_081111EC: @ jump table
	.4byte _0811120C @ case 0
	.4byte _0811120C @ case 1
	.4byte _08111212 @ case 2
	.4byte _08111218 @ case 3
	.4byte _0811120C @ case 4
	.4byte _0811120C @ case 5
	.4byte _0811120C @ case 6
	.4byte _0811120C @ case 7
_0811120C:
	movs r0, #0x19
	strb r0, [r5, #0x1a]
	b _08111222
_08111212:
	movs r0, #0x1a
	strb r0, [r5, #0x1a]
	b _08111222
_08111218:
	movs r0, #0x1b
	strb r0, [r5, #0x1a]
	b _08111222
_0811121E:
	adds r0, r2, #0
	b _08111236
_08111222:
	ldr r1, [r6, #8]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _08111240
	ldr r0, [r5]
	cmp r0, #0
	beq _0811130E
_08111236:
	bl sub_08157190
	movs r0, #0
	str r0, [r5]
	b _0811130E
_08111240:
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _08111254
	ldr r0, [r5, #8]
	ldr r1, _08111250 @ =0xFFFFFBFF
	ands r0, r1
	b _08111258
	.align 2, 0
_08111250: .4byte 0xFFFFFBFF
_08111254:
	ldr r0, [r5, #8]
	orrs r0, r2
_08111258:
	str r0, [r5, #8]
	ldr r0, [r6, #8]
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	bne _08111278
	adds r0, r5, #0
	bl sub_08155128
	cmp r0, #0
	bne _08111278
	movs r0, #0xff
	strb r0, [r5, #0x1b]
	adds r0, r5, #0
	bl sub_08155128
_08111278:
	ldr r2, [r6, #0x40]
	asrs r2, r2, #8
	ldr r3, _081112F8 @ =gCurLevelInfo
	ldr r7, _081112FC @ =gUnk_0203AD3C
	ldrb r0, [r7]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	mov ip, r2
	mov r0, ip
	strh r0, [r5, #0x10]
	ldr r1, [r6, #0x44]
	asrs r1, r1, #8
	ldrb r0, [r7]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r5, #0x12]
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	bne _0811130E
	ldr r2, _08111300 @ =gUnk_02020EE0
	ldrb r1, [r7]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811130E
	ldr r1, _08111304 @ =gUnk_0203AD18
	ldrh r0, [r1]
	add r0, ip
	strh r0, [r5, #0x10]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r5, #0x12]
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _08111308
	adds r0, r5, #0
	bl sub_081564D8
	b _0811130E
	.align 2, 0
_081112F8: .4byte gCurLevelInfo
_081112FC: .4byte gUnk_0203AD3C
_08111300: .4byte gUnk_02020EE0
_08111304: .4byte gUnk_0203AD18
_08111308:
	adds r0, r5, #0
	bl sub_0815604C
_0811130E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08111314
sub_08111314: @ 0x08111314
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r5, r0, #0
	mov sl, r5
	adds r6, r5, #0
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r6, #0x40]
	asrs r0, r0, #8
	mov r8, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov sb, r0
	movs r4, #0
	ldr r1, _08111358 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _0811135C @ =gUnk_020229E0
	mov ip, r7
	mov r7, sl
	adds r7, #0x87
	str r7, [sp]
	movs r7, #0x56
	adds r7, r7, r5
	mov sl, r7
	b _08111374
	.align 2, 0
_08111358: .4byte gUnk_020229D4
_0811135C: .4byte gUnk_020229E0
_08111360:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _0811137C
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_08111374:
	cmp r0, #0
	bne _08111360
	orrs r2, r3
	str r2, [r1]
_0811137C:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	add r1, ip
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, r8
	strh r0, [r1, #6]
	mov r4, sb
	strh r4, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xd1
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	ldr r7, [sp]
	ldrb r0, [r7]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, sl
	ldrb r0, [r2]
	bl CreateObject
	str r5, [r0, #0x70]
	movs r4, #0x82
	lsls r4, r4, #1
	adds r1, r6, r4
	str r0, [r1]
	bl sub_08113BAC
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_081113EC
sub_081113EC: @ 0x081113EC
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _08111420 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08111424 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08111428
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08111430
	.align 2, 0
_08111420: .4byte ObjectMain
_08111424: .4byte ObjectDestroy
_08111428:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08111430:
	adds r4, r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	adds r0, r4, #0
	adds r0, #0x85
	movs r3, #0
	strb r3, [r0]
	ldr r1, [r4, #8]
	movs r0, #0x40
	orrs r1, r0
	movs r6, #0x80
	lsls r6, r6, #1
	orrs r1, r6
	movs r0, #0x80
	lsls r0, r0, #8
	orrs r1, r0
	ldr r0, [r4, #0xc]
	movs r2, #1
	orrs r0, r2
	movs r2, #4
	orrs r0, r2
	str r0, [r4, #0xc]
	movs r0, #0x80
	lsls r0, r0, #9
	orrs r1, r0
	str r1, [r4, #8]
	ldr r0, [r4, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #7
	orrs r0, r1
	ldr r1, _08111514 @ =0x001080A0
	orrs r0, r1
	str r0, [r4, #0x5c]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r3, [r0]
	ldr r0, _08111518 @ =sub_0809F840
	str r0, [r4, #0x7c]
	movs r1, #0xe
	rsbs r1, r1, #0
	subs r2, #6
	movs r0, #2
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #0xe
	bl sub_0803E2B0
	movs r0, #0xc8
	lsls r0, r0, #3
	strh r0, [r4, #0x24]
	adds r0, r4, #0
	bl ObjectInitSprite
	ldr r1, _0811151C @ =gUnk_02020EE0
	ldr r0, _08111520 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811150A
	ldrb r0, [r4]
	cmp r0, #0
	bne _081114CE
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0811150A
_081114CE:
	ldr r1, _08111524 @ =gUnk_08D60FA4
	ldr r5, _08111528 @ =gSongTable
	ldr r2, _0811152C @ =0x00000DA4
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081114F4
	movs r1, #0xda
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811150A
_081114F4:
	cmp r3, #0
	beq _08111502
	ldr r0, _08111530 @ =gUnk_0203AD10
	ldr r0, [r0]
	ands r0, r6
	cmp r0, #0
	bne _0811150A
_08111502:
	movs r0, #0xda
	lsls r0, r0, #1
	bl m4aSongNumStart
_0811150A:
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08111514: .4byte 0x001080A0
_08111518: .4byte sub_0809F840
_0811151C: .4byte gUnk_02020EE0
_08111520: .4byte gUnk_0203AD3C
_08111524: .4byte gUnk_08D60FA4
_08111528: .4byte gSongTable
_0811152C: .4byte 0x00000DA4
_08111530: .4byte gUnk_0203AD10

	thumb_func_start sub_08111534
sub_08111534: @ 0x08111534
	push {r4, lr}
	adds r3, r0, #0
	adds r0, #0x50
	movs r2, #0
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	ldr r0, [r1, #0x40]
	str r0, [r3, #0x40]
	ldr r0, [r1, #0x44]
	str r0, [r3, #0x44]
	adds r1, r3, #0
	adds r1, #0x83
	movs r0, #3
	strb r0, [r1]
	ldr r0, _081115D0 @ =sub_08114714
	str r0, [r3, #0x78]
	movs r0, #0x12
	strh r0, [r3, #4]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r3, #0x24]
	ldr r1, _081115D4 @ =gUnk_02020EE0
	ldr r0, _081115D8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r3, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081115C8
	ldrb r0, [r3]
	cmp r0, #0
	bne _0811158C
	adds r0, r3, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _081115C8
_0811158C:
	ldr r1, _081115DC @ =gUnk_08D60FA4
	ldr r4, _081115E0 @ =gSongTable
	ldr r2, _081115E4 @ =0x00000DAC
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081115B0
	ldr r1, _081115E8 @ =0x00000DA8
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081115C8
_081115B0:
	cmp r3, #0
	beq _081115C2
	ldr r0, _081115EC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081115C8
_081115C2:
	ldr r0, _081115F0 @ =0x000001B5
	bl m4aSongNumStart
_081115C8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081115D0: .4byte sub_08114714
_081115D4: .4byte gUnk_02020EE0
_081115D8: .4byte gUnk_0203AD3C
_081115DC: .4byte gUnk_08D60FA4
_081115E0: .4byte gSongTable
_081115E4: .4byte 0x00000DAC
_081115E8: .4byte 0x00000DA8
_081115EC: .4byte gUnk_0203AD10
_081115F0: .4byte 0x000001B5

	thumb_func_start sub_081115F4
sub_081115F4: @ 0x081115F4
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r0, #0x85
	ldrb r6, [r0]
	cmp r6, #1
	beq _0811161A
	cmp r6, #1
	bgt _0811160C
	cmp r6, #0
	beq _08111664
	b _08111614
_0811160C:
	cmp r6, #2
	beq _08111648
	cmp r6, #3
	beq _08111692
_08111614:
	adds r4, r5, #0
	adds r4, #0x52
	b _0811173E
_0811161A:
	adds r1, r5, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r4, r5, #0
	adds r4, #0x52
	movs r0, #0x80
	lsls r0, r0, #4
	strh r0, [r4]
	adds r0, r5, #0
	adds r0, #0x83
	strb r6, [r0]
	movs r1, #2
	rsbs r1, r1, #0
	movs r2, #0xe
	rsbs r2, r2, #0
	movs r0, #0xe
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #2
	bl sub_0803E2B0
	b _0811173E
_08111648:
	adds r1, r5, #0
	adds r1, #0x50
	movs r0, #0xec
	lsls r0, r0, #3
	strh r0, [r1]
	adds r4, r5, #0
	adds r4, #0x52
	movs r0, #0xc2
	lsls r0, r0, #2
	strh r0, [r4]
	adds r0, r5, #0
	adds r0, #0x83
	strb r6, [r0]
	b _081116F4
_08111664:
	adds r1, r5, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0x80
	lsls r0, r0, #4
	strh r0, [r1]
	adds r4, r5, #0
	adds r4, #0x52
	strh r6, [r4]
	adds r0, r5, #0
	adds r0, #0x83
	strb r2, [r0]
	movs r1, #0xe
	rsbs r1, r1, #0
	movs r2, #2
	rsbs r2, r2, #0
	movs r0, #2
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #0xe
	bl sub_0803E2B0
	b _0811173E
_08111692:
	adds r0, r5, #0
	bl sub_0803D46C
	adds r1, r5, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r3, _081116C0 @ =gRngVal
	ldr r2, [r3]
	ldr r1, _081116C4 @ =0x00196225
	muls r1, r2, r1
	ldr r2, _081116C8 @ =0x3C6EF35F
	adds r1, r1, r2
	str r1, [r3]
	lsrs r2, r1, #0x10
	ands r2, r6
	ldr r0, [r0, #8]
	movs r1, #0x60
	ands r0, r1
	cmp r0, #0
	beq _081116CC
	movs r1, #1
	movs r0, #3
	b _081116D0
	.align 2, 0
_081116C0: .4byte gRngVal
_081116C4: .4byte 0x00196225
_081116C8: .4byte 0x3C6EF35F
_081116CC:
	movs r1, #3
	movs r0, #1
_081116D0:
	subs r0, r2, r0
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r0, #0
	bge _0811170A
	adds r1, r5, #0
	adds r1, #0x50
	movs r0, #0xec
	lsls r0, r0, #3
	strh r0, [r1]
	adds r4, r5, #0
	adds r4, #0x52
	movs r0, #0xc2
	lsls r0, r0, #2
	strh r0, [r4]
	adds r1, #0x33
	movs r0, #2
	strb r0, [r1]
_081116F4:
	movs r1, #0xd
	rsbs r1, r1, #0
	movs r2, #1
	rsbs r2, r2, #0
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #0xd
	bl sub_0803E2B0
	b _0811173E
_0811170A:
	subs r0, r2, r1
	lsls r0, r0, #0x18
	adds r4, r5, #0
	adds r4, #0x52
	cmp r0, #0
	bge _0811173E
	adds r2, r5, #0
	adds r2, #0x50
	movs r3, #0
	movs r1, #0
	movs r0, #0x80
	lsls r0, r0, #4
	strh r0, [r2]
	strh r1, [r4]
	adds r0, r5, #0
	adds r0, #0x83
	strb r3, [r0]
	subs r1, #0xe
	movs r2, #2
	rsbs r2, r2, #0
	movs r0, #2
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #0xe
	bl sub_0803E2B0
_0811173E:
	ldr r1, [r5, #0x44]
	ldr r0, _08111770 @ =0x000057FF
	cmp r1, r0
	bgt _0811174C
	ldrh r0, [r4]
	rsbs r0, r0, #0
	strh r0, [r4]
_0811174C:
	ldr r1, [r5, #0x40]
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r1, r0
	ble _08111774
	adds r0, r5, #0
	adds r0, #0x50
	ldrh r1, [r0]
	rsbs r1, r1, #0
	strh r1, [r0]
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	blt _08111784
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	b _0811178C
	.align 2, 0
_08111770: .4byte 0x000057FF
_08111774:
	movs r2, #0
	ldrsh r0, [r4, r2]
	cmp r0, #0
	bge _08111784
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	b _0811178C
_08111784:
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_0811178C:
	str r0, [r5, #8]
	ldr r0, _08111808 @ =sub_08114708
	str r0, [r5, #0x78]
	movs r0, #0x12
	strh r0, [r5, #4]
	ldr r1, _0811180C @ =gUnk_02020EE0
	ldr r0, _08111810 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08111800
	ldrb r0, [r5]
	cmp r0, #0
	bne _081117C2
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08111800
_081117C2:
	ldr r1, _08111814 @ =gUnk_08D60FA4
	ldr r4, _08111818 @ =gSongTable
	ldr r2, _0811181C @ =0x0000053C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081117E8
	movs r1, #0xa7
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08111800
_081117E8:
	cmp r3, #0
	beq _081117FA
	ldr r0, _08111820 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08111800
_081117FA:
	movs r0, #0xa7
	bl m4aSongNumStart
_08111800:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08111808: .4byte sub_08114708
_0811180C: .4byte gUnk_02020EE0
_08111810: .4byte gUnk_0203AD3C
_08111814: .4byte gUnk_08D60FA4
_08111818: .4byte gSongTable
_0811181C: .4byte 0x0000053C
_08111820: .4byte gUnk_0203AD10

	thumb_func_start sub_08111824
sub_08111824: @ 0x08111824
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	adds r6, r5, #0
	mov sb, r5
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	mov r8, r0
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	mov ip, r0
	movs r4, #0
	ldr r1, _08111850 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	ldr r7, _08111854 @ =gUnk_020229E0
	b _0811186C
	.align 2, 0
_08111850: .4byte gUnk_020229D4
_08111854: .4byte gUnk_020229E0
_08111858:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _08111874
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_0811186C:
	cmp r0, #0
	bne _08111858
	orrs r2, r3
	str r2, [r1]
_08111874:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r7
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, r8
	strh r0, [r1, #6]
	mov r0, ip
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xd2
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	adds r0, r5, #0
	adds r0, #0x87
	ldrb r0, [r0]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	bl CreateObject
	adds r4, r0, #0
	str r6, [r4, #0x70]
	movs r0, #0x84
	lsls r0, r0, #1
	add r0, sb
	str r4, [r0]
	adds r0, r4, #0
	movs r1, #0
	bl sub_081122A0
	adds r0, r4, #0
	movs r1, #1
	bl sub_081122A0
	adds r0, r6, #0
	movs r1, #0
	bl sub_081126C0
	adds r0, r6, #0
	movs r1, #1
	bl sub_081126C0
	ldr r1, _0811196C @ =gUnk_02020EE0
	ldr r0, _08111970 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08111960
	ldrb r0, [r5]
	cmp r0, #0
	bne _08111920
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08111960
_08111920:
	ldr r1, _08111974 @ =gUnk_08D60FA4
	ldr r4, _08111978 @ =gSongTable
	ldr r2, _0811197C @ =0x00000D94
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08111946
	movs r1, #0xd9
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08111960
_08111946:
	cmp r3, #0
	beq _08111958
	ldr r0, _08111980 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08111960
_08111958:
	movs r0, #0xd9
	lsls r0, r0, #1
	bl m4aSongNumStart
_08111960:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811196C: .4byte gUnk_02020EE0
_08111970: .4byte gUnk_0203AD3C
_08111974: .4byte gUnk_08D60FA4
_08111978: .4byte gSongTable
_0811197C: .4byte 0x00000D94
_08111980: .4byte gUnk_0203AD10

	thumb_func_start sub_08111984
sub_08111984: @ 0x08111984
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _081119B8 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _081119BC @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081119C0
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081119C8
	.align 2, 0
_081119B8: .4byte ObjectMain
_081119BC: .4byte ObjectDestroy
_081119C0:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081119C8:
	adds r4, r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	adds r0, r4, #0
	adds r0, #0x85
	movs r3, #0
	strb r3, [r0]
	adds r1, r4, #0
	adds r1, #0x63
	movs r0, #2
	strb r0, [r1]
	ldr r1, [r4, #8]
	movs r0, #0x40
	orrs r1, r0
	movs r6, #0x80
	lsls r6, r6, #1
	orrs r1, r6
	movs r0, #0x80
	lsls r0, r0, #8
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r1, r0
	ldr r0, [r4, #0xc]
	movs r2, #1
	orrs r0, r2
	movs r2, #4
	orrs r0, r2
	str r0, [r4, #0xc]
	movs r0, #0x80
	lsls r0, r0, #9
	orrs r1, r0
	str r1, [r4, #8]
	ldr r0, [r4, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #7
	orrs r0, r1
	ldr r1, _08111AC4 @ =0x001080A0
	orrs r0, r1
	str r0, [r4, #0x5c]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r3, [r0]
	ldr r0, _08111AC8 @ =sub_0809F840
	str r0, [r4, #0x7c]
	movs r1, #0x18
	rsbs r1, r1, #0
	movs r0, #0x80
	rsbs r0, r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r2, #8
	movs r3, #0x18
	bl sub_0803E2B0
	movs r0, #0xb8
	lsls r0, r0, #3
	strh r0, [r4, #0x24]
	adds r0, r4, #0
	bl ObjectInitSprite
	adds r0, r4, #0
	bl sub_08113BEC
	adds r0, r4, #0
	bl sub_08111B88
	ldr r1, _08111ACC @ =gUnk_02020EE0
	ldr r0, _08111AD0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08111ABA
	ldrb r0, [r4]
	cmp r0, #0
	bne _08111A82
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08111ABA
_08111A82:
	ldr r1, _08111AD4 @ =gUnk_08D60FA4
	ldr r5, _08111AD8 @ =gSongTable
	ldr r2, _08111ADC @ =0x00000D9C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08111AA6
	ldr r1, _08111AE0 @ =0x00000D98
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08111ABA
_08111AA6:
	cmp r3, #0
	beq _08111AB4
	ldr r0, _08111AE4 @ =gUnk_0203AD10
	ldr r0, [r0]
	ands r0, r6
	cmp r0, #0
	bne _08111ABA
_08111AB4:
	ldr r0, _08111AE8 @ =0x000001B3
	bl m4aSongNumStart
_08111ABA:
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08111AC4: .4byte 0x001080A0
_08111AC8: .4byte sub_0809F840
_08111ACC: .4byte gUnk_02020EE0
_08111AD0: .4byte gUnk_0203AD3C
_08111AD4: .4byte gUnk_08D60FA4
_08111AD8: .4byte gSongTable
_08111ADC: .4byte 0x00000D9C
_08111AE0: .4byte 0x00000D98
_08111AE4: .4byte gUnk_0203AD10
_08111AE8: .4byte 0x000001B3

	thumb_func_start sub_08111AEC
sub_08111AEC: @ 0x08111AEC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r6, [r4, #0x70]
	ldr r0, [r6, #0x40]
	str r0, [r4, #0x40]
	ldr r0, [r6, #0x44]
	str r0, [r4, #0x44]
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r5, [r2]
	cmp r5, #1
	beq _08111B38
	cmp r5, #1
	bgt _08111B0E
	cmp r5, #0
	beq _08111B14
	b _08111B82
_08111B0E:
	cmp r5, #2
	beq _08111B72
	b _08111B82
_08111B14:
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08111B82
	movs r0, #1
	strb r0, [r2]
	ldr r0, [r4, #8]
	ldr r1, _08111B34 @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #5
	adds r1, r4, #0
	bl sub_0806FE64
	b _08111B82
	.align 2, 0
_08111B34: .4byte 0xFFFFFDFF
_08111B38:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	ldrh r1, [r4, #4]
	movs r0, #0x3f
	ands r0, r1
	cmp r0, #0
	bne _08111B6A
	adds r0, r6, #0
	movs r1, #0x2c
	movs r2, #0x8d
	bl sub_080A8C28
	ldr r0, [r6, #8]
	eors r0, r5
	str r0, [r6, #8]
	adds r0, r6, #0
	movs r1, #0x2c
	movs r2, #0x8d
	bl sub_080A8C28
	ldr r0, [r6, #8]
	eors r0, r5
	str r0, [r6, #8]
_08111B6A:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	b _08111B82
_08111B72:
	ldr r1, [r4, #8]
	ands r5, r1
	cmp r5, #0
	beq _08111B82
	movs r0, #0x80
	lsls r0, r0, #5
	orrs r1, r0
	str r1, [r4, #8]
_08111B82:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_08111B88
sub_08111B88: @ 0x08111B88
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _08111BB8 @ =sub_08111C5C
	ldr r2, _08111BBC @ =0x00001001
	ldr r1, _08111BC0 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08111BC4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _08111BCC
	.align 2, 0
_08111BB8: .4byte sub_08111C5C
_08111BBC: .4byte 0x00001001
_08111BC0: .4byte sub_0803DCCC
_08111BC4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_08111BCC:
	adds r0, r4, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r5, r4, #0
	adds r5, #0x42
	movs r6, #0
	strh r0, [r5]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r3, _08111C40 @ =0x00000399
	movs r0, #0x26
	str r0, [sp]
	movs r0, #0x17
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0xc
	bl sub_080709F8
	adds r4, #0x2b
	strb r6, [r4]
	ldr r2, _08111C44 @ =gUnk_02020EE0
	ldr r0, _08111C48 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r5, [r5]
	cmp r0, r5
	bne _08111C50
	ldr r5, _08111C4C @ =0x0000039A
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08111C52
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08111C52
	.align 2, 0
_08111C40: .4byte 0x00000399
_08111C44: .4byte gUnk_02020EE0
_08111C48: .4byte gUnk_0203AD3C
_08111C4C: .4byte 0x0000039A
_08111C50:
	strb r6, [r4]
_08111C52:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08111C5C
sub_08111C5C: @ 0x08111C5C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r2, _08111C80 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08111C84
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08111C8C
	.align 2, 0
_08111C80: .4byte gCurTask
_08111C84:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08111C8C:
	adds r5, r0, #0
	ldr r7, [r5, #0x44]
	ldrh r1, [r5, #6]
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _08111CA6
	ldr r0, [r2]
	bl TaskDestroy
	b _08111EE6
_08111CA6:
	ldr r0, [r7, #8]
	ands r0, r3
	cmp r0, #0
	beq _08111CB6
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r5, #6]
	b _08111EE6
_08111CB6:
	movs r0, #4
	adds r3, r0, #0
	orrs r3, r1
	strh r3, [r5, #6]
	ldr r2, _08111D28 @ =gUnk_02020EE0
	ldr r0, _08111D2C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	mov r8, r1
	ldrh r1, [r1]
	cmp r0, r1
	bne _08111D70
	movs r0, #0x80
	lsls r0, r0, #7
	ands r3, r0
	cmp r3, #0
	beq _08111D38
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _08111D96
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0xc
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _08111D30 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _08111D34 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _08111D96
	.align 2, 0
_08111D28: .4byte gUnk_02020EE0
_08111D2C: .4byte gUnk_0203AD3C
_08111D30: .4byte 0xFFF7FFFF
_08111D34: .4byte 0x0400000A
_08111D38:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _08111D96
	movs r0, #0xc
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _08111D68 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _08111D6C @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _08111D96
	.align 2, 0
_08111D68: .4byte 0xFFF7FFFF
_08111D6C: .4byte 0x0400000A
_08111D70:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _08111D8C
	movs r0, #0x80
	lsls r0, r0, #7
	ands r3, r0
	lsls r0, r3, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _08111D8C
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_08111D8C:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_08111D96:
	ldr r2, _08111DD8 @ =gUnk_02020EE0
	ldr r0, _08111DDC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, r8
	ldrh r2, [r2]
	cmp r0, r2
	bne _08111DE4
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _08111DEC
	ldr r6, _08111DE0 @ =0x0000039A
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08111DEC
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08111DEC
	.align 2, 0
_08111DD8: .4byte gUnk_02020EE0
_08111DDC: .4byte gUnk_0203AD3C
_08111DE0: .4byte 0x0000039A
_08111DE4:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_08111DEC:
	adds r0, r7, #0
	adds r0, #0x60
	ldrh r0, [r0]
	mov r6, r8
	strh r0, [r6]
	ldr r0, [r7, #0x40]
	str r0, [r5, #0x34]
	adds r0, r7, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #1
	beq _08111E10
	ldrh r0, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r1, r2, #0
	orrs r0, r1
	b _08111E16
_08111E10:
	ldrh r1, [r5, #6]
	ldr r0, _08111E68 @ =0x0000FBFF
	ands r0, r1
_08111E16:
	strh r0, [r5, #6]
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _08111E70
	ldrb r0, [r3]
	cmp r0, #0
	beq _08111E36
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _08111E36
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_08111E36:
	cmp r3, #0
	beq _08111E70
	ldr r0, _08111E6C @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08111EE0
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08111EE0
	adds r0, r5, #0
	bl sub_0803DBC8
	b _08111EE6
	.align 2, 0
_08111E68: .4byte 0x0000FBFF
_08111E6C: .4byte gUnk_03000510
_08111E70:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _08111ED8 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	mov r6, r8
	ldrh r1, [r6]
	cmp r0, r1
	beq _08111EB0
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _08111EB0
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _08111EB0
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _08111EB0
	movs r3, #4
_08111EB0:
	ldr r0, _08111EDC @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08111EE0
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08111EE0
	adds r0, r4, #0
	bl sub_0803DBC8
	b _08111EE6
	.align 2, 0
_08111ED8: .4byte gUnk_02020EE0
_08111EDC: .4byte gUnk_03000510
_08111EE0:
	adds r0, r5, #0
	bl sub_0806FAC8
_08111EE6:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08111EF4
sub_08111EF4: @ 0x08111EF4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r6, r0, #0
	adds r5, r6, #0
	ldr r0, _08111F28 @ =sub_08112024
	ldr r2, _08111F2C @ =0x00003501
	ldr r1, _08111F30 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08111F34
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08111F3C
	.align 2, 0
_08111F28: .4byte sub_08112024
_08111F2C: .4byte 0x00003501
_08111F30: .4byte sub_0803DCCC
_08111F34:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08111F3C:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r7, r4, #0
	adds r7, #0x42
	movs r1, #0
	mov r8, r1
	strh r0, [r7]
	movs r0, #0x90
	lsls r0, r0, #1
	adds r2, r6, r0
	movs r0, #0
	ldrsh r1, [r2, r0]
	movs r0, #0x80
	lsls r0, r0, #5
	cmp r1, r0
	bne _08111F82
	ldr r0, [r4, #0x34]
	ldr r1, _08111FF4 @ =0xFFFFE000
	adds r0, r0, r1
	str r0, [r4, #0x34]
	ldr r0, [r4, #0x38]
	ldr r1, _08111FF8 @ =0xFFFFE400
	adds r0, r0, r1
	str r0, [r4, #0x38]
_08111F82:
	movs r0, #0
	ldrsh r1, [r2, r0]
	movs r0, #0xc0
	lsls r0, r0, #6
	cmp r1, r0
	bne _08111FA0
	ldr r0, [r4, #0x34]
	movs r1, #0x80
	lsls r1, r1, #6
	adds r0, r0, r1
	str r0, [r4, #0x34]
	ldr r0, [r4, #0x38]
	ldr r1, _08111FF8 @ =0xFFFFE400
	adds r0, r0, r1
	str r0, [r4, #0x38]
_08111FA0:
	adds r1, r4, #0
	adds r1, #0xc
	ldr r3, _08111FFC @ =0x00000399
	movs r0, #0x2b
	str r0, [sp]
	movs r0, #8
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x24
	bl sub_080709F8
	adds r5, r4, #0
	adds r5, #0x2b
	mov r0, r8
	strb r0, [r5]
	ldr r2, _08112000 @ =gUnk_02020EE0
	ldr r0, _08112004 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _0811200C
	ldr r6, _08112008 @ =0x0000039A
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08112010
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _08112010
	.align 2, 0
_08111FF4: .4byte 0xFFFFE000
_08111FF8: .4byte 0xFFFFE400
_08111FFC: .4byte 0x00000399
_08112000: .4byte gUnk_02020EE0
_08112004: .4byte gUnk_0203AD3C
_08112008: .4byte 0x0000039A
_0811200C:
	mov r1, r8
	strb r1, [r5]
_08112010:
	movs r0, #0x20
	strh r0, [r4, #4]
	adds r0, r4, #0
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08112024
sub_08112024: @ 0x08112024
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r2, _08112048 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811204C
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08112054
	.align 2, 0
_08112048: .4byte gCurTask
_0811204C:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08112054:
	adds r5, r0, #0
	ldr r0, [r5, #0x44]
	mov r8, r0
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _08112070
	ldr r0, [r2]
	bl TaskDestroy
	b _08112294
_08112070:
	mov r2, r8
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _08112082
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _08112294
_08112082:
	ldr r2, _081120EC @ =gUnk_02020EE0
	ldr r0, _081120F0 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r6, [r7]
	cmp r0, r6
	bne _08112134
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _081120FC
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _0811215A
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x24
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _081120F4 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _081120F8 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _0811215A
	.align 2, 0
_081120EC: .4byte gUnk_02020EE0
_081120F0: .4byte gUnk_0203AD3C
_081120F4: .4byte 0xFFF7FFFF
_081120F8: .4byte 0x0400000A
_081120FC:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _0811215A
	movs r0, #0x24
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _0811212C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _08112130 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _0811215A
	.align 2, 0
_0811212C: .4byte 0xFFF7FFFF
_08112130: .4byte 0x0400000A
_08112134:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _08112150
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _08112150
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_08112150:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_0811215A:
	ldr r2, _0811219C @ =gUnk_02020EE0
	ldr r0, _081121A0 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	bne _081121A8
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _081121B0
	ldr r6, _081121A4 @ =0x0000039A
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _081121B0
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _081121B0
	.align 2, 0
_0811219C: .4byte gUnk_02020EE0
_081121A0: .4byte gUnk_0203AD3C
_081121A4: .4byte 0x0000039A
_081121A8:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_081121B0:
	mov r0, r8
	adds r0, #0x60
	ldrh r0, [r0]
	strh r0, [r7]
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _0811220C
	ldrb r0, [r3]
	cmp r0, #0
	beq _081121D6
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _081121D6
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_081121D6:
	cmp r3, #0
	beq _0811220C
	ldr r0, _08112208 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08112278
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08112278
	adds r0, r5, #0
	bl sub_0803DBC8
	b _08112294
	.align 2, 0
_08112208: .4byte gUnk_03000510
_0811220C:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _08112270 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _0811224A
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _0811224A
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _0811224A
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _0811224A
	movs r3, #4
_0811224A:
	ldr r0, _08112274 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08112278
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08112278
	adds r0, r4, #0
	bl sub_0803DBC8
	b _08112294
	.align 2, 0
_08112270: .4byte gUnk_02020EE0
_08112274: .4byte gUnk_03000510
_08112278:
	ldrh r1, [r5, #6]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0811228E
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
	b _08112294
_0811228E:
	adds r0, r5, #0
	bl sub_0806FAC8
_08112294:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_081122A0
sub_081122A0: @ 0x081122A0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, _081122DC @ =sub_081123CC
	ldr r2, _081122E0 @ =0x00003501
	ldr r1, _081122E4 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081122E8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081122F0
	.align 2, 0
_081122DC: .4byte sub_081123CC
_081122E0: .4byte 0x00003501
_081122E4: .4byte sub_0803DCCC
_081122E8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081122F0:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r6, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r6, #0x44]
	str r0, [r4, #0x38]
	str r6, [r4, #0x44]
	adds r0, r6, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r7, r4, #0
	adds r7, #0x42
	movs r1, #0
	mov r8, r1
	strh r0, [r7]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r3, _0811237C @ =0x00000399
	movs r0, #0x2a
	str r0, [sp]
	movs r0, #0xa
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x24
	bl sub_080709F8
	adds r5, r4, #0
	adds r5, #0x2b
	mov r0, r8
	strb r0, [r5]
	mov r1, sb
	cmp r1, #0
	beq _08112340
	ldrh r0, [r4, #6]
	movs r1, #1
	orrs r0, r1
	strh r0, [r4, #6]
_08112340:
	ldr r2, _08112380 @ =gUnk_02020EE0
	ldr r0, _08112384 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _0811238C
	ldrb r0, [r5]
	cmp r0, #0
	bne _08112390
	ldr r7, _08112388 @ =0x0000039A
	adds r0, r7, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08112390
	adds r0, r7, #0
	movs r1, #0
	bl sub_0803DFAC
	b _0811238E
	.align 2, 0
_0811237C: .4byte 0x00000399
_08112380: .4byte gUnk_02020EE0
_08112384: .4byte gUnk_0203AD3C
_08112388: .4byte 0x0000039A
_0811238C:
	mov r0, r8
_0811238E:
	strb r0, [r5]
_08112390:
	movs r0, #0x20
	strh r0, [r4, #4]
	ldrh r1, [r4, #6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _081123A8
	ldr r0, [r6, #0x40]
	ldr r1, _081123A4 @ =0xFFFFEC00
	b _081123AE
	.align 2, 0
_081123A4: .4byte 0xFFFFEC00
_081123A8:
	ldr r0, [r6, #0x40]
	movs r1, #0xa0
	lsls r1, r1, #5
_081123AE:
	adds r0, r0, r1
	str r0, [r4, #0x34]
	ldr r0, [r6, #0x44]
	movs r1, #0x8d
	lsls r1, r1, #8
	adds r0, r0, r1
	str r0, [r4, #0x38]
	adds r0, r4, #0
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_081123CC
sub_081123CC: @ 0x081123CC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r2, _081123F0 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081123F4
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081123FC
	.align 2, 0
_081123F0: .4byte gCurTask
_081123F4:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081123FC:
	adds r5, r0, #0
	ldr r0, [r5, #0x44]
	mov r8, r0
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _08112418
	ldr r0, [r2]
	bl TaskDestroy
	b _081126A6
_08112418:
	mov r2, r8
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _0811242A
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _081126A6
_0811242A:
	ldr r2, _08112494 @ =gUnk_02020EE0
	ldr r0, _08112498 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r7, r1, #0
	ldrh r6, [r7]
	cmp r0, r6
	bne _081124DC
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _081124A4
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _08112502
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #9
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _0811249C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _081124A0 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _08112502
	.align 2, 0
_08112494: .4byte gUnk_02020EE0
_08112498: .4byte gUnk_0203AD3C
_0811249C: .4byte 0xFFF7FFFF
_081124A0: .4byte 0x0400000A
_081124A4:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _08112502
	movs r0, #9
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _081124D4 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _081124D8 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _08112502
	.align 2, 0
_081124D4: .4byte 0xFFF7FFFF
_081124D8: .4byte 0x0400000A
_081124DC:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _081124F8
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _081124F8
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_081124F8:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_08112502:
	ldr r2, _08112544 @ =gUnk_02020EE0
	ldr r0, _08112548 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	bne _08112550
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _08112558
	ldr r6, _0811254C @ =0x0000039A
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08112558
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08112558
	.align 2, 0
_08112544: .4byte gUnk_02020EE0
_08112548: .4byte gUnk_0203AD3C
_0811254C: .4byte 0x0000039A
_08112550:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_08112558:
	mov r0, r8
	adds r0, #0x60
	ldrh r0, [r0]
	strh r0, [r7]
	mov r0, r8
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #1
	beq _08112576
	ldrh r0, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r1, r2, #0
	orrs r0, r1
	b _0811257C
_08112576:
	ldrh r1, [r5, #6]
	ldr r0, _081125CC @ =0x0000FBFF
	ands r0, r1
_0811257C:
	strh r0, [r5, #6]
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _081125D4
	ldrb r0, [r3]
	cmp r0, #0
	beq _0811259C
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _0811259C
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_0811259C:
	cmp r3, #0
	beq _081125D4
	ldr r0, _081125D0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08112640
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08112640
	adds r0, r5, #0
	bl sub_0803DBC8
	b _081126A6
	.align 2, 0
_081125CC: .4byte 0x0000FBFF
_081125D0: .4byte gUnk_03000510
_081125D4:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _08112638 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r7]
	cmp r0, r1
	beq _08112612
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _08112612
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _08112612
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _08112612
	movs r3, #4
_08112612:
	ldr r0, _0811263C @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08112640
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08112640
	adds r0, r4, #0
	bl sub_0803DBC8
	b _081126A6
	.align 2, 0
_08112638: .4byte gUnk_02020EE0
_0811263C: .4byte gUnk_03000510
_08112640:
	ldrh r1, [r5, #6]
	movs r0, #4
	orrs r1, r0
	strh r1, [r5, #6]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _081126A0
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _08112668
	mov r1, r8
	ldr r0, [r1, #0x40]
	ldr r2, _08112664 @ =0xFFFFEC00
	adds r0, r0, r2
	b _08112672
	.align 2, 0
_08112664: .4byte 0xFFFFEC00
_08112668:
	mov r6, r8
	ldr r0, [r6, #0x40]
	movs r1, #0xa0
	lsls r1, r1, #5
	adds r0, r0, r1
_08112672:
	str r0, [r5, #0x34]
	mov r2, r8
	ldr r0, [r2, #0x44]
	movs r6, #0x8d
	lsls r6, r6, #8
	adds r0, r0, r6
	str r0, [r5, #0x38]
	ldr r2, _081126B4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _081126B8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _081126BC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #7
	ands r0, r1
	movs r1, #4
	subs r1, r1, r0
	lsls r1, r1, #8
	ldr r0, [r5, #0x34]
	adds r0, r0, r1
	str r0, [r5, #0x34]
_081126A0:
	adds r0, r5, #0
	bl sub_0806FAC8
_081126A6:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081126B4: .4byte gRngVal
_081126B8: .4byte 0x00196225
_081126BC: .4byte 0x3C6EF35F

	thumb_func_start sub_081126C0
sub_081126C0: @ 0x081126C0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov sb, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #8]
	movs r0, #0x28
	str r0, [sp, #0xc]
	ldr r0, _08112700 @ =sub_08112880
	ldr r2, _08112704 @ =0x00003501
	ldr r1, _08112708 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x70
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811270C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08112714
	.align 2, 0
_08112700: .4byte sub_08112880
_08112704: .4byte 0x00003501
_08112708: .4byte sub_0803DCCC
_0811270C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08112714:
	adds r6, r0, #0
	mov r8, r6
	bl sub_0803E3B0
	movs r1, #0
	movs r0, #3
	strb r0, [r6]
	mov r2, sb
	ldr r0, [r2, #0x40]
	str r0, [r6, #0x34]
	ldr r0, [r2, #0x44]
	str r0, [r6, #0x38]
	str r2, [r6, #0x44]
	mov r0, sb
	adds r0, #0x60
	ldrh r0, [r0]
	adds r2, r6, #0
	adds r2, #0x42
	strh r0, [r2]
	strh r1, [r6, #4]
	movs r7, #0
	ldr r0, _08112820 @ =gRngVal
	mov ip, r0
	ldr r1, _08112824 @ =0x3C6EF35F
	mov sl, r1
_08112746:
	lsls r5, r7, #3
	mov r4, r8
	adds r4, #0x48
	adds r4, r4, r5
	mov r2, ip
	ldr r0, [r2]
	ldr r1, _08112828 @ =0x00196225
	adds r3, r0, #0
	muls r3, r1, r3
	add r3, sl
	str r3, [r2]
	lsrs r2, r3, #0x10
	movs r0, #0x1f
	ands r2, r0
	movs r1, #0x10
	subs r1, r1, r2
	lsls r1, r1, #8
	mov r2, sb
	ldr r0, [r2, #0x40]
	adds r0, r0, r1
	str r0, [r4]
	mov r1, r8
	adds r1, #0x4c
	adds r1, r1, r5
	ldr r0, [r2, #0x44]
	movs r2, #0x8d
	lsls r2, r2, #8
	adds r0, r0, r2
	str r0, [r1]
	lsls r0, r7, #1
	mov r1, r8
	adds r1, #0x68
	adds r1, r1, r0
	ldr r2, _08112828 @ =0x00196225
	adds r0, r3, #0
	muls r0, r2, r0
	add r0, sl
	mov r2, ip
	str r0, [r2]
	lsls r0, r0, #5
	lsrs r0, r0, #0x15
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r0, r2
	strh r0, [r1]
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #3
	bls _08112746
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _081127B4
	movs r1, #0x29
	str r1, [sp, #0xc]
_081127B4:
	adds r1, r6, #0
	adds r1, #0xc
	ldr r3, _0811282C @ =0x00000399
	ldr r2, [sp, #0xc]
	str r2, [sp]
	movs r0, #0xa
	str r0, [sp, #4]
	adds r0, r6, #0
	movs r2, #1
	bl sub_080709F8
	adds r4, r6, #0
	adds r4, #0x2b
	movs r3, #0
	strb r3, [r4]
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _081127E0
	ldrh r1, [r6, #6]
	movs r0, #1
	orrs r0, r1
	strh r0, [r6, #6]
_081127E0:
	ldr r2, _08112830 @ =gUnk_02020EE0
	ldr r0, _08112834 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811283C
	ldrb r0, [r4]
	cmp r0, #0
	bne _0811283E
	ldr r5, _08112838 @ =0x0000039A
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _0811283E
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _0811283E
	.align 2, 0
_08112820: .4byte gRngVal
_08112824: .4byte 0x3C6EF35F
_08112828: .4byte 0x00196225
_0811282C: .4byte 0x00000399
_08112830: .4byte gUnk_02020EE0
_08112834: .4byte gUnk_0203AD3C
_08112838: .4byte 0x0000039A
_0811283C:
	strb r3, [r4]
_0811283E:
	ldrh r1, [r6, #6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08112854
	mov r1, sb
	ldr r0, [r1, #0x40]
	ldr r2, _08112850 @ =0xFFFFEC00
	b _0811285C
	.align 2, 0
_08112850: .4byte 0xFFFFEC00
_08112854:
	mov r1, sb
	ldr r0, [r1, #0x40]
	movs r2, #0xa0
	lsls r2, r2, #5
_0811285C:
	adds r0, r0, r2
	str r0, [r6, #0x34]
	mov r1, sb
	ldr r0, [r1, #0x44]
	movs r2, #0x8d
	lsls r2, r2, #8
	adds r0, r0, r2
	str r0, [r6, #0x38]
	adds r0, r6, #0
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08112880
sub_08112880: @ 0x08112880
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x3c
	ldr r2, _081128A8 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081128AC
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081128B4
	.align 2, 0
_081128A8: .4byte gCurTask
_081128AC:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081128B4:
	adds r5, r0, #0
	ldr r0, [r5, #0x44]
	str r0, [sp, #0x28]
	str r5, [sp, #0x2c]
	adds r7, r0, #0
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _081128D4
	ldr r0, [r2]
	bl TaskDestroy
	b _08112D48
_081128D4:
	ldr r2, [sp, #0x28]
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _081128E4
	adds r0, r1, #0
	orrs r0, r3
	b _08112D46
_081128E4:
	ldr r2, _0811294C @ =gUnk_02020EE0
	ldr r0, _08112950 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	str r1, [sp, #0x34]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08112994
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _0811295C
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _081129BA
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #1
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _08112954 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _08112958 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _081129BA
	.align 2, 0
_0811294C: .4byte gUnk_02020EE0
_08112950: .4byte gUnk_0203AD3C
_08112954: .4byte 0xFFF7FFFF
_08112958: .4byte 0x0400000A
_0811295C:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _081129BA
	movs r0, #1
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _0811298C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _08112990 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _081129BA
	.align 2, 0
_0811298C: .4byte 0xFFF7FFFF
_08112990: .4byte 0x0400000A
_08112994:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _081129B0
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _081129B0
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_081129B0:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_081129BA:
	ldr r2, _081129FC @ =gUnk_02020EE0
	ldr r0, _08112A00 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r2, [sp, #0x34]
	ldrh r2, [r2]
	cmp r0, r2
	bne _08112A08
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _08112A10
	ldr r6, _08112A04 @ =0x0000039A
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08112A10
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08112A10
	.align 2, 0
_081129FC: .4byte gUnk_02020EE0
_08112A00: .4byte gUnk_0203AD3C
_08112A04: .4byte 0x0000039A
_08112A08:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_08112A10:
	ldr r0, [sp, #0x28]
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r1, [sp, #0x34]
	strh r0, [r1]
	ldr r0, _08112A7C @ =gUnk_03000510
	ldrb r2, [r0, #4]
	ldr r1, [sp, #0x28]
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08112A80
	ldr r2, [sp, #0x28]
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	bne _08112A80
	ldr r6, [r5, #0x34]
	ldr r7, [r5, #0x38]
	movs r0, #0
	mov r8, r0
	ldr r4, [sp, #0x2c]
	adds r4, #0x48
	ldr r1, [sp, #0x2c]
	adds r1, #0x4c
	mov sb, r1
_08112A52:
	mov r2, r8
	lsls r1, r2, #3
	adds r0, r4, r1
	ldr r0, [r0]
	str r0, [r5, #0x34]
	add r1, sb
	ldr r0, [r1]
	str r0, [r5, #0x38]
	adds r0, r5, #0
	bl sub_0803DBC8
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #3
	bls _08112A52
	str r6, [r5, #0x34]
	str r7, [r5, #0x38]
	b _08112D48
	.align 2, 0
_08112A7C: .4byte gUnk_03000510
_08112A80:
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _08112A98
	ldr r0, [r0, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _08112A9C
_08112A98:
	movs r0, #1
	strh r0, [r5, #4]
_08112A9C:
	ldrh r1, [r5, #6]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08112AB4
	adds r0, r5, #0
	adds r0, #0xc
	ldr r1, [r5, #0x14]
	movs r2, #0x80
	lsls r2, r2, #3
	orrs r1, r2
	b _08112ABE
_08112AB4:
	adds r0, r5, #0
	adds r0, #0xc
	ldr r1, [r5, #0x14]
	ldr r2, _08112B44 @ =0xFFFFFBFF
	ands r1, r2
_08112ABE:
	str r1, [r0, #8]
	mov sl, r0
	ldrh r4, [r5, #6]
	movs r0, #8
	ands r0, r4
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	movs r2, #0x28
	adds r2, r2, r5
	mov r8, r2
	cmp r3, #0
	bne _08112B62
	adds r0, r5, #0
	adds r0, #0x27
	adds r2, r5, #0
	adds r2, #0x26
	ldrb r1, [r0]
	adds r6, r0, #0
	ldrb r2, [r2]
	cmp r1, r2
	bne _08112AF0
	ldrh r0, [r5, #0x24]
	ldrh r1, [r5, #0x18]
	cmp r0, r1
	beq _08112B06
_08112AF0:
	adds r0, r5, #0
	adds r0, #0x28
	ldrb r1, [r0]
	mov r8, r0
	cmp r1, #0
	beq _08112B06
	strb r3, [r5, #1]
	strh r3, [r5, #2]
	ldr r0, _08112B48 @ =0x0000FFFB
	ands r0, r4
	strh r0, [r5, #6]
_08112B06:
	mov r0, sl
	bl sub_08155128
	adds r2, r0, #0
	cmp r2, #0
	bne _08112B4C
	ldrh r0, [r5, #6]
	movs r1, #2
	movs r3, #0
	orrs r1, r0
	strh r1, [r5, #6]
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _08112B62
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #0
	beq _08112B62
	movs r0, #0xff
	strb r0, [r6]
	ldrh r1, [r5, #6]
	ldr r0, _08112B48 @ =0x0000FFFB
	ands r0, r1
	strh r0, [r5, #6]
	strb r3, [r5, #1]
	strh r2, [r5, #2]
	mov r0, sl
	bl sub_08155128
	b _08112B62
	.align 2, 0
_08112B44: .4byte 0xFFFFFBFF
_08112B48: .4byte 0x0000FFFB
_08112B4C:
	mov r2, r8
	ldrb r1, [r2]
	ldrh r0, [r5, #2]
	adds r0, r0, r1
	strh r0, [r5, #2]
	lsrs r0, r0, #4
	strb r0, [r5, #1]
	ldrh r1, [r5, #6]
	ldr r0, _08112BFC @ =0x0000FFFD
	ands r0, r1
	strh r0, [r5, #6]
_08112B62:
	ldr r2, [r5, #0x34]
	asrs r2, r2, #8
	ldr r4, _08112C00 @ =gCurLevelInfo
	ldr r3, _08112C04 @ =gUnk_0203AD3C
	ldrb r0, [r3]
	movs r7, #0xcd
	lsls r7, r7, #3
	muls r0, r7, r0
	adds r1, r4, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	adds r6, r5, #0
	adds r6, #0x40
	movs r0, #0
	ldrsb r0, [r6, r0]
	adds r0, r0, r2
	movs r1, #0
	mov sb, r1
	strh r0, [r5, #0x1c]
	ldr r1, [r5, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r3]
	muls r0, r7, r0
	adds r3, r4, #0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r1, r1, r0
	adds r2, r5, #0
	adds r2, #0x41
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r0, r1
	strh r0, [r5, #0x1e]
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #0
	beq _08112BBC
	mov r0, sb
	strb r0, [r6]
	strb r0, [r2]
_08112BBC:
	movs r1, #0
	mov r8, r1
	ldr r2, [sp, #0x2c]
	adds r2, #0x4c
	mov sb, r2
	ldr r0, [sp, #0x2c]
	adds r0, #0x68
	str r0, [sp, #0x38]
	str r4, [sp, #0x30]
_08112BCE:
	mov r1, r8
	lsls r2, r1, #3
	mov r0, sb
	adds r6, r0, r2
	lsls r0, r1, #1
	ldr r1, [sp, #0x38]
	adds r7, r1, r0
	movs r0, #0
	ldrsh r1, [r7, r0]
	ldr r0, [r6]
	subs r0, r0, r1
	str r0, [r6]
	mov ip, r2
	cmp r0, #0
	bge _08112C58
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _08112C08
	movs r0, #0
	strh r0, [r7]
	b _08112D1E
	.align 2, 0
_08112BFC: .4byte 0x0000FFFD
_08112C00: .4byte gCurLevelInfo
_08112C04: .4byte gUnk_0203AD3C
_08112C08:
	ldr r4, [sp, #0x2c]
	adds r4, #0x48
	add r4, ip
	ldr r2, _08112CFC @ =gRngVal
	ldr r0, [r2]
	ldr r1, _08112D00 @ =0x00196225
	adds r3, r0, #0
	muls r3, r1, r3
	ldr r2, _08112D04 @ =0x3C6EF35F
	adds r3, r3, r2
	ldr r0, _08112CFC @ =gRngVal
	str r3, [r0]
	lsrs r2, r3, #0x10
	movs r0, #0x1f
	ands r2, r0
	movs r1, #0x10
	subs r1, r1, r2
	lsls r1, r1, #8
	ldr r2, [sp, #0x28]
	ldr r0, [r2, #0x40]
	adds r0, r0, r1
	str r0, [r4]
	ldr r0, [r2, #0x44]
	movs r1, #0x8d
	lsls r1, r1, #8
	adds r0, r0, r1
	str r0, [r6]
	ldr r2, _08112D00 @ =0x00196225
	adds r0, r3, #0
	muls r0, r2, r0
	ldr r1, _08112D04 @ =0x3C6EF35F
	adds r0, r0, r1
	ldr r2, _08112CFC @ =gRngVal
	str r0, [r2]
	lsls r0, r0, #5
	lsrs r0, r0, #0x15
	movs r1, #0x80
	lsls r1, r1, #3
	adds r0, r0, r1
	strh r0, [r7]
_08112C58:
	ldr r1, [sp, #0x2c]
	adds r1, #0x48
	add r1, ip
	ldr r0, [sp, #0x28]
	adds r0, #0x54
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #8
	ldr r2, [r1]
	adds r2, r2, r0
	asrs r2, r2, #8
	ldr r6, _08112D08 @ =gUnk_0203AD3C
	ldrb r0, [r6]
	movs r1, #0xcd
	lsls r1, r1, #3
	muls r0, r1, r0
	ldr r1, [sp, #0x30]
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r7, r2, r0
	strh r7, [r5, #0x1c]
	mov r1, sb
	add r1, ip
	ldr r0, [sp, #0x28]
	adds r0, #0x55
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #8
	ldr r1, [r1]
	adds r1, r1, r0
	asrs r1, r1, #8
	ldrb r0, [r6]
	movs r2, #0xcd
	lsls r2, r2, #3
	muls r0, r2, r0
	ldr r2, _08112D0C @ =gUnk_02023540
	adds r0, r0, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r5, #0x1e]
	ldrh r4, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #3
	adds r0, r1, #0
	ands r0, r4
	cmp r0, #0
	bne _08112D1E
	ldr r2, _08112D10 @ =gUnk_02020EE0
	ldrb r1, [r6]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r2, [sp, #0x34]
	ldrh r2, [r2]
	cmp r0, r2
	bne _08112D1E
	ldr r1, _08112D14 @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r7, r0
	strh r0, [r5, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r5, #0x1e]
	movs r1, #0x80
	lsls r1, r1, #7
	adds r0, r1, #0
	ands r0, r4
	cmp r0, #0
	beq _08112D18
	mov r0, sl
	bl sub_081564D8
	b _08112D1E
	.align 2, 0
_08112CFC: .4byte gRngVal
_08112D00: .4byte 0x00196225
_08112D04: .4byte 0x3C6EF35F
_08112D08: .4byte gUnk_0203AD3C
_08112D0C: .4byte gUnk_02023540
_08112D10: .4byte gUnk_02020EE0
_08112D14: .4byte gUnk_0203AD18
_08112D18:
	mov r0, sl
	bl sub_0815604C
_08112D1E:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #3
	bhi _08112D2E
	b _08112BCE
_08112D2E:
	ldr r2, [sp, #0x2c]
	ldr r0, [r2, #0x68]
	cmp r0, #0
	bne _08112D48
	ldr r0, [r2, #0x6c]
	cmp r0, #0
	bne _08112D48
	ldrh r1, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
_08112D46:
	strh r0, [r5, #6]
_08112D48:
	add sp, #0x3c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08112D58
sub_08112D58: @ 0x08112D58
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	adds r6, r0, #0
	movs r0, #0
	str r0, [sp]
	mov sl, r0
	mov r8, r6
	ldr r3, [r6, #0x70]
	ldr r0, [r6, #0x40]
	asrs r0, r0, #8
	mov ip, r0
	ldr r0, [r6, #0x44]
	asrs r5, r0, #8
	adds r0, r6, #0
	adds r0, #0x80
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r4, #0x9c
	lsls r4, r4, #1
	adds r0, r3, r4
	ldrb r0, [r0]
	cmp r1, r0
	bgt _08112E18
	ldr r1, _08112DAC @ =gRngVal
	ldr r2, [r1]
	ldr r0, _08112DB0 @ =0x00196225
	muls r0, r2, r0
	ldr r7, _08112DB4 @ =0x3C6EF35F
	adds r0, r0, r7
	str r0, [r1]
	lsrs r2, r0, #0x10
	ldr r0, _08112DB8 @ =0x00005554
	adds r4, r1, #0
	cmp r2, r0
	bhi _08112DBC
	movs r1, #0
	b _08112DC6
	.align 2, 0
_08112DAC: .4byte gRngVal
_08112DB0: .4byte 0x00196225
_08112DB4: .4byte 0x3C6EF35F
_08112DB8: .4byte 0x00005554
_08112DBC:
	ldr r0, _08112DF4 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _08112DC6
	movs r1, #1
_08112DC6:
	str r1, [sp]
	mov r0, r8
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	ldr r2, _08112DF8 @ =0x00000139
	adds r1, r3, r2
	ldrb r1, [r1]
	cmp r0, r1
	bge _08112E18
	ldr r1, [r4]
	ldr r0, _08112DFC @ =0x00196225
	muls r0, r1, r0
	ldr r3, _08112E00 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r4]
	lsrs r2, r0, #0x10
	ldr r0, _08112E04 @ =0x00005554
	cmp r2, r0
	bhi _08112E08
	movs r1, #0
	b _08112E12
	.align 2, 0
_08112DF4: .4byte 0x0000AAA9
_08112DF8: .4byte 0x00000139
_08112DFC: .4byte 0x00196225
_08112E00: .4byte 0x3C6EF35F
_08112E04: .4byte 0x00005554
_08112E08:
	ldr r0, _08112E54 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _08112E12
	movs r1, #1
_08112E12:
	movs r0, #1
	ands r1, r0
	mov sl, r1
_08112E18:
	movs r4, #0
	ldr r1, _08112E58 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	mov r7, ip
	adds r7, #4
	str r7, [sp, #0xc]
	subs r7, r5, #4
	str r7, [sp, #8]
	movs r7, #0x87
	add r7, r8
	mov sb, r7
	movs r7, #0x56
	adds r7, r7, r6
	mov r8, r7
	mov r7, sl
	lsls r7, r7, #0x18
	mov sl, r7
	mov r7, ip
	subs r7, #4
	str r7, [sp, #4]
	adds r5, #4
	str r5, [sp, #0x10]
	adds r5, r6, #0
	adds r5, #0x60
	str r5, [sp, #0x14]
	b _08112E70
	.align 2, 0
_08112E54: .4byte 0x0000AAA9
_08112E58: .4byte gUnk_020229D4
_08112E5C:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _08112E78
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_08112E70:
	cmp r0, #0
	bne _08112E5C
	orrs r2, r3
	str r2, [r1]
_08112E78:
	ldr r0, _08112EF8 @ =gUnk_020229E0
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r0
	movs r2, #0
	movs r5, #1
	strb r5, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r7, sp
	ldrh r7, [r7, #0xc]
	strh r7, [r1, #6]
	mov r0, sp
	ldrh r0, [r0, #8]
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xd3
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r4, sb
	ldrb r0, [r4]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r7, r8
	ldrb r0, [r7]
	bl CreateObject
	str r6, [r0, #0x70]
	adds r1, r0, #0
	adds r1, #0x9e
	mov r2, sp
	ldrb r2, [r2]
	strb r2, [r1]
	mov r3, sl
	cmp r3, #0
	beq _08112EE4
	bl sub_08114784
_08112EE4:
	movs r4, #0
	ldr r1, _08112EFC @ =gUnk_020229D4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r5
	cmp r0, #0
	bne _08112F00
	orrs r2, r5
	b _08112F1A
	.align 2, 0
_08112EF8: .4byte gUnk_020229E0
_08112EFC: .4byte gUnk_020229D4
_08112F00:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _08112F1C
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	cmp r0, #0
	bne _08112F00
	orrs r2, r3
_08112F1A:
	str r2, [r1]
_08112F1C:
	ldr r0, _08112FA0 @ =gUnk_020229E0
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r0
	movs r2, #0
	movs r5, #1
	strb r5, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r4, sp
	ldrh r4, [r4, #4]
	strh r4, [r1, #6]
	mov r7, sp
	ldrh r7, [r7, #8]
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xd3
	strb r0, [r1, #0xc]
	strb r5, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r4, sb
	ldrb r0, [r4]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r7, r8
	ldrb r0, [r7]
	bl CreateObject
	str r6, [r0, #0x70]
	adds r1, r0, #0
	adds r1, #0x9e
	mov r2, sp
	ldrb r2, [r2]
	strb r2, [r1]
	subs r1, #0x1b
	strb r5, [r1]
	mov r3, sl
	cmp r3, #0
	beq _08112F8C
	bl sub_08114784
_08112F8C:
	movs r4, #0
	ldr r1, _08112FA4 @ =gUnk_020229D4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r5
	cmp r0, #0
	bne _08112FA8
	orrs r2, r5
	b _08112FC2
	.align 2, 0
_08112FA0: .4byte gUnk_020229E0
_08112FA4: .4byte gUnk_020229D4
_08112FA8:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _08112FC4
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	cmp r0, #0
	bne _08112FA8
	orrs r2, r3
_08112FC2:
	str r2, [r1]
_08112FC4:
	ldr r5, _08113044 @ =gUnk_020229E0
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r5
	movs r2, #0
	movs r7, #1
	strb r7, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r4, sp
	ldrh r4, [r4, #4]
	strh r4, [r1, #6]
	mov r0, sp
	ldrh r0, [r0, #0x10]
	strh r0, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xd3
	strb r0, [r1, #0xc]
	movs r0, #2
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r4, sb
	ldrb r0, [r4]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, r8
	ldrb r0, [r2]
	bl CreateObject
	str r6, [r0, #0x70]
	adds r1, r0, #0
	adds r1, #0x9e
	mov r3, sp
	ldrb r3, [r3]
	strb r3, [r1]
	mov r4, sl
	cmp r4, #0
	beq _08113032
	bl sub_08114784
_08113032:
	movs r4, #0
	ldr r1, _08113048 @ =gUnk_020229D4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r7
	cmp r0, #0
	bne _0811304C
	orrs r2, r7
	b _08113066
	.align 2, 0
_08113044: .4byte gUnk_020229E0
_08113048: .4byte gUnk_020229D4
_0811304C:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _08113068
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	cmp r0, #0
	bne _0811304C
	orrs r2, r3
_08113066:
	str r2, [r1]
_08113068:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r5
	movs r2, #0
	movs r4, #1
	strb r4, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r5, sp
	ldrh r5, [r5, #0xc]
	strh r5, [r1, #6]
	mov r7, sp
	ldrh r7, [r7, #0x10]
	strh r7, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xd3
	strb r0, [r1, #0xc]
	movs r0, #3
	strb r0, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r5, sb
	ldrb r0, [r5]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r7, r8
	ldrb r0, [r7]
	bl CreateObject
	str r6, [r0, #0x70]
	adds r1, r0, #0
	adds r1, #0x9e
	mov r2, sp
	ldrb r2, [r2]
	strb r2, [r1]
	subs r1, #0x1b
	strb r4, [r1]
	mov r3, sl
	cmp r3, #0
	beq _081130D8
	bl sub_08114784
_081130D8:
	ldr r1, _0811314C @ =gUnk_02020EE0
	ldr r0, _08113150 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r4, [sp, #0x14]
	ldrh r4, [r4]
	cmp r0, r4
	bne _0811313C
	ldrb r0, [r6]
	cmp r0, #0
	bne _08113100
	mov r5, r8
	ldrb r0, [r5]
	cmp r0, r2
	bne _0811313C
_08113100:
	ldr r1, _08113154 @ =gUnk_08D60FA4
	ldr r4, _08113158 @ =gSongTable
	ldr r7, _0811315C @ =0x00000DBC
	adds r0, r4, r7
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08113124
	ldr r1, _08113160 @ =0x00000DB8
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811313C
_08113124:
	cmp r3, #0
	beq _08113136
	ldr r0, _08113164 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811313C
_08113136:
	ldr r0, _08113168 @ =0x000001B7
	bl m4aSongNumStart
_0811313C:
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811314C: .4byte gUnk_02020EE0
_08113150: .4byte gUnk_0203AD3C
_08113154: .4byte gUnk_08D60FA4
_08113158: .4byte gSongTable
_0811315C: .4byte 0x00000DBC
_08113160: .4byte 0x00000DB8
_08113164: .4byte gUnk_0203AD10
_08113168: .4byte 0x000001B7

	thumb_func_start sub_0811316C
sub_0811316C: @ 0x0811316C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _081131A0 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _081131A4 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081131A8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r5, r0, r1
	b _081131B0
	.align 2, 0
_081131A0: .4byte ObjectMain
_081131A4: .4byte ObjectDestroy
_081131A8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
_081131B0:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	adds r0, r5, #0
	adds r0, #0x85
	movs r4, #0
	strb r4, [r0]
	ldr r1, [r5, #8]
	movs r0, #0x40
	orrs r1, r0
	adds r0, #0xc0
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #8
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #0x12
	orrs r1, r0
	ldr r0, [r5, #0xc]
	movs r2, #1
	orrs r0, r2
	movs r3, #4
	orrs r0, r3
	str r0, [r5, #0xc]
	movs r0, #0x80
	lsls r0, r0, #9
	orrs r1, r0
	str r1, [r5, #8]
	ldr r0, [r5, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r2, #7
	orrs r0, r2
	ldr r2, _08113234 @ =0x001080A0
	orrs r0, r2
	str r0, [r5, #0x5c]
	adds r0, r5, #0
	adds r0, #0x9e
	strb r4, [r0]
	ldr r0, _08113238 @ =sub_0809F840
	str r0, [r5, #0x7c]
	movs r2, #4
	rsbs r2, r2, #0
	str r3, [sp]
	adds r0, r5, #0
	movs r3, #8
	bl sub_0803E2B0
	movs r0, #0xb8
	lsls r0, r0, #3
	strh r0, [r5, #0x24]
	adds r0, r5, #0
	bl ObjectInitSprite
	adds r0, r5, #0
	bl sub_08113C10
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08113234: .4byte 0x001080A0
_08113238: .4byte sub_0809F840

	thumb_func_start sub_0811323C
sub_0811323C: @ 0x0811323C
	push {r4, r5, lr}
	mov ip, r0
	ldr r0, [r0, #8]
	movs r1, #4
	orrs r0, r1
	mov r1, ip
	str r0, [r1, #8]
	mov r0, ip
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #0
	beq _08113262
	cmp r0, #1
	beq _0811326C
	movs r3, #0xa0
	lsls r3, r3, #3
	movs r4, #0x80
	lsls r4, r4, #3
	b _08113274
_08113262:
	movs r3, #0xa0
	lsls r3, r3, #2
	movs r4, #0x80
	lsls r4, r4, #2
	b _08113274
_0811326C:
	movs r3, #0xf0
	lsls r3, r3, #2
	movs r4, #0xc0
	lsls r4, r4, #2
_08113274:
	ldr r2, _081132C4 @ =gUnk_08D5FE14
	mov r5, ip
	movs r1, #4
	ldrsh r0, [r5, r1]
	adds r0, #0x60
	ldr r1, _081132C8 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r3, r0
	asrs r0, r0, #8
	mov r3, ip
	adds r3, #0x50
	strh r0, [r3]
	movs r1, #4
	ldrsh r0, [r5, r1]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r4, r0
	asrs r2, r0, #8
	mov r1, ip
	adds r1, #0x52
	strh r2, [r1]
	mov r0, ip
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #2
	beq _081132DA
	cmp r0, #2
	bgt _081132CC
	cmp r0, #1
	beq _081132D2
	b _081132EA
	.align 2, 0
_081132C4: .4byte gUnk_08D5FE14
_081132C8: .4byte 0x000003FF
_081132CC:
	cmp r0, #3
	beq _081132E6
	b _081132EA
_081132D2:
	ldrh r0, [r3]
	rsbs r0, r0, #0
	strh r0, [r3]
	b _081132EA
_081132DA:
	ldrh r0, [r3]
	rsbs r0, r0, #0
	strh r0, [r3]
	ldrh r0, [r1]
	rsbs r0, r0, #0
	b _081132E8
_081132E6:
	rsbs r0, r2, #0
_081132E8:
	strh r0, [r1]
_081132EA:
	mov r5, ip
	ldrh r0, [r5, #4]
	adds r0, #0x10
	strh r0, [r5, #4]
	ldr r1, _0811330C @ =0xFFFFFC00
	ands r0, r1
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08113306
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r5, #8]
_08113306:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0811330C: .4byte 0xFFFFFC00

	thumb_func_start sub_08113310
sub_08113310: @ 0x08113310
	push {r4, r5, r6, lr}
	mov ip, r0
	ldr r3, [r0, #0x70]
	ldr r0, [r0, #8]
	movs r1, #4
	orrs r0, r1
	mov r1, ip
	str r0, [r1, #8]
	ldrh r1, [r1, #4]
	ldr r0, _08113334 @ =0xFFFFFE00
	ands r0, r1
	cmp r0, #0
	beq _08113338
	mov r1, ip
	adds r1, #0xa2
	ldrh r0, [r1]
	subs r0, #0x2f
	b _08113340
	.align 2, 0
_08113334: .4byte 0xFFFFFE00
_08113338:
	mov r1, ip
	adds r1, #0xa2
	ldrh r0, [r1]
	adds r0, #0x10
_08113340:
	strh r0, [r1]
	mov r2, ip
	adds r2, #0xa0
	ldrh r0, [r1]
	ldrh r4, [r2]
	adds r0, r0, r4
	strh r0, [r2]
	ldr r0, [r3, #0x40]
	mov r1, ip
	str r0, [r1, #0x40]
	ldr r0, [r3, #0x44]
	str r0, [r1, #0x44]
	adds r1, #0xb0
	ldr r0, [r1]
	ldrb r0, [r0, #0xe]
	adds r6, r1, #0
	cmp r0, #1
	beq _08113384
	cmp r0, #1
	ble _08113370
	cmp r0, #2
	beq _081133C4
	cmp r0, #3
	beq _081133DC
_08113370:
	movs r4, #0
	ldrsh r3, [r2, r4]
	ldr r2, _08113380 @ =gUnk_08D5FE14
	mov r0, ip
	movs r4, #4
	ldrsh r1, [r0, r4]
	b _081133F2
	.align 2, 0
_08113380: .4byte gUnk_08D5FE14
_08113384:
	movs r0, #0
	ldrsh r4, [r2, r0]
	ldr r3, _081133BC @ =gUnk_08D5FE14
	mov r2, ip
	movs r0, #4
	ldrsh r1, [r2, r0]
	movs r0, #0x80
	lsls r0, r0, #1
	adds r1, r1, r0
	ldr r2, _081133C0 @ =0x000003FF
	ands r1, r2
	adds r0, r1, r0
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r4, r0
	lsls r0, r0, #8
	lsrs r5, r0, #0x10
	lsls r1, r1, #1
	adds r1, r1, r3
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r4, r0
	b _08113414
	.align 2, 0
_081133BC: .4byte gUnk_08D5FE14
_081133C0: .4byte 0x000003FF
_081133C4:
	movs r1, #0
	ldrsh r3, [r2, r1]
	ldr r2, _081133D8 @ =gUnk_08D5FE14
	mov r4, ip
	movs r0, #4
	ldrsh r1, [r4, r0]
	movs r4, #0x80
	lsls r4, r4, #2
	b _081133EC
	.align 2, 0
_081133D8: .4byte gUnk_08D5FE14
_081133DC:
	movs r0, #0
	ldrsh r3, [r2, r0]
	ldr r2, _0811344C @ =gUnk_08D5FE14
	mov r4, ip
	movs r0, #4
	ldrsh r1, [r4, r0]
	movs r4, #0xc0
	lsls r4, r4, #2
_081133EC:
	adds r1, r1, r4
	ldr r0, _08113450 @ =0x000003FF
	ands r1, r0
_081133F2:
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r1, r4
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r3, r0
	lsls r0, r0, #8
	lsrs r5, r0, #0x10
	lsls r1, r1, #1
	adds r1, r1, r2
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r3, r0
_08113414:
	lsls r0, r0, #8
	lsrs r2, r0, #0x10
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	mov r3, ip
	ldr r0, [r3, #0x40]
	adds r0, r0, r1
	str r0, [r3, #0x40]
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	ldr r0, [r3, #0x44]
	adds r0, r0, r1
	str r0, [r3, #0x44]
	ldrh r0, [r3, #4]
	adds r0, #0x10
	strh r0, [r3, #4]
	ldr r1, _08113454 @ =0xFFFFFC00
	ands r0, r1
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08113458
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r3, #8]
	b _081134E0
	.align 2, 0
_0811344C: .4byte gUnk_08D5FE14
_08113450: .4byte 0x000003FF
_08113454: .4byte 0xFFFFFC00
_08113458:
	ldr r0, [r6]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	bne _081134E0
	mov r2, ip
	adds r2, #0x9f
	ldrb r1, [r2]
	movs r0, #7
	ands r0, r1
	adds r5, r2, #0
	cmp r0, #0
	bne _081134DA
	ldr r1, _081134E8 @ =gUnk_02020EE0
	ldr r0, _081134EC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	mov r1, ip
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081134DA
	mov r4, ip
	ldrb r0, [r4]
	cmp r0, #0
	bne _0811349E
	mov r0, ip
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _081134DA
_0811349E:
	ldr r1, _081134F0 @ =gUnk_08D60FA4
	ldr r4, _081134F4 @ =gSongTable
	ldr r2, _081134F8 @ =0x00000DBC
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081134C2
	ldr r1, _081134FC @ =0x00000DB8
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081134DA
_081134C2:
	cmp r3, #0
	beq _081134D4
	ldr r0, _08113500 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081134DA
_081134D4:
	ldr r0, _08113504 @ =0x000001B7
	bl m4aSongNumStart
_081134DA:
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
_081134E0:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_081134E8: .4byte gUnk_02020EE0
_081134EC: .4byte gUnk_0203AD3C
_081134F0: .4byte gUnk_08D60FA4
_081134F4: .4byte gSongTable
_081134F8: .4byte 0x00000DBC
_081134FC: .4byte 0x00000DB8
_08113500: .4byte gUnk_0203AD10
_08113504: .4byte 0x000001B7

	thumb_func_start sub_08113508
sub_08113508: @ 0x08113508
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	adds r0, #0xdc
	ldr r0, [r0]
	cmp r0, #0
	beq _08113522
	bl sub_081138D0
	movs r0, #0
	b _08113598
_08113522:
	ldr r0, _0811354C @ =sub_081135A8
	ldr r2, _08113550 @ =0x0000FFFE
	ldr r1, _08113554 @ =sub_081147B0
	str r1, [sp]
	movs r1, #0xc
	movs r3, #0
	bl TaskCreate
	adds r4, r0, #0
	ldrh r1, [r4, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08113558
	ldrh r0, [r4, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r2, r0, r1
	b _08113560
	.align 2, 0
_0811354C: .4byte sub_081135A8
_08113550: .4byte 0x0000FFFE
_08113554: .4byte sub_081147B0
_08113558:
	ldrh r1, [r4, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r2, r1, r0
_08113560:
	movs r0, #0
	strh r0, [r2, #2]
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r1]
	strh r0, [r2]
	strh r6, [r2, #4]
	movs r0, #8
	strh r0, [r2, #6]
	str r5, [r2, #8]
	ldrh r1, [r1]
	movs r0, #5
	bl sub_0803C83C
	movs r1, #1
	strb r1, [r0]
	movs r1, #0x80
	lsls r1, r1, #3
	strh r1, [r0, #0xa]
	movs r1, #0x20
	strb r1, [r0, #2]
	ldr r1, _081135A0 @ =0x0000FFFF
	strh r1, [r0, #4]
	ldr r1, _081135A4 @ =0x00003FFF
	strh r1, [r0, #6]
	movs r1, #0xf
	strb r1, [r0, #3]
	adds r0, r4, #0
_08113598:
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_081135A0: .4byte 0x0000FFFF
_081135A4: .4byte 0x00003FFF

	thumb_func_start sub_081135A8
sub_081135A8: @ 0x081135A8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r2, _081135D0 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	mov sl, r2
	cmp r0, #0
	beq _081135D4
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081135DC
	.align 2, 0
_081135D0: .4byte gCurTask
_081135D4:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081135DC:
	adds r2, r0, #0
	ldr r4, [r2, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _08113630
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r1, [r0]
	movs r0, #5
	bl sub_0803C83C
	movs r1, #1
	strb r1, [r0]
	movs r2, #0
	movs r1, #0xff
	lsls r1, r1, #8
	strh r1, [r0, #0xa]
	movs r1, #0x80
	lsls r1, r1, #6
	strh r1, [r0, #0xc]
	movs r1, #0x20
	strb r1, [r0, #1]
	strb r2, [r0, #2]
	ldr r1, _08113624 @ =0x0000FFFF
	strh r1, [r0, #4]
	ldr r1, _08113628 @ =0x00003FFF
	strh r1, [r0, #6]
	ldr r0, _0811362C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _081136EC
	.align 2, 0
_08113624: .4byte 0x0000FFFF
_08113628: .4byte 0x00003FFF
_0811362C: .4byte gCurTask
_08113630:
	movs r5, #0
	movs r3, #0
	ldr r0, _08113694 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r5, r0
	bhs _08113684
	ldr r1, _08113698 @ =gUnk_02020EE0
	mov sb, r1
	ldrh r7, [r2]
	ldr r1, _0811369C @ =gUnk_02026D50
	mov r8, r1
	adds r6, r0, #0
	ldr r0, _081136A0 @ =gCurLevelInfo
	mov ip, r0
_0811364C:
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r3, r0
	add r0, sb
	adds r0, #0x60
	ldrh r0, [r0]
	cmp r0, r7
	bne _0811367A
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r3, r0
	add r0, ip
	ldr r1, _081136A4 @ =0x0000065E
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #1
	add r0, r8
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _0811367A
	movs r5, #1
_0811367A:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, r6
	blo _0811364C
_08113684:
	cmp r5, #0
	bne _081136A8
	mov r1, sl
	ldr r0, [r1]
	bl TaskDestroy
	b _081136EC
	.align 2, 0
_08113694: .4byte gUnk_0203AD44
_08113698: .4byte gUnk_02020EE0
_0811369C: .4byte gUnk_02026D50
_081136A0: .4byte gCurLevelInfo
_081136A4: .4byte 0x0000065E
_081136A8:
	ldrh r0, [r2, #6]
	subs r0, #1
	strh r0, [r2, #6]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _081136EC
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r1, [r0]
	movs r0, #5
	bl sub_0803C83C
	movs r1, #1
	strb r1, [r0]
	movs r1, #0xff
	lsls r1, r1, #8
	strh r1, [r0, #0xa]
	movs r1, #0x80
	lsls r1, r1, #6
	strh r1, [r0, #0xc]
	movs r1, #0x20
	strb r1, [r0, #1]
	movs r1, #0
	strb r1, [r0, #2]
	ldr r1, _081136FC @ =0x0000FFFF
	strh r1, [r0, #4]
	ldr r1, _08113700 @ =0x00003FFF
	strh r1, [r0, #6]
	movs r1, #0xf
	strb r1, [r0, #3]
	ldr r0, _08113704 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08113708 @ =sub_0811370C
	str r0, [r1, #8]
_081136EC:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081136FC: .4byte 0x0000FFFF
_08113700: .4byte 0x00003FFF
_08113704: .4byte gCurTask
_08113708: .4byte sub_0811370C

	thumb_func_start sub_0811370C
sub_0811370C: @ 0x0811370C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r2, _08113734 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	mov ip, r2
	cmp r0, #0
	beq _08113738
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08113740
	.align 2, 0
_08113734: .4byte gCurTask
_08113738:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08113740:
	adds r5, r0, #0
	ldr r4, [r5, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	bne _0811375C
	adds r0, r4, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _08113798
_0811375C:
	adds r0, r4, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _081137F0
	mov r1, ip
	ldr r0, [r1]
	bl sub_081138D0
	ldr r2, _08113790 @ =gUnk_02020EE0
	ldr r0, _08113794 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _08113844
	b _08113858
	.align 2, 0
_08113790: .4byte gUnk_02020EE0
_08113794: .4byte gUnk_0203AD3C
_08113798:
	movs r2, #0
	movs r3, #0
	ldr r0, _081137FC @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r2, r0
	bhs _081137EC
	ldr r1, _08113800 @ =gUnk_02020EE0
	mov sl, r1
	ldrh r7, [r5]
	ldr r1, _08113804 @ =gUnk_02026D50
	mov sb, r1
	adds r6, r0, #0
	ldr r0, _08113808 @ =gCurLevelInfo
	mov r8, r0
_081137B4:
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r3, r0
	add r0, sl
	adds r0, #0x60
	ldrh r0, [r0]
	cmp r0, r7
	bne _081137E2
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r3, r0
	add r0, r8
	ldr r1, _0811380C @ =0x0000065E
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #1
	add r0, sb
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _081137E2
	movs r2, #1
_081137E2:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, r6
	blo _081137B4
_081137EC:
	cmp r2, #0
	bne _08113810
_081137F0:
	mov r1, ip
	ldr r0, [r1]
	bl TaskDestroy
	b _081138B8
	.align 2, 0
_081137FC: .4byte gUnk_0203AD44
_08113800: .4byte gUnk_02020EE0
_08113804: .4byte gUnk_02026D50
_08113808: .4byte gCurLevelInfo
_0811380C: .4byte 0x0000065E
_08113810:
	ldr r0, _0811384C @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r4, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _0811386C
	ldr r2, _08113850 @ =gUnk_02020EE0
	ldr r0, _08113854 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08113858
_08113844:
	bl sub_08113A90
	b _081138B8
	.align 2, 0
_0811384C: .4byte gUnk_03000510
_08113850: .4byte gUnk_02020EE0
_08113854: .4byte gUnk_0203AD3C
_08113858:
	ldr r0, _08113868 @ =gUnk_0203AD20
	ldr r1, [r0]
	movs r2, #9
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0]
	b _081138B8
	.align 2, 0
_08113868: .4byte gUnk_0203AD20
_0811386C:
	ldr r2, _08113890 @ =gUnk_02020EE0
	ldr r0, _08113894 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08113898
	bl sub_08113A90
	b _081138A4
	.align 2, 0
_08113890: .4byte gUnk_02020EE0
_08113894: .4byte gUnk_0203AD3C
_08113898:
	ldr r0, _081138C8 @ =gUnk_0203AD20
	ldr r1, [r0]
	movs r2, #9
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0]
_081138A4:
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _081138B8
	ldr r0, _081138CC @ =gCurTask
	ldr r0, [r0]
	bl sub_081138D0
_081138B8:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081138C8: .4byte gUnk_0203AD20
_081138CC: .4byte gCurTask

	thumb_func_start sub_081138D0
sub_081138D0: @ 0x081138D0
	push {r4, lr}
	adds r4, r0, #0
	ldrh r1, [r4, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081138EA
	ldrh r0, [r4, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r2, r0, r1
	b _081138F2
_081138EA:
	ldrh r1, [r4, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r2, r1, r0
_081138F2:
	ldr r3, [r2, #8]
	ldr r1, [r4, #8]
	ldr r0, _08113930 @ =sub_0811370C
	cmp r1, r0
	bne _0811392A
	movs r0, #9
	strh r0, [r2, #6]
	adds r0, r3, #0
	adds r0, #0x60
	ldrh r1, [r0]
	movs r0, #5
	bl sub_0803C83C
	movs r1, #1
	strb r1, [r0]
	movs r1, #0x80
	lsls r1, r1, #3
	strh r1, [r0, #0xa]
	movs r1, #0x20
	strb r1, [r0, #2]
	ldr r1, _08113934 @ =0x0000FFFF
	strh r1, [r0, #4]
	ldr r1, _08113938 @ =0x00003FFF
	strh r1, [r0, #6]
	movs r1, #0xf
	strb r1, [r0, #3]
	ldr r0, _0811393C @ =sub_08113940
	str r0, [r4, #8]
_0811392A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08113930: .4byte sub_0811370C
_08113934: .4byte 0x0000FFFF
_08113938: .4byte 0x00003FFF
_0811393C: .4byte sub_08113940

	thumb_func_start sub_08113940
sub_08113940: @ 0x08113940
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r2, _08113968 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	mov sl, r2
	cmp r0, #0
	beq _0811396C
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08113974
	.align 2, 0
_08113968: .4byte gCurTask
_0811396C:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08113974:
	adds r2, r0, #0
	ldr r0, [r2, #8]
	mov ip, r0
	movs r4, #0
	movs r3, #0
	ldr r0, _081139DC @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r4, r0
	bhs _081139CC
	ldr r1, _081139E0 @ =gUnk_02020EE0
	mov sb, r1
	ldrh r6, [r2]
	ldr r1, _081139E4 @ =gUnk_02026D50
	mov r8, r1
	adds r5, r0, #0
	ldr r7, _081139E8 @ =gCurLevelInfo
_08113994:
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r3, r0
	add r0, sb
	adds r0, #0x60
	ldrh r0, [r0]
	cmp r0, r6
	bne _081139C2
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r3, r0
	adds r0, r0, r7
	ldr r1, _081139EC @ =0x0000065E
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #1
	add r0, r8
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _081139C2
	movs r4, #1
_081139C2:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, r5
	blo _08113994
_081139CC:
	cmp r4, #0
	bne _081139F0
	mov r1, sl
	ldr r0, [r1]
	bl TaskDestroy
	b _08113A7C
	.align 2, 0
_081139DC: .4byte gUnk_0203AD44
_081139E0: .4byte gUnk_02020EE0
_081139E4: .4byte gUnk_02026D50
_081139E8: .4byte gCurLevelInfo
_081139EC: .4byte 0x0000065E
_081139F0:
	ldrh r0, [r2, #6]
	subs r0, #1
	strh r0, [r2, #6]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08113A44
	mov r0, ip
	adds r0, #0x60
	ldrh r1, [r0]
	movs r0, #5
	bl sub_0803C83C
	movs r1, #1
	strb r1, [r0]
	movs r1, #0xff
	lsls r1, r1, #8
	strh r1, [r0, #0xa]
	movs r1, #0x80
	lsls r1, r1, #6
	strh r1, [r0, #0xc]
	movs r1, #0x20
	strb r1, [r0, #1]
	movs r1, #0
	strb r1, [r0, #2]
	ldr r1, _08113A38 @ =0x0000FFFF
	strh r1, [r0, #4]
	ldr r1, _08113A3C @ =0x00003FFF
	strh r1, [r0, #6]
	movs r1, #0xf
	strb r1, [r0, #3]
	ldr r0, _08113A40 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08113A7C
	.align 2, 0
_08113A38: .4byte 0x0000FFFF
_08113A3C: .4byte 0x00003FFF
_08113A40: .4byte gCurTask
_08113A44:
	ldr r2, _08113A68 @ =gUnk_02020EE0
	ldr r0, _08113A6C @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	mov r1, ip
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08113A70
	bl sub_08113A90
	b _08113A7C
	.align 2, 0
_08113A68: .4byte gUnk_02020EE0
_08113A6C: .4byte gUnk_0203AD3C
_08113A70:
	ldr r0, _08113A8C @ =gUnk_0203AD20
	ldr r1, [r0]
	movs r2, #9
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0]
_08113A7C:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08113A8C: .4byte gUnk_0203AD20

	thumb_func_start sub_08113A90
sub_08113A90: @ 0x08113A90
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r2, _08113B5C @ =gUnk_0203AD20
	ldr r0, [r2]
	movs r1, #8
	orrs r0, r1
	str r0, [r2]
	movs r6, #0
	ldr r0, _08113B60 @ =gUnk_030024F0
	mov sb, r0
	ldrb r0, [r0]
	cmp r6, r0
	bhi _08113B4E
	ldr r1, _08113B64 @ =gUnk_030031C0
	mov ip, r1
	movs r3, #0xff
	mov r8, r3
	movs r0, #0xc0
	lsls r0, r0, #8
	mov sl, r0
_08113ABE:
	lsls r4, r6, #3
	mov r3, ip
	adds r1, r4, r3
	ldrh r2, [r1, #2]
	movs r3, #0x80
	lsls r3, r3, #6
	adds r0, r3, #0
	eors r2, r0
	strh r2, [r1, #2]
	ldrh r3, [r1]
	mov r1, r8
	ands r1, r3
	movs r0, #0xa0
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	mov r0, sl
	ands r2, r0
	lsls r2, r2, #0x10
	lsrs r1, r2, #0x10
	lsrs r5, r2, #0x1e
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _08113AFC
	cmp r1, #0
	beq _08113AFC
	subs r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_08113AFC:
	mov r1, ip
	adds r2, r4, r1
	ldrh r1, [r2]
	movs r3, #0x80
	lsls r3, r3, #8
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _08113B22
	ldrh r1, [r2, #2]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	bne _08113B22
	lsls r0, r5, #0x18
	movs r3, #0x80
	lsls r3, r3, #0x11
	adds r0, r0, r3
	lsrs r5, r0, #0x18
_08113B22:
	lsls r0, r5, #0x18
	asrs r0, r0, #0x18
	movs r1, #8
	lsls r1, r0
	subs r1, r7, r1
	mov r0, r8
	ands r1, r0
	mov r0, ip
	adds r3, r4, r0
	ldrh r2, [r3]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r2
	orrs r1, r0
	strh r1, [r3]
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	cmp r6, r1
	bls _08113ABE
_08113B4E:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08113B5C: .4byte gUnk_0203AD20
_08113B60: .4byte gUnk_030024F0
_08113B64: .4byte gUnk_030031C0

	thumb_func_start sub_08113B68
sub_08113B68: @ 0x08113B68
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08113B94 @ =sub_0810F428
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0xa0
	movs r0, #0x90
	lsls r0, r0, #7
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x20
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _08113B98
	movs r0, #0
	b _08113B9C
	.align 2, 0
_08113B94: .4byte sub_0810F428
_08113B98:
	movs r0, #0x80
	lsls r0, r0, #2
_08113B9C:
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_08113BAC
sub_08113BAC: @ 0x08113BAC
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r4, [r5, #0x70]
	ldr r2, _08113BE4 @ =sub_08114708
	movs r1, #0
	bl ObjectSetFunc
	adds r2, r5, #0
	adds r2, #0x50
	movs r0, #0x80
	lsls r0, r0, #4
	strh r0, [r2]
	ldr r1, _08113BE8 @ =0x00000127
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08113BDC
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #8]
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
_08113BDC:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08113BE4: .4byte sub_08114708
_08113BE8: .4byte 0x00000127

	thumb_func_start sub_08113BEC
sub_08113BEC: @ 0x08113BEC
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08113C0C @ =sub_08111AEC
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r4, #0x52
	strh r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08113C0C: .4byte sub_08111AEC

	thumb_func_start sub_08113C10
sub_08113C10: @ 0x08113C10
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08113C30 @ =sub_0811323C
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r4, #0x52
	strh r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08113C30: .4byte sub_0811323C

	thumb_func_start sub_08113C34
sub_08113C34: @ 0x08113C34
	push {r4, r5, lr}
	lsls r1, r1, #0x18
	ldr r2, _08113C80 @ =gUnk_08D64A24
	ldr r0, _08113C84 @ =gRoomProps
	ldr r3, _08113C88 @ =0x00008F8E
	adds r0, r0, r3
	ldrh r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r3, [r0, #0x18]
	lsrs r1, r1, #0xd
	ldr r0, _08113C8C @ =0x06000540
	adds r1, r1, r0
	movs r0, #0
	movs r2, #0x80
	lsls r2, r2, #4
	adds r5, r2, #0
_08113C58:
	movs r2, #0
	adds r4, r0, #1
_08113C5C:
	ldrh r0, [r3]
	eors r0, r5
	strh r0, [r1]
	adds r3, #2
	adds r1, #2
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x1f
	bls _08113C5C
	subs r1, #0x80
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x15
	bls _08113C58
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08113C80: .4byte gUnk_08D64A24
_08113C84: .4byte gRoomProps
_08113C88: .4byte 0x00008F8E
_08113C8C: .4byte 0x06000540

	thumb_func_start sub_08113C90
sub_08113C90: @ 0x08113C90
	ldr r1, _08113C98 @ =gUnk_02022EA0
	movs r0, #2
	strb r0, [r1]
	bx lr
	.align 2, 0
_08113C98: .4byte gUnk_02022EA0

	thumb_func_start sub_08113C9C
sub_08113C9C: @ 0x08113C9C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08113CC8 @ =sub_08113CCC
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x7a
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08113CC8: .4byte sub_08113CCC

	thumb_func_start sub_08113CCC
sub_08113CCC: @ 0x08113CCC
	push {lr}
	adds r1, r0, #0
	ldrh r0, [r1, #4]
	subs r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08113CE2
	adds r0, r1, #0
	bl sub_08113CE8
_08113CE2:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08113CE8
sub_08113CE8: @ 0x08113CE8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08113D28 @ =sub_0810BFC0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r3, #0
	movs r2, #0
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #4
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r3, [r0]
	strh r2, [r4, #4]
	subs r1, #0x19
	movs r0, #0x7a
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08113D28: .4byte sub_0810BFC0

	thumb_func_start sub_08113D2C
sub_08113D2C: @ 0x08113D2C
	push {lr}
	adds r1, r0, #0
	adds r2, r1, #0
	ldrh r0, [r1, #4]
	subs r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08113D46
	adds r0, r1, #0
	bl sub_0810C9C8
	b _08113D64
_08113D46:
	adds r1, #0xe4
	ldrh r0, [r1]
	subs r0, #8
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xff
	bgt _08113D5C
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
_08113D5C:
	ldrh r1, [r1]
	adds r0, r2, #0
	adds r0, #0xf0
	strh r1, [r0]
_08113D64:
	pop {r0}
	bx r0

	thumb_func_start sub_08113D68
sub_08113D68: @ 0x08113D68
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08113DDC @ =gUnk_02020EE0
	ldr r0, _08113DE0 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08113D90
	adds r0, r4, #0
	adds r0, #0xf0
	bl sub_0814F274
_08113D90:
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #1
	bne _08113DB0
	adds r0, r4, #0
	bl sub_080700D8
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	bl sub_080335B4
	ldr r0, [r4, #8]
	ldr r1, _08113DE4 @ =0xFFFFDFFF
	ands r0, r1
	str r0, [r4, #8]
_08113DB0:
	ldr r1, [r4, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08113DC2
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r1, r0
	str r1, [r4, #8]
_08113DC2:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08113DD4
	adds r0, r4, #0
	bl sub_0810C4AC
_08113DD4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08113DDC: .4byte gUnk_02020EE0
_08113DE0: .4byte gUnk_0203AD3C
_08113DE4: .4byte 0xFFFFDFFF

	thumb_func_start sub_08113DE8
sub_08113DE8: @ 0x08113DE8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08113E10 @ =sub_0810BD28
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08113E10: .4byte sub_0810BD28

	thumb_func_start sub_08113E14
sub_08113E14: @ 0x08113E14
	push {lr}
	adds r1, r0, #0
	ldrh r0, [r1, #4]
	adds r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x15
	ble _08113E2C
	adds r0, r1, #0
	bl sub_08113E30
_08113E2C:
	pop {r0}
	bx r0

	thumb_func_start sub_08113E30
sub_08113E30: @ 0x08113E30
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _08113E6C @ =sub_0810CD98
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, _08113E70 @ =0x00000129
	adds r1, r4, r0
	movs r0, #1
	strb r0, [r1]
	movs r1, #0x94
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r1, [r0]
	subs r0, r1, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08113E74
	adds r0, r4, #0
	bl sub_0810CEB0
	b _08113E8C
	.align 2, 0
_08113E6C: .4byte sub_0810CD98
_08113E70: .4byte 0x00000129
_08113E74:
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _08113E84
	adds r0, r4, #0
	bl sub_0810D234
	b _08113E8C
_08113E84:
	ldr r0, _08113E94 @ =0x00000135
	adds r1, r5, r0
	movs r0, #2
	strb r0, [r1]
_08113E8C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08113E94: .4byte 0x00000135

	thumb_func_start sub_08113E98
sub_08113E98: @ 0x08113E98
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08113EDC @ =sub_08113EE8
	movs r1, #5
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	ldr r0, _08113EE0 @ =0x00000135
	adds r1, r4, r0
	movs r0, #1
	strb r0, [r1]
	movs r1, #0x93
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08113ED4
	ldr r0, _08113EE4 @ =0x00000129
	adds r1, r4, r0
	movs r0, #0
	strb r0, [r1]
_08113ED4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08113EDC: .4byte sub_08113EE8
_08113EE0: .4byte 0x00000135
_08113EE4: .4byte 0x00000129

	thumb_func_start sub_08113EE8
sub_08113EE8: @ 0x08113EE8
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08113EFC
	adds r0, r2, #0
	bl sub_0810D6C0
_08113EFC:
	pop {r0}
	bx r0

	thumb_func_start sub_08113F00
sub_08113F00: @ 0x08113F00
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08113F30 @ =sub_08113F38
	movs r1, #5
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _08113F34 @ =0x00000135
	adds r0, r4, r1
	strb r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08113F30: .4byte sub_08113F38
_08113F34: .4byte 0x00000135

	thumb_func_start sub_08113F38
sub_08113F38: @ 0x08113F38
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08113F4C
	adds r0, r2, #0
	bl sub_0810ABC0
_08113F4C:
	pop {r0}
	bx r0

	thumb_func_start sub_08113F50
sub_08113F50: @ 0x08113F50
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08113F80 @ =sub_08113F88
	movs r1, #1
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _08113F84 @ =0x00000135
	adds r0, r4, r1
	strb r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08113F80: .4byte sub_08113F88
_08113F84: .4byte 0x00000135

	thumb_func_start sub_08113F88
sub_08113F88: @ 0x08113F88
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08113F9C
	adds r0, r2, #0
	bl sub_08113FA0
_08113F9C:
	pop {r0}
	bx r0

	thumb_func_start sub_08113FA0
sub_08113FA0: @ 0x08113FA0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08113FD8 @ =sub_0810D0EC
	movs r1, #2
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #2
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x10
	strh r0, [r4, #4]
	ldr r1, [r4, #0x44]
	movs r0, #0xb0
	lsls r0, r0, #7
	cmp r1, r0
	ble _08113FDC
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #1
	b _08113FE2
	.align 2, 0
_08113FD8: .4byte sub_0810D0EC
_08113FDC:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #0
_08113FE2:
	strb r0, [r1]
	ldr r0, _08113FF4 @ =0x00000135
	adds r1, r4, r0
	movs r0, #2
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08113FF4: .4byte 0x00000135

	thumb_func_start sub_08113FF8
sub_08113FF8: @ 0x08113FF8
	adds r3, r0, #0
	ldr r0, _08114018 @ =sub_0810D1D0
	str r0, [r3, #0x78]
	adds r0, r3, #0
	adds r0, #0x50
	movs r2, #0
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	ldr r0, [r3, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r3, #8]
	strh r2, [r3, #4]
	bx lr
	.align 2, 0
_08114018: .4byte sub_0810D1D0

	thumb_func_start sub_0811401C
sub_0811401C: @ 0x0811401C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _0811404C @ =sub_08114054
	movs r1, #1
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _08114050 @ =0x00000135
	adds r0, r4, r1
	strb r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811404C: .4byte sub_08114054
_08114050: .4byte 0x00000135

	thumb_func_start sub_08114054
sub_08114054: @ 0x08114054
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08114068
	adds r0, r2, #0
	bl sub_0810D430
_08114068:
	pop {r0}
	bx r0

	thumb_func_start sub_0811406C
sub_0811406C: @ 0x0811406C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _0811409C @ =sub_081140A4
	movs r1, #5
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #3
	ands r0, r1
	str r0, [r4, #8]
	ldr r0, _081140A0 @ =0x00000135
	adds r1, r4, r0
	movs r0, #1
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811409C: .4byte sub_081140A4
_081140A0: .4byte 0x00000135

	thumb_func_start sub_081140A4
sub_081140A4: @ 0x081140A4
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _081140B8
	adds r0, r2, #0
	bl sub_0810D870
_081140B8:
	pop {r0}
	bx r0

	thumb_func_start sub_081140BC
sub_081140BC: @ 0x081140BC
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _081140EC @ =sub_0810DB14
	movs r1, #5
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, _081140F0 @ =0x00000135
	adds r1, r4, r0
	movs r0, #2
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_08111EF4
	movs r0, #0x18
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081140EC: .4byte sub_0810DB14
_081140F0: .4byte 0x00000135

	thumb_func_start sub_081140F4
sub_081140F4: @ 0x081140F4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08114128 @ =sub_0810DC2C
	movs r1, #5
	bl ObjectSetFunc
	ldr r1, _0811412C @ =0x00000129
	adds r0, r4, r1
	movs r2, #0
	strb r2, [r0]
	adds r1, #0xc
	adds r0, r4, r1
	strb r2, [r0]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x50
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08114128: .4byte sub_0810DC2C
_0811412C: .4byte 0x00000129

	thumb_func_start sub_08114130
sub_08114130: @ 0x08114130
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08114168 @ =sub_0810E7D0
	movs r1, #5
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x52
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x10
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r2, [r0]
	ldr r0, _0811416C @ =0x00000135
	adds r1, r4, r0
	movs r0, #2
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08114168: .4byte sub_0810E7D0
_0811416C: .4byte 0x00000135

	thumb_func_start sub_08114170
sub_08114170: @ 0x08114170
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _081141A4 @ =sub_081141AC
	movs r1, #5
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #2
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x20
	strh r0, [r4, #4]
	ldr r0, _081141A8 @ =0x00000135
	adds r1, r4, r0
	movs r0, #3
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081141A4: .4byte sub_081141AC
_081141A8: .4byte 0x00000135

	thumb_func_start sub_081141AC
sub_081141AC: @ 0x081141AC
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _081141CA
	adds r0, r2, #0
	bl sub_0810E110
_081141CA:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_081141D0
sub_081141D0: @ 0x081141D0
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _081141EE
	adds r0, r2, #0
	bl sub_0810E354
_081141EE:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_081141F4
sub_081141F4: @ 0x081141F4
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08114210
	adds r0, r4, #0
	bl sub_080700D8
	adds r0, r4, #0
	bl sub_08114218
_08114210:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08114218
sub_08114218: @ 0x08114218
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08114248 @ =sub_08114250
	movs r1, #5
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _0811424C @ =0x00000135
	adds r0, r4, r1
	strb r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08114248: .4byte sub_08114250
_0811424C: .4byte 0x00000135

	thumb_func_start sub_08114250
sub_08114250: @ 0x08114250
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08114264
	adds r0, r2, #0
	bl sub_08114268
_08114264:
	pop {r0}
	bx r0

	thumb_func_start sub_08114268
sub_08114268: @ 0x08114268
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _081142A8 @ =sub_0810EB30
	movs r1, #5
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	subs r1, #2
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x28
	strh r0, [r4, #4]
	ldr r0, _081142AC @ =0x00000135
	adds r1, r4, r0
	movs r0, #3
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0xe4
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081142A8: .4byte sub_0810EB30
_081142AC: .4byte 0x00000135

	thumb_func_start sub_081142B0
sub_081142B0: @ 0x081142B0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _081142E4 @ =sub_0810EC0C
	movs r1, #5
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, _081142E8 @ =0x00007DFF
	cmp r1, r0
	bgt _081142EC
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _081142F2
	.align 2, 0
_081142E4: .4byte sub_0810EC0C
_081142E8: .4byte 0x00007DFF
_081142EC:
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
_081142F2:
	str r0, [r4, #8]
	movs r1, #0
	movs r0, #0x40
	strh r0, [r4, #4]
	adds r0, #0xe6
	adds r2, r5, r0
	movs r0, #0xa
	strb r0, [r2]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r1, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08114310
sub_08114310: @ 0x08114310
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08114340 @ =sub_08114348
	movs r1, #5
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _08114344 @ =0x00000135
	adds r0, r4, r1
	strb r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08114340: .4byte sub_08114348
_08114344: .4byte 0x00000135

	thumb_func_start sub_08114348
sub_08114348: @ 0x08114348
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0811435C
	adds r0, r2, #0
	bl sub_08114360
_0811435C:
	pop {r0}
	bx r0

	thumb_func_start sub_08114360
sub_08114360: @ 0x08114360
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _081143A4 @ =sub_0810ECB4
	movs r1, #5
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x40
	strh r0, [r4, #4]
	adds r0, #0xe6
	adds r1, r4, r0
	movs r0, #0xa
	strb r0, [r1]
	ldr r0, _081143A8 @ =0x00000135
	adds r1, r4, r0
	movs r0, #3
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081143A4: .4byte sub_0810ECB4
_081143A8: .4byte 0x00000135

	thumb_func_start sub_081143AC
sub_081143AC: @ 0x081143AC
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _081143EC @ =sub_0810EDA0
	movs r1, #5
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r5, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0x40
	strh r0, [r4, #4]
	adds r0, r4, #0
	bl sub_08107254
	movs r2, #0x86
	lsls r2, r2, #1
	adds r1, r4, r2
	str r0, [r1]
	adds r4, #0x9e
	strb r5, [r4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_081143EC: .4byte sub_0810EDA0

	thumb_func_start sub_081143F0
sub_081143F0: @ 0x081143F0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _0811441C @ =sub_08114420
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0xe0
	strb r2, [r0]
	movs r0, #0x1c
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811441C: .4byte sub_08114420

	thumb_func_start sub_08114420
sub_08114420: @ 0x08114420
	push {lr}
	adds r2, r0, #0
	ldr r3, [r2, #0x70]
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	movs r1, #0x97
	lsls r1, r1, #1
	adds r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0811449A
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0811449A
	subs r1, #8
	adds r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #5
	bhi _08114478
	lsls r0, r0, #2
	ldr r1, _0811445C @ =_08114460
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0811445C: .4byte _08114460
_08114460: @ jump table
	.4byte _08114478 @ case 0
	.4byte _0811448C @ case 1
	.4byte _0811448C @ case 2
	.4byte _08114494 @ case 3
	.4byte _08114494 @ case 4
	.4byte _08114494 @ case 5
_08114478:
	ldr r0, _08114488 @ =0x00000129
	adds r1, r3, r0
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	bl sub_08110E60
	b _0811449A
	.align 2, 0
_08114488: .4byte 0x00000129
_0811448C:
	adds r0, r2, #0
	bl sub_08110A20
	b _0811449A
_08114494:
	adds r0, r2, #0
	bl sub_0810FB68
_0811449A:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_081144A0
sub_081144A0: @ 0x081144A0
	push {r4, lr}
	adds r2, r0, #0
	ldr r1, [r2, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _081144E6
	ldr r0, _081144D0 @ =0xFFFFFDFF
	ands r1, r0
	str r1, [r2, #8]
	adds r1, r2, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	adds r0, r2, #0
	adds r0, #0xe1
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r4, r0, #0
	cmp r1, #0
	beq _081144D4
	cmp r1, #1
	beq _081144DC
	b _081144E2
	.align 2, 0
_081144D0: .4byte 0xFFFFFDFF
_081144D4:
	adds r0, r2, #0
	bl sub_0810F4A0
	b _081144E2
_081144DC:
	adds r0, r2, #0
	bl sub_0810F77C
_081144E2:
	movs r0, #0
	strb r0, [r4]
_081144E6:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_081144EC
sub_081144EC: @ 0x081144EC
	push {lr}
	adds r2, r0, #0
	ldr r3, [r2, #0x70]
	ldr r0, [r2, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08114522
	adds r1, r2, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
	movs r0, #0x96
	lsls r0, r0, #1
	adds r1, r3, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _0811451C
	subs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	bl sub_08110C68
	b _08114522
_0811451C:
	adds r0, r2, #0
	bl sub_08114528
_08114522:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08114528
sub_08114528: @ 0x08114528
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08114550 @ =sub_08114554
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r4, #8]
	adds r4, #0xe0
	movs r0, #0
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08114550: .4byte sub_08114554

	thumb_func_start sub_08114554
sub_08114554: @ 0x08114554
	push {lr}
	adds r3, r0, #0
	ldr r0, [r3, #0x70]
	adds r1, r3, #0
	adds r1, #0x50
	movs r2, #0
	strh r2, [r1]
	adds r1, #2
	strh r2, [r1]
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #2
	bne _08114574
	adds r0, r3, #0
	bl sub_0810F9D4
_08114574:
	pop {r0}
	bx r0

	thumb_func_start sub_08114578
sub_08114578: @ 0x08114578
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08114594
	adds r0, r4, #0
	bl sub_08112D58
	adds r0, r4, #0
	bl sub_0811459C
_08114594:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0811459C
sub_0811459C: @ 0x0811459C
	adds r3, r0, #0
	ldr r0, _081145C4 @ =sub_081145C8
	str r0, [r3, #0x78]
	adds r0, r3, #0
	adds r0, #0x50
	movs r2, #0
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r3, #8]
	strh r2, [r3, #4]
	bx lr
	.align 2, 0
_081145C4: .4byte sub_081145C8

	thumb_func_start sub_081145C8
sub_081145C8: @ 0x081145C8
	push {lr}
	adds r2, r0, #0
	ldrh r0, [r2, #4]
	adds r0, #0x10
	strh r0, [r2, #4]
	ldr r1, _081145E8 @ =0xFFFFFC00
	ands r0, r1
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _081145E2
	adds r0, r2, #0
	bl sub_08110E60
_081145E2:
	pop {r0}
	bx r0
	.align 2, 0
_081145E8: .4byte 0xFFFFFC00

	thumb_func_start sub_081145EC
sub_081145EC: @ 0x081145EC
	push {lr}
	adds r3, r0, #0
	ldr r2, [r3, #0x70]
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	movs r1, #0x97
	lsls r1, r1, #1
	adds r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08114618
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08114618
	adds r0, r3, #0
	bl sub_08110E60
_08114618:
	pop {r0}
	bx r0

	thumb_func_start sub_0811461C
sub_0811461C: @ 0x0811461C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _0811463C @ =sub_08110C10
	movs r1, #0
	bl ObjectSetFunc
	ldr r1, [r4, #0x40]
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r1, r0
	ble _08114640
	ldr r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _08114648
	.align 2, 0
_0811463C: .4byte sub_08110C10
_08114640:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_08114648:
	str r0, [r4, #8]
	ldr r1, [r4, #0x44]
	ldr r0, _0811465C @ =0x000057FF
	cmp r1, r0
	bgt _08114660
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #6
	b _08114666
	.align 2, 0
_0811465C: .4byte 0x000057FF
_08114660:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #4
_08114666:
	strb r0, [r1]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_08114674
sub_08114674: @ 0x08114674
	ldr r1, _08114688 @ =sub_0811468C
	str r1, [r0, #0x78]
	adds r2, r0, #0
	adds r2, #0x83
	ldrb r1, [r2]
	adds r1, #1
	strb r1, [r2]
	movs r1, #0x16
	strh r1, [r0, #4]
	bx lr
	.align 2, 0
_08114688: .4byte sub_0811468C

	thumb_func_start sub_0811468C
sub_0811468C: @ 0x0811468C
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _081146AA
	adds r0, r2, #0
	bl sub_08110E60
_081146AA:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_081146B0
sub_081146B0: @ 0x081146B0
	push {r4, r5, lr}
	sub sp, #8
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0xb4
	ldr r3, _08114700 @ =0x00000399
	movs r0, #0x19
	str r0, [sp]
	movs r0, #0x1b
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x28
	bl sub_080708DC
	adds r1, r4, #0
	adds r1, #0x2f
	movs r0, #0
	strb r0, [r1]
	ldr r5, _08114704 @ =0x0000039A
	adds r0, r5, #0
	bl sub_0803DF24
	adds r4, #0xd3
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _081146F8
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
_081146F8:
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08114700: .4byte 0x00000399
_08114704: .4byte 0x0000039A

	thumb_func_start sub_08114708
sub_08114708: @ 0x08114708
	ldr r1, [r0, #8]
	movs r2, #4
	orrs r1, r2
	str r1, [r0, #8]
	bx lr
	.align 2, 0

	thumb_func_start sub_08114714
sub_08114714: @ 0x08114714
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08114738
	movs r0, #0xc8
	lsls r0, r0, #3
	strh r0, [r2, #0x24]
	adds r0, r2, #0
	bl sub_081115F4
_08114738:
	pop {r0}
	bx r0

	thumb_func_start sub_0811473C
sub_0811473C: @ 0x0811473C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #2
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x56
	ldr r1, _0811477C @ =gUnk_0203AD3C
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _08114770
	ldr r0, _08114780 @ =0x000001B3
	bl m4aSongNumStop
_08114770:
	adds r0, r4, #0
	bl sub_080700D8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811477C: .4byte gUnk_0203AD3C
_08114780: .4byte 0x000001B3

	thumb_func_start sub_08114784
sub_08114784: @ 0x08114784
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _081147AC @ =sub_08113310
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #0x4e
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081147AC: .4byte sub_08113310

	thumb_func_start sub_081147B0
sub_081147B0: @ 0x081147B0
	push {lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081147CA
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081147D2
_081147CA:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081147D2:
	ldr r2, [r0, #8]
	ldr r3, _081147EC @ =gUnk_0203AD20
	ldr r0, [r3]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r3]
	adds r2, #0xdc
	movs r0, #0
	str r0, [r2]
	pop {r0}
	bx r0
	.align 2, 0
_081147EC: .4byte gUnk_0203AD20

	thumb_func_start sub_081147F0
sub_081147F0: @ 0x081147F0
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r1, [r4, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811480A
	ldrh r0, [r4, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08114812
_0811480A:
	ldrh r1, [r4, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08114812:
	adds r5, r0, #0
	adds r5, #0xb4
	ldr r0, [r5]
	cmp r0, #0
	beq _08114824
	bl sub_08157190
	movs r0, #0
	str r0, [r5]
_08114824:
	adds r0, r4, #0
	bl ObjectDestroy
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start CreateDarkMindTrigger
CreateDarkMindTrigger: @ 0x08114830
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _08114864 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08114868 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xc4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811486C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r6, r0, r1
	b _08114874
	.align 2, 0
_08114864: .4byte ObjectMain
_08114868: .4byte ObjectDestroy
_0811486C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
_08114874:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r6, #0xc]
	movs r2, #1
	orrs r0, r2
	movs r1, #4
	orrs r0, r1
	str r0, [r6, #0xc]
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #0x12
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	str r0, [r6, #8]
	adds r0, r6, #0
	adds r0, #0x85
	movs r1, #0
	strb r1, [r0]
	adds r5, r6, #0
	adds r5, #0xb4
	str r1, [r5]
	subs r0, #5
	ldrh r0, [r0]
	adds r3, r6, #0
	adds r3, #0xba
	movs r4, #0
	strh r0, [r3]
	adds r0, r6, #0
	adds r0, #0xbc
	strh r1, [r0]
	adds r0, #2
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	ldr r0, [r6, #8]
	orrs r0, r2
	str r0, [r6, #8]
	ldr r1, [r6, #0x5c]
	subs r2, #9
	ands r1, r2
	movs r0, #3
	orrs r1, r0
	ldr r0, [r6, #0x68]
	ands r0, r2
	str r0, [r6, #0x68]
	ldr r0, _0811493C @ =0x001080A0
	orrs r1, r0
	str r1, [r6, #0x5c]
	subs r2, #6
	movs r0, #0xe
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r2, #0
	movs r3, #0xe
	bl sub_0803E2B0
	movs r1, #0x28
	rsbs r1, r1, #0
	movs r2, #0x1e
	rsbs r2, r2, #0
	movs r0, #0x1e
	str r0, [sp]
	adds r0, r6, #0
	movs r3, #0x28
	bl sub_0803E308
	adds r0, r6, #0
	bl ObjectInitSprite
	adds r0, r6, #0
	adds r0, #0x9e
	strb r4, [r0]
	ldr r0, _08114940 @ =sub_0811643C
	str r0, [r6, #0x7c]
	adds r0, r6, #0
	bl sub_081171BC
	str r0, [r5]
	adds r0, r6, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	bne _08114944
	adds r0, r6, #0
	bl sub_081188EC
	b _0811494A
	.align 2, 0
_0811493C: .4byte 0x001080A0
_08114940: .4byte sub_0811643C
_08114944:
	adds r0, r6, #0
	bl sub_0811889C
_0811494A:
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08114954
sub_08114954: @ 0x08114954
	push {lr}
	adds r3, r0, #0
	ldr r2, _08114980 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08114984 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08114988 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	subs r0, #5
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _0811498C
	adds r0, r3, #0
	bl sub_0811530C
	b _081149D8
	.align 2, 0
_08114980: .4byte gRngVal
_08114984: .4byte 0x00196225
_08114988: .4byte 0x3C6EF35F
_0811498C:
	subs r0, r1, #3
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _0811499E
	adds r0, r3, #0
	bl sub_081187F4
	b _081149D8
_0811499E:
	subs r0, r1, #3
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _081149B0
	adds r0, r3, #0
	bl sub_08118828
	b _081149D8
_081149B0:
	subs r0, r1, #3
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _081149C2
	adds r0, r3, #0
	bl sub_08115814
	b _081149D8
_081149C2:
	subs r0, r1, #2
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _081149D2
	adds r0, r3, #0
	bl sub_08118868
	b _081149D8
_081149D2:
	adds r0, r3, #0
	bl sub_08114BA0
_081149D8:
	pop {r0}
	bx r0

	thumb_func_start sub_081149DC
sub_081149DC: @ 0x081149DC
	push {lr}
	adds r3, r0, #0
	ldr r2, _08114A04 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08114A08 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08114A0C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #7
	ands r0, r1
	subs r0, #3
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _08114A10
	adds r0, r3, #0
	bl sub_08118678
	b _08114A46
	.align 2, 0
_08114A04: .4byte gRngVal
_08114A08: .4byte 0x00196225
_08114A0C: .4byte 0x3C6EF35F
_08114A10:
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _08114A1E
	adds r0, r3, #0
	bl sub_081186B8
	b _08114A46
_08114A1E:
	subs r0, r1, #3
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _08114A30
	adds r0, r3, #0
	bl sub_08114FF4
	b _08114A46
_08114A30:
	subs r0, r1, #1
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _08114A40
	adds r0, r3, #0
	bl sub_08114954
	b _08114A46
_08114A40:
	adds r0, r3, #0
	bl sub_08114BA0
_08114A46:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08114A4C
sub_08114A4C: @ 0x08114A4C
	push {lr}
	adds r3, r0, #0
	ldr r2, _08114A78 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08114A7C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08114A80 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r1, r0, #0x10
	movs r0, #7
	ands r1, r0
	subs r0, r1, #2
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _08114A84
	adds r0, r3, #0
	bl sub_081186B8
	b _08114AAC
	.align 2, 0
_08114A78: .4byte gRngVal
_08114A7C: .4byte 0x00196225
_08114A80: .4byte 0x3C6EF35F
_08114A84:
	subs r0, r1, #2
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _08114A96
	adds r0, r3, #0
	bl sub_08114FF4
	b _08114AAC
_08114A96:
	subs r0, r1, #3
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _08114AA6
	adds r0, r3, #0
	bl sub_08114954
	b _08114AAC
_08114AA6:
	adds r0, r3, #0
	bl sub_08118678
_08114AAC:
	pop {r0}
	bx r0

	thumb_func_start sub_08114AB0
sub_08114AB0: @ 0x08114AB0
	push {lr}
	adds r3, r0, #0
	ldr r2, _08114ADC @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08114AE0 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08114AE4 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #7
	ands r0, r1
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _08114AE8
	adds r0, r3, #0
	bl sub_08114BA0
	b _08114B22
	.align 2, 0
_08114ADC: .4byte gRngVal
_08114AE0: .4byte 0x00196225
_08114AE4: .4byte 0x3C6EF35F
_08114AE8:
	subs r0, r1, #3
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _08114AFA
	adds r0, r3, #0
	bl sub_08118678
	b _08114B22
_08114AFA:
	subs r0, r1, #2
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _08114B0C
	adds r0, r3, #0
	bl sub_08114FF4
	b _08114B22
_08114B0C:
	subs r0, r1, #2
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _08114B1C
	adds r0, r3, #0
	bl sub_08114954
	b _08114B22
_08114B1C:
	adds r0, r3, #0
	bl sub_081186B8
_08114B22:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08114B28
sub_08114B28: @ 0x08114B28
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	bl sub_0803D368
	adds r6, r0, #0
	adds r0, r5, #0
	adds r0, #0xac
	str r6, [r0]
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r6, #0xc]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _08114B94
	adds r0, r5, #0
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08114B94
	ldr r1, [r5, #0x40]
	ldr r2, [r5, #0x44]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r4, [r0]
	movs r0, #0x1a
	ldrsh r3, [r4, r0]
	movs r7, #0x1c
	ldrsh r0, [r4, r7]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	adds r0, r6, #0
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08114B94
	ldr r0, [r5, #8]
	ldr r1, _08114B9C @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	bl sub_08114BA0
_08114B94:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08114B9C: .4byte 0xFFFFFDFF

	thumb_func_start sub_08114BA0
sub_08114BA0: @ 0x08114BA0
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bgt _08114BBC
	ldr r1, [r4, #0x7c]
	ldr r0, _08114C28 @ =sub_081164E0
	cmp r1, r0
	beq _08114BBC
	adds r0, r4, #0
	bl sub_08118990
_08114BBC:
	ldr r2, _08114C2C @ =sub_08114C44
	adds r0, r4, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r3, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	ldr r2, _08114C30 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08114C34 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08114C38 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	adds r0, #0x10
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r3, [r0]
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _08114C3C @ =gUnk_08351530
	ldr r0, _08114C40 @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0xc8
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r3, #0
	ldrsh r1, [r2, r3]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _08114C22
	ldrh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	strh r0, [r4, #4]
_08114C22:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08114C28: .4byte sub_081164E0
_08114C2C: .4byte sub_08114C44
_08114C30: .4byte gRngVal
_08114C34: .4byte 0x00196225
_08114C38: .4byte 0x3C6EF35F
_08114C3C: .4byte gUnk_08351530
_08114C40: .4byte gUnk_0203AD30

	thumb_func_start sub_08114C44
sub_08114C44: @ 0x08114C44
	push {lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	ldr r1, [r3, #0x44]
	movs r0, #0xe8
	lsls r0, r0, #6
	cmp r1, r0
	ble _08114C64
	adds r1, r3, #0
	adds r1, #0x52
	movs r0, #0x80
	strh r0, [r1]
	b _08114CB2
_08114C64:
	ldr r0, _08114C74 @ =0x000025FF
	cmp r1, r0
	bgt _08114C7C
	adds r1, r3, #0
	adds r1, #0x52
	ldr r0, _08114C78 @ =0x0000FF30
	strh r0, [r1]
	b _08114CB2
	.align 2, 0
_08114C74: .4byte 0x000025FF
_08114C78: .4byte 0x0000FF30
_08114C7C:
	ldr r2, _08114CB8 @ =gUnk_08357ABC
	movs r0, #0x85
	adds r0, r0, r3
	mov ip, r0
	ldrb r0, [r0]
	lsrs r0, r0, #3
	movs r1, #3
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	adds r1, r3, #0
	adds r1, #0x52
	strh r0, [r1]
	mov r1, ip
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08114CB2
	adds r0, r3, #0
	bl sub_081149DC
_08114CB2:
	pop {r0}
	bx r0
	.align 2, 0
_08114CB8: .4byte gUnk_08357ABC

	thumb_func_start sub_08114CBC
sub_08114CBC: @ 0x08114CBC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r6, r0, #0
	mov r8, r6
	ldr r0, [r6, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r6, #8]
	ldr r2, _08114D2C @ =gUnk_08357ABC
	adds r3, r6, #0
	adds r3, #0x85
	ldrb r0, [r3]
	lsrs r0, r0, #3
	movs r1, #3
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	adds r1, r6, #0
	adds r1, #0x52
	movs r4, #0
	strh r0, [r1]
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	ldr r3, [r6, #0x40]
	ldr r0, _08114D30 @ =0xFFFFF000
	adds r1, r3, r0
	adds r0, r6, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r2, [r0, #0x40]
	cmp r1, r2
	ble _08114D62
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08114D48
	adds r0, r6, #0
	adds r0, #0x50
	ldrh r1, [r0]
	subs r1, #0x28
	strh r1, [r0]
	lsls r1, r1, #0x10
	asrs r2, r1, #0x10
	ldr r1, _08114D34 @ =0xFFFFFDC0
	adds r7, r0, #0
	cmp r2, r1
	bge _08114D3C
	ldr r0, _08114D38 @ =0x0000FDC0
	strh r0, [r7]
	b _08114E00
	.align 2, 0
_08114D2C: .4byte gUnk_08357ABC
_08114D30: .4byte 0xFFFFF000
_08114D34: .4byte 0xFFFFFDC0
_08114D38: .4byte 0x0000FDC0
_08114D3C:
	movs r0, #0x90
	lsls r0, r0, #2
	cmp r2, r0
	ble _08114E00
	strh r0, [r7]
	b _08114E00
_08114D48:
	adds r1, r6, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	adds r7, r1, #0
	cmp r0, r2
	bgt _08114DB4
	b _08114DB8
_08114D62:
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r3, r1
	cmp r0, r2
	bge _08114DC8
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08114D9C
	adds r1, r6, #0
	adds r1, #0x50
	ldrh r0, [r1]
	adds r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, _08114D98 @ =0xFFFFFDC0
	adds r7, r1, #0
	cmp r0, r2
	blt _08114DB4
	movs r1, #0x90
	lsls r1, r1, #2
	cmp r0, r1
	ble _08114E00
	strh r1, [r7]
	b _08114E00
	.align 2, 0
_08114D98: .4byte 0xFFFFFDC0
_08114D9C:
	adds r1, r6, #0
	adds r1, #0x50
	ldrh r0, [r1]
	subs r0, #0x28
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x90
	lsls r2, r2, #2
	adds r7, r1, #0
	cmp r0, r2
	ble _08114DB8
_08114DB4:
	strh r2, [r7]
	b _08114E00
_08114DB8:
	ldr r1, _08114DC4 @ =0xFFFFFDC0
	cmp r0, r1
	bge _08114E00
	strh r1, [r7]
	b _08114E00
	.align 2, 0
_08114DC4: .4byte 0xFFFFFDC0
_08114DC8:
	adds r0, r6, #0
	adds r0, #0x50
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r7, r0, #0
	cmp r1, #0
	bge _08114DE6
	adds r0, r2, #0
	adds r0, #0x12
	strh r0, [r7]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08114DF4
	b _08114DF2
_08114DE6:
	adds r0, r2, #0
	subs r0, #0x12
	strh r0, [r7]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08114DF4
_08114DF2:
	strh r4, [r7]
_08114DF4:
	movs r1, #0
	ldrsh r0, [r7, r1]
	cmp r0, #0
	bne _08114E00
	movs r0, #1
	strh r0, [r6, #4]
_08114E00:
	ldr r1, [r6, #0x40]
	ldr r0, _08114E34 @ =0x00001FFF
	cmp r1, r0
	bgt _08114E10
	adds r0, #1
	str r0, [r6, #0x40]
	movs r0, #1
	strh r0, [r6, #4]
_08114E10:
	ldr r0, [r6, #0x40]
	movs r1, #0xd8
	lsls r1, r1, #8
	cmp r0, r1
	ble _08114E20
	str r1, [r6, #0x40]
	movs r0, #1
	strh r0, [r6, #4]
_08114E20:
	ldrh r0, [r6, #4]
	subs r1, r0, #1
	strh r1, [r6, #4]
	lsls r0, r1, #0x10
	cmp r0, #0
	bne _08114E38
	adds r0, r6, #0
	bl sub_08114A4C
	b _08114FCA
	.align 2, 0
_08114E34: .4byte 0x00001FFF
_08114E38:
	movs r0, #0x1f
	ands r1, r0
	cmp r1, #0
	beq _08114E42
	b _08114FCA
_08114E42:
	ldr r2, _08114F00 @ =gRngVal
	ldr r0, [r2]
	ldr r4, _08114F04 @ =0x00196225
	muls r0, r4, r0
	ldr r3, _08114F08 @ =0x3C6EF35F
	adds r1, r0, r3
	str r1, [r2]
	lsrs r0, r1, #0x10
	movs r3, #7
	ands r0, r3
	cmp r0, #0
	bne _08114E5C
	b _08114FCA
_08114E5C:
	adds r0, r1, #0
	muls r0, r4, r0
	ldr r1, _08114F08 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r5, r0, #0x10
	ands r5, r3
	cmp r5, #0
	beq _08114F28
	ldr r2, _08114F0C @ =0xFFFFFD60
	adds r0, r6, #0
	movs r1, #0
	movs r3, #0
	bl sub_08117964
	adds r0, r6, #0
	adds r0, #0x55
	ldrb r1, [r0]
	subs r1, #2
	strb r1, [r0]
	mov r0, r8
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
	ldr r1, _08114F10 @ =gUnk_02020EE0
	ldr r0, _08114F14 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _08114EAC
	b _08114FCA
_08114EAC:
	ldrb r0, [r6]
	cmp r0, #0
	bne _08114EBE
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	beq _08114EBE
	b _08114FCA
_08114EBE:
	ldr r1, _08114F18 @ =gUnk_08D60FA4
	ldr r4, _08114F1C @ =gSongTable
	ldr r2, _08114F20 @ =0x00000D54
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08114EE4
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08114FCA
_08114EE4:
	cmp r3, #0
	beq _08114EF6
	ldr r0, _08114F24 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08114FCA
_08114EF6:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
	b _08114FCA
	.align 2, 0
_08114F00: .4byte gRngVal
_08114F04: .4byte 0x00196225
_08114F08: .4byte 0x3C6EF35F
_08114F0C: .4byte 0xFFFFFD60
_08114F10: .4byte gUnk_02020EE0
_08114F14: .4byte gUnk_0203AD3C
_08114F18: .4byte gUnk_08D60FA4
_08114F1C: .4byte gSongTable
_08114F20: .4byte 0x00000D54
_08114F24: .4byte gUnk_0203AD10
_08114F28:
	ldr r4, _08114FD8 @ =0xFFFFFD60
	str r5, [sp]
	adds r0, r6, #0
	movs r1, #0
	adds r2, r4, #0
	movs r3, #0xc
	bl sub_08117A9C
	movs r3, #0xc
	rsbs r3, r3, #0
	str r5, [sp]
	adds r0, r6, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_08117A9C
	strh r5, [r7]
	adds r0, r6, #0
	adds r0, #0x55
	ldrb r1, [r0]
	subs r1, #4
	strb r1, [r0]
	mov r0, r8
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
	ldr r1, _08114FDC @ =gUnk_02020EE0
	ldr r0, _08114FE0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08114FCA
	ldrb r0, [r6]
	cmp r0, #0
	bne _08114F8A
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08114FCA
_08114F8A:
	ldr r1, _08114FE4 @ =gUnk_08D60FA4
	ldr r4, _08114FE8 @ =gSongTable
	ldr r2, _08114FEC @ =0x00000D54
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08114FB0
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08114FCA
_08114FB0:
	cmp r3, #0
	beq _08114FC2
	ldr r0, _08114FF0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08114FCA
_08114FC2:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08114FCA:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08114FD8: .4byte 0xFFFFFD60
_08114FDC: .4byte gUnk_02020EE0
_08114FE0: .4byte gUnk_0203AD3C
_08114FE4: .4byte gUnk_08D60FA4
_08114FE8: .4byte gSongTable
_08114FEC: .4byte 0x00000D54
_08114FF0: .4byte gUnk_0203AD10

	thumb_func_start sub_08114FF4
sub_08114FF4: @ 0x08114FF4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _0811509C @ =sub_081150C0
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #8
	strb r0, [r1]
	adds r1, #1
	movs r0, #4
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_0803D46C
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	ldr r1, _081150A0 @ =gUnk_02020EE0
	ldr r0, _081150A4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08115096
	ldrb r0, [r4]
	cmp r0, #0
	bne _0811505A
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08115096
_0811505A:
	ldr r1, _081150A8 @ =gUnk_08D60FA4
	ldr r4, _081150AC @ =gSongTable
	ldr r2, _081150B0 @ =0x00000D3C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811507E
	ldr r1, _081150B4 @ =0x00000D38
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08115096
_0811507E:
	cmp r3, #0
	beq _08115090
	ldr r0, _081150B8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08115096
_08115090:
	ldr r0, _081150BC @ =0x000001A7
	bl m4aSongNumStart
_08115096:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811509C: .4byte sub_081150C0
_081150A0: .4byte gUnk_02020EE0
_081150A4: .4byte gUnk_0203AD3C
_081150A8: .4byte gUnk_08D60FA4
_081150AC: .4byte gSongTable
_081150B0: .4byte 0x00000D3C
_081150B4: .4byte 0x00000D38
_081150B8: .4byte gUnk_0203AD10
_081150BC: .4byte 0x000001A7

	thumb_func_start sub_081150C0
sub_081150C0: @ 0x081150C0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	cmp r0, #0
	beq _0811512E
	subs r0, #1
	strb r0, [r1]
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _0811517A
	adds r0, r4, #0
	bl sub_08118A60
	ldr r2, _08115104 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08115108 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0811510C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08115110
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xb0
	lsls r0, r0, #3
	b _08115118
	.align 2, 0
_08115104: .4byte gRngVal
_08115108: .4byte 0x00196225
_0811510C: .4byte 0x3C6EF35F
_08115110:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xe0
	lsls r0, r0, #2
_08115118:
	strh r0, [r1]
	adds r2, r1, #0
	ldr r1, [r4, #0x40]
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r1, r0
	ble _0811517A
	ldrh r0, [r2]
	rsbs r0, r0, #0
	strh r0, [r2]
	b _0811517A
_0811512E:
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	adds r5, r0, #0
	cmp r5, #0
	beq _08115140
	subs r0, #1
	strb r0, [r1]
	b _0811517A
_08115140:
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r3, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #0
	bge _0811515E
	adds r0, r3, #0
	adds r0, #0x60
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811516C
	b _0811516A
_0811515E:
	adds r0, r3, #0
	subs r0, #0x60
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0811516C
_0811516A:
	strh r5, [r2]
_0811516C:
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	bne _0811517A
	adds r0, r4, #0
	bl sub_08114AB0
_0811517A:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_08115180
sub_08115180: @ 0x08115180
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08115224 @ =sub_08115240
	movs r1, #1
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #5
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r2, [r0]
	adds r0, r4, #0
	bl sub_08118A60
	ldr r1, _08115228 @ =gUnk_02020EE0
	ldr r0, _0811522C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811521E
	ldrb r0, [r4]
	cmp r0, #0
	bne _081151DE
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0811521E
_081151DE:
	ldr r1, _08115230 @ =gUnk_08D60FA4
	ldr r4, _08115234 @ =gSongTable
	ldr r2, _08115238 @ =0x00000C04
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08115204
	movs r1, #0xc0
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811521E
_08115204:
	cmp r3, #0
	beq _08115216
	ldr r0, _0811523C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811521E
_08115216:
	movs r0, #0xc0
	lsls r0, r0, #1
	bl m4aSongNumStart
_0811521E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08115224: .4byte sub_08115240
_08115228: .4byte gUnk_02020EE0
_0811522C: .4byte gUnk_0203AD3C
_08115230: .4byte gUnk_08D60FA4
_08115234: .4byte gSongTable
_08115238: .4byte 0x00000C04
_0811523C: .4byte gUnk_0203AD10

	thumb_func_start sub_08115240
sub_08115240: @ 0x08115240
	push {lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	adds r2, r3, #0
	adds r2, #0x52
	ldr r1, _08115280 @ =0xFFFFFED8
	adds r0, r1, #0
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2]
	lsls r0, r0, #0x10
	movs r1, #0xfa
	lsls r1, r1, #0x18
	cmp r0, r1
	bge _0811526A
	movs r0, #0xfa
	lsls r0, r0, #8
	strh r0, [r2]
_0811526A:
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0811527C
	adds r0, r3, #0
	bl sub_08118734
_0811527C:
	pop {r0}
	bx r0
	.align 2, 0
_08115280: .4byte 0xFFFFFED8

	thumb_func_start sub_08115284
sub_08115284: @ 0x08115284
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	adds r1, r2, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #0x20
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #0xc0
	lsls r3, r3, #2
	cmp r0, r3
	ble _081152A8
	strh r3, [r1]
_081152A8:
	ldr r1, [r2, #0x44]
	movs r0, #0x88
	lsls r0, r0, #8
	cmp r1, r0
	ble _081152E2
	movs r0, #0x98
	lsls r0, r0, #8
	cmp r1, r0
	ble _081152D6
	movs r0, #0xa4
	lsls r0, r0, #8
	cmp r1, r0
	ble _081152CC
	ldrh r0, [r2, #4]
	lsls r0, r0, #1
	adds r1, r2, #0
	adds r1, #0x50
	b _081152E8
_081152CC:
	ldrh r1, [r2, #4]
	adds r0, r2, #0
	adds r0, #0x50
	strh r1, [r0]
	b _081152EA
_081152D6:
	ldrh r0, [r2, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	adds r1, r2, #0
	adds r1, #0x50
	b _081152E8
_081152E2:
	adds r1, r2, #0
	adds r1, #0x50
	movs r0, #0
_081152E8:
	strh r0, [r1]
_081152EA:
	ldr r1, [r2, #0x44]
	ldr r0, _08115308 @ =0x000027FF
	cmp r1, r0
	bgt _08115304
	adds r0, #1
	str r0, [r2, #0x44]
	adds r1, r2, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	bl sub_08114AB0
_08115304:
	pop {r0}
	bx r0
	.align 2, 0
_08115308: .4byte 0x000027FF

	thumb_func_start sub_0811530C
sub_0811530C: @ 0x0811530C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08115360 @ =sub_08115370
	movs r1, #1
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0xc
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r2, [r0]
	ldr r2, _08115364 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08115368 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0811536C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	adds r1, r4, #0
	adds r1, #0x9e
	strb r0, [r1]
	cmp r0, #1
	bhi _0811535A
	movs r0, #1
	strh r0, [r4, #4]
_0811535A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08115360: .4byte sub_08115370
_08115364: .4byte gRngVal
_08115368: .4byte 0x00196225
_0811536C: .4byte 0x3C6EF35F

	thumb_func_start sub_08115370
sub_08115370: @ 0x08115370
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	ldr r0, [r6, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r6, #8]
	adds r2, r6, #0
	adds r2, #0x54
	ldr r0, _0811542C @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r6, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x40
	strb r1, [r0]
	ldrh r0, [r6, #4]
	subs r0, #1
	strh r0, [r6, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _081153AA
	b _081154F6
_081153AA:
	ldr r1, _08115430 @ =gUnk_02020EE0
	ldr r0, _08115434 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08115416
	ldrb r0, [r6]
	cmp r0, #0
	bne _081153D6
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08115416
_081153D6:
	ldr r1, _08115438 @ =gUnk_08D60FA4
	ldr r4, _0811543C @ =gSongTable
	ldr r2, _08115440 @ =0x00000D54
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081153FC
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08115416
_081153FC:
	cmp r3, #0
	beq _0811540E
	ldr r0, _08115444 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08115416
_0811540E:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08115416:
	adds r0, r6, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #0
	blt _081154BC
	cmp r0, #1
	ble _08115448
	cmp r0, #2
	beq _08115494
	b _081154BC
	.align 2, 0
_0811542C: .4byte gUnk_0203AD40
_08115430: .4byte gUnk_02020EE0
_08115434: .4byte gUnk_0203AD3C
_08115438: .4byte gUnk_08D60FA4
_0811543C: .4byte gSongTable
_08115440: .4byte 0x00000D54
_08115444: .4byte gUnk_0203AD10
_08115448:
	ldr r2, _0811548C @ =0xFFFFFD80
	adds r0, r6, #0
	movs r1, #0
	movs r3, #0
	bl sub_08117964
	ldr r2, _08115490 @ =sub_08114CBC
	adds r0, r6, #0
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r6, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r6, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r6, #8]
	movs r0, #0x3c
	strh r0, [r6, #4]
	adds r0, r6, #0
	adds r0, #0x9f
	strb r2, [r0]
	adds r0, r6, #0
	bl sub_0803D46C
	adds r1, r6, #0
	adds r1, #0xac
	str r0, [r1]
	b _081154F6
	.align 2, 0
_0811548C: .4byte 0xFFFFFD80
_08115490: .4byte sub_08114CBC
_08115494:
	ldr r5, _081154B8 @ =0xFFFFFD80
	movs r4, #0
	str r4, [sp]
	adds r0, r6, #0
	movs r1, #0
	adds r2, r5, #0
	movs r3, #0xc
	bl sub_08117A9C
	movs r3, #0xc
	rsbs r3, r3, #0
	str r4, [sp]
	adds r0, r6, #0
	movs r1, #0
	adds r2, r5, #0
	bl sub_08117A9C
	b _081154F0
	.align 2, 0
_081154B8: .4byte 0xFFFFFD80
_081154BC:
	ldr r4, _08115500 @ =0xFFFFFD80
	movs r5, #0
	str r5, [sp]
	adds r0, r6, #0
	movs r1, #0xa0
	adds r2, r4, #0
	movs r3, #8
	bl sub_08117A9C
	movs r0, #8
	str r0, [sp]
	adds r0, r6, #0
	movs r1, #0
	adds r2, r4, #0
	movs r3, #0
	bl sub_08117A9C
	movs r1, #0xa0
	rsbs r1, r1, #0
	movs r3, #8
	rsbs r3, r3, #0
	str r5, [sp]
	adds r0, r6, #0
	adds r2, r4, #0
	bl sub_08117A9C
_081154F0:
	adds r0, r6, #0
	bl sub_0811879C
_081154F6:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08115500: .4byte 0xFFFFFD80

	thumb_func_start sub_08115504
sub_08115504: @ 0x08115504
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r7, r4, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _08115554
	adds r2, r4, #0
	adds r2, #0x54
	ldr r0, _08115550 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x40
	strb r1, [r0]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08115612
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x40
	strh r0, [r1]
	b _08115612
	.align 2, 0
_08115550: .4byte gUnk_0203AD40
_08115554:
	adds r2, r4, #0
	adds r2, #0x9f
	ldrb r1, [r2]
	movs r0, #7
	ands r0, r1
	adds r6, r2, #0
	cmp r0, #0
	bne _081155DC
	ldr r1, _08115618 @ =gUnk_02020EE0
	ldr r0, _0811561C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081155D0
	ldrb r0, [r4]
	cmp r0, #0
	bne _08115590
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _081155D0
_08115590:
	ldr r1, _08115620 @ =gUnk_08D60FA4
	ldr r5, _08115624 @ =gSongTable
	ldr r2, _08115628 @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081155B6
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081155D0
_081155B6:
	cmp r3, #0
	beq _081155C8
	ldr r0, _0811562C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081155D0
_081155C8:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_081155D0:
	ldr r2, _08115630 @ =0xFFFFFA00
	adds r0, r4, #0
	movs r1, #0
	movs r3, #1
	bl sub_08117964
_081155DC:
	adds r2, r4, #0
	adds r2, #0x55
	ldr r0, _08115634 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r7, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
	ldrb r0, [r6]
	subs r0, #1
	strb r0, [r6]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08115612
	adds r0, r4, #0
	bl sub_08114BA0
	ldrh r0, [r4, #4]
	adds r0, #0x12
	strh r0, [r4, #4]
_08115612:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08115618: .4byte gUnk_02020EE0
_0811561C: .4byte gUnk_0203AD3C
_08115620: .4byte gUnk_08D60FA4
_08115624: .4byte gSongTable
_08115628: .4byte 0x00000D54
_0811562C: .4byte gUnk_0203AD10
_08115630: .4byte 0xFFFFFA00
_08115634: .4byte gUnk_0203AD40

	thumb_func_start sub_08115638
sub_08115638: @ 0x08115638
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r7, r4, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _08115730
	adds r2, r4, #0
	adds r2, #0x54
	ldr r0, _081156D0 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x40
	strb r1, [r0]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0811567A
	b _081157EE
_0811567A:
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0x40
	strh r0, [r1]
	ldr r2, _081156D4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _081156D8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _081156DC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r0, #0x10
	ldr r0, _081156E0 @ =0x00005554
	cmp r2, r0
	bls _081156F8
	ldr r0, _081156E4 @ =0x0000AAA9
	movs r1, #2
	cmp r2, r0
	bhi _081156A2
	movs r1, #1
_081156A2:
	cmp r1, #0
	beq _081156F8
	ldr r1, [r4, #0x40]
	ldr r0, _081156E8 @ =0x00005FFF
	cmp r1, r0
	ble _081156EC
	movs r0, #0x98
	lsls r0, r0, #8
	cmp r1, r0
	bgt _081156C2
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _081156EC
_081156C2:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1]
	b _081157EE
	.align 2, 0
_081156D0: .4byte gUnk_0203AD40
_081156D4: .4byte gRngVal
_081156D8: .4byte 0x00196225
_081156DC: .4byte 0x3C6EF35F
_081156E0: .4byte 0x00005554
_081156E4: .4byte 0x0000AAA9
_081156E8: .4byte 0x00005FFF
_081156EC:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	b _081157EE
_081156F8:
	adds r0, r4, #0
	bl sub_08118A60
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	lsrs r0, r0, #1
	strb r0, [r1]
	ldr r1, [r4, #0x40]
	ldr r0, _0811571C @ =0x00007FFF
	cmp r1, r0
	bgt _08115720
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0x90
	lsls r0, r0, #2
	strh r0, [r1]
	b _081157EE
	.align 2, 0
_0811571C: .4byte 0x00007FFF
_08115720:
	adds r1, r4, #0
	adds r1, #0x50
	ldr r0, _0811572C @ =0x0000FDC0
	strh r0, [r1]
	b _081157EE
	.align 2, 0
_0811572C: .4byte 0x0000FDC0
_08115730:
	adds r2, r4, #0
	adds r2, #0x9f
	ldrb r1, [r2]
	movs r0, #7
	ands r0, r1
	adds r6, r2, #0
	cmp r0, #0
	bne _081157B8
	ldr r1, _081157F4 @ =gUnk_02020EE0
	ldr r0, _081157F8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081157AC
	ldrb r0, [r4]
	cmp r0, #0
	bne _0811576C
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _081157AC
_0811576C:
	ldr r1, _081157FC @ =gUnk_08D60FA4
	ldr r5, _08115800 @ =gSongTable
	ldr r2, _08115804 @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08115792
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081157AC
_08115792:
	cmp r3, #0
	beq _081157A4
	ldr r0, _08115808 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081157AC
_081157A4:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_081157AC:
	ldr r2, _0811580C @ =0xFFFFFC00
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_08117964
_081157B8:
	adds r2, r4, #0
	adds r2, #0x55
	ldr r0, _08115810 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r7, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
	ldrb r0, [r6]
	subs r0, #1
	strb r0, [r6]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _081157EE
	adds r0, r4, #0
	bl sub_08114BA0
	ldrh r0, [r4, #4]
	adds r0, #0x12
	strh r0, [r4, #4]
_081157EE:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081157F4: .4byte gUnk_02020EE0
_081157F8: .4byte gUnk_0203AD3C
_081157FC: .4byte gUnk_08D60FA4
_08115800: .4byte gSongTable
_08115804: .4byte 0x00000D54
_08115808: .4byte gUnk_0203AD10
_0811580C: .4byte 0xFFFFFC00
_08115810: .4byte gUnk_0203AD40

	thumb_func_start sub_08115814
sub_08115814: @ 0x08115814
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08115884 @ =sub_0811589C
	movs r1, #1
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x24
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	strb r2, [r0]
	adds r3, r4, #0
	adds r3, #0x85
	strb r2, [r3]
	adds r2, r4, #0
	adds r2, #0x80
	ldr r1, _08115888 @ =gUnk_08351530
	ldr r0, _0811588C @ =gUnk_0203AD30
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #1
	adds r1, #0xc8
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	movs r4, #0
	ldrsh r1, [r2, r4]
	asrs r0, r0, #0x11
	cmp r1, r0
	bgt _0811587C
	ldr r2, _08115890 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08115894 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08115898 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	strb r0, [r3]
_0811587C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08115884: .4byte sub_0811589C
_08115888: .4byte gUnk_08351530
_0811588C: .4byte gUnk_0203AD30
_08115890: .4byte gRngVal
_08115894: .4byte 0x00196225
_08115898: .4byte 0x3C6EF35F

	thumb_func_start sub_0811589C
sub_0811589C: @ 0x0811589C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	mov r8, r4
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #6
	bls _081158BA
	b _08115E22
_081158BA:
	lsls r0, r0, #2
	ldr r1, _081158C4 @ =_081158C8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_081158C4: .4byte _081158C8
_081158C8: @ jump table
	.4byte _081158E4 @ case 0
	.4byte _081159D0 @ case 1
	.4byte _08115A00 @ case 2
	.4byte _08115B00 @ case 3
	.4byte _08115BFC @ case 4
	.4byte _08115D08 @ case 5
	.4byte _08115E04 @ case 6
_081158E4:
	adds r2, r4, #0
	adds r2, #0x54
	ldr r0, _081159B0 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	mov r2, r8
	adds r2, #0xb4
	ldr r0, [r2]
	adds r0, #0x40
	strb r1, [r0]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	adds r6, r2, #0
	cmp r0, #0
	beq _08115912
	b _08115E22
_08115912:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #4
	strb r0, [r1]
	subs r1, #1
	movs r0, #1
	strb r0, [r1]
	ldr r1, _081159B4 @ =gUnk_02020EE0
	ldr r0, _081159B8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811598C
	ldrb r0, [r4]
	cmp r0, #0
	bne _0811594C
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0811598C
_0811594C:
	ldr r1, _081159BC @ =gUnk_08D60FA4
	ldr r5, _081159C0 @ =gSongTable
	ldr r2, _081159C4 @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08115972
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811598C
_08115972:
	cmp r3, #0
	beq _08115984
	ldr r0, _081159C8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811598C
_08115984:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_0811598C:
	ldr r2, _081159CC @ =0xFFFFFEC0
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_08117964
	movs r0, #0
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x55
	ldrb r1, [r0]
	subs r1, #4
	strb r1, [r0]
	ldr r0, [r6]
	adds r0, #0x41
	strb r1, [r0]
	b _08115E22
	.align 2, 0
_081159B0: .4byte gUnk_0203AD40
_081159B4: .4byte gUnk_02020EE0
_081159B8: .4byte gUnk_0203AD3C
_081159BC: .4byte gUnk_08D60FA4
_081159C0: .4byte gSongTable
_081159C4: .4byte 0x00000D54
_081159C8: .4byte gUnk_0203AD10
_081159CC: .4byte 0xFFFFFEC0
_081159D0:
	adds r2, r4, #0
	adds r2, #0x9f
	ldrb r0, [r2]
	subs r0, #1
	strb r0, [r2]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _081159E2
	b _08115E22
_081159E2:
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #2
	strb r0, [r1]
	subs r1, #0x19
	movs r0, #0xa0
	lsls r0, r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	adds r1, r4, #0
	adds r1, #0x50
	strh r0, [r1]
	movs r0, #8
	strb r0, [r2]
	b _08115E22
_08115A00:
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r6, r1, #0
	cmp r2, #0
	beq _08115A16
	b _08115E22
_08115A16:
	adds r0, r4, #0
	adds r0, #0x50
	strh r2, [r0]
	movs r1, #1
	strb r1, [r6]
	movs r2, #4
	ldrsh r1, [r4, r2]
	adds r7, r0, #0
	cmp r1, #0
	bne _08115AB6
	ldr r1, _08115AE0 @ =gUnk_02020EE0
	ldr r0, _08115AE4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08115A96
	ldrb r0, [r4]
	cmp r0, #0
	bne _08115A56
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08115A96
_08115A56:
	ldr r1, _08115AE8 @ =gUnk_08D60FA4
	ldr r5, _08115AEC @ =gSongTable
	ldr r2, _08115AF0 @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08115A7C
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08115A96
_08115A7C:
	cmp r3, #0
	beq _08115A8E
	ldr r0, _08115AF4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08115A96
_08115A8E:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08115A96:
	ldr r2, _08115AF8 @ =0xFFFFFE70
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_08117964
	adds r0, r4, #0
	adds r0, #0x55
	ldrb r1, [r0]
	subs r1, #4
	strb r1, [r0]
	mov r0, r8
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
_08115AB6:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	bgt _08115AC6
	b _08115E22
_08115AC6:
	adds r1, r4, #0
	adds r1, #0x85
	ldr r0, _08115AFC @ =0xFFFFFD80
	ldrb r1, [r1]
	lsls r0, r1
	strh r0, [r7]
	movs r0, #8
	strb r0, [r6]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #3
	b _08115CD8
	.align 2, 0
_08115AE0: .4byte gUnk_02020EE0
_08115AE4: .4byte gUnk_0203AD3C
_08115AE8: .4byte gUnk_08D60FA4
_08115AEC: .4byte gSongTable
_08115AF0: .4byte 0x00000D54
_08115AF4: .4byte gUnk_0203AD10
_08115AF8: .4byte 0xFFFFFE70
_08115AFC: .4byte 0xFFFFFD80
_08115B00:
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r6, r1, #0
	cmp r2, #0
	beq _08115B16
	b _08115E22
_08115B16:
	adds r0, r4, #0
	adds r0, #0x50
	strh r2, [r0]
	movs r1, #1
	strb r1, [r6]
	movs r2, #4
	ldrsh r1, [r4, r2]
	adds r7, r0, #0
	cmp r1, #0
	bne _08115BB6
	ldr r1, _08115BE0 @ =gUnk_02020EE0
	ldr r0, _08115BE4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08115B96
	ldrb r0, [r4]
	cmp r0, #0
	bne _08115B56
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08115B96
_08115B56:
	ldr r1, _08115BE8 @ =gUnk_08D60FA4
	ldr r5, _08115BEC @ =gSongTable
	ldr r2, _08115BF0 @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08115B7C
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08115B96
_08115B7C:
	cmp r3, #0
	beq _08115B8E
	ldr r0, _08115BF4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08115B96
_08115B8E:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08115B96:
	ldr r2, _08115BF8 @ =0xFFFFFDE8
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_08117964
	adds r0, r4, #0
	adds r0, #0x55
	ldrb r1, [r0]
	subs r1, #4
	strb r1, [r0]
	mov r0, r8
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
_08115BB6:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	bgt _08115BC6
	b _08115E22
_08115BC6:
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #0x80
	lsls r0, r0, #3
	ldrb r1, [r1]
	lsls r0, r1
	strh r0, [r7]
	movs r0, #8
	strb r0, [r6]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #4
	b _08115CD8
	.align 2, 0
_08115BE0: .4byte gUnk_02020EE0
_08115BE4: .4byte gUnk_0203AD3C
_08115BE8: .4byte gUnk_08D60FA4
_08115BEC: .4byte gSongTable
_08115BF0: .4byte 0x00000D54
_08115BF4: .4byte gUnk_0203AD10
_08115BF8: .4byte 0xFFFFFDE8
_08115BFC:
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r6, r1, #0
	cmp r2, #0
	beq _08115C12
	b _08115E22
_08115C12:
	adds r0, r4, #0
	adds r0, #0x50
	strh r2, [r0]
	movs r1, #1
	strb r1, [r6]
	movs r2, #4
	ldrsh r1, [r4, r2]
	adds r7, r0, #0
	cmp r1, #0
	bne _08115CB2
	ldr r1, _08115CE8 @ =gUnk_02020EE0
	ldr r0, _08115CEC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08115C92
	ldrb r0, [r4]
	cmp r0, #0
	bne _08115C52
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08115C92
_08115C52:
	ldr r1, _08115CF0 @ =gUnk_08D60FA4
	ldr r5, _08115CF4 @ =gSongTable
	ldr r2, _08115CF8 @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08115C78
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08115C92
_08115C78:
	cmp r3, #0
	beq _08115C8A
	ldr r0, _08115CFC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08115C92
_08115C8A:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08115C92:
	ldr r2, _08115D00 @ =0xFFFFFCC0
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_08117964
	adds r0, r4, #0
	adds r0, #0x55
	ldrb r1, [r0]
	subs r1, #4
	strb r1, [r0]
	mov r0, r8
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
_08115CB2:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	bgt _08115CC2
	b _08115E22
_08115CC2:
	adds r1, r4, #0
	adds r1, #0x85
	ldr r0, _08115D04 @ =0xFFFFFA80
	ldrb r1, [r1]
	lsls r0, r1
	strh r0, [r7]
	movs r0, #8
	strb r0, [r6]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #5
_08115CD8:
	strb r0, [r1]
	movs r0, #0
	strh r0, [r4, #4]
	adds r0, r4, #0
	bl sub_08118A60
	b _08115E22
	.align 2, 0
_08115CE8: .4byte gUnk_02020EE0
_08115CEC: .4byte gUnk_0203AD3C
_08115CF0: .4byte gUnk_08D60FA4
_08115CF4: .4byte gSongTable
_08115CF8: .4byte 0x00000D54
_08115CFC: .4byte gUnk_0203AD10
_08115D00: .4byte 0xFFFFFCC0
_08115D04: .4byte 0xFFFFFA80
_08115D08:
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r6, r1, #0
	cmp r2, #0
	beq _08115D1E
	b _08115E22
_08115D1E:
	adds r0, r4, #0
	adds r0, #0x50
	strh r2, [r0]
	movs r1, #1
	strb r1, [r6]
	movs r2, #4
	ldrsh r1, [r4, r2]
	adds r7, r0, #0
	cmp r1, #0
	bne _08115DBE
	ldr r1, _08115DE8 @ =gUnk_02020EE0
	ldr r0, _08115DEC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08115D9E
	ldrb r0, [r4]
	cmp r0, #0
	bne _08115D5E
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08115D9E
_08115D5E:
	ldr r1, _08115DF0 @ =gUnk_08D60FA4
	ldr r5, _08115DF4 @ =gSongTable
	ldr r2, _08115DF8 @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08115D84
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08115D9E
_08115D84:
	cmp r3, #0
	beq _08115D96
	ldr r0, _08115DFC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08115D9E
_08115D96:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08115D9E:
	ldr r2, _08115E00 @ =0xFFFFF9C0
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_08117964
	adds r0, r4, #0
	adds r0, #0x55
	ldrb r1, [r0]
	subs r1, #4
	strb r1, [r0]
	mov r0, r8
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x41
	strb r1, [r0]
_08115DBE:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	ble _08115E22
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #0x80
	lsls r0, r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	strh r0, [r7]
	movs r0, #0x10
	strb r0, [r6]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #6
	strb r0, [r1]
	b _08115E22
	.align 2, 0
_08115DE8: .4byte gUnk_02020EE0
_08115DEC: .4byte gUnk_0203AD3C
_08115DF0: .4byte gUnk_08D60FA4
_08115DF4: .4byte gSongTable
_08115DF8: .4byte 0x00000D54
_08115DFC: .4byte gUnk_0203AD10
_08115E00: .4byte 0xFFFFF9C0
_08115E04:
	adds r1, r4, #0
	adds r1, #0x9f
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	bne _08115E22
	adds r0, r4, #0
	adds r0, #0x50
	strh r1, [r0]
	adds r0, r4, #0
	bl sub_08114BA0
_08115E22:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08115E2C
sub_08115E2C: @ 0x08115E2C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r3, r4, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r0, [r0]
	cmp r0, #9
	bls _08115E46
	b _08116436
_08115E46:
	lsls r0, r0, #2
	ldr r1, _08115E50 @ =_08115E54
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08115E50: .4byte _08115E54
_08115E54: @ jump table
	.4byte _08115E7C @ case 0
	.4byte _08115EB0 @ case 1
	.4byte _08115F60 @ case 2
	.4byte _0811600C @ case 3
	.4byte _081160B8 @ case 4
	.4byte _08116160 @ case 5
	.4byte _0811620C @ case 6
	.4byte _081162B8 @ case 7
	.4byte _08116368 @ case 8
	.4byte _0811641C @ case 9
_08115E7C:
	adds r2, r4, #0
	adds r2, #0x54
	ldr r0, _08115EAC @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r3, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x40
	strb r1, [r0]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08115EA8
	b _08116436
_08115EA8:
	movs r0, #8
	b _08116376
	.align 2, 0
_08115EAC: .4byte gUnk_0203AD40
_08115EB0:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08115EBE
	b _08116436
_08115EBE:
	movs r0, #4
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _08115F40 @ =gUnk_02020EE0
	ldr r0, _08115F44 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08115F38
	ldrb r0, [r4]
	cmp r0, #0
	bne _08115EF8
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08115F38
_08115EF8:
	ldr r1, _08115F48 @ =gUnk_08D60FA4
	ldr r5, _08115F4C @ =gSongTable
	ldr r2, _08115F50 @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08115F1E
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08115F38
_08115F1E:
	cmp r3, #0
	beq _08115F30
	ldr r0, _08115F54 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08115F38
_08115F30:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08115F38:
	ldr r1, _08115F58 @ =0x000001FD
	ldr r2, _08115F5C @ =0xFFFFFE03
	b _081163F2
	.align 2, 0
_08115F40: .4byte gUnk_02020EE0
_08115F44: .4byte gUnk_0203AD3C
_08115F48: .4byte gUnk_08D60FA4
_08115F4C: .4byte gSongTable
_08115F50: .4byte 0x00000D54
_08115F54: .4byte gUnk_0203AD10
_08115F58: .4byte 0x000001FD
_08115F5C: .4byte 0xFFFFFE03
_08115F60:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08115F6E
	b _08116436
_08115F6E:
	movs r0, #4
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _08115FF0 @ =gUnk_02020EE0
	ldr r0, _08115FF4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08115FE8
	ldrb r0, [r4]
	cmp r0, #0
	bne _08115FA8
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08115FE8
_08115FA8:
	ldr r1, _08115FF8 @ =gUnk_08D60FA4
	ldr r5, _08115FFC @ =gSongTable
	ldr r2, _08116000 @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08115FCE
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08115FE8
_08115FCE:
	cmp r3, #0
	beq _08115FE0
	ldr r0, _08116004 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08115FE8
_08115FE0:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08115FE8:
	ldr r2, _08116008 @ =0xFFFFFD30
	adds r0, r4, #0
	movs r1, #0
	b _081163F4
	.align 2, 0
_08115FF0: .4byte gUnk_02020EE0
_08115FF4: .4byte gUnk_0203AD3C
_08115FF8: .4byte gUnk_08D60FA4
_08115FFC: .4byte gSongTable
_08116000: .4byte 0x00000D54
_08116004: .4byte gUnk_0203AD10
_08116008: .4byte 0xFFFFFD30
_0811600C:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0811601A
	b _08116436
_0811601A:
	movs r0, #4
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _0811609C @ =gUnk_02020EE0
	ldr r0, _081160A0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08116094
	ldrb r0, [r4]
	cmp r0, #0
	bne _08116054
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08116094
_08116054:
	ldr r1, _081160A4 @ =gUnk_08D60FA4
	ldr r5, _081160A8 @ =gSongTable
	ldr r2, _081160AC @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811607A
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08116094
_0811607A:
	cmp r3, #0
	beq _0811608C
	ldr r0, _081160B0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08116094
_0811608C:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08116094:
	ldr r2, _081160B4 @ =0xFFFFFE03
	adds r0, r4, #0
	adds r1, r2, #0
	b _081163F4
	.align 2, 0
_0811609C: .4byte gUnk_02020EE0
_081160A0: .4byte gUnk_0203AD3C
_081160A4: .4byte gUnk_08D60FA4
_081160A8: .4byte gSongTable
_081160AC: .4byte 0x00000D54
_081160B0: .4byte gUnk_0203AD10
_081160B4: .4byte 0xFFFFFE03
_081160B8:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _081160C6
	b _08116436
_081160C6:
	movs r0, #0x10
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _08116144 @ =gUnk_02020EE0
	ldr r0, _08116148 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08116140
	ldrb r0, [r4]
	cmp r0, #0
	bne _08116100
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08116140
_08116100:
	ldr r1, _0811614C @ =gUnk_08D60FA4
	ldr r5, _08116150 @ =gSongTable
	ldr r2, _08116154 @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08116126
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08116140
_08116126:
	cmp r3, #0
	beq _08116138
	ldr r0, _08116158 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08116140
_08116138:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08116140:
	ldr r1, _0811615C @ =0xFFFFFD93
	b _081163F0
	.align 2, 0
_08116144: .4byte gUnk_02020EE0
_08116148: .4byte gUnk_0203AD3C
_0811614C: .4byte gUnk_08D60FA4
_08116150: .4byte gSongTable
_08116154: .4byte 0x00000D54
_08116158: .4byte gUnk_0203AD10
_0811615C: .4byte 0xFFFFFD93
_08116160:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0811616E
	b _08116436
_0811616E:
	movs r0, #4
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _081161F0 @ =gUnk_02020EE0
	ldr r0, _081161F4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081161E8
	ldrb r0, [r4]
	cmp r0, #0
	bne _081161A8
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _081161E8
_081161A8:
	ldr r1, _081161F8 @ =gUnk_08D60FA4
	ldr r5, _081161FC @ =gSongTable
	ldr r2, _08116200 @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081161CE
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081161E8
_081161CE:
	cmp r3, #0
	beq _081161E0
	ldr r0, _08116204 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081161E8
_081161E0:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_081161E8:
	ldr r2, _08116208 @ =0xFFFFFE03
	adds r0, r4, #0
	adds r1, r2, #0
	b _081163F4
	.align 2, 0
_081161F0: .4byte gUnk_02020EE0
_081161F4: .4byte gUnk_0203AD3C
_081161F8: .4byte gUnk_08D60FA4
_081161FC: .4byte gSongTable
_08116200: .4byte 0x00000D54
_08116204: .4byte gUnk_0203AD10
_08116208: .4byte 0xFFFFFE03
_0811620C:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0811621A
	b _08116436
_0811621A:
	movs r0, #4
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _0811629C @ =gUnk_02020EE0
	ldr r0, _081162A0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08116294
	ldrb r0, [r4]
	cmp r0, #0
	bne _08116254
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08116294
_08116254:
	ldr r1, _081162A4 @ =gUnk_08D60FA4
	ldr r5, _081162A8 @ =gSongTable
	ldr r2, _081162AC @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811627A
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08116294
_0811627A:
	cmp r3, #0
	beq _0811628C
	ldr r0, _081162B0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08116294
_0811628C:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08116294:
	ldr r2, _081162B4 @ =0xFFFFFD30
	adds r0, r4, #0
	movs r1, #0
	b _081163F4
	.align 2, 0
_0811629C: .4byte gUnk_02020EE0
_081162A0: .4byte gUnk_0203AD3C
_081162A4: .4byte gUnk_08D60FA4
_081162A8: .4byte gSongTable
_081162AC: .4byte 0x00000D54
_081162B0: .4byte gUnk_0203AD10
_081162B4: .4byte 0xFFFFFD30
_081162B8:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _081162C6
	b _08116436
_081162C6:
	movs r0, #4
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _08116348 @ =gUnk_02020EE0
	ldr r0, _0811634C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08116340
	ldrb r0, [r4]
	cmp r0, #0
	bne _08116300
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08116340
_08116300:
	ldr r1, _08116350 @ =gUnk_08D60FA4
	ldr r5, _08116354 @ =gSongTable
	ldr r2, _08116358 @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08116326
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08116340
_08116326:
	cmp r3, #0
	beq _08116338
	ldr r0, _0811635C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08116340
_08116338:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_08116340:
	ldr r1, _08116360 @ =0x000001FD
	ldr r2, _08116364 @ =0xFFFFFE03
	b _081163F2
	.align 2, 0
_08116348: .4byte gUnk_02020EE0
_0811634C: .4byte gUnk_0203AD3C
_08116350: .4byte gUnk_08D60FA4
_08116354: .4byte gSongTable
_08116358: .4byte 0x00000D54
_0811635C: .4byte gUnk_0203AD10
_08116360: .4byte 0x000001FD
_08116364: .4byte 0xFFFFFE03
_08116368:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08116436
	movs r0, #4
_08116376:
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _081163FC @ =gUnk_02020EE0
	ldr r0, _08116400 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081163EE
	ldrb r0, [r4]
	cmp r0, #0
	bne _081163AE
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _081163EE
_081163AE:
	ldr r1, _08116404 @ =gUnk_08D60FA4
	ldr r5, _08116408 @ =gSongTable
	ldr r2, _0811640C @ =0x00000D54
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081163D4
	movs r1, #0xd5
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081163EE
_081163D4:
	cmp r3, #0
	beq _081163E6
	ldr r0, _08116410 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081163EE
_081163E6:
	movs r0, #0xd5
	lsls r0, r0, #1
	bl m4aSongNumStart
_081163EE:
	ldr r1, _08116414 @ =0x0000026D
_081163F0:
	ldr r2, _08116418 @ =0xFFFFFE98
_081163F2:
	adds r0, r4, #0
_081163F4:
	movs r3, #0
	bl sub_08117964
	b _08116436
	.align 2, 0
_081163FC: .4byte gUnk_02020EE0
_08116400: .4byte gUnk_0203AD3C
_08116404: .4byte gUnk_08D60FA4
_08116408: .4byte gSongTable
_0811640C: .4byte 0x00000D54
_08116410: .4byte gUnk_0203AD10
_08116414: .4byte 0x0000026D
_08116418: .4byte 0xFFFFFE98
_0811641C:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	bne _08116436
	adds r0, r4, #0
	adds r0, #0x50
	strh r1, [r0]
	adds r0, r4, #0
	bl sub_08114BA0
_08116436:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0811643C
sub_0811643C: @ 0x0811643C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, _081164D4 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r4, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	bne _081164CC
	adds r6, r4, #0
	adds r6, #0xba
	adds r5, r4, #0
	adds r5, #0x80
	movs r0, #0
	ldrsh r1, [r6, r0]
	movs r2, #0
	ldrsh r0, [r5, r2]
	cmp r1, r0
	beq _08116486
	ldr r1, _081164D8 @ =gUnk_08357ACC
	adds r0, r4, #0
	bl sub_080860A8
	adds r0, r4, #0
	bl sub_08117C84
	adds r0, r4, #0
	bl sub_08117C84
	adds r0, r4, #0
	bl sub_08034E14
_08116486:
	ldrh r0, [r5]
	strh r0, [r6]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0xb
	ands r0, r1
	cmp r0, #0
	beq _081164CC
	ldr r5, [r4, #0x6c]
	adds r0, r4, #0
	bl sub_08034E14
	ldrb r0, [r5]
	cmp r0, #0
	bne _081164CC
	ldr r2, [r5, #0x5c]
	movs r0, #8
	rsbs r0, r0, #0
	ands r0, r2
	mvns r0, r0
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _081164CC
	movs r0, #7
	ands r2, r0
	cmp r2, #3
	bhi _081164CC
	adds r0, r5, #0
	bl sub_08052E2C
	ldr r1, _081164DC @ =gUnk_08357AD4
	adds r0, r4, #0
	bl sub_080860A8
_081164CC:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_081164D4: .4byte gUnk_03000510
_081164D8: .4byte gUnk_08357ACC
_081164DC: .4byte gUnk_08357AD4

	thumb_func_start sub_081164E0
sub_081164E0: @ 0x081164E0
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r4, r6, #0
	ldr r1, [r6, #0x78]
	ldr r0, _0811655C @ =sub_08116E74
	cmp r1, r0
	beq _08116500
	ldr r0, _08116560 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08116500
	adds r0, r6, #0
	bl sub_08116DE4
_08116500:
	ldr r0, _08116564 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r5, r4, #0
	adds r5, #0x56
	movs r0, #1
	ldrb r1, [r5]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _0811651A
	b _0811664C
_0811651A:
	adds r0, r4, #0
	bl sub_08116C54
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0xb
	ands r0, r1
	cmp r0, #0
	bne _0811652E
	b _0811664C
_0811652E:
	ldr r3, [r4, #0x6c]
	ldrb r0, [r3]
	cmp r0, #0
	bne _08116568
	ldr r2, [r3, #0x5c]
	movs r0, #8
	rsbs r0, r0, #0
	ands r0, r2
	mvns r0, r0
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0811654A
	b _0811664C
_0811654A:
	movs r0, #7
	ands r2, r0
	cmp r2, #3
	bhi _0811664C
	adds r0, r3, #0
	bl sub_08052E2C
	b _0811664C
	.align 2, 0
_0811655C: .4byte sub_08116E74
_08116560: .4byte gUnk_0203AD10
_08116564: .4byte gUnk_03000510
_08116568:
	adds r0, r4, #0
	bl sub_08117C84
	adds r0, r4, #0
	bl sub_08117C84
	ldr r1, _081165F4 @ =gUnk_02020EE0
	ldr r0, _081165F8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081165DC
	ldrb r0, [r4]
	cmp r0, #0
	bne _0811659C
	ldrb r0, [r5]
	cmp r0, r2
	bne _081165DC
_0811659C:
	ldr r1, _081165FC @ =gUnk_08D60FA4
	ldr r5, _08116600 @ =gSongTable
	ldr r2, _08116604 @ =0x00000D84
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081165C2
	movs r1, #0xd8
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081165DC
_081165C2:
	cmp r3, #0
	beq _081165D4
	ldr r0, _08116608 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081165DC
_081165D4:
	movs r0, #0xd8
	lsls r0, r0, #1
	bl m4aSongNumStart
_081165DC:
	ldr r0, _08116608 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	bne _0811660C
	movs r0, #3
	adds r1, r4, #0
	bl sub_0806FE64
	b _0811664C
	.align 2, 0
_081165F4: .4byte gUnk_02020EE0
_081165F8: .4byte gUnk_0203AD3C
_081165FC: .4byte gUnk_08D60FA4
_08116600: .4byte gSongTable
_08116604: .4byte 0x00000D84
_08116608: .4byte gUnk_0203AD10
_0811660C:
	adds r1, r6, #0
	adds r1, #0xbe
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #9
	bls _0811664C
	adds r2, r6, #0
	adds r2, #0xbf
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldrb r0, [r1]
	subs r0, #0xa
	strb r0, [r1]
	ldrb r0, [r2]
	cmp r0, #9
	bls _0811664C
	adds r1, #2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrb r0, [r2]
	subs r0, #0xa
	strb r0, [r2]
	ldrb r0, [r1]
	cmp r0, #9
	bls _0811664C
	subs r0, #0xa
	strb r0, [r1]
_0811664C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08116654
sub_08116654: @ 0x08116654
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	ldr r2, _081167D8 @ =gUnk_08357B14
	ldrh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	movs r1, #3
	ands r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r3, r4, #0
	adds r3, #0x54
	strb r0, [r3]
	movs r1, #4
	ldrsh r0, [r4, r1]
	adds r0, #1
	asrs r0, r0, #2
	movs r1, #3
	ands r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	movs r2, #0x55
	adds r2, r2, r4
	mov ip, r2
	strb r0, [r2]
	adds r2, r4, #0
	adds r2, #0xb4
	ldr r0, [r2]
	ldrb r1, [r3]
	adds r0, #0x40
	strb r1, [r0]
	ldr r0, [r2]
	mov r3, ip
	ldrb r1, [r3]
	adds r0, #0x41
	strb r1, [r0]
	ldrh r1, [r4, #4]
	movs r0, #0x1f
	ands r0, r1
	cmp r0, #0
	bne _0811671C
	ldr r1, _081167DC @ =gUnk_02020EE0
	ldr r0, _081167E0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811671C
	ldrb r0, [r4]
	cmp r0, #0
	bne _081166E0
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0811671C
_081166E0:
	ldr r1, _081167E4 @ =gUnk_08D60FA4
	ldr r5, _081167E8 @ =gSongTable
	ldr r2, _081167EC @ =0x0000129C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08116704
	ldr r1, _081167F0 @ =0x00001298
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811671C
_08116704:
	cmp r3, #0
	beq _08116716
	ldr r0, _081167F4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811671C
_08116716:
	ldr r0, _081167F8 @ =0x00000253
	bl m4aSongNumStart
_0811671C:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9e
	ldrb r1, [r0]
	adds r7, r0, #0
	adds r5, r4, #0
	adds r5, #0x9f
	movs r2, #0x83
	adds r2, r2, r4
	mov r8, r2
	adds r6, r4, #0
	adds r6, #0x50
	movs r3, #0x52
	adds r3, r3, r4
	mov ip, r3
	cmp r1, #0
	bne _0811681E
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	ldr r3, _081167FC @ =gUnk_083573F0
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _0811675E
	subs r0, r1, #1
	strb r0, [r5]
_0811675E:
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrb r0, [r0, #8]
	strb r0, [r7]
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrb r1, [r0, #9]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _08116782
	mov r0, r8
	strb r1, [r0]
_08116782:
	ldrb r0, [r5]
	cmp r0, #0
	beq _08116800
	adds r2, r0, #0
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r3
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrh r2, [r1]
	mov sb, r2
	movs r2, #0
	ldrsh r1, [r1, r2]
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r1, r0
	beq _081167B0
	mov r0, sb
	strh r0, [r6]
_081167B0:
	ldrb r2, [r5]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r3
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrh r2, [r1, #2]
	movs r3, #2
	ldrsh r1, [r1, r3]
	movs r3, #2
	ldrsh r0, [r0, r3]
	cmp r1, r0
	beq _0811681E
	mov r0, ip
	strh r2, [r0]
	b _0811681E
	.align 2, 0
_081167D8: .4byte gUnk_08357B14
_081167DC: .4byte gUnk_02020EE0
_081167E0: .4byte gUnk_0203AD3C
_081167E4: .4byte gUnk_08D60FA4
_081167E8: .4byte gSongTable
_081167EC: .4byte 0x0000129C
_081167F0: .4byte 0x00001298
_081167F4: .4byte gUnk_0203AD10
_081167F8: .4byte 0x00000253
_081167FC: .4byte gUnk_083573F0
_08116800:
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrh r0, [r0, #2]
	mov r1, ip
	strh r0, [r1]
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r6]
_0811681E:
	ldr r2, _08116904 @ =gUnk_083573F0
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrh r0, [r0, #4]
	ldrh r3, [r6]
	adds r0, r0, r3
	strh r0, [r6]
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrh r0, [r0, #6]
	mov r1, ip
	ldrh r1, [r1]
	adds r0, r0, r1
	mov r2, ip
	strh r0, [r2]
	ldrb r0, [r7]
	subs r1, r0, #1
	strb r1, [r7]
	mov r3, r8
	ldrb r0, [r3]
	cmp r0, #1
	bne _081168CA
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _081168CA
	ldr r1, _08116908 @ =gUnk_02020EE0
	ldr r0, _0811690C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081168CA
	ldrb r0, [r4]
	cmp r0, #0
	bne _0811688A
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _081168CA
_0811688A:
	ldr r1, _08116910 @ =gUnk_08D60FA4
	ldr r6, _08116914 @ =gSongTable
	ldr r2, _08116918 @ =0x00001204
	adds r0, r6, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _081168B0
	movs r1, #0x90
	lsls r1, r1, #5
	adds r0, r6, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081168CA
_081168B0:
	cmp r3, #0
	beq _081168C2
	ldr r0, _0811691C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081168CA
_081168C2:
	movs r0, #0x90
	lsls r0, r0, #2
	bl m4aSongNumStart
_081168CA:
	ldr r2, _08116904 @ =gUnk_083573F0
	ldrb r1, [r5]
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _081168F8
	ldrb r0, [r7]
	cmp r0, #0
	bne _081168F8
	adds r0, r4, #0
	bl sub_080700D8
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
_081168F8:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08116904: .4byte gUnk_083573F0
_08116908: .4byte gUnk_02020EE0
_0811690C: .4byte gUnk_0203AD3C
_08116910: .4byte gUnk_08D60FA4
_08116914: .4byte gSongTable
_08116918: .4byte 0x00001204
_0811691C: .4byte gUnk_0203AD10

	thumb_func_start sub_08116920
sub_08116920: @ 0x08116920
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	movs r7, #0
	ldr r0, [r5, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r5, #8]
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	ble _081169C8
	movs r6, #0
	ldr r0, _081169D4 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r6, r0
	bhs _081169C2
	ldr r0, _081169D8 @ =gUnk_083573D0
	mov r8, r0
	add r1, r8
	mov sb, r1
_08116954:
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r1, r6, #0
	muls r1, r0, r1
	ldr r0, _081169DC @ =gUnk_02020EE0
	adds r4, r1, r0
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r4, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _081169B4
	adds r0, r4, #0
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081169B4
	adds r0, r4, #0
	bl sub_080525C0
	ldr r1, _081169E0 @ =gUnk_08D6112C
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl sub_080531B4
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
	lsls r1, r7, #3
	mov r2, r8
	adds r0, r1, r2
	ldr r0, [r0]
	str r0, [r4, #0x40]
	add r1, sb
	ldr r0, [r1]
	str r0, [r4, #0x44]
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
_081169B4:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, _081169D4 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r6, r0
	blo _08116954
_081169C2:
	adds r0, r5, #0
	bl sub_08118928
_081169C8:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081169D4: .4byte gUnk_0203AD44
_081169D8: .4byte gUnk_083573D0
_081169DC: .4byte gUnk_02020EE0
_081169E0: .4byte gUnk_08D6112C

	thumb_func_start sub_081169E4
sub_081169E4: @ 0x081169E4
	push {r4, r5, lr}
	mov ip, r0
	ldr r0, [r0, #8]
	movs r1, #4
	orrs r0, r1
	mov r1, ip
	str r0, [r1, #8]
	mov r2, ip
	adds r2, #0x9e
	ldrb r0, [r2]
	ldr r4, _08116A9C @ =gUnk_08357648
	cmp r0, #0
	bne _08116AC4
	mov r3, ip
	adds r3, #0x9f
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _08116A1C
	subs r0, r1, #1
	strb r0, [r3]
_08116A1C:
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	ldrb r0, [r0, #8]
	strb r0, [r2]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	ldrb r1, [r0, #9]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _08116A42
	mov r0, ip
	adds r0, #0x83
	strb r1, [r0]
_08116A42:
	ldrb r0, [r3]
	cmp r0, #0
	beq _08116AA0
	adds r2, r0, #0
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r4
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r4
	ldrh r2, [r1]
	movs r5, #0
	ldrsh r1, [r1, r5]
	movs r5, #0
	ldrsh r0, [r0, r5]
	cmp r1, r0
	beq _08116A70
	mov r0, ip
	adds r0, #0x50
	strh r2, [r0]
_08116A70:
	ldrb r2, [r3]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r4
	subs r2, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r4
	ldrh r2, [r1, #2]
	movs r3, #2
	ldrsh r1, [r1, r3]
	movs r5, #2
	ldrsh r0, [r0, r5]
	cmp r1, r0
	beq _08116AC4
	mov r0, ip
	adds r0, #0x52
	strh r2, [r0]
	b _08116AC4
	.align 2, 0
_08116A9C: .4byte gUnk_08357648
_08116AA0:
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	ldrh r0, [r0, #2]
	mov r1, ip
	adds r1, #0x52
	strh r0, [r1]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	ldrh r1, [r0]
	mov r0, ip
	adds r0, #0x50
	strh r1, [r0]
_08116AC4:
	mov r2, ip
	adds r2, #0x50
	mov r3, ip
	adds r3, #0x9f
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	ldrh r0, [r0, #4]
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2]
	adds r2, #2
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	ldrh r0, [r0, #6]
	ldrh r5, [r2]
	adds r0, r0, r5
	strh r0, [r2]
	mov r1, ip
	adds r1, #0x9e
	ldrb r0, [r1]
	subs r2, r0, #1
	strb r2, [r1]
	ldrb r1, [r3]
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _08116B20
	lsls r0, r2, #0x18
	cmp r0, #0
	bne _08116B20
	mov r0, ip
	bl sub_08116BC0
	b _08116B9A
_08116B20:
	mov r1, ip
	ldrh r0, [r1, #4]
	adds r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x9e
	bne _08116B9A
	ldr r1, _08116BA0 @ =gUnk_02020EE0
	ldr r0, _08116BA4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	mov r1, ip
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08116B9A
	mov r3, ip
	ldrb r0, [r3]
	cmp r0, #0
	bne _08116B5E
	mov r0, ip
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08116B9A
_08116B5E:
	ldr r1, _08116BA8 @ =gUnk_08D60FA4
	ldr r4, _08116BAC @ =gSongTable
	ldr r5, _08116BB0 @ =0x0000100C
	adds r0, r4, r5
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08116B82
	ldr r1, _08116BB4 @ =0x00001008
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08116B9A
_08116B82:
	cmp r3, #0
	beq _08116B94
	ldr r0, _08116BB8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08116B9A
_08116B94:
	ldr r0, _08116BBC @ =0x00000201
	bl m4aSongNumStart
_08116B9A:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08116BA0: .4byte gUnk_02020EE0
_08116BA4: .4byte gUnk_0203AD3C
_08116BA8: .4byte gUnk_08D60FA4
_08116BAC: .4byte gSongTable
_08116BB0: .4byte 0x0000100C
_08116BB4: .4byte 0x00001008
_08116BB8: .4byte gUnk_0203AD10
_08116BBC: .4byte 0x00000201

	thumb_func_start sub_08116BC0
sub_08116BC0: @ 0x08116BC0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r2, _08116BF8 @ =sub_08118964
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r5, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r1, #0x40
	strh r1, [r5, #4]
	ldr r0, [r5, #8]
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	bl sub_08034E14
	adds r1, r0, #0
	cmp r1, #0
	beq _08116BF2
	movs r0, #0
	strb r0, [r1, #9]
_08116BF2:
	movs r6, #0
	b _08116C3C
	.align 2, 0
_08116BF8: .4byte sub_08118964
_08116BFC:
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r1, r6, #0
	muls r1, r0, r1
	ldr r0, _08116C4C @ =gUnk_02020EE0
	adds r4, r1, r0
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _08116C36
	adds r0, r4, #0
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08116C36
	adds r0, r4, #0
	bl sub_08052BB4
	adds r1, r4, #0
	adds r1, #0x52
	movs r0, #0
	strh r0, [r1]
_08116C36:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_08116C3C:
	ldr r0, _08116C50 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r6, r0
	blo _08116BFC
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08116C4C: .4byte gUnk_02020EE0
_08116C50: .4byte gUnk_0203AD44

	thumb_func_start sub_08116C54
sub_08116C54: @ 0x08116C54
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	ldr r2, _08116DD0 @ =gUnk_08357B14
	movs r0, #0xbc
	adds r0, r0, r6
	mov sl, r0
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	movs r1, #3
	ands r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r1, r6, #0
	adds r1, #0x54
	strb r0, [r1]
	mov r3, sl
	movs r4, #0
	ldrsh r0, [r3, r4]
	adds r0, #1
	asrs r0, r0, #2
	movs r3, #3
	ands r0, r3
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r3, r6, #0
	adds r3, #0x55
	strb r0, [r3]
	adds r2, r6, #0
	adds r2, #0xb4
	ldr r0, [r2]
	ldrb r1, [r1]
	adds r0, #0x40
	strb r1, [r0]
	ldr r0, [r2]
	ldrb r1, [r3]
	adds r0, #0x41
	strb r1, [r0]
	mov r4, sl
	ldrh r1, [r4]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _08116D16
	movs r2, #0xa6
	lsls r2, r2, #2
	ldr r4, _08116DD4 @ =gRngVal
	ldr r0, [r4]
	ldr r1, _08116DD8 @ =0x00196225
	mov sb, r1
	mov r3, sb
	muls r3, r0, r3
	ldr r5, _08116DDC @ =0x3C6EF35F
	adds r3, r3, r5
	str r3, [r4]
	lsrs r3, r3, #0x10
	movs r0, #1
	ands r3, r0
	adds r0, r6, #0
	movs r1, #0
	bl sub_0808AE30
	adds r7, r0, #0
	ldr r0, [r4]
	mov r2, sb
	muls r2, r0, r2
	adds r2, r2, r5
	str r2, [r4]
	lsrs r1, r2, #0x10
	movs r3, #0x1f
	mov r8, r3
	ands r1, r3
	movs r3, #0x10
	subs r1, r3, r1
	lsls r1, r1, #8
	ldr r0, [r7, #0x34]
	adds r0, r0, r1
	str r0, [r7, #0x34]
	mov r0, sb
	muls r0, r2, r0
	adds r0, r0, r5
	str r0, [r4]
	lsrs r0, r0, #0x10
	mov r4, r8
	ands r0, r4
	subs r3, r3, r0
	lsls r3, r3, #8
	ldr r0, [r7, #0x38]
	adds r0, r0, r3
	str r0, [r7, #0x38]
	adds r0, r6, #0
	bl sub_08117F6C
_08116D16:
	mov r0, sl
	ldrh r1, [r0]
	movs r0, #0xf
	ands r0, r1
	cmp r0, #0
	bne _08116DB6
	adds r0, r6, #0
	bl sub_08117C84
	ldr r5, _08116DD4 @ =gRngVal
	ldr r0, [r5]
	ldr r1, _08116DD8 @ =0x00196225
	mov r8, r1
	mov r3, r8
	muls r3, r0, r3
	adds r0, r3, #0
	ldr r4, _08116DDC @ =0x3C6EF35F
	mov sb, r4
	adds r3, r0, r4
	str r3, [r5]
	lsrs r0, r3, #0x10
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _08116D9A
	ldr r2, _08116DE0 @ =0x00000292
	mov r4, r8
	muls r4, r3, r4
	adds r3, r4, #0
	ldr r0, _08116DDC @ =0x3C6EF35F
	adds r3, r3, r0
	str r3, [r5]
	lsrs r3, r3, #0x10
	ands r3, r1
	adds r0, r6, #0
	movs r1, #0
	bl sub_0808AE30
	adds r7, r0, #0
	ldr r0, [r5]
	mov r2, r8
	muls r2, r0, r2
	ldr r1, _08116DDC @ =0x3C6EF35F
	adds r2, r2, r1
	str r2, [r5]
	lsrs r1, r2, #0x10
	movs r4, #0x1f
	ands r1, r4
	movs r3, #0x10
	subs r1, r3, r1
	lsls r1, r1, #8
	ldr r0, [r7, #0x34]
	adds r0, r0, r1
	str r0, [r7, #0x34]
	mov r0, r8
	muls r0, r2, r0
	ldr r1, _08116DDC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r5]
	lsrs r0, r0, #0x10
	ands r0, r4
	subs r3, r3, r0
	lsls r3, r3, #8
	ldr r0, [r7, #0x38]
	adds r0, r0, r3
	str r0, [r7, #0x38]
_08116D9A:
	ldr r0, [r5]
	mov r3, r8
	muls r3, r0, r3
	adds r0, r3, #0
	add r0, sb
	str r0, [r5]
	lsrs r0, r0, #0x10
	movs r4, #3
	ands r0, r4
	cmp r0, #0
	bne _08116DB6
	adds r0, r6, #0
	bl sub_08117C84
_08116DB6:
	adds r1, r6, #0
	adds r1, #0xbc
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08116DD0: .4byte gUnk_08357B14
_08116DD4: .4byte gRngVal
_08116DD8: .4byte 0x00196225
_08116DDC: .4byte 0x3C6EF35F
_08116DE0: .4byte 0x00000292

	thumb_func_start sub_08116DE4
sub_08116DE4: @ 0x08116DE4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08116E30 @ =sub_08116E74
	movs r1, #0
	bl ObjectSetFunc
	adds r2, r4, #0
	adds r2, #0x50
	movs r0, #0
	strh r0, [r2]
	adds r3, r4, #0
	adds r3, #0x52
	strh r0, [r3]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	ldr r1, _08116E34 @ =0xEFFFFFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, [r4, #0x40]
	movs r0, #0x80
	lsls r0, r0, #8
	subs r0, r0, r1
	asrs r0, r0, #5
	strh r0, [r2]
	ldr r0, [r4, #0x44]
	ldr r1, _08116E38 @ =0xFFFFB600
	adds r0, r0, r1
	asrs r0, r0, #5
	strh r0, [r3]
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0xc0
	ble _08116E3C
	movs r0, #0xc0
	strh r0, [r2]
	b _08116E46
	.align 2, 0
_08116E30: .4byte sub_08116E74
_08116E34: .4byte 0xEFFFFFFF
_08116E38: .4byte 0xFFFFB600
_08116E3C:
	movs r1, #0xc0
	rsbs r1, r1, #0
	cmp r0, r1
	bge _08116E46
	strh r1, [r2]
_08116E46:
	adds r1, r4, #0
	adds r1, #0x52
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0xc0
	ble _08116E58
	movs r0, #0xc0
	strh r0, [r1]
	b _08116E62
_08116E58:
	movs r2, #0xc0
	rsbs r2, r2, #0
	cmp r0, r2
	bge _08116E62
	strh r2, [r1]
_08116E62:
	ldr r0, _08116E70 @ =gUnk_030016A0
	movs r1, #0x10
	bl m4aMPlayFadeOut
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08116E70: .4byte gUnk_030016A0

	thumb_func_start sub_08116E74
sub_08116E74: @ 0x08116E74
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	ldr r2, _08116EEC @ =gUnk_08357B14
	ldrh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	movs r1, #3
	ands r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r3, r4, #0
	adds r3, #0x54
	movs r6, #0
	strb r0, [r3]
	movs r1, #4
	ldrsh r0, [r4, r1]
	adds r0, #1
	asrs r0, r0, #2
	movs r1, #3
	ands r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	movs r2, #0x55
	adds r2, r2, r4
	mov ip, r2
	strb r0, [r2]
	adds r2, r4, #0
	adds r2, #0xb4
	ldr r0, [r2]
	ldrb r1, [r3]
	adds r0, #0x40
	strb r1, [r0]
	ldr r0, [r2]
	mov r2, ip
	ldrb r1, [r2]
	adds r0, #0x41
	strb r1, [r0]
	adds r0, r4, #0
	bl sub_08116C54
	adds r2, r4, #0
	adds r2, #0x50
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	beq _08116F06
	cmp r0, #0
	ble _08116EF4
	ldr r1, [r4, #0x40]
	ldr r0, _08116EF0 @ =0x00007FFF
	cmp r1, r0
	ble _08116F06
	adds r0, #1
	str r0, [r4, #0x40]
	b _08116F04
	.align 2, 0
_08116EEC: .4byte gUnk_08357B14
_08116EF0: .4byte 0x00007FFF
_08116EF4:
	cmp r0, #0
	bge _08116F06
	ldr r0, [r4, #0x40]
	movs r1, #0x80
	lsls r1, r1, #8
	cmp r0, r1
	bgt _08116F06
	str r1, [r4, #0x40]
_08116F04:
	strh r6, [r2]
_08116F06:
	adds r0, r4, #0
	adds r0, #0x52
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r3, r0, #0
	cmp r1, #0
	beq _08116F3A
	cmp r1, #0
	ble _08116F26
	ldr r0, [r4, #0x44]
	movs r1, #0x94
	lsls r1, r1, #7
	cmp r0, r1
	bgt _08116F3A
	str r1, [r4, #0x44]
	b _08116F36
_08116F26:
	cmp r1, #0
	bge _08116F3A
	ldr r1, [r4, #0x44]
	ldr r0, _08116FC8 @ =0x000049FF
	cmp r1, r0
	ble _08116F3A
	adds r0, #1
	str r0, [r4, #0x44]
_08116F36:
	movs r0, #0
	strh r0, [r3]
_08116F3A:
	movs r0, #4
	ldrsh r2, [r4, r0]
	ldr r0, _08116FCC @ =0x0000012B
	cmp r2, r0
	ble _08116F48
	movs r0, #0
	str r0, [r4, #0x7c]
_08116F48:
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0xb
	ands r0, r1
	cmp r0, #0
	beq _08116F5C
	movs r0, #0x96
	lsls r0, r0, #1
	cmp r2, r0
	bgt _08116F64
_08116F5C:
	movs r0, #0xf0
	lsls r0, r0, #1
	cmp r2, r0
	ble _08116FD0
_08116F64:
	adds r1, r4, #0
	adds r1, #0x54
	movs r0, #0
	strb r0, [r1]
	adds r3, r4, #0
	adds r3, #0x55
	strb r0, [r3]
	adds r2, r5, #0
	adds r2, #0xb4
	ldr r0, [r2]
	ldrb r1, [r1]
	adds r0, #0x40
	strb r1, [r0]
	ldr r0, [r2]
	ldrb r1, [r3]
	adds r0, #0x41
	strb r1, [r0]
	adds r0, r4, #0
	bl sub_08116FFC
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0xb
	ands r0, r1
	cmp r0, #0
	beq _08116FF4
	adds r1, r5, #0
	adds r1, #0xbf
	ldrb r0, [r1]
	adds r0, #3
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #9
	bls _08116FF4
	adds r2, r5, #0
	adds r2, #0xc0
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldrb r0, [r1]
	subs r0, #0xa
	strb r0, [r1]
	ldrb r0, [r2]
	cmp r0, #9
	bls _08116FF4
	subs r0, #0xa
	strb r0, [r2]
	b _08116FF4
	.align 2, 0
_08116FC8: .4byte 0x000049FF
_08116FCC: .4byte 0x0000012B
_08116FD0:
	ldr r1, [r4, #0x40]
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r1, r0
	bne _08116FF4
	ldr r1, [r4, #0x44]
	movs r0, #0x94
	lsls r0, r0, #7
	cmp r1, r0
	bne _08116FF4
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	strh r0, [r3]
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
_08116FF4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08116FFC
sub_08116FFC: @ 0x08116FFC
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _081170B0 @ =sub_08118A00
	movs r1, #1
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	str r0, [r4, #0x7c]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0x56
	ldrb r0, [r5]
	bl sub_08033540
	ldr r1, _081170B4 @ =gUnk_08350E34
	adds r0, r4, #0
	bl sub_080860A8
	ldr r1, _081170B8 @ =gUnk_02020EE0
	ldr r0, _081170BC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081170A8
	ldrb r0, [r4]
	cmp r0, #0
	bne _08117068
	ldrb r0, [r5]
	cmp r0, r2
	bne _081170A8
_08117068:
	ldr r1, _081170C0 @ =gUnk_08D60FA4
	ldr r4, _081170C4 @ =gSongTable
	ldr r2, _081170C8 @ =0x00000BE4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811708E
	movs r1, #0xbe
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _081170A8
_0811708E:
	cmp r3, #0
	beq _081170A0
	ldr r0, _081170CC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _081170A8
_081170A0:
	movs r0, #0xbe
	lsls r0, r0, #1
	bl m4aSongNumStart
_081170A8:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_081170B0: .4byte sub_08118A00
_081170B4: .4byte gUnk_08350E34
_081170B8: .4byte gUnk_02020EE0
_081170BC: .4byte gUnk_0203AD3C
_081170C0: .4byte gUnk_08D60FA4
_081170C4: .4byte gSongTable
_081170C8: .4byte 0x00000BE4
_081170CC: .4byte gUnk_0203AD10

	thumb_func_start sub_081170D0
sub_081170D0: @ 0x081170D0
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, _08117190 @ =sub_08118A1C
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	ldr r1, _08117194 @ =0xFFFFDFFF
	ands r0, r1
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0x56
	ldrb r0, [r5]
	bl sub_080335B4
	movs r0, #3
	adds r1, r4, #0
	bl sub_0806FE64
	adds r0, r4, #0
	bl sub_08098184
	ldr r2, _08117198 @ =0x00000299
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r1, _0811719C @ =gUnk_02020EE0
	ldr r0, _081171A0 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08117188
	ldrb r0, [r4]
	cmp r0, #0
	bne _0811714C
	ldrb r0, [r5]
	cmp r0, r2
	bne _08117188
_0811714C:
	ldr r1, _081171A4 @ =gUnk_08D60FA4
	ldr r4, _081171A8 @ =gSongTable
	ldr r2, _081171AC @ =0x00000BDC
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08117170
	ldr r1, _081171B0 @ =0x00000BD8
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08117188
_08117170:
	cmp r3, #0
	beq _08117182
	ldr r0, _081171B4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08117188
_08117182:
	ldr r0, _081171B8 @ =0x0000017B
	bl m4aSongNumStart
_08117188:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08117190: .4byte sub_08118A1C
_08117194: .4byte 0xFFFFDFFF
_08117198: .4byte 0x00000299
_0811719C: .4byte gUnk_02020EE0
_081171A0: .4byte gUnk_0203AD3C
_081171A4: .4byte gUnk_08D60FA4
_081171A8: .4byte gSongTable
_081171AC: .4byte 0x00000BDC
_081171B0: .4byte 0x00000BD8
_081171B4: .4byte gUnk_0203AD10
_081171B8: .4byte 0x0000017B

	thumb_func_start sub_081171BC
sub_081171BC: @ 0x081171BC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _081171F0 @ =sub_08117298
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _081171F4 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081171F8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08117200
	.align 2, 0
_081171F0: .4byte sub_08117298
_081171F4: .4byte sub_0803DCCC
_081171F8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08117200:
	adds r4, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r6, r4, #0
	adds r6, #0x42
	movs r1, #0
	mov r8, r1
	strh r0, [r6]
	adds r1, r4, #0
	adds r1, #0xc
	movs r7, #0xe7
	lsls r7, r7, #2
	movs r0, #2
	str r0, [sp]
	movs r0, #0x1a
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x2a
	adds r3, r7, #0
	bl sub_080709F8
	adds r5, r4, #0
	adds r5, #0x2b
	mov r0, r8
	strb r0, [r5]
	ldr r2, _0811727C @ =gUnk_02020EE0
	ldr r0, _08117280 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r6, [r6]
	cmp r0, r6
	bne _08117284
	adds r0, r7, #0
	bl sub_0803DF24
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08117288
	adds r0, r7, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r5]
	b _08117288
	.align 2, 0
_0811727C: .4byte gUnk_02020EE0
_08117280: .4byte gUnk_0203AD3C
_08117284:
	mov r1, r8
	strb r1, [r5]
_08117288:
	adds r0, r4, #0
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08117298
sub_08117298: @ 0x08117298
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r2, _081172BC @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081172C0
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081172C8
	.align 2, 0
_081172BC: .4byte gCurTask
_081172C0:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081172C8:
	adds r5, r0, #0
	ldr r7, [r5, #0x44]
	ldrh r3, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _081172E2
	ldr r0, [r2]
	bl TaskDestroy
	b _08117522
_081172E2:
	ldr r0, [r7, #8]
	ands r0, r1
	cmp r0, #0
	beq _081172F2
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #6]
	b _08117522
_081172F2:
	ldr r2, _0811735C @ =gUnk_02020EE0
	ldr r0, _08117360 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	mov r8, r1
	ldrh r1, [r1]
	cmp r0, r1
	bne _081173A4
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _0811736C
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _081173CA
	ldrh r1, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r2, [r0]
	movs r0, #0x2a
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _08117364 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _08117368 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _081173CA
	.align 2, 0
_0811735C: .4byte gUnk_02020EE0
_08117360: .4byte gUnk_0203AD3C
_08117364: .4byte 0xFFF7FFFF
_08117368: .4byte 0x0400000A
_0811736C:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	bne _081173CA
	movs r0, #0x2a
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _0811739C @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _081173A0 @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _081173CA
	.align 2, 0
_0811739C: .4byte 0xFFF7FFFF
_081173A0: .4byte 0x0400000A
_081173A4:
	ldr r1, [r5, #0xc]
	cmp r1, #0
	beq _081173C0
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _081173C0
	adds r0, r1, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_081173C0:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_081173CA:
	ldr r2, _08117410 @ =gUnk_02020EE0
	ldr r0, _08117414 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r2, r8
	ldrh r2, [r2]
	cmp r0, r2
	bne _08117418
	adds r4, r5, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	cmp r0, #0
	bne _08117420
	movs r6, #0xe7
	lsls r6, r6, #2
	adds r0, r6, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08117420
	adds r0, r6, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08117420
	.align 2, 0
_08117410: .4byte gUnk_02020EE0
_08117414: .4byte gUnk_0203AD3C
_08117418:
	adds r1, r5, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
_08117420:
	ldrh r0, [r5, #6]
	ldr r2, _081174A0 @ =0x0000FBFA
	ands r2, r0
	strh r2, [r5, #6]
	ldr r1, [r7, #8]
	ldr r0, _081174A4 @ =0x00000404
	ands r1, r0
	orrs r1, r2
	strh r1, [r5, #6]
	ldr r0, [r7, #8]
	movs r2, #1
	eors r0, r2
	ands r0, r2
	orrs r1, r0
	strh r1, [r5, #6]
	adds r0, r7, #0
	adds r0, #0x60
	ldrh r0, [r0]
	mov r6, r8
	strh r0, [r6]
	ldr r0, [r7, #0x40]
	str r0, [r5, #0x34]
	ldr r0, [r7, #0x44]
	str r0, [r5, #0x38]
	ldr r3, [r5, #0x44]
	cmp r3, #0
	beq _081174AC
	ldrb r0, [r3]
	cmp r0, #0
	beq _0811746E
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _0811746E
	movs r0, #0
	str r0, [r5, #0x44]
	movs r3, #0
_0811746E:
	cmp r3, #0
	beq _081174AC
	ldr r0, _081174A8 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r3, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _0811751C
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _0811751C
	adds r0, r5, #0
	bl sub_0803DBC8
	b _08117522
	.align 2, 0
_081174A0: .4byte 0x0000FBFA
_081174A4: .4byte 0x00000404
_081174A8: .4byte gUnk_03000510
_081174AC:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _08117514 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	ldrh r0, [r0]
	mov r6, r8
	ldrh r1, [r6]
	cmp r0, r1
	beq _081174EC
	movs r3, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _081174EC
	movs r3, #2
	movs r6, #0xec
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _081174EC
	movs r3, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _081174EC
	movs r3, #4
_081174EC:
	ldr r0, _08117518 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _0811751C
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _0811751C
	adds r0, r4, #0
	bl sub_0803DBC8
	b _08117522
	.align 2, 0
_08117514: .4byte gUnk_02020EE0
_08117518: .4byte gUnk_03000510
_0811751C:
	adds r0, r5, #0
	bl sub_0806FAC8
_08117522:
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08117530
sub_08117530: @ 0x08117530
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	ldr r2, _08117558 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811755C
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08117564
	.align 2, 0
_08117558: .4byte gCurTask
_0811755C:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08117564:
	adds r7, r0, #0
	ldr r0, [r7, #0x44]
	mov sl, r0
	mov r3, sl
	adds r1, r3, #0
	str r1, [sp]
	ldrh r4, [r7, #6]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r1, #0
	ands r0, r4
	cmp r0, #0
	beq _08117586
	ldr r0, [r2]
	bl TaskDestroy
	b _08117954
_08117586:
	mov r0, sl
	ldr r3, [r0, #8]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _0811759A
	adds r0, r1, #0
	orrs r0, r4
	strh r0, [r7, #6]
	b _08117954
_0811759A:
	ldr r0, _081176F0 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	mov r1, sl
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _081175BC
	movs r0, #0x80
	lsls r0, r0, #6
	ands r3, r0
	cmp r3, #0
	bne _081175C2
_081175BC:
	ldrh r0, [r7, #4]
	adds r0, #1
	strh r0, [r7, #4]
_081175C2:
	movs r1, #4
	ldrsh r0, [r7, r1]
	ldrh r2, [r7, #4]
	cmp r0, #6
	ble _081175E0
	mov r3, sl
	ldr r0, [r3, #0x50]
	cmp r0, #0
	bne _081175E0
	ldrh r1, [r7, #6]
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r7, #6]
_081175E0:
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	bne _081175EA
	b _08117954
_081175EA:
	mov r1, sl
	ldr r0, [r1, #0x40]
	str r0, [r7, #0x34]
	ldr r0, [r1, #0x44]
	str r0, [r7, #0x38]
	ldr r0, [r1, #0x10]
	str r0, [r7, #0xc]
	ldr r0, [r1, #0x14]
	str r0, [r7, #0x10]
	ldr r0, [r1, #0x18]
	str r0, [r7, #0x14]
	ldrh r0, [r1, #0x1c]
	strh r0, [r7, #0x18]
	ldrh r0, [r1, #0x1e]
	strh r0, [r7, #0x1a]
	movs r0, #0xd8
	lsls r0, r0, #3
	strh r0, [r7, #0x20]
	ldrh r0, [r1, #0x26]
	strh r0, [r7, #0x22]
	mov r0, sl
	adds r0, #0x2a
	ldrb r0, [r0]
	adds r2, r7, #0
	adds r2, #0x26
	str r2, [sp, #4]
	strb r0, [r2]
	mov r0, sl
	adds r0, #0x2b
	ldrb r0, [r0]
	adds r3, r7, #0
	adds r3, #0x27
	str r3, [sp, #8]
	strb r0, [r3]
	mov r0, sl
	adds r0, #0x2c
	ldrb r0, [r0]
	movs r1, #0x28
	adds r1, r1, r7
	mov sb, r1
	strb r0, [r1]
	mov r0, sl
	adds r0, #0x2d
	ldrb r0, [r0]
	movs r2, #0x29
	adds r2, r2, r7
	mov r8, r2
	strb r0, [r2]
	mov r0, sl
	adds r0, #0x2e
	ldrb r0, [r0]
	adds r6, r7, #0
	adds r6, #0x2a
	strb r0, [r6]
	mov r0, sl
	adds r0, #0x2f
	ldrb r0, [r0]
	adds r5, r7, #0
	adds r5, #0x2b
	strb r0, [r5]
	ldr r2, [r7, #0x34]
	asrs r2, r2, #8
	ldr r3, _081176F4 @ =gCurLevelInfo
	ldr r1, _081176F8 @ =gUnk_0203AD3C
	ldrb r0, [r1]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r2, r2, r0
	mov ip, r2
	mov r2, ip
	strh r2, [r7, #0x1c]
	ldr r1, [r7, #0x38]
	asrs r1, r1, #8
	ldr r2, _081176F8 @ =gUnk_0203AD3C
	ldrb r0, [r2]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r7, #0x1e]
	ldrh r4, [r7, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	ldr r1, [sp, #4]
	str r1, [sp, #0xc]
	ldr r2, [sp, #8]
	str r2, [sp, #0x10]
	str r6, [sp, #0x14]
	str r5, [sp, #0x18]
	cmp r0, #0
	bne _0811770C
	ldr r2, _081176FC @ =gUnk_02020EE0
	ldr r0, _081176F8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811770C
	ldr r1, _08117700 @ =gUnk_0203AD18
	ldrh r0, [r1]
	add r0, ip
	strh r0, [r7, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r7, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r4
	cmp r0, #0
	beq _08117704
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_081564D8
	b _0811770C
	.align 2, 0
_081176F0: .4byte gUnk_03000510
_081176F4: .4byte gCurLevelInfo
_081176F8: .4byte gUnk_0203AD3C
_081176FC: .4byte gUnk_02020EE0
_08117700: .4byte gUnk_0203AD18
_08117704:
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_0815604C
_0811770C:
	mov r1, sl
	ldr r3, [r1, #0x48]
	str r3, [r7, #0x34]
	ldr r4, [r1, #0x4c]
	str r4, [r7, #0x38]
	movs r0, #0xe0
	lsls r0, r0, #3
	strh r0, [r7, #0x20]
	asrs r3, r3, #8
	ldr r2, _08117794 @ =gCurLevelInfo
	ldr r6, _08117798 @ =gUnk_0203AD3C
	ldrb r0, [r6]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r1, r2, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r3, r0
	strh r3, [r7, #0x1c]
	asrs r4, r4, #8
	ldrb r0, [r6]
	muls r0, r5, r0
	adds r2, #0x10
	adds r0, r0, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r4, r4, r0
	strh r4, [r7, #0x1e]
	ldrh r5, [r7, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r5
	cmp r0, #0
	bne _081177AC
	ldr r2, _0811779C @ =gUnk_02020EE0
	ldrb r1, [r6]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081177AC
	ldr r1, _081177A0 @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r3, r0
	strh r0, [r7, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r4, r0
	strh r0, [r7, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r5
	cmp r0, #0
	beq _081177A4
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_081564D8
	b _081177AC
	.align 2, 0
_08117794: .4byte gCurLevelInfo
_08117798: .4byte gUnk_0203AD3C
_0811779C: .4byte gUnk_02020EE0
_081177A0: .4byte gUnk_0203AD18
_081177A4:
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_0815604C
_081177AC:
	mov r2, sl
	ldr r0, [r2, #0x40]
	str r0, [r7, #0x34]
	ldr r0, [r2, #0x44]
	str r0, [r7, #0x38]
	ldr r1, [sp]
	adds r1, #0xb4
	ldr r0, [r1]
	ldr r0, [r0, #0xc]
	str r0, [r7, #0xc]
	ldr r0, [r1]
	ldr r0, [r0, #0x10]
	str r0, [r7, #0x10]
	ldr r0, [r1]
	ldr r0, [r0, #0x14]
	str r0, [r7, #0x14]
	ldr r0, [r1]
	ldrh r0, [r0, #0x18]
	strh r0, [r7, #0x18]
	ldr r0, [r1]
	ldrh r0, [r0, #0x1a]
	strh r0, [r7, #0x1a]
	movs r0, #0xd8
	lsls r0, r0, #3
	strh r0, [r7, #0x20]
	ldr r0, [r1]
	ldrh r0, [r0, #0x22]
	strh r0, [r7, #0x22]
	ldr r0, [r1]
	adds r0, #0x26
	ldrb r0, [r0]
	ldr r3, [sp, #0xc]
	strb r0, [r3]
	ldr r0, [r1]
	adds r0, #0x27
	ldrb r0, [r0]
	ldr r2, [sp, #0x10]
	strb r0, [r2]
	ldr r0, [r1]
	adds r0, #0x28
	ldrb r0, [r0]
	mov r3, sb
	strb r0, [r3]
	ldr r0, [r1]
	adds r0, #0x29
	ldrb r0, [r0]
	mov r2, r8
	strb r0, [r2]
	ldr r0, [r1]
	adds r0, #0x2a
	ldrb r0, [r0]
	ldr r3, [sp, #0x14]
	strb r0, [r3]
	ldr r0, [r1]
	adds r0, #0x2b
	ldrb r0, [r0]
	ldr r1, [sp, #0x18]
	strb r0, [r1]
	ldr r2, [r7, #0x34]
	asrs r2, r2, #8
	ldr r3, _0811789C @ =gCurLevelInfo
	ldr r5, _081178A0 @ =gUnk_0203AD3C
	ldrb r0, [r5]
	movs r4, #0xcd
	lsls r4, r4, #3
	muls r0, r4, r0
	adds r1, r3, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r6, r2, r0
	strh r6, [r7, #0x1c]
	ldr r1, [r7, #0x38]
	asrs r1, r1, #8
	ldrb r0, [r5]
	muls r0, r4, r0
	adds r3, #0x10
	adds r0, r0, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r1, r0
	strh r3, [r7, #0x1e]
	ldrh r4, [r7, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	bne _081178B4
	ldr r2, _081178A4 @ =gUnk_02020EE0
	ldrb r1, [r5]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _081178B4
	ldr r1, _081178A8 @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r6, r0
	strh r0, [r7, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r3, r0
	strh r0, [r7, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r4
	cmp r0, #0
	beq _081178AC
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_081564D8
	b _081178B4
	.align 2, 0
_0811789C: .4byte gCurLevelInfo
_081178A0: .4byte gUnk_0203AD3C
_081178A4: .4byte gUnk_02020EE0
_081178A8: .4byte gUnk_0203AD18
_081178AC:
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_0815604C
_081178B4:
	mov r2, sl
	ldr r3, [r2, #0x48]
	str r3, [r7, #0x34]
	ldr r4, [r2, #0x4c]
	str r4, [r7, #0x38]
	movs r0, #0xe0
	lsls r0, r0, #3
	strh r0, [r7, #0x20]
	asrs r3, r3, #8
	ldr r2, _0811793C @ =gCurLevelInfo
	ldr r6, _08117940 @ =gUnk_0203AD3C
	ldrb r0, [r6]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r1, r2, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r3, r3, r0
	strh r3, [r7, #0x1c]
	asrs r4, r4, #8
	ldrb r0, [r6]
	muls r0, r5, r0
	adds r2, #0x10
	adds r0, r0, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	subs r4, r4, r0
	strh r4, [r7, #0x1e]
	ldrh r5, [r7, #6]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r5
	cmp r0, #0
	bne _08117954
	ldr r2, _08117944 @ =gUnk_02020EE0
	ldrb r1, [r6]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08117954
	ldr r1, _08117948 @ =gUnk_0203AD18
	ldrh r0, [r1]
	adds r0, r3, r0
	strh r0, [r7, #0x1c]
	ldrh r0, [r1, #2]
	adds r0, r4, r0
	strh r0, [r7, #0x1e]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r5
	cmp r0, #0
	beq _0811794C
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_081564D8
	b _08117954
	.align 2, 0
_0811793C: .4byte gCurLevelInfo
_08117940: .4byte gUnk_0203AD3C
_08117944: .4byte gUnk_02020EE0
_08117948: .4byte gUnk_0203AD18
_0811794C:
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_0815604C
_08117954:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08117964
sub_08117964: @ 0x08117964
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov ip, r5
	ldr r0, [r5, #8]
	movs r1, #1
	ands r0, r1
	ldr r0, [r5, #0x40]
	asrs r7, r0, #8
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	adds r0, #8
	str r0, [sp]
	cmp r3, #0
	beq _081179C2
	ldr r2, _081179E4 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _081179E8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _081179EC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #0x1f
	ands r0, r1
	movs r1, #0xf
	subs r1, r1, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r7, r7, r1
	lsls r1, r1, #4
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
_081179C2:
	movs r4, #0
	ldr r1, _081179F0 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	lsls r6, r6, #0x10
	mov sl, r6
	movs r6, #0x87
	add ip, r6
	movs r6, #0x56
	adds r6, r6, r5
	mov sb, r6
	mov r6, r8
	lsls r6, r6, #0x10
	mov r8, r6
	b _08117A08
	.align 2, 0
_081179E4: .4byte gRngVal
_081179E8: .4byte 0x00196225
_081179EC: .4byte 0x3C6EF35F
_081179F0: .4byte gUnk_020229D4
_081179F4:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _08117A10
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_08117A08:
	cmp r0, #0
	bne _081179F4
	orrs r2, r3
	str r2, [r1]
_08117A10:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	ldr r0, _08117A94 @ =gUnk_020229E0
	adds r1, r1, r0
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	strh r7, [r1, #6]
	mov r4, sp
	ldrh r4, [r4]
	strh r4, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xd4
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	mov r6, ip
	ldrb r0, [r6]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r2, sb
	ldrb r0, [r2]
	bl CreateObject
	adds r4, r0, #0
	str r5, [r4, #0x70]
	mov r6, sl
	asrs r1, r6, #0x10
	mov r0, r8
	asrs r2, r0, #0x10
	adds r0, r4, #0
	bl sub_08118600
	ldr r1, [r5, #0x78]
	ldr r0, _08117A98 @ =sub_08115E2C
	cmp r1, r0
	beq _08117A82
	adds r0, r4, #0
	bl sub_08106AD0
_08117A82:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08117A94: .4byte gUnk_020229E0
_08117A98: .4byte sub_08115E2C

	thumb_func_start sub_08117A9C
sub_08117A9C: @ 0x08117A9C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r6, r0, #0
	ldr r0, [sp, #0x28]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r4, r6, #0
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08117AD8
	ldr r1, [r4, #0x40]
	asrs r1, r1, #8
	lsls r0, r3, #0x18
	asrs r0, r0, #0x18
	subs r1, r1, r0
	b _08117AE2
_08117AD8:
	ldr r1, [r4, #0x40]
	asrs r1, r1, #8
	lsls r0, r3, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
_08117AE2:
	mov ip, r1
	ldr r1, [r6, #0x44]
	asrs r1, r1, #8
	lsls r0, r5, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	mov sl, r1
	movs r5, #0
	ldr r1, _08117B20 @ =gUnk_020229D4
	movs r2, #1
	ldr r3, [r1]
	adds r0, r3, #0
	ands r0, r2
	ldr r7, _08117B24 @ =gUnk_020229E0
	adds r4, #0x87
	str r4, [sp, #4]
	adds r4, r6, #0
	adds r4, #0x56
	str r4, [sp]
	mov r4, sb
	lsls r4, r4, #0x10
	mov sb, r4
	mov r4, r8
	lsls r4, r4, #0x10
	mov r8, r4
	cmp r0, #0
	bne _08117B28
	orrs r3, r2
	str r3, [r1]
	b _08117B44
	.align 2, 0
_08117B20: .4byte gUnk_020229D4
_08117B24: .4byte gUnk_020229E0
_08117B28:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0x1f
	bhi _08117B44
	movs r3, #1
	lsls r3, r5
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	cmp r0, #0
	bne _08117B28
	orrs r2, r3
	str r2, [r1]
_08117B44:
	lsls r1, r5, #3
	adds r1, r1, r5
	lsls r1, r1, #2
	adds r1, r1, r7
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	movs r3, #0
	mov r0, ip
	strh r0, [r1, #6]
	mov r4, sl
	strh r4, [r1, #8]
	strb r3, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r3, [r1, #4]
	strb r3, [r1, #5]
	movs r0, #0xd4
	strb r0, [r1, #0xc]
	strb r3, [r1, #0xe]
	strb r3, [r1, #0xf]
	ldr r4, [sp, #4]
	ldrb r0, [r4]
	strb r0, [r1, #0x10]
	strh r2, [r1, #0x22]
	strh r2, [r1, #0x1a]
	strh r2, [r1, #0x1c]
	strh r2, [r1, #0x1e]
	strh r2, [r1, #0x20]
	strb r3, [r1, #0x11]
	strh r2, [r1, #0x12]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldr r2, [sp]
	ldrb r0, [r2]
	bl CreateObject
	str r6, [r0, #0x70]
	adds r4, r0, #0
	mov r0, sb
	asrs r1, r0, #0x10
	mov r0, r8
	asrs r2, r0, #0x10
	adds r0, r4, #0
	bl sub_08118600
	adds r0, r4, #0
	bl sub_08106AD0
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08117BBC
sub_08117BBC: @ 0x08117BBC
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _08117BF0 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08117BF4 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08117BF8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r6, r0, r1
	b _08117C00
	.align 2, 0
_08117BF0: .4byte ObjectMain
_08117BF4: .4byte ObjectDestroy
_08117BF8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
_08117C00:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r6, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r6, #8]
	ldr r0, [r6, #0xc]
	movs r1, #1
	orrs r0, r1
	movs r5, #4
	orrs r0, r5
	movs r1, #2
	orrs r0, r1
	str r0, [r6, #0xc]
	ldr r1, [r6, #0x5c]
	movs r2, #8
	rsbs r2, r2, #0
	ands r1, r2
	movs r0, #3
	orrs r1, r0
	ldr r0, [r6, #0x68]
	ands r0, r2
	str r0, [r6, #0x68]
	ldr r0, _08117C7C @ =0x001080A0
	orrs r1, r0
	str r1, [r6, #0x5c]
	adds r1, r6, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _08117C80 @ =sub_08118AD4
	str r0, [r6, #0x7c]
	movs r4, #4
	rsbs r4, r4, #0
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #4
	bl sub_0803E2B0
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #4
	bl sub_0803E308
	adds r0, r6, #0
	bl ObjectInitSprite
	movs r0, #0x90
	lsls r0, r0, #2
	strh r0, [r6, #0x24]
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08117C7C: .4byte 0x001080A0
_08117C80: .4byte sub_08118AD4

	thumb_func_start sub_08117C84
sub_08117C84: @ 0x08117C84
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r4, r0, #0
	ldr r0, _08117CBC @ =sub_08117DA0
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _08117CC0 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08117CC4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08117CCC
	.align 2, 0
_08117CBC: .4byte sub_08117DA0
_08117CC0: .4byte sub_0803DCCC
_08117CC4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08117CCC:
	adds r7, r0, #0
	bl sub_0803E3B0
	movs r0, #3
	mov sb, r0
	mov r1, sb
	strb r1, [r7]
	ldr r0, [r4, #0x40]
	str r0, [r7, #0x34]
	ldr r0, [r4, #0x44]
	str r0, [r7, #0x38]
	str r4, [r7, #0x44]
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r1, r7, #0
	adds r1, #0x42
	strh r0, [r1]
	ldr r4, _08117D58 @ =gRngVal
	ldr r0, [r4]
	ldr r6, _08117D5C @ =0x00196225
	adds r2, r0, #0
	muls r2, r6, r2
	ldr r5, _08117D60 @ =0x3C6EF35F
	adds r2, r2, r5
	str r2, [r4]
	lsrs r1, r2, #0x10
	movs r0, #0x3f
	ands r1, r0
	subs r0, #0xbf
	subs r0, r0, r1
	strh r0, [r7, #0x3e]
	muls r2, r6, r2
	adds r2, r2, r5
	str r2, [r4]
	lsrs r1, r2, #0x10
	movs r0, #0x1f
	mov r8, r0
	ands r1, r0
	movs r3, #0x10
	subs r1, r3, r1
	lsls r1, r1, #8
	ldr r0, [r7, #0x34]
	adds r0, r0, r1
	str r0, [r7, #0x34]
	adds r1, r2, #0
	muls r1, r6, r1
	adds r1, r1, r5
	str r1, [r4]
	lsrs r0, r1, #0x10
	mov r2, r8
	ands r0, r2
	subs r3, r3, r0
	lsls r3, r3, #8
	ldr r0, [r7, #0x38]
	adds r0, r0, r3
	str r0, [r7, #0x38]
	adds r0, r1, #0
	muls r0, r6, r0
	adds r0, r0, r5
	str r0, [r4]
	lsrs r0, r0, #0x10
	mov r1, sb
	ands r0, r1
	cmp r0, #2
	beq _08117D64
	cmp r0, #3
	beq _08117D68
	movs r4, #9
	b _08117D6A
	.align 2, 0
_08117D58: .4byte gRngVal
_08117D5C: .4byte 0x00196225
_08117D60: .4byte 0x3C6EF35F
_08117D64:
	movs r4, #0xa
	b _08117D6A
_08117D68:
	movs r4, #0xb
_08117D6A:
	ldrh r1, [r7, #6]
	movs r2, #0x80
	lsls r2, r2, #7
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r7, #6]
	adds r1, r7, #0
	adds r1, #0xc
	ldr r2, _08117D98 @ =0x06012000
	ldr r3, _08117D9C @ =0x00000291
	str r4, [sp]
	movs r0, #6
	str r0, [sp, #4]
	adds r0, r7, #0
	bl sub_080709F8
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08117D98: .4byte 0x06012000
_08117D9C: .4byte 0x00000291

	thumb_func_start sub_08117DA0
sub_08117DA0: @ 0x08117DA0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r2, _08117DC4 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	adds r5, r2, #0
	cmp r0, #0
	beq _08117DC8
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08117DD0
	.align 2, 0
_08117DC4: .4byte gCurTask
_08117DC8:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08117DD0:
	adds r3, r0, #0
	ldrh r1, [r3, #6]
	movs r4, #0x80
	lsls r4, r4, #5
	adds r0, r4, #0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _08117DEC
	ldr r0, [r5]
	bl TaskDestroy
	b _08117F60
_08117DEC:
	ldr r1, [r3, #0x44]
	cmp r1, #0
	beq _08117E38
	ldrb r0, [r1]
	cmp r0, #0
	beq _08117E04
	ldr r0, [r1, #8]
	ands r0, r4
	cmp r0, #0
	beq _08117E04
	str r2, [r3, #0x44]
	movs r1, #0
_08117E04:
	cmp r1, #0
	beq _08117E38
	ldr r0, _08117E34 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08117EA8
	ldrh r1, [r3, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08117EA8
	adds r0, r3, #0
	bl sub_0803DBC8
	b _08117F60
	.align 2, 0
_08117E34: .4byte gUnk_03000510
_08117E38:
	adds r5, r3, #0
	movs r4, #0
	ldr r2, _08117EA0 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	adds r1, r3, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _08117E7A
	movs r4, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _08117E7A
	movs r4, #2
	movs r7, #0xec
	lsls r7, r7, #2
	adds r0, r2, r7
	ldrh r0, [r0]
	cmp r0, r1
	beq _08117E7A
	movs r4, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _08117E7A
	movs r4, #4
_08117E7A:
	ldr r0, _08117EA4 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r4
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08117EA8
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08117EA8
	adds r0, r5, #0
	bl sub_0803DBC8
	b _08117F60
	.align 2, 0
_08117EA0: .4byte gUnk_02020EE0
_08117EA4: .4byte gUnk_03000510
_08117EA8:
	ldr r0, _08117F30 @ =gUnk_0203AD44
	ldrb r0, [r0]
	ldrh r7, [r3, #0x3e]
	mov r8, r7
	ldrh r1, [r3, #4]
	mov ip, r1
	cmp r0, #0
	beq _08117EF4
	ldr r6, _08117F34 @ =gCurLevelInfo
	adds r1, r3, #0
	adds r1, #0x42
	ldrh r4, [r1]
	ldr r5, _08117F38 @ =gUnk_02026D50
_08117EC2:
	subs r2, r0, #1
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r1, r0, r6
	movs r7, #0xbf
	lsls r7, r7, #3
	adds r0, r1, r7
	ldrh r0, [r0]
	cmp r0, r4
	bne _08117EEC
	adds r7, #0x66
	adds r0, r1, r7
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08117F06
_08117EEC:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _08117EC2
_08117EF4:
	movs r0, #1
	cmp r0, #0
	beq _08117F06
	ldrh r1, [r3, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r3, #6]
_08117F06:
	ldrh r1, [r3, #6]
	movs r0, #4
	movs r2, #0
	orrs r1, r0
	strh r1, [r3, #6]
	mov r0, r8
	subs r0, #0x10
	strh r0, [r3, #0x3e]
	mov r0, ip
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x18
	ble _08117F3C
	movs r6, #0x80
	lsls r6, r6, #5
	adds r0, r6, #0
	orrs r1, r0
	strh r1, [r3, #6]
	b _08117F60
	.align 2, 0
_08117F30: .4byte gUnk_0203AD44
_08117F34: .4byte gCurLevelInfo
_08117F38: .4byte gUnk_02026D50
_08117F3C:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r1, r0
	cmp r1, #0
	bne _08117F5A
	movs r7, #0x3c
	ldrsh r1, [r3, r7]
	ldr r0, [r3, #0x34]
	adds r0, r0, r1
	str r0, [r3, #0x34]
	movs r0, #0x3e
	ldrsh r1, [r3, r0]
	ldr r0, [r3, #0x38]
	subs r0, r0, r1
	str r0, [r3, #0x38]
_08117F5A:
	adds r0, r3, #0
	bl sub_0806FAC8
_08117F60:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08117F6C
sub_08117F6C: @ 0x08117F6C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r4, r0, #0
	ldr r0, _08117FA0 @ =sub_08118064
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _08117FA4 @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08117FA8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r7, r0, r1
	b _08117FB0
	.align 2, 0
_08117FA0: .4byte sub_08118064
_08117FA4: .4byte sub_0803DCCC
_08117FA8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
_08117FB0:
	adds r0, r7, #0
	bl sub_0803E3B0
	movs r0, #0
	mov r8, r0
	movs r0, #3
	strb r0, [r7]
	ldr r0, [r4, #0x40]
	str r0, [r7, #0x34]
	ldr r0, [r4, #0x44]
	str r0, [r7, #0x38]
	str r4, [r7, #0x44]
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r1, r7, #0
	adds r1, #0x42
	strh r0, [r1]
	ldr r3, _08118050 @ =gRngVal
	ldr r0, [r3]
	ldr r5, _08118054 @ =0x00196225
	adds r2, r0, #0
	muls r2, r5, r2
	ldr r4, _08118058 @ =0x3C6EF35F
	adds r2, r2, r4
	str r2, [r3]
	lsrs r0, r2, #0x10
	movs r1, #0x3f
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	strh r0, [r7, #0x3e]
	muls r2, r5, r2
	adds r2, r2, r4
	str r2, [r3]
	lsrs r0, r2, #0x10
	movs r6, #0x1f
	ands r0, r6
	movs r1, #0x10
	subs r1, r1, r0
	lsls r1, r1, #8
	ldr r0, [r7, #0x34]
	adds r0, r0, r1
	str r0, [r7, #0x34]
	adds r0, r2, #0
	muls r0, r5, r0
	adds r0, r0, r4
	str r0, [r3]
	lsrs r0, r0, #0x10
	ands r0, r6
	movs r1, #8
	subs r1, r1, r0
	lsls r1, r1, #8
	ldr r0, [r7, #0x38]
	adds r0, r0, r1
	str r0, [r7, #0x38]
	ldrh r1, [r7, #6]
	movs r2, #0x80
	lsls r2, r2, #7
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r7, #6]
	adds r1, r7, #0
	adds r1, #0xc
	ldr r2, _0811805C @ =0x06012000
	ldr r3, _08118060 @ =0x000002A6
	mov r0, r8
	str r0, [sp]
	movs r0, #6
	str r0, [sp, #4]
	adds r0, r7, #0
	bl sub_080709F8
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08118050: .4byte gRngVal
_08118054: .4byte 0x00196225
_08118058: .4byte 0x3C6EF35F
_0811805C: .4byte 0x06012000
_08118060: .4byte 0x000002A6

	thumb_func_start sub_08118064
sub_08118064: @ 0x08118064
	push {r4, r5, r6, r7, lr}
	ldr r2, _08118084 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	adds r5, r2, #0
	cmp r0, #0
	beq _08118088
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08118090
	.align 2, 0
_08118084: .4byte gCurTask
_08118088:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08118090:
	adds r3, r0, #0
	ldrh r1, [r3, #6]
	movs r4, #0x80
	lsls r4, r4, #5
	adds r0, r4, #0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _081180AC
	ldr r0, [r5]
	bl TaskDestroy
	b _08118218
_081180AC:
	ldr r1, [r3, #0x44]
	cmp r1, #0
	beq _081180F8
	ldrb r0, [r1]
	cmp r0, #0
	beq _081180C4
	ldr r0, [r1, #8]
	ands r0, r4
	cmp r0, #0
	beq _081180C4
	str r2, [r3, #0x44]
	movs r1, #0
_081180C4:
	cmp r1, #0
	beq _081180F8
	ldr r0, _081180F4 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08118168
	ldrh r1, [r3, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08118168
	adds r0, r3, #0
	bl sub_0803DBC8
	b _08118218
	.align 2, 0
_081180F4: .4byte gUnk_03000510
_081180F8:
	adds r5, r3, #0
	movs r4, #0
	ldr r2, _08118160 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	adds r1, r3, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _0811813A
	movs r4, #1
	movs r6, #0x82
	lsls r6, r6, #2
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _0811813A
	movs r4, #2
	movs r7, #0xec
	lsls r7, r7, #2
	adds r0, r2, r7
	ldrh r0, [r0]
	cmp r0, r1
	beq _0811813A
	movs r4, #3
	movs r6, #0xab
	lsls r6, r6, #3
	adds r0, r2, r6
	ldrh r0, [r0]
	cmp r0, r1
	beq _0811813A
	movs r4, #4
_0811813A:
	ldr r0, _08118164 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r4
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _08118168
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08118168
	adds r0, r5, #0
	bl sub_0803DBC8
	b _08118218
	.align 2, 0
_08118160: .4byte gUnk_02020EE0
_08118164: .4byte gUnk_03000510
_08118168:
	ldr r0, _081181E8 @ =gUnk_0203AD44
	ldrb r0, [r0]
	ldrh r7, [r3, #0x3e]
	mov ip, r7
	cmp r0, #0
	beq _081181B0
	ldr r6, _081181EC @ =gCurLevelInfo
	adds r1, r3, #0
	adds r1, #0x42
	ldrh r4, [r1]
	ldr r5, _081181F0 @ =gUnk_02026D50
_0811817E:
	subs r2, r0, #1
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r1, r0, r6
	movs r7, #0xbf
	lsls r7, r7, #3
	adds r0, r1, r7
	ldrh r0, [r0]
	cmp r0, r4
	bne _081181A8
	adds r7, #0x66
	adds r0, r1, r7
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _081181C2
_081181A8:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _0811817E
_081181B0:
	movs r0, #1
	cmp r0, #0
	beq _081181C2
	ldrh r1, [r3, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r3, #6]
_081181C2:
	ldrh r1, [r3, #6]
	movs r0, #4
	movs r2, #0
	orrs r1, r0
	strh r1, [r3, #6]
	mov r0, ip
	subs r0, #0xc
	strh r0, [r3, #0x3e]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _081181F4
	movs r6, #0x80
	lsls r6, r6, #5
	adds r0, r6, #0
	orrs r1, r0
	strh r1, [r3, #6]
	b _08118218
	.align 2, 0
_081181E8: .4byte gUnk_0203AD44
_081181EC: .4byte gCurLevelInfo
_081181F0: .4byte gUnk_02026D50
_081181F4:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r1, r0
	cmp r1, #0
	bne _08118212
	movs r7, #0x3c
	ldrsh r1, [r3, r7]
	ldr r0, [r3, #0x34]
	adds r0, r0, r1
	str r0, [r3, #0x34]
	movs r0, #0x3e
	ldrsh r1, [r3, r0]
	ldr r0, [r3, #0x38]
	subs r0, r0, r1
	str r0, [r3, #0x38]
_08118212:
	adds r0, r3, #0
	bl sub_0806FAC8
_08118218:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08118220
sub_08118220: @ 0x08118220
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	ldr r0, _08118258 @ =sub_08118310
	movs r2, #0xd4
	lsls r2, r2, #6
	ldr r1, _0811825C @ =sub_0803DCCC
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08118260
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _08118268
	.align 2, 0
_08118258: .4byte sub_08118310
_0811825C: .4byte sub_0803DCCC
_08118260:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_08118268:
	adds r0, r4, #0
	bl sub_0803E3B0
	movs r2, #0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	adds r7, r4, #0
	adds r7, #0x42
	movs r1, #0
	mov r8, r1
	strh r0, [r7]
	lsls r1, r6, #2
	adds r1, r1, r6
	lsls r1, r1, #1
	movs r0, #0xe0
	subs r0, r0, r1
	lsls r0, r0, #8
	str r0, [r4, #0x34]
	movs r0, #0xa0
	lsls r0, r0, #8
	str r0, [r4, #0x38]
	strh r6, [r4, #8]
	adds r1, r4, #0
	adds r1, #0xc
	ldr r5, _081182F4 @ =0x00000389
	movs r0, #2
	str r0, [sp]
	str r2, [sp, #4]
	adds r0, r4, #0
	movs r2, #2
	adds r3, r5, #0
	bl sub_080709F8
	adds r4, #0x2b
	mov r0, r8
	strb r0, [r4]
	ldr r2, _081182F8 @ =gUnk_02020EE0
	ldr r0, _081182FC @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	bne _08118300
	adds r0, r5, #0
	bl sub_0803DF24
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08118304
	adds r0, r5, #0
	movs r1, #0
	bl sub_0803DFAC
	strb r0, [r4]
	b _08118304
	.align 2, 0
_081182F4: .4byte 0x00000389
_081182F8: .4byte gUnk_02020EE0
_081182FC: .4byte gUnk_0203AD3C
_08118300:
	mov r1, r8
	strb r1, [r4]
_08118304:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08118310
sub_08118310: @ 0x08118310
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	ldr r2, _08118338 @ =gCurTask
	ldr r3, [r2]
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811833C
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08118344
	.align 2, 0
_08118338: .4byte gCurTask
_0811833C:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08118344:
	adds r5, r0, #0
	ldr r6, [r5, #0x44]
	ldrh r1, [r5, #6]
	movs r4, #0x80
	lsls r4, r4, #5
	adds r0, r4, #0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	beq _08118362
	ldr r0, [r2]
	bl TaskDestroy
	b _081185EE
_08118362:
	adds r1, r6, #0
	cmp r6, #0
	beq _081183AC
	ldrb r0, [r6]
	cmp r0, #0
	beq _0811837A
	ldr r0, [r6, #8]
	ands r0, r4
	cmp r0, #0
	beq _0811837A
	str r3, [r5, #0x44]
	movs r1, #0
_0811837A:
	cmp r1, #0
	beq _081183AC
	ldr r0, _081183A8 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _0811841C
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _0811841C
	adds r0, r5, #0
	bl sub_0803DBC8
	b _081185EE
	.align 2, 0
_081183A8: .4byte gUnk_03000510
_081183AC:
	adds r4, r5, #0
	movs r3, #0
	ldr r2, _08118414 @ =gUnk_02020EE0
	adds r0, r2, #0
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _081183EE
	movs r3, #1
	movs r7, #0x82
	lsls r7, r7, #2
	adds r0, r2, r7
	ldrh r0, [r0]
	cmp r0, r1
	beq _081183EE
	movs r3, #2
	movs r7, #0xec
	lsls r7, r7, #2
	adds r0, r2, r7
	ldrh r0, [r0]
	cmp r0, r1
	beq _081183EE
	movs r3, #3
	movs r7, #0xab
	lsls r7, r7, #3
	adds r0, r2, r7
	ldrh r0, [r0]
	cmp r0, r1
	beq _081183EE
	movs r3, #4
_081183EE:
	ldr r0, _08118418 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	movs r0, #1
	lsls r0, r3
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	beq _0811841C
	ldrh r1, [r4, #6]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _0811841C
	adds r0, r4, #0
	bl sub_0803DBC8
	b _081185EE
	.align 2, 0
_08118414: .4byte gUnk_02020EE0
_08118418: .4byte gUnk_03000510
_0811841C:
	ldr r0, _081184EC @ =gUnk_0203AD44
	ldrb r0, [r0]
	movs r1, #0x42
	adds r1, r1, r5
	mov r8, r1
	ldr r3, [r5, #0xc]
	movs r2, #0x26
	adds r2, r2, r5
	mov sb, r2
	adds r7, r5, #0
	adds r7, #0x2b
	cmp r0, #0
	beq _08118478
	ldr r4, _081184F0 @ =gCurLevelInfo
	mov sl, r4
	ldrh r1, [r1]
	str r1, [sp, #0x28]
	ldr r2, _081184F4 @ =gUnk_02026D50
	mov ip, r2
_08118442:
	subs r2, r0, #1
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	mov r4, sl
	adds r1, r0, r4
	movs r4, #0xbf
	lsls r4, r4, #3
	adds r0, r1, r4
	ldrh r0, [r0]
	ldr r4, [sp, #0x28]
	cmp r0, r4
	bne _08118470
	ldr r4, _081184F8 @ =0x0000065E
	adds r0, r1, r4
	ldrb r0, [r0]
	lsls r0, r0, #1
	add r0, ip
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0811848A
_08118470:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _08118442
_08118478:
	movs r0, #1
	cmp r0, #0
	beq _0811848A
	ldrh r1, [r5, #6]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r5, #6]
_0811848A:
	ldr r2, _081184FC @ =gUnk_02020EE0
	ldr r0, _08118500 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r4, r8
	ldrh r4, [r4]
	cmp r0, r4
	bne _08118540
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r1
	cmp r0, #0
	beq _0811850C
	cmp r3, #0
	bne _08118566
	ldrh r1, [r5, #0x18]
	mov r0, sb
	ldrb r2, [r0]
	movs r0, #2
	bl sub_0803DE54
	adds r4, r5, #0
	adds r4, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _08118504 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _08118508 @ =0x0400000A
	adds r0, r4, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #8]
	b _08118566
	.align 2, 0
_081184EC: .4byte gUnk_0203AD44
_081184F0: .4byte gCurLevelInfo
_081184F4: .4byte gUnk_02026D50
_081184F8: .4byte 0x0000065E
_081184FC: .4byte gUnk_02020EE0
_08118500: .4byte gUnk_0203AD3C
_08118504: .4byte 0xFFF7FFFF
_08118508: .4byte 0x0400000A
_0811850C:
	cmp r3, #0
	bne _08118566
	movs r0, #2
	bl sub_081570B0
	adds r3, r5, #0
	adds r3, #0xc
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, _08118538 @ =0xFFF7FFFF
	ands r0, r1
	str r0, [r3, #8]
	ldr r2, _0811853C @ =0x0400000A
	adds r0, r3, #0
	mov r1, sp
	bl CpuSet
	ldrb r1, [r5, #1]
	mov r0, sp
	bl sub_0815521C
	b _08118566
	.align 2, 0
_08118538: .4byte 0xFFF7FFFF
_0811853C: .4byte 0x0400000A
_08118540:
	cmp r3, #0
	beq _0811855C
	ldrh r1, [r5, #6]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _0811855C
	adds r0, r3, #0
	bl sub_08157190
	str r4, [r5, #0xc]
_0811855C:
	ldr r0, [r5, #0x14]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #0x14]
_08118566:
	ldr r2, _081185A4 @ =gUnk_02020EE0
	ldr r0, _081185A8 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x60
	ldrh r0, [r0]
	mov r1, r8
	ldrh r1, [r1]
	cmp r0, r1
	bne _081185B0
	ldrb r0, [r7]
	cmp r0, #0
	bne _081185B4
	ldr r4, _081185AC @ =0x00000389
	adds r0, r4, #0
	bl sub_0803DF24
	strb r0, [r7]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _081185B4
	adds r0, r4, #0
	movs r1, #0
	bl sub_0803DFAC
	b _081185B2
	.align 2, 0
_081185A4: .4byte gUnk_02020EE0
_081185A8: .4byte gUnk_0203AD3C
_081185AC: .4byte 0x00000389
_081185B0:
	movs r0, #0
_081185B2:
	strb r0, [r7]
_081185B4:
	movs r2, #8
	ldrsh r0, [r5, r2]
	cmp r0, #1
	beq _081185CE
	cmp r0, #2
	beq _081185DC
	adds r0, r6, #0
	adds r0, #0xbe
	ldrb r0, [r0]
	adds r0, #2
	mov r4, sb
	strb r0, [r4]
	b _081185E8
_081185CE:
	adds r0, r6, #0
	adds r0, #0xbf
	ldrb r0, [r0]
	adds r0, #2
	mov r7, sb
	strb r0, [r7]
	b _081185E8
_081185DC:
	adds r0, r6, #0
	adds r0, #0xc0
	ldrb r0, [r0]
	adds r0, #2
	mov r1, sb
	strb r0, [r1]
_081185E8:
	adds r0, r5, #0
	bl sub_0806FAC8
_081185EE:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08118600
sub_08118600: @ 0x08118600
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	ldr r2, _08118668 @ =sub_08118AC8
	movs r1, #0
	bl ObjectSetFunc
	ldr r2, _0811866C @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08118670 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08118674 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	adds r2, r5, #0
	adds r2, #0x83
	lsrs r0, r0, #0x10
	movs r1, #3
	ands r0, r1
	ldrb r1, [r2]
	adds r0, r0, r1
	strb r0, [r2]
	adds r0, r5, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r0, #2
	strh r6, [r0]
	ldr r1, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #1
	orrs r1, r0
	str r1, [r5, #8]
	cmp r4, #0
	bne _08118658
	cmp r6, #0
	bne _08118658
	movs r0, #0x41
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r5, #8]
_08118658:
	adds r1, r5, #0
	adds r1, #0x9f
	movs r0, #0
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08118668: .4byte sub_08118AC8
_0811866C: .4byte gRngVal
_08118670: .4byte 0x00196225
_08118674: .4byte 0x3C6EF35F

	thumb_func_start sub_08118678
sub_08118678: @ 0x08118678
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _081186B4 @ =sub_08114CBC
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x3c
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r2, [r0]
	adds r0, r4, #0
	bl sub_0803D46C
	adds r4, #0xac
	str r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081186B4: .4byte sub_08114CBC

	thumb_func_start sub_081186B8
sub_081186B8: @ 0x081186B8
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _081186EC @ =sub_081186F0
	movs r1, #1
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x52
	movs r1, #0x40
	strh r1, [r0]
	ldr r0, [r4, #8]
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x1c
	strh r0, [r4, #4]
	adds r4, #0x9f
	strb r2, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081186EC: .4byte sub_081186F0

	thumb_func_start sub_081186F0
sub_081186F0: @ 0x081186F0
	push {lr}
	adds r3, r0, #0
	ldr r0, [r3, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r3, #8]
	adds r2, r3, #0
	adds r2, #0x54
	ldr r0, _08118730 @ =gUnk_0203AD40
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsls r0, r0, #1
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r2]
	adds r0, r3, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r0, #0x40
	strb r1, [r0]
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0811872C
	adds r0, r3, #0
	bl sub_08115180
_0811872C:
	pop {r0}
	bx r0
	.align 2, 0
_08118730: .4byte gUnk_0203AD40

	thumb_func_start sub_08118734
sub_08118734: @ 0x08118734
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08118770 @ =sub_08115284
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08118774 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08118778 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0811877C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r0, r0, #0x10
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08118788
	ldr r1, [r4, #0x40]
	ldr r0, _08118780 @ =0x000077FF
	cmp r1, r0
	bgt _08118784
	movs r0, #0x90
	lsls r0, r0, #1
	b _08118786
	.align 2, 0
_08118770: .4byte sub_08115284
_08118774: .4byte gRngVal
_08118778: .4byte 0x00196225
_0811877C: .4byte 0x3C6EF35F
_08118780: .4byte 0x000077FF
_08118784:
	ldr r0, _08118798 @ =0x0000FEE0
_08118786:
	strh r0, [r4, #4]
_08118788:
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08118798: .4byte 0x0000FEE0

	thumb_func_start sub_0811879C
sub_0811879C: @ 0x0811879C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _081187CC @ =sub_081187D0
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0xc
	strh r0, [r4, #4]
	adds r4, #0x9f
	strb r2, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081187CC: .4byte sub_081187D0

	thumb_func_start sub_081187D0
sub_081187D0: @ 0x081187D0
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r2, #8]
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _081187EE
	adds r0, r2, #0
	bl sub_08114BA0
_081187EE:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_081187F4
sub_081187F4: @ 0x081187F4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08118824 @ =sub_08115504
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x24
	strh r0, [r4, #4]
	adds r4, #0x9f
	strb r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08118824: .4byte sub_08115504

	thumb_func_start sub_08118828
sub_08118828: @ 0x08118828
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08118864 @ =sub_08115638
	movs r1, #1
	bl ObjectSetFunc
	adds r0, r4, #0
	bl sub_0803D368
	adds r1, r4, #0
	adds r1, #0xac
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x24
	strh r0, [r4, #4]
	adds r4, #0x9f
	strb r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08118864: .4byte sub_08115638

	thumb_func_start sub_08118868
sub_08118868: @ 0x08118868
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08118898 @ =sub_08115E2C
	movs r1, #1
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	movs r0, #0x24
	strh r0, [r4, #4]
	adds r4, #0x9e
	strb r2, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08118898: .4byte sub_08115E2C

	thumb_func_start sub_0811889C
sub_0811889C: @ 0x0811889C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _081188E8 @ =sub_08116654
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r0, #0xf0
	lsls r0, r0, #7
	str r0, [r4, #0x40]
	movs r0, #0xb0
	lsls r0, r0, #7
	str r0, [r4, #0x44]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	bl sub_080700D8
	movs r0, #4
	adds r1, r4, #0
	bl sub_0806FE64
	movs r1, #0xc0
	lsls r1, r1, #2
	strh r1, [r4, #0x24]
	adds r4, #0xb4
	ldr r0, [r4]
	strh r1, [r0, #0x20]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081188E8: .4byte sub_08116654

	thumb_func_start sub_081188EC
sub_081188EC: @ 0x081188EC
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _08118920 @ =sub_08116920
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r0, #0xd0
	lsls r0, r0, #7
	str r0, [r4, #0x40]
	ldr r0, _08118924 @ =0xFFFFEC00
	str r0, [r4, #0x44]
	strh r1, [r4, #4]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08118920: .4byte sub_08116920
_08118924: .4byte 0xFFFFEC00

	thumb_func_start sub_08118928
sub_08118928: @ 0x08118928
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _0811895C @ =sub_081169E4
	movs r1, #0
	bl ObjectSetFunc
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	strh r0, [r4, #4]
	movs r0, #0xd0
	lsls r0, r0, #7
	str r0, [r4, #0x40]
	ldr r0, _08118960 @ =0xFFFFEC00
	str r0, [r4, #0x44]
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811895C: .4byte sub_081169E4
_08118960: .4byte 0xFFFFEC00

	thumb_func_start sub_08118964
sub_08118964: @ 0x08118964
	push {lr}
	adds r2, r0, #0
	ldr r1, [r2, #8]
	movs r0, #4
	orrs r1, r0
	str r1, [r2, #8]
	ldrh r0, [r2, #4]
	subs r0, #1
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08118988
	ldr r0, _0811898C @ =0xFFFFFDFF
	ands r1, r0
	str r1, [r2, #8]
	adds r0, r2, #0
	bl sub_08114BA0
_08118988:
	pop {r0}
	bx r0
	.align 2, 0
_0811898C: .4byte 0xFFFFFDFF

	thumb_func_start sub_08118990
sub_08118990: @ 0x08118990
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, [r4, #8]
	movs r3, #0x40
	orrs r0, r3
	str r0, [r4, #8]
	adds r1, r4, #0
	adds r1, #0x80
	movs r0, #1
	strh r0, [r1]
	ldr r0, [r4, #0x5c]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #7
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _081189D4 @ =sub_081164E0
	str r0, [r4, #0x7c]
	ldr r2, _081189D8 @ =gUnk_0203AD10
	ldr r1, [r2]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _081189DC
	orrs r1, r3
	str r1, [r2]
	b _081189FA
	.align 2, 0
_081189D4: .4byte sub_081164E0
_081189D8: .4byte gUnk_0203AD10
_081189DC:
	movs r0, #0x20
	orrs r1, r0
	str r1, [r2]
	adds r0, r4, #0
	movs r1, #0
	bl sub_08118220
	adds r0, r4, #0
	movs r1, #1
	bl sub_08118220
	adds r0, r4, #0
	movs r1, #2
	bl sub_08118220
_081189FA:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_08118A00
sub_08118A00: @ 0x08118A00
	push {lr}
	adds r1, r0, #0
	ldrh r0, [r1, #4]
	adds r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x40
	ble _08118A18
	adds r0, r1, #0
	bl sub_081170D0
_08118A18:
	pop {r0}
	bx r0

	thumb_func_start sub_08118A1C
sub_08118A1C: @ 0x08118A1C
	push {lr}
	ldr r1, [r0, #8]
	movs r2, #4
	orrs r1, r2
	str r1, [r0, #8]
	ldrh r1, [r0, #4]
	adds r1, #1
	strh r1, [r0, #4]
	lsls r1, r1, #0x10
	movs r0, #0x96
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _08118A56
	ldr r0, _08118A48 @ =gUnk_0203AD10
	ldr r0, [r0]
	ands r0, r2
	cmp r0, #0
	beq _08118A50
	ldr r0, _08118A4C @ =sub_08025A80
	bl sub_08020428
	b _08118A56
	.align 2, 0
_08118A48: .4byte gUnk_0203AD10
_08118A4C: .4byte sub_08025A80
_08118A50:
	ldr r0, _08118A5C @ =sub_0802B4A8
	bl sub_08020428
_08118A56:
	pop {r0}
	bx r0
	.align 2, 0
_08118A5C: .4byte sub_0802B4A8

	thumb_func_start sub_08118A60
sub_08118A60: @ 0x08118A60
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, _08118A90 @ =sub_08117530
	ldr r2, _08118A94 @ =0x00000FFF
	movs r1, #0
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08118A98
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _08118AA0
	.align 2, 0
_08118A90: .4byte sub_08117530
_08118A94: .4byte 0x00000FFF
_08118A98:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_08118AA0:
	adds r0, r4, #0
	bl sub_0803E3B0
	movs r0, #3
	strb r0, [r4]
	ldr r0, [r5, #0x40]
	str r0, [r4, #0x34]
	ldr r0, [r5, #0x44]
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x42
	strh r1, [r0]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_08118AC8
sub_08118AC8: @ 0x08118AC8
	ldr r1, [r0, #8]
	movs r2, #4
	orrs r1, r2
	str r1, [r0, #8]
	bx lr
	.align 2, 0

	thumb_func_start sub_08118AD4
sub_08118AD4: @ 0x08118AD4
	push {r4, lr}
	adds r4, r0, #0
	bl sub_0809F840
	ldr r0, _08118B44 @ =gUnk_03000510
	ldrb r2, [r0, #4]
	adds r1, r4, #0
	adds r1, #0x56
	movs r0, #1
	ldrb r1, [r1]
	lsls r0, r1
	movs r1, #0x10
	orrs r0, r1
	ands r2, r0
	cmp r2, #0
	bne _08118B3C
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0xb
	ands r0, r1
	cmp r0, #0
	beq _08118B3C
	ldr r3, [r4, #0x6c]
	ldrb r0, [r3]
	cmp r0, #0
	bne _08118B3C
	ldr r2, [r3, #0x5c]
	movs r0, #8
	rsbs r0, r0, #0
	ands r0, r2
	mvns r0, r0
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08118B3C
	movs r0, #7
	ands r2, r0
	cmp r2, #3
	bhi _08118B3C
	adds r0, r3, #0
	bl sub_08052E2C
	ldr r0, _08118B48 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x60
	ands r0, r1
	cmp r0, #0
	bne _08118B3C
	ldr r1, _08118B4C @ =gUnk_08357AD4
	adds r0, r4, #0
	bl sub_080860A8
_08118B3C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08118B44: .4byte gUnk_03000510
_08118B48: .4byte gUnk_0203AD10
_08118B4C: .4byte gUnk_08357AD4

	thumb_func_start CreateMirrorToMetaKnight
CreateMirrorToMetaKnight: @ 0x08118B50
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _08118B84 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08118B88 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xbc
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08118B8C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r6, r0, r1
	b _08118B94
	.align 2, 0
_08118B84: .4byte ObjectMain
_08118B88: .4byte ObjectDestroy
_08118B8C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
_08118B94:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r6, #8]
	ldr r1, _08118C10 @ =gUnk_0201CB40
	orrs r0, r1
	str r0, [r6, #8]
	ldr r0, [r6, #0x68]
	movs r4, #8
	rsbs r4, r4, #0
	ands r0, r4
	str r0, [r6, #0x68]
	ldr r0, [r6, #0x5c]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r6, #0x5c]
	ldr r0, [r6, #0x44]
	movs r1, #0x80
	lsls r1, r1, #4
	adds r0, r0, r1
	str r0, [r6, #0x44]
	movs r5, #8
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #8
	bl sub_0803E2B0
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #8
	bl sub_0803E308
	adds r0, r6, #0
	bl ObjectInitSprite
	movs r0, #0xf8
	lsls r0, r0, #3
	strh r0, [r6, #0x24]
	ldr r2, _08118C14 @ =gUnk_08351648
	adds r0, r6, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r6, #0
	bl _call_via_r1
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08118C10: .4byte gUnk_0201CB40
_08118C14: .4byte gUnk_08351648

	thumb_func_start sub_08118C18
sub_08118C18: @ 0x08118C18
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r5, r0, #0
	mov r8, r5
	bl sub_08119094
	movs r0, #1
	movs r1, #9
	movs r2, #0xff
	bl sub_08002888
	ldr r0, [r0]
	movs r1, #0xf0
	lsls r1, r1, #0xc
	ands r0, r1
	lsrs r0, r0, #0x10
	cmp r0, #0xc
	bne _08118C44
	b _08118D58
_08118C44:
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08118C62
	movs r2, #0xa5
	lsls r2, r2, #2
	adds r0, r5, #0
	movs r1, #0
	movs r3, #0xa
	b _08118C6C
_08118C62:
	movs r2, #0xa5
	lsls r2, r2, #2
	adds r0, r5, #0
	movs r1, #0
	movs r3, #3
_08118C6C:
	bl sub_08092944
	adds r1, r5, #0
	adds r1, #0xb4
	str r0, [r1]
	mov r0, r8
	adds r0, #0xb4
	ldr r1, [r0]
	movs r0, #0
	mov sb, r0
	movs r4, #0
	movs r0, #0xf0
	lsls r0, r0, #3
	strh r0, [r1, #0x20]
	movs r0, #1
	movs r1, #9
	movs r2, #0xff
	bl sub_08002888
	ldr r0, [r0]
	movs r1, #0xf0
	lsls r1, r1, #0xc
	ands r0, r1
	lsrs r0, r0, #0x10
	ldr r3, _08118D1C @ =gUnk_08357B3E
	lsls r2, r0, #1
	adds r2, r2, r0
	lsls r2, r2, #1
	adds r0, r3, #4
	adds r0, r2, r0
	ldrh r1, [r0]
	adds r0, r2, r3
	ldrh r6, [r0]
	adds r3, #2
	adds r2, r2, r3
	ldrb r7, [r2]
	str r4, [sp]
	adds r0, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl sub_0808B62C
	mov r2, r8
	adds r2, #0xb8
	str r0, [r2]
	adds r0, #0x2b
	mov r1, sb
	strb r1, [r0]
	ldr r3, _08118D20 @ =gUnk_02020EE0
	ldr r0, _08118D24 @ =gUnk_0203AD3C
	ldrb r1, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r1, r0
	adds r0, r0, r3
	adds r0, #0x60
	ldr r3, [r2]
	adds r1, r3, #0
	adds r1, #0x42
	ldrh r0, [r0]
	adds r4, r2, #0
	ldrh r1, [r1]
	cmp r0, r1
	bne _08118D28
	adds r0, r3, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	cmp r0, #0
	bne _08118D30
	adds r0, r6, #0
	bl sub_0803DF24
	ldr r1, [r4]
	adds r1, #0x2b
	strb r0, [r1]
	ldr r0, [r4]
	adds r0, #0x2b
	ldrb r0, [r0]
	cmp r0, #0xff
	bne _08118D30
	adds r0, r6, #0
	adds r1, r7, #0
	bl sub_0803DFAC
	ldr r1, [r4]
	adds r1, #0x2b
	strb r0, [r1]
	b _08118D30
	.align 2, 0
_08118D1C: .4byte gUnk_08357B3E
_08118D20: .4byte gUnk_02020EE0
_08118D24: .4byte gUnk_0203AD3C
_08118D28:
	adds r0, r3, #0
	adds r0, #0x2b
	mov r2, sb
	strb r2, [r0]
_08118D30:
	ldr r1, [r4]
	movs r0, #0xf0
	lsls r0, r0, #3
	strh r0, [r1, #0x20]
	ldr r1, [r4]
	ldr r0, [r5, #0x44]
	ldr r2, _08118D50 @ =0xFFFFC400
	adds r0, r0, r2
	str r0, [r1, #0x38]
	ldr r2, _08118D54 @ =sub_08119184
	adds r0, r5, #0
	movs r1, #0
	bl ObjectSetFunc
	b _08118D6C
	.align 2, 0
_08118D50: .4byte 0xFFFFC400
_08118D54: .4byte sub_08119184
_08118D58:
	ldr r0, [r5, #8]
	movs r1, #0xa0
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r5, #8]
	ldr r2, _08118D7C @ =sub_081191A8
	adds r0, r5, #0
	movs r1, #2
	bl ObjectSetFunc
_08118D6C:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08118D7C: .4byte sub_081191A8

	thumb_func_start sub_08118D80
sub_08118D80: @ 0x08118D80
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	mov sl, r0
	mov sb, sl
	ldr r0, [r0, #8]
	movs r1, #4
	orrs r0, r1
	mov r1, sl
	str r0, [r1, #8]
	movs r0, #1
	movs r1, #9
	movs r2, #0xff
	bl sub_08002888
	ldr r0, [r0]
	movs r1, #0xf0
	lsls r1, r1, #0xc
	ands r0, r1
	lsrs r7, r0, #0x10
	ldr r4, _08118E40 @ =gCurLevelInfo
	mov r0, sl
	adds r0, #0x56
	ldrb r0, [r0]
	movs r3, #0xcd
	lsls r3, r3, #3
	adds r1, r0, #0
	muls r1, r3, r1
	adds r1, r1, r4
	movs r2, #0xbf
	lsls r2, r2, #3
	adds r1, r1, r2
	ldr r0, _08118E44 @ =gUnk_0203AD3C
	ldrb r5, [r0]
	adds r0, r5, #0
	muls r0, r3, r0
	adds r0, r0, r4
	adds r0, r0, r2
	ldrh r1, [r1]
	ldrh r0, [r0]
	cmp r1, r0
	bne _08118EC0
	mov r1, sl
	adds r1, #0xb8
	ldr r2, [r1]
	adds r3, r2, #0
	adds r3, #0x2b
	ldrb r0, [r3]
	adds r6, r1, #0
	cmp r0, #0
	bne _08118E64
	ldr r1, _08118E48 @ =gUnk_02020EE0
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r5, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r2, #0
	adds r1, #0x42
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08118E50
	ldr r2, _08118E4C @ =gUnk_08357B3E
	mov r8, r2
	lsls r0, r7, #1
	adds r0, r0, r7
	lsls r4, r0, #1
	adds r0, r4, r2
	ldrh r5, [r0]
	adds r0, r5, #0
	bl sub_0803DF24
	ldr r1, [r6]
	adds r1, #0x2b
	strb r0, [r1]
	ldr r0, [r6]
	adds r0, #0x2b
	ldrb r0, [r0]
	cmp r0, #0xff
	bne _08118E54
	mov r0, r8
	adds r0, #2
	adds r0, r4, r0
	ldrb r1, [r0]
	adds r0, r5, #0
	bl sub_0803DFAC
	ldr r1, [r6]
	adds r1, #0x2b
	strb r0, [r1]
	b _08118E54
	.align 2, 0
_08118E40: .4byte gCurLevelInfo
_08118E44: .4byte gUnk_0203AD3C
_08118E48: .4byte gUnk_02020EE0
_08118E4C: .4byte gUnk_08357B3E
_08118E50:
	movs r5, #0
	strb r5, [r3]
_08118E54:
	mov r0, sb
	adds r0, #0xb8
	ldr r1, [r0]
	adds r1, #0x2b
	ldrb r1, [r1]
	adds r6, r0, #0
	cmp r1, #0
	beq _08118EC0
_08118E64:
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [sp]
	mov r4, sp
	ldr r2, _08119074 @ =gUnk_08357B3E
	lsls r0, r7, #1
	adds r0, r0, r7
	lsls r0, r0, #1
	adds r1, r0, r2
	ldrh r1, [r1]
	movs r3, #0
	strh r1, [r4, #0xc]
	mov r1, sp
	adds r2, #2
	adds r0, r0, r2
	ldrh r0, [r0]
	strb r0, [r1, #0x1a]
	movs r0, #0xff
	strb r0, [r1, #0x1b]
	mov r0, sp
	strh r3, [r0, #0x10]
	strh r3, [r0, #0x12]
	strh r3, [r0, #0x14]
	strh r3, [r0, #0x16]
	movs r0, #0x10
	strb r0, [r1, #0x1c]
	mov r2, sp
	ldr r0, [r6]
	adds r0, #0x2b
	ldrb r1, [r0]
	movs r0, #0xf
	ands r0, r1
	strb r0, [r2, #0x1f]
	movs r0, #0x80
	lsls r0, r0, #0xc
	str r0, [sp, #8]
	mov r0, sp
	bl sub_08155128
	mov r0, sp
	ldrb r0, [r0, #0x1f]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	movs r1, #0x10
	bl sub_0803D280
_08118EC0:
	movs r0, #0x56
	add r0, sl
	mov sb, r0
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	ldr r4, _08119078 @ =gCurLevelInfo
	adds r0, r0, r4
	str r0, [sp, #0x2c]
	mov r0, sl
	adds r0, #0x3c
	movs r3, #0
	ldrsb r3, [r0, r3]
	lsls r1, r3, #8
	mov r2, sl
	ldr r0, [r2, #0x40]
	adds r6, r0, r1
	mov r0, sl
	adds r0, #0x3d
	movs r2, #0
	ldrsb r2, [r0, r2]
	lsls r1, r2, #8
	mov r5, sl
	ldr r0, [r5, #0x44]
	adds r7, r0, r1
	mov r0, sl
	adds r0, #0x3e
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r3
	lsls r0, r0, #8
	str r0, [sp, #0x30]
	mov r0, sl
	adds r0, #0x3f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r2
	lsls r0, r0, #8
	str r0, [sp, #0x34]
	movs r0, #0
	mov r8, r0
	ldr r0, _0811907C @ =gUnk_0203AD30
	ldrb r1, [r0]
	mov ip, sb
	cmp r8, r1
	bhs _08118F9C
	movs r3, #0xbf
	lsls r3, r3, #3
	ldr r2, [sp, #0x2c]
	adds r0, r2, r3
	adds r5, r4, #0
	mov sb, r5
	ldrh r0, [r0]
	str r0, [sp, #0x3c]
	adds r4, r1, #0
_08118F34:
	movs r0, #0xd4
	lsls r0, r0, #1
	mov r1, r8
	muls r1, r0, r1
	ldr r0, _08119080 @ =gUnk_02020EE0
	adds r2, r1, r0
	movs r0, #0xcd
	lsls r0, r0, #3
	mov r1, r8
	muls r1, r0, r1
	adds r0, r1, #0
	add r0, sb
	adds r0, r0, r3
	ldr r5, [sp, #0x3c]
	ldrh r0, [r0]
	cmp r5, r0
	bne _08118F8E
	movs r1, #0x8c
	lsls r1, r1, #1
	adds r0, r2, r1
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08118F8E
	ldr r0, [r2, #0xc]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _08118F8E
	ldr r1, [r2, #0x40]
	cmp r6, r1
	bgt _08118F8E
	ldr r5, [sp, #0x30]
	adds r0, r6, r5
	cmp r0, r1
	blt _08118F8E
	ldr r1, [r2, #0x44]
	cmp r7, r1
	bgt _08118F8E
	ldr r2, [sp, #0x34]
	adds r0, r7, r2
	cmp r0, r1
	bge _08118FA2
_08118F8E:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	cmp r8, r4
	blo _08118F34
_08118F9C:
	movs r5, #0
	cmp r5, #0
	beq _0811905C
_08118FA2:
	movs r0, #0
	ldr r2, _0811907C @ =gUnk_0203AD30
	ldrb r1, [r2]
	cmp r0, r1
	bhs _08118FB6
_08118FAC:
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r1
	blo _08118FAC
_08118FB6:
	mov r5, ip
	ldrb r1, [r5]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	ldr r1, _08119078 @ =gCurLevelInfo
	adds r0, r0, r1
	ldr r2, _08119084 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #1
	movs r1, #9
	bl sub_08002888
	ldr r1, [r0]
	movs r0, #0xf0
	lsls r0, r0, #0xc
	ands r1, r0
	movs r5, #0
	mov r8, r5
	ldr r0, _08119088 @ =gUnk_08357B24
	add r2, sp, #0x28
	mov sb, r2
	lsrs r1, r1, #0xf
	adds r1, r1, r0
	str r1, [sp, #0x38]
	mov r7, sp
	adds r7, #0x29
_08118FEE:
	movs r0, #0xd4
	lsls r0, r0, #1
	mov r6, r8
	muls r6, r0, r6
	ldr r0, _08119080 @ =gUnk_02020EE0
	adds r5, r6, r0
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _08119048
	ldr r2, [sp, #0x2c]
	movs r1, #0xbf
	lsls r1, r1, #3
	adds r0, r2, r1
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08119048
	ldr r2, [sp, #0x38]
	ldrh r4, [r2]
	adds r0, r4, #0
	mov r1, sb
	adds r2, r7, #0
	bl sub_08002D40
	ldr r0, _0811908C @ =gUnk_02020EEC
	adds r2, r6, r0
	ldr r0, [r2]
	movs r1, #0x80
	lsls r1, r1, #0x10
	orrs r0, r1
	str r0, [r2]
	mov r1, sb
	ldrb r2, [r1]
	ldrb r3, [r7]
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_0805BDF4
_08119048:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	cmp r0, #3
	bls _08118FEE
	ldr r0, _08119090 @ =sub_081191B4
	mov r2, sl
	str r0, [r2, #0x78]
_0811905C:
	mov r5, sl
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08119074: .4byte gUnk_08357B3E
_08119078: .4byte gCurLevelInfo
_0811907C: .4byte gUnk_0203AD30
_08119080: .4byte gUnk_02020EE0
_08119084: .4byte 0x0000065E
_08119088: .4byte gUnk_08357B24
_0811908C: .4byte gUnk_02020EEC
_08119090: .4byte sub_081191B4

	thumb_func_start sub_08119094
sub_08119094: @ 0x08119094
	push {r4, r5, r6, r7, lr}
	ldr r2, _081190EC @ =gCurLevelInfo
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _081190F0 @ =0x0000065E
	adds r0, r0, r1
	ldrb r2, [r0]
	movs r0, #1
	movs r1, #9
	bl sub_08002888
	adds r6, r0, #0
	ldr r1, [r6]
	movs r0, #0xf0
	lsls r0, r0, #0xc
	ands r0, r1
	lsrs r5, r0, #0x10
	cmp r5, #0
	bne _081190CA
	movs r0, #0x80
	lsls r0, r0, #0x18
	orrs r1, r0
	str r1, [r6]
_081190CA:
	ldr r0, [r6]
	adds r4, r0, #0
	cmp r4, #0
	bge _08119170
	movs r2, #1
	lsls r2, r5
	orrs r2, r4
	str r2, [r6]
	ldr r1, _081190F4 @ =0x00000FFF
	adds r0, r2, #0
	ands r0, r1
	cmp r0, r1
	bne _081190F8
	movs r5, #0xc
	adds r4, r2, #0
	b _08119170
	.align 2, 0
_081190EC: .4byte gCurLevelInfo
_081190F0: .4byte 0x0000065E
_081190F4: .4byte 0x00000FFF
_081190F8:
	ldr r2, _08119154 @ =gRngVal
	ldr r1, [r2]
	ldr r0, _08119158 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0811915C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r3, r0, #0x10
	movs r1, #0xf
	lsls r0, r5, #0x10
	lsrs r2, r0, #0x10
	ands r3, r1
	ldr r0, _08119160 @ =0x0000FFFF
	cmp r3, r0
	beq _0811916C
	ldr r4, [r6]
	movs r7, #1
	mov ip, r0
_0811911C:
	subs r5, r3, #1
_0811911E:
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0xc
	beq _0811914E
	adds r0, r7, #0
	lsls r0, r2
	ands r0, r4
	cmp r0, #0
	beq _0811914A
	movs r3, #1
	adds r1, r4, #0
_08119136:
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0xc
	beq _0811914E
	adds r0, r3, #0
	lsls r0, r2
	ands r0, r1
	cmp r0, #0
	bne _08119136
_0811914A:
	cmp r2, #0xc
	bne _08119164
_0811914E:
	movs r2, #0
	b _0811911E
	.align 2, 0
_08119154: .4byte gRngVal
_08119158: .4byte 0x00196225
_0811915C: .4byte 0x3C6EF35F
_08119160: .4byte 0x0000FFFF
_08119164:
	lsls r0, r5, #0x10
	lsrs r3, r0, #0x10
	cmp r3, ip
	bne _0811911C
_0811916C:
	adds r5, r2, #0
	ldr r4, [r6]
_08119170:
	ldr r1, _08119180 @ =0x7FF0FFFF
	ands r1, r4
	lsls r0, r5, #0x10
	orrs r0, r1
	str r0, [r6]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08119180: .4byte 0x7FF0FFFF

	thumb_func_start sub_08119184
sub_08119184: @ 0x08119184
	adds r3, r0, #0
	adds r0, #0xb4
	ldr r2, [r0]
	ldrh r1, [r2, #6]
	ldr r0, _081191A0 @ =0x0000FBFF
	ands r0, r1
	movs r1, #0
	strh r0, [r2, #6]
	adds r0, r3, #0
	adds r0, #0x83
	strb r1, [r0]
	ldr r0, _081191A4 @ =sub_08118D80
	str r0, [r3, #0x78]
	bx lr
	.align 2, 0
_081191A0: .4byte 0x0000FBFF
_081191A4: .4byte sub_08118D80

	thumb_func_start sub_081191A8
sub_081191A8: @ 0x081191A8
	ldr r1, [r0, #8]
	movs r2, #0xa0
	lsls r2, r2, #5
	orrs r1, r2
	str r1, [r0, #8]
	bx lr

	thumb_func_start sub_081191B4
sub_081191B4: @ 0x081191B4
	ldr r1, _081191BC @ =nullsub_126
	str r1, [r0, #0x78]
	bx lr
	.align 2, 0
_081191BC: .4byte nullsub_126

	thumb_func_start nullsub_126
nullsub_126: @ 0x081191C0
	bx lr
	.align 2, 0

	thumb_func_start CreateSmallButton
CreateSmallButton: @ 0x081191C4
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _081191F8 @ =ObjectMain
	ldr r2, _081191FC @ =0x00001001
	ldr r1, _08119200 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xbc
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08119204
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r7, r0, r1
	b _0811920C
	.align 2, 0
_081191F8: .4byte ObjectMain
_081191FC: .4byte 0x00001001
_08119200: .4byte ObjectDestroy
_08119204:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
_0811920C:
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r7, #8]
	ldr r1, _081192B0 @ =0x02608000
	orrs r0, r1
	str r0, [r7, #8]
	ldr r0, [r7, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r7, #0x68]
	ldr r0, [r7, #0x5c]
	ldr r1, _081192B4 @ =0x00308020
	orrs r0, r1
	str r0, [r7, #0x5c]
	ldr r0, [r7, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r7, #0xc]
	adds r1, r7, #0
	adds r1, #0xb8
	movs r0, #0
	strh r0, [r1]
	movs r5, #7
	rsbs r5, r5, #0
	movs r6, #0xa
	rsbs r6, r6, #0
	movs r4, #2
	rsbs r4, r4, #0
	str r4, [sp]
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r6, #0
	movs r3, #7
	bl sub_0803E2B0
	str r4, [sp]
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r6, #0
	movs r3, #7
	bl sub_0803E308
	adds r0, r7, #0
	adds r0, #0x3f
	movs r2, #0
	ldrsb r2, [r0, r2]
	lsls r2, r2, #8
	ldr r0, [r7, #0x44]
	adds r0, r0, r2
	ldr r1, _081192B8 @ =0x00000FFF
	adds r0, r0, r1
	ldr r1, _081192BC @ =0xFFFFF000
	ands r0, r1
	subs r0, r0, r2
	subs r0, #1
	str r0, [r7, #0x44]
	str r0, [r7, #0x4c]
	adds r0, r7, #0
	bl ObjectInitSprite
	ldr r2, _081192C0 @ =gUnk_08351648
	adds r0, r7, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r7, #0
	bl _call_via_r1
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_081192B0: .4byte 0x02608000
_081192B4: .4byte 0x00308020
_081192B8: .4byte 0x00000FFF
_081192BC: .4byte 0xFFFFF000
_081192C0: .4byte gUnk_08351648

	thumb_func_start CreateBigSwitch
CreateBigSwitch: @ 0x081192C4
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _081192F8 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _081192FC @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xbc
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08119300
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r7, r0, r1
	b _08119308
	.align 2, 0
_081192F8: .4byte ObjectMain
_081192FC: .4byte ObjectDestroy
_08119300:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
_08119308:
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r7, #8]
	ldr r1, _08119384 @ =0x02308000
	orrs r0, r1
	str r0, [r7, #8]
	ldr r0, [r7, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r7, #0x68]
	ldr r0, [r7, #0x5c]
	subs r1, #0x80
	orrs r0, r1
	str r0, [r7, #0x5c]
	adds r1, r7, #0
	adds r1, #0xb8
	movs r6, #0
	movs r0, #1
	strh r0, [r1]
	movs r4, #0xe
	rsbs r4, r4, #0
	movs r5, #0x18
	rsbs r5, r5, #0
	str r6, [sp]
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #0xe
	bl sub_0803E2B0
	str r6, [sp]
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #0xe
	bl sub_0803E308
	adds r0, r7, #0
	bl ObjectInitSprite
	ldr r2, _08119388 @ =gUnk_08351648
	adds r0, r7, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r7, #0
	bl _call_via_r1
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08119384: .4byte 0x02308000
_08119388: .4byte gUnk_08351648

	thumb_func_start sub_0811938C
sub_0811938C: @ 0x0811938C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	ldr r2, _081193E0 @ =sub_08119980
	movs r1, #0
	bl ObjectSetFunc
	adds r0, r4, #0
	adds r0, #0xb8
	ldrh r0, [r0]
	cmp r0, #0
	beq _081193F0
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	ldr r3, _081193E4 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _081193E8 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #2
	bl sub_08002888
	ldr r0, [r0]
	cmp r0, #0
	beq _081193F0
	ldr r0, _081193EC @ =sub_08119C0C
	str r0, [r4, #0x78]
	ldr r0, [r4, #8]
	movs r1, #0xf4
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	b _08119426
	.align 2, 0
_081193E0: .4byte sub_08119980
_081193E4: .4byte gCurLevelInfo
_081193E8: .4byte 0x0000065E
_081193EC: .4byte sub_08119C0C
_081193F0:
	adds r0, r5, #0
	adds r0, #0xb4
	movs r1, #0
	strh r1, [r0]
	adds r3, r5, #0
	adds r3, #0xb6
	strh r1, [r3]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r2, [r0, #0x18]
	cmp r2, #0
	beq _08119412
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r3]
	b _08119426
_08119412:
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08119426
	movs r1, #0x80
	lsls r1, r1, #3
	adds r0, r1, #0
	orrs r2, r0
	strh r2, [r3]
_08119426:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0811942C
sub_0811942C: @ 0x0811942C
	push {lr}
	mov ip, r0
	ldr r2, [r0, #0x44]
	asrs r2, r2, #8
	ldr r3, _08119478 @ =gCurLevelInfo
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r3
	adds r0, #0xbe
	ldrh r0, [r0]
	subs r0, #0x14
	cmp r2, r0
	blt _081194C0
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #0x40
	orrs r0, r1
	mov r3, ip
	str r0, [r3, #8]
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _0811947C
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811948C
	b _08119488
	.align 2, 0
_08119478: .4byte gCurLevelInfo
_0811947C:
	ldr r3, _081194AC @ =0xFFFFFE00
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0811948C
_08119488:
	movs r0, #0
	strh r0, [r1]
_0811948C:
	mov r1, ip
	adds r1, #0x52
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _081194B0
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _081194C0
	b _081194BC
	.align 2, 0
_081194AC: .4byte 0xFFFFFE00
_081194B0:
	ldr r3, _081194D0 @ =0xFFFFFE00
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _081194C0
_081194BC:
	movs r0, #0
	strh r0, [r1]
_081194C0:
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	bne _081194D4
	movs r0, #1
	b _081194D6
	.align 2, 0
_081194D0: .4byte 0xFFFFFE00
_081194D4:
	movs r0, #0
_081194D6:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_081194DC
sub_081194DC: @ 0x081194DC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov r8, r0
	bl sub_0811942C
	cmp r0, #0
	bne _081194F4
	b _081197C0
_081194F4:
	mov r0, r8
	bl sub_08039490
	adds r4, r0, #0
	mov r1, sp
	mov r0, r8
	ldr r2, [r0, #0x40]
	asrs r2, r2, #8
	adds r0, #0x3c
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r2
	strh r0, [r1]
	mov r3, sp
	mov r0, r8
	ldr r1, [r0, #0x44]
	asrs r1, r1, #8
	adds r0, #0x3d
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r1
	strh r0, [r3, #2]
	mov r0, r8
	adds r0, #0x3e
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r2
	strh r0, [r3, #4]
	mov r2, sp
	mov r0, r8
	adds r0, #0x3f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r1
	strh r0, [r2, #6]
	ldr r0, [r4]
	cmp r0, #0
	beq _081195FE
	mov r6, sp
_0811954A:
	ldr r0, [r4]
	adds r1, r0, #0
	adds r1, #0x82
	ldrb r1, [r1]
	cmp r1, #0x79
	beq _0811955A
	cmp r1, #0x7d
	bne _081195F6
_0811955A:
	add r3, sp, #8
	ldr r1, [r0, #0x40]
	asrs r1, r1, #8
	adds r0, #0x3c
	movs r2, #0
	ldrsb r2, [r0, r2]
	adds r2, r2, r1
	strh r2, [r3]
	ldr r0, [r4]
	ldr r1, [r0, #0x44]
	asrs r1, r1, #8
	adds r0, #0x3d
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r1
	strh r0, [r3, #2]
	ldr r0, [r4]
	ldr r1, [r0, #0x40]
	asrs r1, r1, #8
	adds r0, #0x3e
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r1
	strh r0, [r3, #4]
	ldr r0, [r4]
	ldr r1, [r0, #0x44]
	asrs r1, r1, #8
	adds r0, #0x3f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r1
	strh r0, [r3, #6]
	movs r1, #0
	ldrsh r5, [r6, r1]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r7, r3, #0
	cmp r5, r2
	bgt _081195BE
	movs r3, #4
	ldrsh r1, [r6, r3]
	movs r3, #0
	ldrsh r0, [r7, r3]
	cmp r1, r0
	bge _081195CA
	cmp r5, r2
	blt _081195F6
_081195BE:
	movs r0, #4
	ldrsh r1, [r7, r0]
	movs r2, #0
	ldrsh r0, [r6, r2]
	cmp r1, r0
	blt _081195F6
_081195CA:
	ldrh r0, [r6, #2]
	ldrh r1, [r7, #2]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	lsls r1, r1, #0x10
	asrs r2, r1, #0x10
	cmp r5, r2
	bgt _081195EA
	movs r3, #6
	ldrsh r1, [r6, r3]
	movs r3, #2
	ldrsh r0, [r7, r3]
	cmp r1, r0
	bge _0811963C
	cmp r5, r2
	blt _081195F6
_081195EA:
	movs r0, #6
	ldrsh r1, [r7, r0]
	movs r2, #2
	ldrsh r0, [r6, r2]
	cmp r1, r0
	bge _0811963C
_081195F6:
	adds r4, #4
	ldr r0, [r4]
	cmp r0, #0
	bne _0811954A
_081195FE:
	mov r0, r8
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08119610
	b _08119770
_08119610:
	mov r0, r8
	adds r0, #0xb6
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	beq _08119640
	mov r3, r8
	ldr r1, [r3, #8]
	movs r0, #0x80
	lsls r0, r0, #0xb
	ands r0, r1
	cmp r0, #0
	beq _08119630
	b _0811977E
_08119630:
	movs r0, #0x80
	lsls r0, r0, #0x11
	ands r1, r0
	cmp r1, #0
	bne _0811963C
	b _08119770
_0811963C:
	movs r0, #1
	b _081197C2
_08119640:
	movs r4, #0
	mov sb, r4
	ldr r0, _0811973C @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp sb, r0
	blo _0811964E
	b _08119770
_0811964E:
	ldr r1, _08119740 @ =gUnk_02020EE0
	mov sl, r1
	mov r0, r8
	adds r0, #0x56
	ldrb r0, [r0]
	str r0, [sp, #0x10]
	mov r6, sp
_0811965C:
	movs r0, #0xd4
	lsls r0, r0, #1
	mov r5, sb
	muls r5, r0, r5
	adds r2, r5, #0
	add r2, sl
	mov ip, r2
	mov r0, ip
	adds r0, #0x56
	ldrb r0, [r0]
	ldr r3, [sp, #0x10]
	cmp r0, r3
	bne _0811975C
	add r4, sp, #8
	mov r2, sl
	adds r2, #0x40
	adds r2, r5, r2
	ldr r1, [r2]
	asrs r1, r1, #8
	mov r0, ip
	adds r0, #0x38
	movs r3, #0
	ldrsb r3, [r0, r3]
	adds r3, r3, r1
	strh r3, [r4]
	ldr r0, _08119744 @ =gUnk_02020F24
	adds r5, r5, r0
	ldr r1, [r5]
	asrs r1, r1, #8
	mov r0, ip
	adds r0, #0x39
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r1
	strh r0, [r4, #2]
	ldr r1, [r2]
	asrs r1, r1, #8
	mov r0, ip
	adds r0, #0x3a
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r1
	strh r0, [r4, #4]
	ldr r1, [r5]
	asrs r1, r1, #8
	mov r0, ip
	adds r0, #0x3b
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r1
	strh r0, [r4, #6]
	movs r1, #0
	ldrsh r2, [r6, r1]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	adds r7, r4, #0
	cmp r2, r3
	bgt _081196E6
	movs r4, #4
	ldrsh r1, [r6, r4]
	movs r4, #0
	ldrsh r0, [r7, r4]
	cmp r1, r0
	bge _081196F2
	cmp r2, r3
	blt _0811974C
_081196E6:
	movs r0, #4
	ldrsh r1, [r7, r0]
	movs r2, #0
	ldrsh r0, [r6, r2]
	cmp r1, r0
	blt _0811974C
_081196F2:
	adds r3, r7, #0
	ldrh r0, [r6, #2]
	ldrh r1, [r3, #2]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	lsls r1, r1, #0x10
	asrs r2, r1, #0x10
	cmp r5, r2
	bgt _08119714
	movs r4, #6
	ldrsh r1, [r6, r4]
	movs r4, #2
	ldrsh r0, [r3, r4]
	cmp r1, r0
	bge _08119720
	cmp r5, r2
	blt _0811974C
_08119714:
	movs r0, #6
	ldrsh r1, [r7, r0]
	movs r2, #2
	ldrsh r0, [r6, r2]
	cmp r1, r0
	blt _0811974C
_08119720:
	movs r0, #0xd4
	lsls r0, r0, #1
	mov r3, sb
	muls r3, r0, r3
	adds r0, r3, #0
	ldr r4, _08119748 @ =gUnk_02020EEC
	adds r0, r0, r4
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _0811975C
	b _0811963C
	.align 2, 0
_0811973C: .4byte gUnk_0203AD44
_08119740: .4byte gUnk_02020EE0
_08119744: .4byte gUnk_02020F24
_08119748: .4byte gUnk_02020EEC
_0811974C:
	mov r1, r8
	ldr r0, [r1, #8]
	movs r1, #0x80
	lsls r1, r1, #0x11
	ands r0, r1
	cmp r0, #0
	beq _0811975C
	b _0811963C
_0811975C:
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	ldr r2, _081197B8 @ =gUnk_0203AD44
	ldrb r2, [r2]
	cmp sb, r2
	bhs _08119770
	b _0811965C
_08119770:
	mov r3, r8
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #0xb
	ands r0, r1
	cmp r0, #0
	beq _081197C0
_0811977E:
	mov r0, r8
	adds r0, #0xb8
	ldrh r0, [r0]
	cmp r0, #0
	bne _0811978A
	b _0811963C
_0811978A:
	mov r4, r8
	ldr r2, [r4, #0x6c]
	adds r0, r2, #0
	adds r0, #0x56
	ldr r1, _081197BC @ =gUnk_0203AD30
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bhs _081197C0
	mov r0, r8
	adds r0, #0xb6
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	beq _081197AE
	b _0811963C
_081197AE:
	adds r0, r2, #0
	bl BonusCreateTomato
	b _0811963C
	.align 2, 0
_081197B8: .4byte gUnk_0203AD44
_081197BC: .4byte gUnk_0203AD30
_081197C0:
	movs r0, #0
_081197C2:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_081197D4
sub_081197D4: @ 0x081197D4
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	bl sub_081194DC
	cmp r0, #0
	beq _081198C4
	adds r1, r5, #0
	adds r1, #0xb6
	ldrh r0, [r1]
	ldr r2, _0811980C @ =0x0000FFFB
	ands r2, r0
	movs r3, #0
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r4, #0
	orrs r2, r0
	orrs r2, r3
	strh r2, [r1]
	movs r0, #1
	ands r0, r2
	adds r4, r1, #0
	cmp r0, #0
	beq _08119814
	ldr r0, _08119810 @ =0x0000FFFD
	ands r2, r0
	strh r2, [r4]
	b _08119892
	.align 2, 0
_0811980C: .4byte 0x0000FFFB
_08119810: .4byte 0x0000FFFD
_08119814:
	movs r0, #2
	orrs r2, r0
	strh r2, [r4]
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #0x18]
	adds r0, #2
	adds r1, r5, #0
	adds r1, #0xb4
	strh r0, [r1]
	ldr r1, _081198A4 @ =gUnk_02020EE0
	ldr r0, _081198A8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08119892
	ldrb r0, [r5]
	cmp r0, #0
	bne _08119856
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _08119892
_08119856:
	ldr r1, _081198AC @ =gUnk_08D60FA4
	ldr r5, _081198B0 @ =gSongTable
	ldr r2, _081198B4 @ =0x0000102C
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811987A
	ldr r1, _081198B8 @ =0x00001028
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08119892
_0811987A:
	cmp r3, #0
	beq _0811988C
	ldr r0, _081198BC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08119892
_0811988C:
	ldr r0, _081198C0 @ =0x00000205
	bl m4aSongNumStart
_08119892:
	ldrh r0, [r4]
	movs r1, #1
	orrs r1, r0
	movs r2, #0x80
	lsls r2, r2, #2
	adds r0, r2, #0
	orrs r1, r0
	strh r1, [r4]
	b _0811997A
	.align 2, 0
_081198A4: .4byte gUnk_02020EE0
_081198A8: .4byte gUnk_0203AD3C
_081198AC: .4byte gUnk_08D60FA4
_081198B0: .4byte gSongTable
_081198B4: .4byte 0x0000102C
_081198B8: .4byte 0x00001028
_081198BC: .4byte gUnk_0203AD10
_081198C0: .4byte 0x00000205
_081198C4:
	adds r1, r5, #0
	adds r1, #0xb6
	ldrh r2, [r1]
	movs r7, #1
	adds r0, r7, #0
	ands r0, r2
	adds r4, r1, #0
	cmp r0, #0
	beq _081198DC
	ldr r0, _08119938 @ =0x0000FFFD
	ands r0, r2
	strh r0, [r4]
_081198DC:
	ldrh r0, [r4]
	ldr r2, _0811993C @ =0x0000FEFF
	ands r2, r0
	movs r6, #0
	strh r2, [r4]
	adds r0, r5, #0
	adds r0, #0xb4
	movs r3, #0
	ldrsh r1, [r0, r3]
	adds r3, r0, #0
	cmp r1, #0
	bgt _08119950
	subs r0, #4
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r3, #4
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	bne _0811997A
	ldr r1, _08119940 @ =0x0000FFDF
	ands r1, r2
	ldr r0, _08119944 @ =0x0000FFEF
	ands r1, r0
	strh r1, [r4]
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _0811991C
	ldr r0, _08119948 @ =0x0000FFFB
	ands r0, r1
	strh r0, [r4]
_0811991C:
	ldrh r1, [r4]
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	beq _0811992C
	movs r0, #4
	orrs r0, r1
	strh r0, [r4]
_0811992C:
	ldrh r1, [r4]
	ldr r0, _0811994C @ =0x0000FFFE
	ands r0, r1
	strh r0, [r4]
	b _0811997A
	.align 2, 0
_08119938: .4byte 0x0000FFFD
_0811993C: .4byte 0x0000FEFF
_08119940: .4byte 0x0000FFDF
_08119944: .4byte 0x0000FFEF
_08119948: .4byte 0x0000FFFB
_0811994C: .4byte 0x0000FFFE
_08119950:
	movs r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _08119964
	ldr r0, _08119960 @ =0x0000FFDF
	ands r0, r2
	b _0811996A
	.align 2, 0
_08119960: .4byte 0x0000FFDF
_08119964:
	movs r1, #0x20
	adds r0, r2, #0
	orrs r0, r1
_0811996A:
	strh r0, [r4]
	ldrh r0, [r4]
	movs r1, #0x10
	orrs r1, r0
	strh r1, [r4]
	ldrh r0, [r3]
	subs r0, #1
	strh r0, [r3]
_0811997A:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08119980
sub_08119980: @ 0x08119980
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	bl sub_081197D4
	adds r2, r4, #0
	adds r2, #0xb6
	ldrh r0, [r2]
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _081199B8
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #1
	strb r0, [r1]
	ldrh r1, [r2]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	beq _081199D0
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #9
	orrs r0, r1
	str r0, [r4, #8]
	b _081199D0
_081199B8:
	adds r0, r4, #0
	adds r0, #0x83
	strb r1, [r0]
	ldr r1, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #9
	ands r0, r1
	cmp r0, #0
	beq _081199D0
	ldr r0, _081199E8 @ =0xFFFEFFFF
	ands r1, r0
	str r1, [r4, #8]
_081199D0:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _081199EC
	adds r0, r5, #0
	bl sub_08119AA8
	b _08119A14
	.align 2, 0
_081199E8: .4byte 0xFFFEFFFF
_081199EC:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _081199FC
	adds r0, r5, #0
	bl sub_08119B3C
	b _08119A14
_081199FC:
	movs r0, #0x80
	lsls r0, r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08119A0E
	adds r0, r5, #0
	bl sub_08119BB8
	b _08119A14
_08119A0E:
	adds r0, r5, #0
	bl sub_08119A20
_08119A14:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_08119A20
sub_08119A20: @ 0x08119A20
	push {lr}
	adds r2, r0, #0
	adds r0, #0xb6
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08119A64
	adds r0, r2, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	ldr r3, _08119A5C @ =gCurLevelInfo
	adds r0, r2, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _08119A60 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	adds r1, r0, #0
	ldr r0, [r1]
	adds r0, #1
	b _08119A9A
	.align 2, 0
_08119A5C: .4byte gCurLevelInfo
_08119A60: .4byte 0x0000065E
_08119A64:
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08119A9C
	adds r0, r2, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	ldr r3, _08119AA0 @ =gCurLevelInfo
	adds r0, r2, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _08119AA4 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	adds r1, r0, #0
	ldr r0, [r1]
	cmp r0, #0
	beq _08119A9C
	subs r0, #1
_08119A9A:
	str r0, [r1]
_08119A9C:
	pop {r0}
	bx r0
	.align 2, 0
_08119AA0: .4byte gCurLevelInfo
_08119AA4: .4byte 0x0000065E

	thumb_func_start sub_08119AA8
sub_08119AA8: @ 0x08119AA8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0xb0
	ldr r0, [r5]
	ldrb r1, [r0, #4]
	ldr r3, _08119AFC @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _08119B00 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	adds r3, r0, #0
	adds r0, r4, #0
	adds r0, #0xb6
	ldrh r0, [r0]
	movs r4, #1
	ands r4, r0
	cmp r4, #0
	beq _08119B04
	ldr r0, [r5]
	ldrh r0, [r0, #0x14]
	lsrs r0, r0, #8
	movs r1, #0
	strb r0, [r3]
	ldr r0, [r5]
	ldrh r0, [r0, #0x14]
	strb r0, [r3, #1]
	ldr r0, [r5]
	ldrh r0, [r0, #0x12]
	lsrs r0, r0, #8
	strb r0, [r3, #2]
	strb r1, [r3, #3]
	b _08119B34
	.align 2, 0
_08119AFC: .4byte gCurLevelInfo
_08119B00: .4byte 0x0000065E
_08119B04:
	ldr r1, [r5]
	ldrh r0, [r1, #0x14]
	lsrs r2, r0, #8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldrh r0, [r1, #0x12]
	lsrs r1, r0, #8
	ldrb r0, [r3]
	cmp r0, r2
	bne _08119B34
	ldrb r0, [r3, #1]
	cmp r0, r5
	bne _08119B34
	ldrb r0, [r3, #2]
	movs r2, #1
	cmp r0, r1
	beq _08119B28
	movs r2, #0
_08119B28:
	cmp r2, #0
	beq _08119B34
	strb r4, [r3]
	strb r4, [r3, #1]
	strb r4, [r3, #2]
	strb r4, [r3, #3]
_08119B34:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08119B3C
sub_08119B3C: @ 0x08119B3C
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0xb6
	ldrh r1, [r4]
	movs r0, #0xc0
	lsls r0, r0, #6
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #6
	cmp r0, r2
	bne _08119B5E
	ldr r0, [r5, #8]
	movs r1, #0xf4
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r5, #8]
_08119B5E:
	ldrh r1, [r4]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08119B74
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r3, #0
	orrs r0, r1
	orrs r0, r2
	strh r0, [r4]
_08119B74:
	ldrh r1, [r4]
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r1
	cmp r0, #0
	beq _08119BA4
	bl sub_080395D4
	cmp r0, #0
	beq _08119BA4
	ldr r1, _08119BAC @ =gUnk_08357B8C
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #0x14]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl _call_via_r0
	ldrh r1, [r4]
	ldr r0, _08119BB0 @ =0x0000EFFF
	ands r0, r1
	strh r0, [r4]
_08119BA4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08119BAC: .4byte gUnk_08357B8C
_08119BB0: .4byte 0x0000EFFF

	thumb_func_start nullsub_127
nullsub_127: @ 0x08119BB4
	bx lr
	.align 2, 0

	thumb_func_start sub_08119BB8
sub_08119BB8: @ 0x08119BB8
	push {r4, lr}
	adds r4, r0, #0
	bl sub_08119A20
	adds r0, r4, #0
	adds r0, #0xb6
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08119BFE
	ldr r2, _08119C04 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _08119C08 @ =0x0000065E
	adds r0, r0, r1
	ldrb r2, [r0]
	movs r0, #0
	movs r1, #0xf
	bl sub_08002888
	adds r2, r0, #0
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #0x11]
	ldr r0, [r2]
	cmp r0, r1
	bhs _08119BFE
	str r1, [r2]
_08119BFE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08119C04: .4byte gCurLevelInfo
_08119C08: .4byte 0x0000065E

	thumb_func_start sub_08119C0C
sub_08119C0C: @ 0x08119C0C
	ldr r1, [r0, #8]
	movs r2, #0x80
	lsls r2, r2, #5
	orrs r1, r2
	str r1, [r0, #8]
	bx lr

	thumb_func_start CreateFire
CreateFire: @ 0x08119C18
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _08119C4C @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08119C50 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08119C54
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _08119C5C
	.align 2, 0
_08119C4C: .4byte ObjectMain
_08119C50: .4byte ObjectDestroy
_08119C54:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_08119C5C:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	movs r1, #0xc0
	lsls r1, r1, #9
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x5c]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #0x5c]
	subs r1, #0x26
	movs r2, #0xc
	rsbs r2, r2, #0
	movs r0, #3
	rsbs r0, r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #6
	bl sub_0803E2B0
	movs r1, #7
	rsbs r1, r1, #0
	movs r2, #0xe
	rsbs r2, r2, #0
	movs r0, #2
	rsbs r0, r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #7
	bl sub_0803E308
	adds r0, r4, #0
	bl ObjectInitSprite
	ldr r2, _08119CCC @ =gUnk_08351648
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08119CCC: .4byte gUnk_08351648

	thumb_func_start sub_08119CD0
sub_08119CD0: @ 0x08119CD0
	movs r1, #0
	strh r1, [r0, #4]
	ldr r1, _08119CDC @ =sub_08119CE0
	str r1, [r0, #0x78]
	bx lr
	.align 2, 0
_08119CDC: .4byte sub_08119CE0

	thumb_func_start sub_08119CE0
sub_08119CE0: @ 0x08119CE0
	ldrh r1, [r0, #4]
	adds r1, #1
	strh r1, [r0, #4]
	bx lr

	thumb_func_start CreateMirrorDoor
CreateMirrorDoor: @ 0x08119CE8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov sb, r0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, _08119D28 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08119D2C @ =sub_0811A6A0
	str r1, [sp]
	movs r1, #0xc4
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08119D30
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08119D38
	.align 2, 0
_08119D28: .4byte ObjectMain
_08119D2C: .4byte sub_0811A6A0
_08119D30:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08119D38:
	adds r5, r0, #0
	str r5, [sp, #4]
	mov r1, sb
	adds r2, r4, #0
	bl InitObject
	adds r1, r5, #0
	adds r1, #0xb4
	str r1, [sp, #0xc]
	movs r1, #0
	ldr r2, [sp, #0xc]
	str r1, [r2]
	adds r0, r5, #0
	adds r0, #0xb8
	str r1, [r0]
	ldr r0, [r5, #0x40]
	asrs r0, r0, #0xc
	adds r4, r5, #0
	adds r4, #0xbc
	movs r3, #0
	mov sl, r3
	strh r0, [r4]
	ldr r0, [r5, #0x44]
	asrs r0, r0, #0xc
	movs r2, #0xbe
	adds r2, r2, r5
	mov r8, r2
	strh r0, [r2]
	adds r7, r5, #0
	adds r7, #0xc0
	strh r1, [r7]
	ldr r0, [r5, #8]
	movs r1, #0xd0
	lsls r1, r1, #2
	orrs r0, r1
	movs r3, #0x80
	lsls r3, r3, #7
	orrs r0, r3
	str r0, [r5, #8]
	ldr r0, [r5, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x44]
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	str r0, [r5, #0x44]
	mov r3, sb
	ldrb r0, [r3, #0xe]
	adds r6, r5, #0
	adds r6, #0x83
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _08119DAE
	mov r0, sl
	strb r0, [r6]
_08119DAE:
	mov r1, sb
	ldrb r0, [r1, #0xe]
	cmp r0, #0
	blt _08119E98
	cmp r0, #1
	ble _08119DC0
	cmp r0, #2
	beq _08119E32
	b _08119E98
_08119DC0:
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	ldrh r1, [r4]
	mov r3, r8
	ldrh r2, [r3]
	bl sub_080023E4
	ldr r1, _08119DF8 @ =gUnk_082D88B8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _08119E14
	movs r2, #1
	str r2, [sp, #8]
	adds r0, r5, #0
	bl sub_0811A708
	cmp r0, #0
	beq _08119DFC
	movs r0, #2
	strb r0, [r6]
	b _08119E00
	.align 2, 0
_08119DF8: .4byte gUnk_082D88B8
_08119DFC:
	mov r3, sl
	strb r3, [r6]
_08119E00:
	adds r0, r5, #0
	bl sub_08119F88
	ldr r0, [sp, #4]
	adds r0, #0xb4
	ldr r1, [r0]
	movs r0, #0xf0
	lsls r0, r0, #3
	strh r0, [r1, #0x20]
	b _08119E98
_08119E14:
	movs r0, #0
	str r0, [sp, #8]
	mov r1, sb
	ldrb r0, [r1, #0xe]
	cmp r0, #1
	bne _08119E2C
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r5, #8]
	b _08119E94
_08119E2C:
	movs r3, #1
	strb r3, [r6]
	b _08119E98
_08119E32:
	adds r0, r5, #0
	bl sub_08119F88
	mov r0, sb
	ldrb r1, [r0, #4]
	movs r0, #1
	movs r2, #0
	bl sub_08002888
	ldr r0, [r0]
	cmp r0, #0
	beq _08119E88
	movs r1, #0
	str r1, [sp, #8]
	ldrh r0, [r7]
	movs r2, #1
	mov sl, r2
	mov r3, sl
	orrs r0, r3
	strh r0, [r7]
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	ldrh r1, [r4]
	mov r3, r8
	ldrh r2, [r3]
	movs r3, #0
	bl sub_0800255C
	adds r1, r5, #0
	adds r1, #0xc2
	strb r0, [r1]
	ldr r0, [sp, #0xc]
	ldr r2, [r0]
	ldrh r0, [r2, #6]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2, #6]
	mov r0, sl
	strb r0, [r6]
	b _08119E98
_08119E88:
	movs r1, #1
	str r1, [sp, #8]
	ldrh r1, [r7]
	ldr r0, _08119F78 @ =0x0000FFFE
	ands r0, r1
	strh r0, [r7]
_08119E94:
	mov r2, sl
	strb r2, [r6]
_08119E98:
	mov r3, sb
	ldrh r1, [r3, #0x22]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08119ED2
	movs r2, #0xa5
	lsls r2, r2, #2
	adds r0, r5, #0
	movs r1, #0
	movs r3, #7
	bl sub_08092944
	ldr r2, [sp, #4]
	adds r2, #0xb8
	str r0, [r2]
	movs r1, #0xf0
	lsls r1, r1, #3
	strh r1, [r0, #0x20]
	ldr r0, [sp, #8]
	cmp r0, #0
	bne _08119ED2
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r2, r3, #0
	orrs r1, r2
	strh r1, [r0, #6]
_08119ED2:
	ldr r0, _08119F7C @ =0x06012000
	str r0, [r5, #0x10]
	movs r3, #0
	movs r0, #0xd0
	lsls r0, r0, #3
	strh r0, [r5, #0x24]
	ldr r0, _08119F80 @ =gUnk_08351648
	mov r8, r0
	adds r7, r5, #0
	adds r7, #0x82
	ldrb r1, [r7]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	mov r2, r8
	adds r2, #0x14
	adds r0, r0, r2
	adds r6, r5, #0
	adds r6, #0x83
	ldrb r1, [r6]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r5, #0x1c]
	ldrb r1, [r7]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrb r1, [r6]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrb r0, [r1, #2]
	adds r1, r5, #0
	adds r1, #0x2a
	strb r0, [r1]
	strh r3, [r5, #0x26]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r1, #3
	movs r0, #0xf
	strb r0, [r1]
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	strh r0, [r5, #0x20]
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	strh r0, [r5, #0x22]
	movs r0, #0xc2
	lsls r0, r0, #0xc
	str r0, [r5, #0x18]
	adds r0, r5, #0
	adds r0, #0x10
	bl sub_08155128
	movs r0, #0xf8
	lsls r0, r0, #3
	strh r0, [r5, #0x24]
	ldrb r1, [r7]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	ldr r1, _08119F84 @ =gUnk_08351658
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r5, #0
	bl _call_via_r1
	adds r0, r5, #0
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08119F78: .4byte 0x0000FFFE
_08119F7C: .4byte 0x06012000
_08119F80: .4byte gUnk_08351648
_08119F84: .4byte gUnk_08351658

	thumb_func_start sub_08119F88
sub_08119F88: @ 0x08119F88
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0xbc
	ldrb r1, [r1]
	adds r2, r4, #0
	adds r2, #0xbe
	ldrb r2, [r2]
	bl sub_080025AC
	adds r3, r0, #0
	ldr r1, _08119FDC @ =0xFFFFFC2C
	adds r0, r1, #0
	ldrh r1, [r3, #8]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #9
	bhi _08119FB6
	movs r5, #1
_08119FB6:
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r3, #8]
	ldrb r2, [r3, #0xa]
	ldrb r3, [r3, #0xb]
	bl sub_08002BA8
	cmp r0, #0
	beq _0811A020
	cmp r5, #0
	beq _08119FE0
	movs r2, #0xa5
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #8
	b _0811A008
	.align 2, 0
_08119FDC: .4byte 0xFFFFFC2C
_08119FE0:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08119FFE
	movs r2, #0xa5
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #9
	b _0811A008
_08119FFE:
	movs r2, #0xa5
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #2
_0811A008:
	bl sub_08092944
	adds r1, r4, #0
	adds r1, #0xb4
	str r0, [r1]
	adds r3, r1, #0
	adds r2, r4, #0
	adds r2, #0xc0
	ldrh r1, [r2]
	movs r0, #2
	orrs r0, r1
	b _0811A06E
_0811A020:
	cmp r5, #0
	beq _0811A030
	movs r2, #0xa5
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #4
	b _0811A058
_0811A030:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0811A04E
	movs r2, #0xa5
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0xa
	b _0811A058
_0811A04E:
	movs r2, #0xa5
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #3
_0811A058:
	bl sub_08092944
	adds r1, r4, #0
	adds r1, #0xb4
	str r0, [r1]
	adds r3, r1, #0
	adds r2, r4, #0
	adds r2, #0xc0
	ldrh r1, [r2]
	ldr r0, _0811A080 @ =0x0000FFFD
	ands r0, r1
_0811A06E:
	strh r0, [r2]
	ldr r1, [r3]
	movs r0, #0xf0
	lsls r0, r0, #3
	strh r0, [r1, #0x20]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0811A080: .4byte 0x0000FFFD

	thumb_func_start sub_0811A084
sub_0811A084: @ 0x0811A084
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	adds r0, #0xc0
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0811A152
	adds r6, r4, #0
	adds r6, #0x56
	ldrb r0, [r6]
	adds r5, r4, #0
	adds r5, #0xbc
	ldrh r1, [r5]
	adds r7, r4, #0
	adds r7, #0xbe
	ldrh r2, [r7]
	bl sub_080023E4
	ldr r1, _0811A114 @ =gUnk_082D88B8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _0811A152
	movs r0, #0
	mov r8, r0
	ldrb r0, [r6]
	ldrb r1, [r5]
	ldrb r2, [r7]
	bl sub_080025AC
	adds r3, r0, #0
	ldr r1, _0811A118 @ =0xFFFFFC2C
	adds r0, r1, #0
	ldrh r1, [r3, #8]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #9
	bhi _0811A0E6
	movs r0, #1
	mov r8, r0
_0811A0E6:
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldrh r1, [r3, #8]
	ldrb r2, [r3, #0xa]
	ldrb r3, [r3, #0xb]
	bl sub_08002BA8
	cmp r0, #0
	beq _0811A152
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r0, [r0]
	adds r2, r0, #0
	adds r2, #0xc
	mov r1, r8
	cmp r1, #0
	beq _0811A11C
	movs r0, #0xa5
	lsls r0, r0, #2
	strh r0, [r2, #0xc]
	movs r0, #8
	b _0811A140
	.align 2, 0
_0811A114: .4byte gUnk_082D88B8
_0811A118: .4byte 0xFFFFFC2C
_0811A11C:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0811A138
	movs r0, #0xa5
	lsls r0, r0, #2
	strh r0, [r2, #0xc]
	movs r0, #9
	b _0811A140
_0811A138:
	movs r0, #0xa5
	lsls r0, r0, #2
	strh r0, [r2, #0xc]
	movs r0, #2
_0811A140:
	strb r0, [r2, #0x1a]
	movs r0, #0xff
	strb r0, [r2, #0x1b]
	adds r2, r4, #0
	adds r2, #0xc0
	ldrh r1, [r2]
	movs r0, #2
	orrs r0, r1
	strh r0, [r2]
_0811A152:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0811A15C
sub_0811A15C: @ 0x0811A15C
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_0811A084
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0xbc
	ldrh r1, [r1]
	adds r2, r4, #0
	adds r2, #0xbe
	ldrh r2, [r2]
	bl sub_080023E4
	ldr r1, _0811A224 @ =gUnk_082D88B8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	bne _0811A216
	adds r3, r4, #0
	adds r3, #0x10
	adds r5, r4, #0
	adds r5, #0x83
	movs r0, #1
	strb r0, [r5]
	ldr r2, _0811A228 @ =gUnk_08351648
	movs r0, #0x82
	adds r0, r0, r4
	mov ip, r0
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x14
	adds r0, r0, r2
	ldr r0, [r0]
	ldrh r0, [r0, #4]
	strh r0, [r3, #0xc]
	mov r0, ip
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrb r1, [r5]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrb r0, [r1, #2]
	strb r0, [r3, #0x1a]
	movs r0, #0xff
	strb r0, [r3, #0x1b]
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r2, [r0]
	cmp r2, #0
	beq _0811A1E6
	ldrh r0, [r2, #6]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2, #6]
_0811A1E6:
	adds r0, r4, #0
	adds r0, #0xb8
	ldr r2, [r0]
	cmp r2, #0
	beq _0811A1FC
	ldrh r0, [r2, #6]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2, #6]
_0811A1FC:
	movs r2, #0xad
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r1, [r0, #0x38]
	ldr r2, _0811A22C @ =0xFFFFF000
	adds r1, r1, r2
	str r1, [r0, #0x38]
	ldr r0, _0811A230 @ =sub_0811A234
	str r0, [r4, #0x78]
_0811A216:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0811A224: .4byte gUnk_082D88B8
_0811A228: .4byte gUnk_08351648
_0811A22C: .4byte 0xFFFFF000
_0811A230: .4byte sub_0811A234

	thumb_func_start sub_0811A234
sub_0811A234: @ 0x0811A234
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	mov sb, r4
	adds r6, r4, #0
	adds r6, #0x56
	ldrb r0, [r6]
	adds r5, r4, #0
	adds r5, #0xbc
	ldrh r1, [r5]
	movs r2, #0xbe
	adds r2, r2, r4
	mov r8, r2
	ldrh r2, [r2]
	bl sub_080023E4
	ldr r1, _0811A2A0 @ =gUnk_082D88B8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _0811A33A
	adds r7, r4, #0
	adds r7, #0x10
	ldrb r0, [r6]
	ldrb r1, [r5]
	mov r3, r8
	ldrb r2, [r3]
	bl sub_080025AC
	ldr r2, _0811A2A4 @ =0xFFFFFC2C
	adds r1, r2, #0
	ldrh r0, [r0, #8]
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r2, #0
	cmp r1, #9
	bhi _0811A290
	movs r2, #1
_0811A290:
	cmp r2, #0
	beq _0811A2A8
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #2
	strb r0, [r1]
	adds r3, r1, #0
	b _0811A2B0
	.align 2, 0
_0811A2A0: .4byte gUnk_082D88B8
_0811A2A4: .4byte 0xFFFFFC2C
_0811A2A8:
	adds r0, r4, #0
	adds r0, #0x83
	strb r2, [r0]
	adds r3, r0, #0
_0811A2B0:
	ldr r2, _0811A300 @ =gUnk_08351648
	movs r0, #0x82
	adds r0, r0, r4
	mov ip, r0
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x14
	adds r0, r0, r2
	ldrb r1, [r3]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r7, #0xc]
	mov r0, ip
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrb r1, [r3]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrb r0, [r1, #2]
	strb r0, [r7, #0x1a]
	movs r0, #0xff
	strb r0, [r7, #0x1b]
	mov r0, sb
	adds r0, #0xb4
	ldr r2, [r0]
	cmp r2, #0
	beq _0811A308
	ldrh r1, [r2, #6]
	ldr r0, _0811A304 @ =0x0000FBFF
	ands r0, r1
	strh r0, [r2, #6]
	b _0811A30E
	.align 2, 0
_0811A300: .4byte gUnk_08351648
_0811A304: .4byte 0x0000FBFF
_0811A308:
	adds r0, r4, #0
	bl sub_08119F88
_0811A30E:
	mov r0, sb
	adds r0, #0xb8
	ldr r2, [r0]
	cmp r2, #0
	beq _0811A320
	ldrh r1, [r2, #6]
	ldr r0, _0811A350 @ =0x0000FBFF
	ands r0, r1
	strh r0, [r2, #6]
_0811A320:
	movs r2, #0xad
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r1, [r0, #0x38]
	ldr r2, _0811A354 @ =0xFFFFF000
	adds r1, r1, r2
	str r1, [r0, #0x38]
	ldr r0, _0811A358 @ =sub_0811A15C
	str r0, [r4, #0x78]
_0811A33A:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811A350: .4byte 0x0000FBFF
_0811A354: .4byte 0xFFFFF000
_0811A358: .4byte sub_0811A15C

	thumb_func_start sub_0811A35C
sub_0811A35C: @ 0x0811A35C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_0811A084
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0xbc
	ldrh r1, [r1]
	adds r2, r4, #0
	adds r2, #0xbe
	ldrh r2, [r2]
	bl sub_080023E4
	ldr r1, _0811A3D0 @ =gUnk_082D88B8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	bne _0811A3C0
	ldr r0, [r4, #8]
	movs r3, #0x80
	lsls r3, r3, #3
	orrs r0, r3
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r2, [r0]
	cmp r2, #0
	beq _0811A3AA
	ldrh r1, [r2, #6]
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2, #6]
_0811A3AA:
	adds r0, r4, #0
	adds r0, #0xb8
	ldr r2, [r0]
	cmp r2, #0
	beq _0811A3BC
	ldrh r1, [r2, #6]
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2, #6]
_0811A3BC:
	ldr r0, _0811A3D4 @ =sub_0811A3D8
	str r0, [r4, #0x78]
_0811A3C0:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811A3D0: .4byte gUnk_082D88B8
_0811A3D4: .4byte sub_0811A3D8

	thumb_func_start sub_0811A3D8
sub_0811A3D8: @ 0x0811A3D8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0xbc
	ldrh r1, [r1]
	adds r2, r4, #0
	adds r2, #0xbe
	ldrh r2, [r2]
	bl sub_080023E4
	ldr r1, _0811A424 @ =gUnk_082D88B8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _0811A44C
	ldr r0, [r4, #8]
	ldr r1, _0811A428 @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r2, [r0]
	cmp r2, #0
	beq _0811A430
	ldrh r1, [r2, #6]
	ldr r0, _0811A42C @ =0x0000FBFF
	ands r0, r1
	strh r0, [r2, #6]
	b _0811A436
	.align 2, 0
_0811A424: .4byte gUnk_082D88B8
_0811A428: .4byte 0xFFFFFBFF
_0811A42C: .4byte 0x0000FBFF
_0811A430:
	adds r0, r4, #0
	bl sub_08119F88
_0811A436:
	adds r0, r5, #0
	adds r0, #0xb8
	ldr r2, [r0]
	cmp r2, #0
	beq _0811A448
	ldrh r1, [r2, #6]
	ldr r0, _0811A454 @ =0x0000FBFF
	ands r0, r1
	strh r0, [r2, #6]
_0811A448:
	ldr r0, _0811A458 @ =sub_0811A35C
	str r0, [r4, #0x78]
_0811A44C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0811A454: .4byte 0x0000FBFF
_0811A458: .4byte sub_0811A35C

	thumb_func_start sub_0811A45C
sub_0811A45C: @ 0x0811A45C
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_0811A084
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	movs r0, #1
	movs r2, #0
	bl sub_08002888
	ldr r0, [r0]
	cmp r0, #0
	beq _0811A52C
	adds r3, r4, #0
	adds r3, #0x10
	adds r5, r4, #0
	adds r5, #0x83
	movs r0, #1
	strb r0, [r5]
	ldr r2, _0811A53C @ =gUnk_08351648
	movs r0, #0x82
	adds r0, r0, r4
	mov ip, r0
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x14
	adds r0, r0, r2
	ldr r0, [r0]
	ldrh r0, [r0, #4]
	strh r0, [r3, #0xc]
	mov r0, ip
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrb r1, [r5]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrb r0, [r1, #2]
	strb r0, [r3, #0x1a]
	movs r0, #0xff
	strb r0, [r3, #0x1b]
	adds r2, r4, #0
	adds r2, #0xc0
	ldrh r0, [r2]
	movs r1, #1
	movs r5, #0
	orrs r0, r1
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0xbc
	ldrh r1, [r1]
	subs r2, #2
	ldrh r2, [r2]
	movs r3, #0
	bl sub_0800255C
	adds r1, r4, #0
	adds r1, #0xc2
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r2, [r0]
	cmp r2, #0
	beq _0811A4FC
	ldrh r0, [r2, #6]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2, #6]
_0811A4FC:
	adds r0, r4, #0
	adds r0, #0xb8
	ldr r2, [r0]
	cmp r2, #0
	beq _0811A512
	ldrh r0, [r2, #6]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2, #6]
_0811A512:
	movs r2, #0xad
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r1, [r0, #0x38]
	ldr r2, _0811A540 @ =0xFFFFF000
	adds r1, r1, r2
	str r1, [r0, #0x38]
	ldr r0, _0811A544 @ =sub_0811A548
	str r0, [r4, #0x78]
_0811A52C:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0811A53C: .4byte gUnk_08351648
_0811A540: .4byte 0xFFFFF000
_0811A544: .4byte sub_0811A548

	thumb_func_start sub_0811A548
sub_0811A548: @ 0x0811A548
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	movs r0, #1
	movs r2, #0
	bl sub_08002888
	ldr r0, [r0]
	cmp r0, #0
	bne _0811A602
	adds r3, r4, #0
	adds r3, #0x10
	adds r5, r4, #0
	adds r5, #0x83
	strb r0, [r5]
	ldr r2, _0811A610 @ =gUnk_08351648
	movs r0, #0x82
	adds r0, r0, r4
	mov ip, r0
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x14
	adds r0, r0, r2
	ldr r0, [r0]
	ldrh r0, [r0]
	strh r0, [r3, #0xc]
	mov r0, ip
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrb r1, [r5]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrb r0, [r1, #2]
	strb r0, [r3, #0x1a]
	movs r0, #0xff
	strb r0, [r3, #0x1b]
	adds r2, r4, #0
	adds r2, #0xc0
	ldrh r1, [r2]
	ldr r0, _0811A614 @ =0x0000FFFE
	ands r0, r1
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0xbc
	ldrh r1, [r1]
	subs r2, #2
	ldrh r2, [r2]
	adds r3, #0xb2
	ldrb r3, [r3]
	bl sub_0800255C
	adds r0, r4, #0
	adds r0, #0xb4
	ldr r2, [r0]
	cmp r2, #0
	beq _0811A5D6
	ldrh r1, [r2, #6]
	ldr r0, _0811A618 @ =0x0000FBFF
	ands r0, r1
	strh r0, [r2, #6]
_0811A5D6:
	adds r0, r4, #0
	adds r0, #0xb8
	ldr r2, [r0]
	cmp r2, #0
	beq _0811A5E8
	ldrh r1, [r2, #6]
	ldr r0, _0811A618 @ =0x0000FBFF
	ands r0, r1
	strh r0, [r2, #6]
_0811A5E8:
	movs r2, #0xad
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r1, [r0, #0x38]
	ldr r2, _0811A61C @ =0xFFFFF000
	adds r1, r1, r2
	str r1, [r0, #0x38]
	ldr r0, _0811A620 @ =sub_0811A45C
	str r0, [r4, #0x78]
_0811A602:
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #8]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0811A610: .4byte gUnk_08351648
_0811A614: .4byte 0x0000FFFE
_0811A618: .4byte 0x0000FBFF
_0811A61C: .4byte 0xFFFFF000
_0811A620: .4byte sub_0811A45C

	thumb_func_start sub_0811A624
sub_0811A624: @ 0x0811A624
	push {lr}
	adds r2, r0, #0
	movs r0, #0
	strh r0, [r2, #4]
	adds r0, r2, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #1
	beq _0811A664
	cmp r0, #1
	bgt _0811A642
	cmp r0, #0
	beq _0811A648
	b _0811A698
_0811A642:
	cmp r0, #2
	beq _0811A680
	b _0811A698
_0811A648:
	adds r0, r2, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #1
	bne _0811A65C
	ldr r0, _0811A658 @ =sub_0811A234
	b _0811A696
	.align 2, 0
_0811A658: .4byte sub_0811A234
_0811A65C:
	ldr r0, _0811A660 @ =sub_0811A15C
	b _0811A696
	.align 2, 0
_0811A660: .4byte sub_0811A15C
_0811A664:
	ldr r0, [r2, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _0811A678
	ldr r0, _0811A674 @ =sub_0811A3D8
	b _0811A696
	.align 2, 0
_0811A674: .4byte sub_0811A3D8
_0811A678:
	ldr r0, _0811A67C @ =sub_0811A35C
	b _0811A696
	.align 2, 0
_0811A67C: .4byte sub_0811A35C
_0811A680:
	adds r0, r2, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #0
	bne _0811A694
	ldr r0, _0811A690 @ =sub_0811A45C
	b _0811A696
	.align 2, 0
_0811A690: .4byte sub_0811A45C
_0811A694:
	ldr r0, _0811A69C @ =sub_0811A548
_0811A696:
	str r0, [r2, #0x78]
_0811A698:
	pop {r0}
	bx r0
	.align 2, 0
_0811A69C: .4byte sub_0811A548

	thumb_func_start sub_0811A6A0
sub_0811A6A0: @ 0x0811A6A0
	push {r4, lr}
	adds r4, r0, #0
	ldrh r1, [r4, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811A6BA
	ldrh r0, [r4, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r3, r0, r1
	b _0811A6C2
_0811A6BA:
	ldrh r1, [r4, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r1, r0
_0811A6C2:
	adds r2, r3, #0
	adds r2, #0x56
	ldrb r0, [r2]
	cmp r0, #0xff
	beq _0811A6FA
	adds r0, r3, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #2
	bne _0811A6FA
	adds r0, r3, #0
	adds r0, #0xc0
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0811A6FA
	ldrb r0, [r2]
	adds r1, r3, #0
	adds r1, #0xbc
	ldrh r1, [r1]
	adds r2, #0x68
	ldrh r2, [r2]
	adds r3, #0xc2
	ldrb r3, [r3]
	bl sub_0800255C
_0811A6FA:
	adds r0, r4, #0
	bl ObjectDestroy
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0811A708
sub_0811A708: @ 0x0811A708
	push {lr}
	adds r2, r0, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r2, #0
	adds r1, #0xbc
	ldrb r1, [r1]
	adds r2, #0xbe
	ldrb r2, [r2]
	bl sub_080025AC
	ldr r2, _0811A734 @ =0xFFFFFC2C
	adds r1, r2, #0
	ldrh r0, [r0, #8]
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	cmp r1, #9
	bls _0811A738
	movs r0, #0
	b _0811A73A
	.align 2, 0
_0811A734: .4byte 0xFFFFFC2C
_0811A738:
	movs r0, #1
_0811A73A:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start CreateShotzo
CreateShotzo: @ 0x0811A740
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _0811A774 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _0811A778 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811A77C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0811A784
	.align 2, 0
_0811A774: .4byte ObjectMain
_0811A778: .4byte ObjectDestroy
_0811A77C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0811A784:
	adds r5, r0, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	adds r1, r5, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
	adds r1, #0x1a
	strb r0, [r1]
	ldr r0, [r5, #0xc]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r5, #0xc]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r5, #0x5c]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r5, #0x5c]
	subs r1, #0x25
	movs r4, #6
	rsbs r4, r4, #0
	movs r0, #3
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	movs r2, #7
	rsbs r2, r2, #0
	movs r0, #7
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #6
	bl sub_0803E308
	adds r0, r5, #0
	bl ObjectInitSprite
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	bne _0811A80E
	adds r0, r5, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r5, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _0811A804
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	b _0811A80C
_0811A804:
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_0811A80C:
	str r0, [r5, #8]
_0811A80E:
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #4
	bne _0811A842
	adds r0, r5, #0
	adds r0, #0xac
	ldr r0, [r0]
	ldr r1, [r5, #0x40]
	ldr r0, [r0, #0x40]
	cmp r1, r0
	ble _0811A830
	ldr r0, [r5, #8]
	movs r1, #1
	orrs r0, r1
	b _0811A838
_0811A830:
	ldr r0, [r5, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_0811A838:
	str r0, [r5, #8]
	adds r0, r5, #0
	bl sub_0811B400
	b _0811A85C
_0811A842:
	ldr r2, _0811A870 @ =gUnk_08351648
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r5, #0
	bl _call_via_r1
_0811A85C:
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	str r0, [r5, #0x7c]
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0811A870: .4byte gUnk_08351648

	thumb_func_start sub_0811A874
sub_0811A874: @ 0x0811A874
	push {lr}
	adds r3, r0, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r0, [r0, #0xe]
	cmp r0, #0
	beq _0811A88E
	cmp r0, #4
	beq _0811A88E
	adds r0, r3, #0
	bl sub_0811A9D4
	b _0811A8CC
_0811A88E:
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _0811A8AC
	cmp r0, #1
	bgt _0811A8A2
	cmp r0, #0
	beq _0811A8A8
	b _0811A8B4
_0811A8A2:
	cmp r0, #2
	beq _0811A8B0
	b _0811A8B4
_0811A8A8:
	movs r0, #0x50
	b _0811A8B6
_0811A8AC:
	movs r0, #0x3c
	b _0811A8B6
_0811A8B0:
	movs r0, #0x28
	b _0811A8B6
_0811A8B4:
	movs r0, #0x14
_0811A8B6:
	strh r0, [r3, #4]
	adds r1, r3, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x9e
	strb r2, [r0]
	ldr r0, _0811A8D0 @ =sub_0811A8D4
	str r0, [r3, #0x78]
_0811A8CC:
	pop {r0}
	bx r0
	.align 2, 0
_0811A8D0: .4byte sub_0811A8D4

	thumb_func_start sub_0811A8D4
sub_0811A8D4: @ 0x0811A8D4
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0811A8EA
	adds r0, r4, #0
	bl sub_0811AB74
_0811A8EA:
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #2
	bne _0811A92C
	adds r1, r4, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bls _0811A92C
	adds r0, r4, #0
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r3, r0, #0
	cmp r1, #0
	beq _0811A924
	cmp r1, #2
	beq _0811A91A
	movs r0, #1
	b _0811A926
_0811A91A:
	ldr r0, [r4, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #8]
_0811A924:
	movs r0, #3
_0811A926:
	strb r0, [r2]
	movs r0, #0
	strb r0, [r3]
_0811A92C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0811A934
sub_0811A934: @ 0x0811A934
	push {lr}
	adds r3, r0, #0
	movs r0, #0x9e
	adds r0, r0, r3
	mov ip, r0
	ldrb r0, [r0]
	lsls r1, r0, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #7
	bhi _0811A9BA
	adds r0, r3, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #1
	beq _0811A96C
	cmp r0, #1
	bgt _0811A95C
	cmp r0, #0
	beq _0811A962
	b _0811A99C
_0811A95C:
	cmp r0, #3
	beq _0811A974
	b _0811A99C
_0811A962:
	ldr r2, _0811A968 @ =gUnk_08357C14
	b _0811A976
	.align 2, 0
_0811A968: .4byte gUnk_08357C14
_0811A96C:
	ldr r2, _0811A970 @ =gUnk_08357C24
	b _0811A976
	.align 2, 0
_0811A970: .4byte gUnk_08357C24
_0811A974:
	ldr r2, _0811A9D0 @ =gUnk_08357C34
_0811A976:
	lsrs r0, r1, #0x19
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrh r0, [r0]
	lsrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0x54
	strb r0, [r1]
	mov r0, ip
	ldrb r1, [r0]
	movs r0, #1
	orrs r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0x55
	strb r0, [r1]
_0811A99C:
	adds r1, r3, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811A9BA
	adds r1, r3, #0
	adds r1, #0x54
	ldrb r0, [r1]
	rsbs r0, r0, #0
	strb r0, [r1]
_0811A9BA:
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0811A9CC
	adds r0, r3, #0
	bl sub_0811A874
_0811A9CC:
	pop {r0}
	bx r0
	.align 2, 0
_0811A9D0: .4byte gUnk_08357C34

	thumb_func_start sub_0811A9D4
sub_0811A9D4: @ 0x0811A9D4
	push {lr}
	adds r3, r0, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #0xe]
	cmp r1, #1
	beq _0811A9EE
	cmp r1, #2
	beq _0811A9FA
	adds r1, r3, #0
	adds r1, #0x83
	movs r0, #1
	b _0811AA00
_0811A9EE:
	adds r0, r3, #0
	adds r0, #0x83
	strb r1, [r0]
	ldr r0, [r3, #8]
	orrs r0, r1
	b _0811AA0A
_0811A9FA:
	adds r1, r3, #0
	adds r1, #0x83
	movs r0, #3
_0811AA00:
	strb r0, [r1]
	ldr r0, [r3, #8]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
_0811AA0A:
	str r0, [r3, #8]
	adds r1, r3, #0
	adds r1, #0x50
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x9e
	strb r2, [r0]
	movs r0, #0x64
	strh r0, [r3, #4]
	ldr r0, _0811AA28 @ =sub_0811B3E4
	str r0, [r3, #0x78]
	pop {r0}
	bx r0
	.align 2, 0
_0811AA28: .4byte sub_0811B3E4

	thumb_func_start sub_0811AA2C
sub_0811AA2C: @ 0x0811AA2C
	push {lr}
	adds r2, r0, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _0811AA50
	cmp r0, #1
	bgt _0811AA42
	cmp r0, #0
	beq _0811AA4C
	b _0811AA5C
_0811AA42:
	cmp r0, #2
	beq _0811AA54
	cmp r0, #3
	beq _0811AA58
	b _0811AA5C
_0811AA4C:
	movs r0, #0x32
	b _0811AA5E
_0811AA50:
	movs r0, #0x28
	b _0811AA5E
_0811AA54:
	movs r0, #0x1e
	b _0811AA5E
_0811AA58:
	movs r0, #0x16
	b _0811AA5E
_0811AA5C:
	movs r0, #0x11
_0811AA5E:
	strh r0, [r2, #4]
	adds r1, r2, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	ldr r0, _0811AA7C @ =sub_0811AA80
	str r0, [r2, #0x78]
	adds r0, r2, #0
	bl sub_0811AEDC
	pop {r0}
	bx r0
	.align 2, 0
_0811AA7C: .4byte sub_0811AA80

	thumb_func_start sub_0811AA80
sub_0811AA80: @ 0x0811AA80
	push {lr}
	adds r3, r0, #0
	movs r0, #0x9e
	adds r0, r0, r3
	mov ip, r0
	ldrb r0, [r0]
	lsls r1, r0, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #7
	bhi _0811AB06
	adds r0, r3, #0
	adds r0, #0x83
	ldrb r0, [r0]
	cmp r0, #1
	beq _0811AAB8
	cmp r0, #1
	bgt _0811AAA8
	cmp r0, #0
	beq _0811AAAE
	b _0811AAE8
_0811AAA8:
	cmp r0, #3
	beq _0811AAC0
	b _0811AAE8
_0811AAAE:
	ldr r2, _0811AAB4 @ =gUnk_08357C14
	b _0811AAC2
	.align 2, 0
_0811AAB4: .4byte gUnk_08357C14
_0811AAB8:
	ldr r2, _0811AABC @ =gUnk_08357C24
	b _0811AAC2
	.align 2, 0
_0811AABC: .4byte gUnk_08357C24
_0811AAC0:
	ldr r2, _0811AB34 @ =gUnk_08357C34
_0811AAC2:
	lsrs r0, r1, #0x19
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrh r0, [r0]
	lsrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0x54
	strb r0, [r1]
	mov r0, ip
	ldrb r1, [r0]
	movs r0, #1
	orrs r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0x55
	strb r0, [r1]
_0811AAE8:
	adds r1, r3, #0
	adds r1, #0x9e
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811AB06
	adds r1, r3, #0
	adds r1, #0x54
	ldrb r0, [r1]
	rsbs r0, r0, #0
	strb r0, [r1]
_0811AB06:
	ldrh r0, [r3, #4]
	subs r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0811AB70
	adds r1, r3, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _0811AB38
	adds r0, r3, #0
	bl sub_0811A9D4
	b _0811AB70
	.align 2, 0
_0811AB34: .4byte gUnk_08357C34
_0811AB38:
	adds r0, r3, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _0811AB5A
	cmp r0, #1
	bgt _0811AB4C
	cmp r0, #0
	beq _0811AB56
	b _0811AB66
_0811AB4C:
	cmp r0, #2
	beq _0811AB5E
	cmp r0, #3
	beq _0811AB62
	b _0811AB66
_0811AB56:
	movs r0, #0x32
	b _0811AB68
_0811AB5A:
	movs r0, #0x28
	b _0811AB68
_0811AB5E:
	movs r0, #0x1e
	b _0811AB68
_0811AB62:
	movs r0, #0x16
	b _0811AB68
_0811AB66:
	movs r0, #0x11
_0811AB68:
	strh r0, [r3, #4]
	adds r0, r3, #0
	bl sub_0811AEDC
_0811AB70:
	pop {r0}
	bx r0

	thumb_func_start sub_0811AB74
sub_0811AB74: @ 0x0811AB74
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	bl sub_0803D368
	adds r2, r0, #0
	adds r0, r4, #0
	adds r0, #0xac
	str r2, [r0]
	ldr r0, [r2, #0x40]
	ldr r1, [r4, #0x40]
	subs r0, r0, r1
	lsls r0, r0, #8
	ldr r1, [r2, #0x44]
	ldr r2, [r4, #0x44]
	subs r1, r1, r2
	lsls r1, r1, #8
	asrs r0, r0, #0x10
	asrs r1, r1, #0x10
	bl ArcTan2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x1c
	cmp r0, #0xf
	bls _0811ABA6
	b _0811AECE
_0811ABA6:
	lsls r0, r0, #2
	ldr r1, _0811ABB0 @ =_0811ABB4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0811ABB0: .4byte _0811ABB4
_0811ABB4: @ jump table
	.4byte _0811ADBA @ case 0
	.4byte _0811AE4A @ case 1
	.4byte _0811AE4A @ case 2
	.4byte _0811AE4A @ case 3
	.4byte _0811AE8C @ case 4
	.4byte _0811AE8C @ case 5
	.4byte _0811AE8C @ case 6
	.4byte _0811ABF4 @ case 7
	.4byte _0811ABF4 @ case 8
	.4byte _0811AC6A @ case 9
	.4byte _0811AC6A @ case 10
	.4byte _0811ACE0 @ case 11
	.4byte _0811ACE0 @ case 12
	.4byte _0811AD36 @ case 13
	.4byte _0811AD36 @ case 14
	.4byte _0811ADBA @ case 15
_0811ABF4:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r5, [r0]
	adds r3, r0, #0
	cmp r5, #0
	bne _0811AC40
	ldr r1, [r4, #8]
	movs r5, #1
	adds r0, r1, #0
	ands r0, r5
	adds r2, r1, #0
	cmp r0, #0
	beq _0811AC50
	adds r1, r4, #0
	adds r1, #0x85
	ldrb r0, [r1]
	cmp r0, #0
	bne _0811AC1A
	b _0811AD7C
_0811AC1A:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _0811AC38
	cmp r0, #1
	bgt _0811AC2E
	cmp r0, #0
	beq _0811AC34
	b _0811ADFE
_0811AC2E:
	cmp r0, #2
	beq _0811AC3C
	b _0811ADFE
_0811AC34:
	movs r0, #0x50
	b _0811AE00
_0811AC38:
	movs r0, #0x3c
	b _0811AE00
_0811AC3C:
	movs r0, #0x28
	b _0811AE00
_0811AC40:
	ldr r1, [r4, #8]
	movs r0, #1
	ands r0, r1
	adds r2, r1, #0
	cmp r0, #0
	beq _0811AC50
	subs r0, r5, #1
	b _0811AE32
_0811AC50:
	ldrb r0, [r3]
	cmp r0, #3
	beq _0811AC58
	b _0811AE30
_0811AC58:
	movs r1, #1
	orrs r2, r1
	str r2, [r4, #8]
	movs r0, #2
	strb r0, [r3]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r1, [r0]
	b _0811AEC6
_0811AC6A:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r5, [r0]
	adds r6, r5, #0
	adds r3, r0, #0
	cmp r6, #1
	bne _0811ACB8
	ldr r1, [r4, #8]
	adds r0, r1, #0
	ands r0, r6
	adds r2, r1, #0
	cmp r0, #0
	beq _0811ACD8
	adds r1, r4, #0
	adds r1, #0x85
	ldrb r0, [r1]
	cmp r0, #0
	beq _0811ACB4
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _0811ACAC
	cmp r0, #1
	bgt _0811ACA2
	cmp r0, #0
	beq _0811ACA8
	b _0811ADFE
_0811ACA2:
	cmp r0, #2
	beq _0811ACB0
	b _0811ADFE
_0811ACA8:
	movs r0, #0x50
	b _0811AE00
_0811ACAC:
	movs r0, #0x3c
	b _0811AE00
_0811ACB0:
	movs r0, #0x28
	b _0811AE00
_0811ACB4:
	strb r6, [r1]
	b _0811AECE
_0811ACB8:
	ldr r1, [r4, #8]
	movs r0, #1
	ands r0, r1
	adds r2, r1, #0
	cmp r0, #0
	beq _0811ACD8
	cmp r6, #0
	bne _0811ACD4
	adds r0, r5, #1
	strb r0, [r3]
	adds r0, r4, #0
	adds r0, #0x85
	strb r6, [r0]
	b _0811AECE
_0811ACD4:
	subs r0, r5, #1
	b _0811AE32
_0811ACD8:
	ldrb r0, [r3]
	cmp r0, #3
	beq _0811AC58
	b _0811AE30
_0811ACE0:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r2, [r0]
	adds r3, r0, #0
	cmp r2, #3
	bne _0811AD2A
	ldr r0, [r4, #8]
	movs r2, #1
	ands r0, r2
	cmp r0, #0
	beq _0811ACF8
	b _0811AE2A
_0811ACF8:
	adds r1, r4, #0
	adds r1, #0x85
	ldrb r0, [r1]
	cmp r0, #0
	bne _0811AD04
	b _0811AE1C
_0811AD04:
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _0811AD22
	cmp r0, #1
	bgt _0811AD18
	cmp r0, #0
	beq _0811AD1E
	b _0811ADFE
_0811AD18:
	cmp r0, #2
	beq _0811AD26
	b _0811ADFE
_0811AD1E:
	movs r0, #0x50
	b _0811AE00
_0811AD22:
	movs r0, #0x3c
	b _0811AE00
_0811AD26:
	movs r0, #0x28
	b _0811AE00
_0811AD2A:
	ldr r1, [r4, #8]
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _0811ADAE
	b _0811AE2A
_0811AD36:
	adds r0, r4, #0
	adds r0, #0x83
	ldrb r2, [r0]
	adds r5, r2, #0
	adds r3, r0, #0
	cmp r5, #1
	bne _0811AD80
	ldr r0, [r4, #8]
	ands r0, r5
	cmp r0, #0
	bne _0811AE2A
	adds r1, r4, #0
	adds r1, #0x85
	ldrb r0, [r1]
	cmp r0, #0
	beq _0811AD7C
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _0811AD74
	cmp r0, #1
	bgt _0811AD6A
	cmp r0, #0
	beq _0811AD70
	b _0811ADFE
_0811AD6A:
	cmp r0, #2
	beq _0811AD78
	b _0811ADFE
_0811AD70:
	movs r0, #0x50
	b _0811AE00
_0811AD74:
	movs r0, #0x3c
	b _0811AE00
_0811AD78:
	movs r0, #0x28
	b _0811AE00
_0811AD7C:
	strb r5, [r1]
	b _0811AECE
_0811AD80:
	ldr r1, [r4, #8]
	movs r6, #1
	ands r1, r6
	cmp r1, #0
	bne _0811AE2A
	cmp r5, #3
	bne _0811ADAE
	subs r0, r2, #1
	strb r0, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	beq _0811AD9C
	b _0811AEC6
_0811AD9C:
	adds r0, r4, #0
	adds r0, #0x9f
	strb r6, [r0]
	b _0811AEC6
_0811ADA4:
	adds r1, r4, #0
	adds r1, #0x9f
	movs r0, #2
	strb r0, [r1]
	b _0811AE32
_0811ADAE:
	adds r0, r2, #1
	strb r0, [r3]
	adds r0, r4, #0
	adds r0, #0x85
	strb r1, [r0]
	b _0811AECE
_0811ADBA:
	adds r1, r4, #0
	adds r1, #0x83
	ldrb r2, [r1]
	adds r3, r1, #0
	cmp r2, #0
	bne _0811AE20
	ldr r0, [r4, #8]
	movs r2, #1
	ands r0, r2
	cmp r0, #0
	bne _0811AE2A
	adds r1, #2
	ldrb r0, [r1]
	cmp r0, #0
	beq _0811AE1C
	adds r0, r4, #0
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #1
	beq _0811ADF6
	cmp r0, #1
	bgt _0811ADEC
	cmp r0, #0
	beq _0811ADF2
	b _0811ADFE
_0811ADEC:
	cmp r0, #2
	beq _0811ADFA
	b _0811ADFE
_0811ADF2:
	movs r0, #0x50
	b _0811AE00
_0811ADF6:
	movs r0, #0x3c
	b _0811AE00
_0811ADFA:
	movs r0, #0x28
	b _0811AE00
_0811ADFE:
	movs r0, #0x14
_0811AE00:
	strh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0x9e
	movs r0, #0
	strb r0, [r1]
	ldr r0, _0811AE18 @ =sub_0811A934
	str r0, [r4, #0x78]
	adds r0, r4, #0
	bl sub_0811AEDC
	b _0811AED4
	.align 2, 0
_0811AE18: .4byte sub_0811A934
_0811AE1C:
	strb r2, [r1]
	b _0811AECE
_0811AE20:
	ldr r0, [r4, #8]
	movs r5, #1
	ands r0, r5
	cmp r0, #0
	beq _0811AE36
_0811AE2A:
	ldrb r0, [r3]
	cmp r0, #1
	beq _0811ADA4
_0811AE30:
	adds r0, #1
_0811AE32:
	strb r0, [r3]
	b _0811AEC6
_0811AE36:
	subs r0, r2, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _0811AEC6
	adds r0, r4, #0
	adds r0, #0x9f
	strb r5, [r0]
	b _0811AEC6
_0811AE4A:
	ldr r0, [r4, #8]
	movs r2, #1
	ands r0, r2
	cmp r0, #0
	beq _0811AE70
	adds r1, r4, #0
	adds r1, #0x83
	ldrb r0, [r1]
	cmp r0, #1
	bne _0811AE6A
	adds r2, r4, #0
	adds r2, #0x9f
	movs r0, #2
	strb r0, [r2]
	strb r0, [r1]
	b _0811AEC6
_0811AE6A:
	adds r0, #1
	strb r0, [r1]
	b _0811AEC6
_0811AE70:
	adds r1, r4, #0
	adds r1, #0x83
	ldrb r0, [r1]
	cmp r0, #0
	beq _0811AE7E
	subs r0, #1
	strb r0, [r1]
_0811AE7E:
	ldrb r0, [r1]
	cmp r0, #2
	bne _0811AEC6
	adds r0, r4, #0
	adds r0, #0x9f
	strb r2, [r0]
	b _0811AEC6
_0811AE8C:
	ldr r1, [r4, #8]
	movs r3, #1
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _0811AEA8
	adds r1, r4, #0
	adds r1, #0x83
	ldrb r0, [r1]
	cmp r0, #0
	beq _0811AEC6
	subs r0, #1
	strb r0, [r1]
	b _0811AEC6
_0811AEA8:
	adds r2, r4, #0
	adds r2, #0x83
	ldrb r0, [r2]
	cmp r0, #3
	bne _0811AEC2
	orrs r1, r3
	str r1, [r4, #8]
	movs r0, #2
	strb r0, [r2]
	adds r0, r4, #0
	adds r0, #0x9f
	strb r3, [r0]
	b _0811AEC6
_0811AEC2:
	adds r0, #1
	strb r0, [r2]
_0811AEC6:
	adds r1, r4, #0
	adds r1, #0x85
	movs r0, #0
	strb r0, [r1]
_0811AECE:
	adds r0, r4, #0
	bl sub_0811A874
_0811AED4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0811AEDC
sub_0811AEDC: @ 0x0811AEDC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	ldr r1, _0811AF28 @ =gCurLevelInfo
	adds r3, r5, #0
	adds r3, #0x56
	ldrb r2, [r3]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r1, #0x54
	adds r0, r0, r1
	ldr r1, [r5, #0x44]
	ldr r0, [r0]
	cmp r1, r0
	blt _0811AF02
	b _0811B1AC
_0811AF02:
	movs r4, #0
	ldr r1, _0811AF2C @ =gUnk_020229D4
	movs r6, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r6
	mov ip, r3
	ldr r7, _0811AF30 @ =gUnk_020229E0
	movs r3, #0x87
	adds r3, r3, r5
	mov r8, r3
	movs r3, #0x83
	adds r3, r3, r5
	mov sb, r3
	cmp r0, #0
	bne _0811AF34
	orrs r2, r6
	b _0811AF4E
	.align 2, 0
_0811AF28: .4byte gCurLevelInfo
_0811AF2C: .4byte gUnk_020229D4
_0811AF30: .4byte gUnk_020229E0
_0811AF34:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _0811AF50
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	cmp r0, #0
	bne _0811AF34
	orrs r2, r3
_0811AF4E:
	str r2, [r1]
_0811AF50:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r1, r7
	movs r4, #0
	movs r7, #1
	strb r7, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	movs r6, #0
	strh r0, [r1, #6]
	ldr r0, [r5, #0x44]
	asrs r0, r0, #8
	strh r0, [r1, #8]
	strb r6, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r6, [r1, #4]
	strb r6, [r1, #5]
	movs r0, #0xd7
	strb r0, [r1, #0xc]
	strb r6, [r1, #0xe]
	strb r6, [r1, #0xf]
	mov r2, r8
	ldrb r0, [r2]
	strb r0, [r1, #0x10]
	strh r4, [r1, #0x22]
	strh r4, [r1, #0x1a]
	strh r4, [r1, #0x1c]
	strh r4, [r1, #0x1e]
	strh r4, [r1, #0x20]
	strb r6, [r1, #0x11]
	strh r4, [r1, #0x12]
	strh r4, [r1, #0x14]
	strh r4, [r1, #0x16]
	strh r4, [r1, #0x18]
	mov r3, ip
	ldrb r0, [r3]
	bl CreateObject
	str r5, [r0, #0x70]
	adds r3, r0, #0
	ldr r0, [r5, #8]
	ands r0, r7
	cmp r0, #0
	beq _0811AFB6
	ldr r0, [r3, #8]
	orrs r0, r7
	str r0, [r3, #8]
_0811AFB6:
	mov r0, sb
	ldrb r1, [r0]
	cmp r1, #1
	beq _0811B05E
	cmp r1, #1
	bgt _0811AFC8
	cmp r1, #0
	beq _0811AFD0
	b _0811B15A
_0811AFC8:
	cmp r1, #3
	bne _0811AFCE
	b _0811B0DE
_0811AFCE:
	b _0811B15A
_0811AFD0:
	ldr r0, [r5, #8]
	ands r0, r7
	cmp r0, #0
	beq _0811AFE4
	ldr r0, [r3, #0x40]
	ldr r1, _0811AFE0 @ =0xFFFFF400
	adds r0, r0, r1
	b _0811AFEC
	.align 2, 0
_0811AFE0: .4byte 0xFFFFF400
_0811AFE4:
	ldr r0, [r3, #0x40]
	movs r2, #0xc0
	lsls r2, r2, #4
	adds r0, r0, r2
_0811AFEC:
	str r0, [r3, #0x40]
	ldr r0, [r3, #0x44]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	str r0, [r3, #0x44]
	mov r0, r8
	ldrb r2, [r0]
	cmp r2, #1
	beq _0811B024
	cmp r2, #1
	bgt _0811B00A
	cmp r2, #0
	beq _0811B014
	b _0811B04C
_0811B00A:
	cmp r2, #2
	beq _0811B030
	cmp r2, #3
	beq _0811B03C
	b _0811B04C
_0811B014:
	adds r1, r3, #0
	adds r1, #0x50
	movs r0, #0xb3
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x52
	strh r2, [r0]
	b _0811B15A
_0811B024:
	adds r0, r3, #0
	adds r0, #0x50
	movs r2, #0
	movs r1, #0x80
	lsls r1, r1, #1
	b _0811B056
_0811B030:
	adds r0, r3, #0
	adds r0, #0x50
	movs r2, #0
	movs r1, #0xb3
	lsls r1, r1, #1
	b _0811B056
_0811B03C:
	adds r0, r3, #0
	adds r0, #0x50
	movs r2, #0
	ldr r1, _0811B048 @ =0x000001CD
	b _0811B056
	.align 2, 0
_0811B048: .4byte 0x000001CD
_0811B04C:
	adds r0, r3, #0
	adds r0, #0x50
	movs r2, #0
	movs r1, #0x80
	lsls r1, r1, #3
_0811B056:
	strh r1, [r0]
	adds r0, #2
	strh r2, [r0]
	b _0811B15A
_0811B05E:
	ldr r0, [r3, #8]
	ands r0, r1
	cmp r0, #0
	beq _0811B074
	ldr r0, [r3, #0x40]
	ldr r1, _0811B070 @ =0xFFFFF800
	adds r0, r0, r1
	b _0811B07C
	.align 2, 0
_0811B070: .4byte 0xFFFFF800
_0811B074:
	ldr r0, [r3, #0x40]
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
_0811B07C:
	str r0, [r3, #0x40]
	ldr r0, [r3, #0x44]
	ldr r1, _0811B098 @ =0xFFFFFA00
	adds r0, r0, r1
	str r0, [r3, #0x44]
	mov r2, r8
	ldrb r0, [r2]
	cmp r0, #1
	beq _0811B0AE
	cmp r0, #1
	bgt _0811B09C
	cmp r0, #0
	beq _0811B0A6
	b _0811B0CE
	.align 2, 0
_0811B098: .4byte 0xFFFFFA00
_0811B09C:
	cmp r0, #2
	beq _0811B0B6
	cmp r0, #3
	beq _0811B0C4
	b _0811B0CE
_0811B0A6:
	adds r0, r3, #0
	adds r0, #0x50
	movs r1, #0x82
	b _0811B0D6
_0811B0AE:
	adds r0, r3, #0
	adds r0, #0x50
	movs r1, #0xbb
	b _0811B0D6
_0811B0B6:
	adds r0, r3, #0
	adds r0, #0x50
	ldr r1, _0811B0C0 @ =0x00000105
	b _0811B0D6
	.align 2, 0
_0811B0C0: .4byte 0x00000105
_0811B0C4:
	adds r0, r3, #0
	adds r0, #0x50
	movs r1, #0xa8
	lsls r1, r1, #1
	b _0811B0D6
_0811B0CE:
	adds r0, r3, #0
	adds r0, #0x50
	movs r1, #0xbb
	lsls r1, r1, #2
_0811B0D6:
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	b _0811B15A
_0811B0DE:
	ldr r0, [r3, #0x44]
	ldr r1, _0811B0F8 @ =0xFFFFF600
	adds r0, r0, r1
	str r0, [r3, #0x44]
	mov r2, r8
	ldrb r0, [r2]
	cmp r0, #1
	beq _0811B114
	cmp r0, #1
	bgt _0811B0FC
	cmp r0, #0
	beq _0811B106
	b _0811B148
	.align 2, 0
_0811B0F8: .4byte 0xFFFFF600
_0811B0FC:
	cmp r0, #2
	beq _0811B124
	cmp r0, #3
	beq _0811B134
	b _0811B148
_0811B106:
	adds r0, r3, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r1, r3, #0
	adds r1, #0x52
	movs r0, #0xb3
	b _0811B158
_0811B114:
	adds r0, r3, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r1, r3, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #1
	b _0811B158
_0811B124:
	adds r0, r3, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r1, r3, #0
	adds r1, #0x52
	movs r0, #0xb3
	lsls r0, r0, #1
	b _0811B158
_0811B134:
	adds r0, r3, #0
	adds r0, #0x50
	strh r4, [r0]
	adds r1, r3, #0
	adds r1, #0x52
	ldr r0, _0811B144 @ =0x000001CD
	b _0811B158
	.align 2, 0
_0811B144: .4byte 0x000001CD
_0811B148:
	adds r0, r3, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	adds r1, r3, #0
	adds r1, #0x52
	movs r0, #0x80
	lsls r0, r0, #3
_0811B158:
	strh r0, [r1]
_0811B15A:
	ldr r0, [r3, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811B16E
	adds r1, r3, #0
	adds r1, #0x50
	ldrh r0, [r1]
	rsbs r0, r0, #0
	strh r0, [r1]
_0811B16E:
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #1
	beq _0811B18E
	cmp r0, #1
	bgt _0811B180
	cmp r0, #0
	beq _0811B18A
	b _0811B19A
_0811B180:
	cmp r0, #2
	beq _0811B192
	cmp r0, #3
	beq _0811B196
	b _0811B19A
_0811B18A:
	movs r0, #0xd6
	b _0811B19C
_0811B18E:
	movs r0, #0x96
	b _0811B19C
_0811B192:
	movs r0, #0x6b
	b _0811B19C
_0811B196:
	movs r0, #0x53
	b _0811B19C
_0811B19A:
	movs r0, #0x26
_0811B19C:
	strh r0, [r3, #4]
	movs r2, #0xa6
	lsls r2, r2, #2
	adds r0, r3, #0
	movs r1, #0
	movs r3, #1
	bl sub_0808AE30
_0811B1AC:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0811B1B8
sub_0811B1B8: @ 0x0811B1B8
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _0811B1EC @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _0811B1F0 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0x10
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811B1F4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r5, r0, r1
	b _0811B1FC
	.align 2, 0
_0811B1EC: .4byte ObjectMain
_0811B1F0: .4byte ObjectDestroy
_0811B1F4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
_0811B1FC:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	adds r0, r5, #0
	adds r0, #0x63
	movs r3, #0
	movs r1, #1
	strb r1, [r0]
	ldr r2, [r5, #8]
	movs r0, #0x40
	orrs r2, r0
	ldr r0, [r5, #0xc]
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r4, #2
	orrs r0, r4
	str r0, [r5, #0xc]
	movs r0, #0x80
	lsls r0, r0, #7
	orrs r2, r0
	movs r0, #0x80
	lsls r0, r0, #1
	orrs r2, r0
	movs r0, #0x80
	lsls r0, r0, #0x15
	orrs r2, r0
	str r2, [r5, #8]
	ldr r0, _0811B298 @ =0x20000043
	str r0, [r5, #0x68]
	ldr r0, [r5, #0x5c]
	movs r1, #0x88
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r5, #0x5c]
	adds r0, r5, #0
	adds r0, #0x9e
	strb r3, [r0]
	ldr r0, _0811B29C @ =sub_0809F840
	str r0, [r5, #0x7c]
	movs r2, #2
	rsbs r2, r2, #0
	str r4, [sp]
	adds r0, r5, #0
	adds r1, r2, #0
	movs r3, #2
	bl sub_0803E2B0
	str r4, [sp]
	adds r0, r5, #0
	movs r1, #2
	movs r2, #2
	movs r3, #2
	bl sub_0803E308
	adds r0, r5, #0
	bl ObjectInitSprite
	ldr r2, _0811B2A0 @ =gUnk_08351648
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r5, #0
	bl _call_via_r1
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0811B298: .4byte 0x20000043
_0811B29C: .4byte sub_0809F840
_0811B2A0: .4byte gUnk_08351648

	thumb_func_start sub_0811B2A4
sub_0811B2A4: @ 0x0811B2A4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _0811B330 @ =sub_0811B34C
	movs r1, #0
	bl ObjectSetFunc
	ldr r0, [r4, #8]
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x61
	ands r0, r1
	str r0, [r4, #8]
	ldr r1, _0811B334 @ =gUnk_02020EE0
	ldr r0, _0811B338 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811B328
	ldrb r0, [r4]
	cmp r0, #0
	bne _0811B2E8
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0811B328
_0811B2E8:
	ldr r1, _0811B33C @ =gUnk_08D60FA4
	ldr r4, _0811B340 @ =gSongTable
	ldr r2, _0811B344 @ =0x00000A34
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811B30E
	movs r1, #0xa3
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811B328
_0811B30E:
	cmp r3, #0
	beq _0811B320
	ldr r0, _0811B348 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811B328
_0811B320:
	movs r0, #0xa3
	lsls r0, r0, #1
	bl m4aSongNumStart
_0811B328:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811B330: .4byte sub_0811B34C
_0811B334: .4byte gUnk_02020EE0
_0811B338: .4byte gUnk_0203AD3C
_0811B33C: .4byte gUnk_08D60FA4
_0811B340: .4byte gSongTable
_0811B344: .4byte 0x00000A34
_0811B348: .4byte gUnk_0203AD10

	thumb_func_start sub_0811B34C
sub_0811B34C: @ 0x0811B34C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #4
	orrs r0, r1
	ldr r1, _0811B3DC @ =0xFFFFFEFF
	ands r0, r1
	str r0, [r4, #8]
	ldr r2, _0811B3E0 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r1, r0, r1
	adds r0, r2, #0
	adds r0, #0x50
	adds r0, r1, r0
	ldr r3, [r4, #0x40]
	ldr r0, [r0]
	cmp r3, r0
	bgt _0811B3A4
	adds r0, r2, #0
	adds r0, #0x48
	adds r0, r1, r0
	ldr r0, [r0]
	cmp r3, r0
	blt _0811B3A4
	adds r0, r2, #0
	adds r0, #0x54
	adds r0, r1, r0
	ldr r3, [r4, #0x44]
	ldr r0, [r0]
	cmp r3, r0
	bgt _0811B3A4
	adds r0, r2, #0
	adds r0, #0x4c
	adds r0, r1, r0
	ldr r0, [r0]
	cmp r3, r0
	blt _0811B3A4
	adds r0, r4, #0
	bl sub_0806FC70
_0811B3A4:
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0811B3C4
	adds r0, r4, #0
	adds r0, #0x62
	ldrb r0, [r0]
	cmp r0, #0
	beq _0811B3D4
_0811B3C4:
	adds r0, r4, #0
	bl sub_0809DA30
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
_0811B3D4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811B3DC: .4byte 0xFFFFFEFF
_0811B3E0: .4byte gCurLevelInfo

	thumb_func_start sub_0811B3E4
sub_0811B3E4: @ 0x0811B3E4
	push {lr}
	adds r1, r0, #0
	ldrh r0, [r1, #4]
	subs r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0811B3FA
	adds r0, r1, #0
	bl sub_0811AA2C
_0811B3FA:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0811B400
sub_0811B400: @ 0x0811B400
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0
	strb r0, [r1]
	subs r1, #0x33
	movs r2, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #0x4c
	strb r2, [r1]
	strh r0, [r4, #4]
	movs r1, #5
	rsbs r1, r1, #0
	movs r2, #0x10
	rsbs r2, r2, #0
	movs r0, #8
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, _0811B448 @ =sub_0811B44C
	str r0, [r4, #0x78]
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811B448: .4byte sub_0811B44C

	thumb_func_start sub_0811B44C
sub_0811B44C: @ 0x0811B44C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	ldr r1, _0811B484 @ =0xFFFFDFFF
	ands r0, r1
	str r0, [r4, #8]
	adds r0, r4, #0
	movs r1, #0
	bl sub_080C29C0
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0
	strb r0, [r1]
	subs r1, #0x33
	movs r2, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #0x4c
	strb r2, [r1]
	strh r0, [r4, #4]
	ldr r0, _0811B488 @ =sub_0811B48C
	str r0, [r4, #0x78]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811B484: .4byte 0xFFFFDFFF
_0811B488: .4byte sub_0811B48C

	thumb_func_start sub_0811B48C
sub_0811B48C: @ 0x0811B48C
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0811B4D8
	ldr r1, [r4, #8]
	movs r2, #0x80
	lsls r2, r2, #0x11
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _0811B4D4
	ldr r0, _0811B4D0 @ =0xFEFFFFFF
	ands r1, r0
	str r1, [r4, #8]
	movs r1, #5
	rsbs r1, r1, #0
	movs r2, #6
	rsbs r2, r2, #0
	movs r0, #3
	str r0, [sp]
	adds r0, r4, #0
	movs r3, #5
	bl sub_0803E2B0
	adds r0, r4, #0
	bl sub_0811A874
	b _0811B4E8
	.align 2, 0
_0811B4D0: .4byte 0xFEFFFFFF
_0811B4D4:
	orrs r1, r2
	str r1, [r4, #8]
_0811B4D8:
	ldr r1, [r4, #8]
	movs r0, #0x40
	ands r1, r0
	cmp r1, #0
	bne _0811B4E8
	adds r0, r4, #0
	adds r0, #0x50
	strh r1, [r0]
_0811B4E8:
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start CreateVertSlidingDoor
CreateVertSlidingDoor: @ 0x0811B4F0
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _0811B524 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _0811B528 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb8
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811B52C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r7, r0, r1
	b _0811B534
	.align 2, 0
_0811B524: .4byte ObjectMain
_0811B528: .4byte ObjectDestroy
_0811B52C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
_0811B534:
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r7, #8]
	ldr r1, _0811B5B0 @ =0x02408940
	orrs r0, r1
	str r0, [r7, #8]
	ldr r2, [r7, #0x5c]
	movs r0, #0x20
	orrs r2, r0
	ldr r0, [r7, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r7, #0xc]
	ldr r0, [r7, #0x68]
	movs r4, #8
	rsbs r4, r4, #0
	ands r0, r4
	str r0, [r7, #0x68]
	ands r2, r4
	str r2, [r7, #0x5c]
	movs r6, #0x20
	rsbs r6, r6, #0
	movs r5, #0
	str r5, [sp]
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #8
	bl sub_0803E308
	str r5, [sp]
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #8
	bl sub_0803E2B0
	adds r0, r7, #0
	bl ObjectInitSprite
	ldr r2, _0811B5B4 @ =gUnk_08351648
	adds r0, r7, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r7, #0
	bl _call_via_r1
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0811B5B0: .4byte 0x02408940
_0811B5B4: .4byte gUnk_08351648

	thumb_func_start sub_0811B5B8
sub_0811B5B8: @ 0x0811B5B8
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r7, #0
	movs r0, #0
	strh r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	ldr r3, _0811B684 @ =gCurLevelInfo
	adds r6, r4, #0
	adds r6, #0x56
	ldrb r2, [r6]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _0811B688 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	ldr r3, [r0]
	adds r2, r4, #0
	adds r2, #0xb4
	ldrh r1, [r2]
	movs r5, #1
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0811B5FA
	b _0811B72E
_0811B5FA:
	cmp r3, #0
	beq _0811B6B0
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0811B608
	b _0811B72E
_0811B608:
	ldr r0, _0811B68C @ =sub_0811B7B0
	str r0, [r4, #0x78]
	adds r0, r4, #0
	adds r0, #0x83
	strb r5, [r0]
	adds r0, #0x34
	strb r7, [r0]
	ldrh r0, [r2]
	orrs r0, r5
	strh r0, [r2]
	ldr r1, _0811B690 @ =gUnk_02020EE0
	ldr r0, _0811B694 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811B72E
	ldrb r0, [r4]
	cmp r0, #0
	bne _0811B644
	ldrb r0, [r6]
	cmp r0, r2
	bne _0811B72E
_0811B644:
	ldr r1, _0811B698 @ =gUnk_08D60FA4
	ldr r5, _0811B69C @ =gSongTable
	ldr r2, _0811B6A0 @ =0x000010AC
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811B668
	ldr r1, _0811B6A4 @ =0x000010A8
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811B72E
_0811B668:
	cmp r3, #0
	beq _0811B67A
	ldr r0, _0811B6A8 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811B72E
_0811B67A:
	ldr r0, _0811B6AC @ =0x00000215
	bl m4aSongNumStart
	b _0811B72E
	.align 2, 0
_0811B684: .4byte gCurLevelInfo
_0811B688: .4byte 0x0000065E
_0811B68C: .4byte sub_0811B7B0
_0811B690: .4byte gUnk_02020EE0
_0811B694: .4byte gUnk_0203AD3C
_0811B698: .4byte gUnk_08D60FA4
_0811B69C: .4byte gSongTable
_0811B6A0: .4byte 0x000010AC
_0811B6A4: .4byte 0x000010A8
_0811B6A8: .4byte gUnk_0203AD10
_0811B6AC: .4byte 0x00000215
_0811B6B0:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0811B72E
	ldr r0, _0811B74C @ =sub_0811B8E4
	str r0, [r4, #0x78]
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #2
	strb r0, [r1]
	ldrh r0, [r2]
	orrs r0, r5
	strh r0, [r2]
	ldr r1, _0811B750 @ =gUnk_02020EE0
	ldr r0, _0811B754 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r4, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811B72E
	ldrb r0, [r4]
	cmp r0, #0
	bne _0811B6F2
	ldrb r0, [r6]
	cmp r0, r2
	bne _0811B72E
_0811B6F2:
	ldr r1, _0811B758 @ =gUnk_08D60FA4
	ldr r5, _0811B75C @ =gSongTable
	ldr r2, _0811B760 @ =0x000010AC
	adds r0, r5, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811B716
	ldr r1, _0811B764 @ =0x000010A8
	adds r0, r5, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811B72E
_0811B716:
	cmp r3, #0
	beq _0811B728
	ldr r0, _0811B768 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811B72E
_0811B728:
	ldr r0, _0811B76C @ =0x00000215
	bl m4aSongNumStart
_0811B72E:
	adds r1, r4, #0
	adds r1, #0x56
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _0811B778
	ldr r2, _0811B770 @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r2, _0811B774 @ =0x0000065E
	adds r0, r0, r2
	ldrb r0, [r0]
	b _0811B77A
	.align 2, 0
_0811B74C: .4byte sub_0811B8E4
_0811B750: .4byte gUnk_02020EE0
_0811B754: .4byte gUnk_0203AD3C
_0811B758: .4byte gUnk_08D60FA4
_0811B75C: .4byte gSongTable
_0811B760: .4byte 0x000010AC
_0811B764: .4byte 0x000010A8
_0811B768: .4byte gUnk_0203AD10
_0811B76C: .4byte 0x00000215
_0811B770: .4byte gCurLevelInfo
_0811B774: .4byte 0x0000065E
_0811B778:
	movs r0, #0xff
_0811B77A:
	cmp r0, #0xff
	beq _0811B7A2
	lsls r3, r0, #3
	ldr r1, _0811B7A8 @ =gUnk_02022F40
	adds r1, r0, r1
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0811B7AC @ =gUnk_02022EC0
	lsls r1, r0, #2
	adds r1, r1, r2
	str r4, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_0811B7A2:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811B7A8: .4byte gUnk_02022F40
_0811B7AC: .4byte gUnk_02022EC0

	thumb_func_start sub_0811B7B0
sub_0811B7B0: @ 0x0811B7B0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r7, r0, #0
	mov r8, r7
	adds r1, r7, #0
	adds r1, #0xb6
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #6
	ble _0811B816
	movs r0, #0
	strb r0, [r1]
	adds r6, r7, #0
	adds r6, #0xb7
	ldrb r1, [r6]
	movs r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #7
	bgt _0811B816
	adds r0, r1, #1
	strb r0, [r6]
	movs r4, #8
	rsbs r4, r4, #0
	movs r5, #0x20
	rsbs r5, r5, #0
	movs r0, #0
	ldrsb r0, [r6, r0]
	lsls r0, r0, #0x1a
	rsbs r0, r0, #0
	asrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #8
	bl sub_0803E308
	movs r0, #0
	ldrsb r0, [r6, r0]
	lsls r0, r0, #0x1a
	rsbs r0, r0, #0
	asrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #8
	bl sub_0803E2B0
_0811B816:
	mov r1, r8
	adds r1, #0xb6
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r0, [r7, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0811B876
	mov r6, r8
	adds r6, #0xb7
	movs r0, #7
	strb r0, [r6]
	movs r4, #8
	rsbs r4, r4, #0
	movs r5, #0x20
	rsbs r5, r5, #0
	subs r0, #0x23
	str r0, [sp]
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #8
	bl sub_0803E308
	movs r0, #0
	ldrsb r0, [r6, r0]
	lsls r0, r0, #0x1a
	rsbs r0, r0, #0
	asrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #8
	bl sub_0803E2B0
	ldr r0, _0811B894 @ =sub_0811B5B8
	str r0, [r7, #0x78]
	mov r2, r8
	adds r2, #0xb4
	ldrh r1, [r2]
	ldr r0, _0811B898 @ =0x0000FFFE
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strh r0, [r2]
_0811B876:
	adds r1, r7, #0
	adds r1, #0x56
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _0811B8A4
	ldr r2, _0811B89C @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _0811B8A0 @ =0x0000065E
	adds r0, r0, r1
	ldrb r0, [r0]
	b _0811B8A6
	.align 2, 0
_0811B894: .4byte sub_0811B5B8
_0811B898: .4byte 0x0000FFFE
_0811B89C: .4byte gCurLevelInfo
_0811B8A0: .4byte 0x0000065E
_0811B8A4:
	movs r0, #0xff
_0811B8A6:
	cmp r0, #0xff
	beq _0811B8CE
	lsls r3, r0, #3
	ldr r1, _0811B8DC @ =gUnk_02022F40
	adds r1, r0, r1
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0811B8E0 @ =gUnk_02022EC0
	lsls r1, r0, #2
	adds r1, r1, r2
	str r7, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_0811B8CE:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811B8DC: .4byte gUnk_02022F40
_0811B8E0: .4byte gUnk_02022EC0

	thumb_func_start sub_0811B8E4
sub_0811B8E4: @ 0x0811B8E4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r7, r0, #0
	mov r8, r7
	adds r1, r7, #0
	adds r1, #0xb6
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #6
	ble _0811B94A
	movs r0, #0
	strb r0, [r1]
	adds r6, r7, #0
	adds r6, #0xb7
	ldrb r1, [r6]
	movs r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #0
	blt _0811B94A
	subs r0, r1, #1
	strb r0, [r6]
	movs r4, #8
	rsbs r4, r4, #0
	movs r5, #0x20
	rsbs r5, r5, #0
	movs r0, #0
	ldrsb r0, [r6, r0]
	lsls r0, r0, #0x1a
	rsbs r0, r0, #0
	asrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #8
	bl sub_0803E308
	movs r0, #0
	ldrsb r0, [r6, r0]
	lsls r0, r0, #0x1a
	rsbs r0, r0, #0
	asrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #8
	bl sub_0803E2B0
_0811B94A:
	mov r1, r8
	adds r1, #0xb6
	ldrb r0, [r1]
	adds r0, #1
	movs r6, #0
	strb r0, [r1]
	ldr r0, [r7, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0811B99E
	mov r0, r8
	adds r0, #0xb7
	strb r6, [r0]
	movs r4, #8
	rsbs r4, r4, #0
	movs r5, #0x20
	rsbs r5, r5, #0
	str r6, [sp]
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #8
	bl sub_0803E308
	str r6, [sp]
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #8
	bl sub_0803E2B0
	ldr r0, _0811B9BC @ =sub_0811B5B8
	str r0, [r7, #0x78]
	mov r2, r8
	adds r2, #0xb4
	ldrh r1, [r2]
	ldr r0, _0811B9C0 @ =0x0000FFFE
	ands r0, r1
	ldr r1, _0811B9C4 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
_0811B99E:
	adds r1, r7, #0
	adds r1, #0x56
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _0811B9D0
	ldr r2, _0811B9C8 @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _0811B9CC @ =0x0000065E
	adds r0, r0, r1
	ldrb r0, [r0]
	b _0811B9D2
	.align 2, 0
_0811B9BC: .4byte sub_0811B5B8
_0811B9C0: .4byte 0x0000FFFE
_0811B9C4: .4byte 0x0000FFFD
_0811B9C8: .4byte gCurLevelInfo
_0811B9CC: .4byte 0x0000065E
_0811B9D0:
	movs r0, #0xff
_0811B9D2:
	cmp r0, #0xff
	beq _0811B9FA
	lsls r3, r0, #3
	ldr r1, _0811BA08 @ =gUnk_02022F40
	adds r1, r0, r1
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0811BA0C @ =gUnk_02022EC0
	lsls r1, r0, #2
	adds r1, r1, r2
	str r7, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_0811B9FA:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811BA08: .4byte gUnk_02022F40
_0811BA0C: .4byte gUnk_02022EC0

	thumb_func_start sub_0811BA10
sub_0811BA10: @ 0x0811BA10
	adds r3, r0, #0
	movs r2, #0
	movs r1, #0
	strh r1, [r3, #4]
	ldr r0, _0811BA2C @ =sub_0811B5B8
	str r0, [r3, #0x78]
	adds r0, r3, #0
	adds r0, #0xb4
	strh r1, [r0]
	adds r0, #2
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	bx lr
	.align 2, 0
_0811BA2C: .4byte sub_0811B5B8

	thumb_func_start sub_0811BA30
sub_0811BA30: @ 0x0811BA30
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r4, r0, #0
	adds r6, r4, #0
	movs r0, #0
	mov r8, r0
	movs r7, #0
	movs r0, #0x46
	strh r0, [r4, #4]
	adds r5, r4, #0
	adds r5, #0xb0
	ldr r0, [r5]
	ldrb r0, [r0, #0x14]
	subs r0, #0x38
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1a
	bhi _0811BA5A
	strh r7, [r4, #4]
_0811BA5A:
	ldr r0, [r5]
	ldrh r0, [r0, #0x14]
	lsrs r0, r0, #8
	lsls r0, r0, #3
	bl sub_08159088
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0x8c
	str r1, [r0]
	str r7, [sp]
	ldr r0, [r5]
	ldrh r0, [r0, #0x14]
	lsrs r0, r0, #8
	lsls r0, r0, #2
	lsrs r2, r0, #2
	movs r0, #0xa0
	lsls r0, r0, #0x13
	orrs r2, r0
	mov r0, sp
	bl CpuSet
	ldr r0, _0811BAA8 @ =sub_0811BAAC
	str r0, [r6, #0x78]
	adds r0, r6, #0
	adds r0, #0xde
	mov r1, r8
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	subs r0, #3
	strh r7, [r0]
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811BAA8: .4byte sub_0811BAAC

	thumb_func_start sub_0811BAAC
sub_0811BAAC: @ 0x0811BAAC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	adds r5, r0, #0
	mov r8, r5
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0811BAF4
	ldr r2, _0811BAEC @ =gCurLevelInfo
	adds r4, r5, #0
	adds r4, #0xac
	ldr r0, [r4]
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _0811BAF0 @ =0x0000065E
	adds r0, r0, r1
	ldrb r0, [r0]
	bl sub_080029E4
	b _0811BB12
	.align 2, 0
_0811BAEC: .4byte gCurLevelInfo
_0811BAF0: .4byte 0x0000065E
_0811BAF4:
	ldr r2, _0811BBF4 @ =gCurLevelInfo
	adds r4, r5, #0
	adds r4, #0xac
	ldr r0, [r4]
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r2, _0811BBF8 @ =0x0000065E
	adds r0, r0, r2
	ldrb r0, [r0]
	bl sub_080029BC
_0811BB12:
	adds r1, r5, #0
	adds r1, #0xdc
	strh r0, [r1]
	str r4, [sp, #0x28]
	mov r1, r8
	adds r1, #0xdc
	adds r2, r5, #0
	adds r2, #0xb0
	ldr r4, [r2]
	ldrh r0, [r4, #0x18]
	movs r3, #0xff
	lsls r3, r3, #8
	ldrh r1, [r1]
	lsrs r0, r0, #8
	adds r6, r2, #0
	cmp r1, r0
	bhs _0811BB36
	b _0811BD9E
_0811BB36:
	mov r2, r8
	adds r2, #0xde
	ldrh r0, [r4, #0x14]
	ands r3, r0
	ldrb r1, [r2]
	lsrs r0, r3, #8
	str r2, [sp, #0x24]
	cmp r1, r0
	blo _0811BB4A
	b _0811BD9E
_0811BB4A:
	mov r1, r8
	adds r1, #0xdf
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r0, [r6]
	ldrh r2, [r0, #0x12]
	ldrb r0, [r1]
	mov sl, r1
	cmp r0, r2
	bhs _0811BB62
	b _0811BD9E
_0811BB62:
	strb r2, [r1]
	ldr r0, [r6]
	ldrb r0, [r0, #0x14]
	subs r0, #0x38
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1a
	bhi _0811BC1C
	movs r7, #4
	ldrsh r0, [r5, r7]
	cmp r0, #0
	bne _0811BBF0
	movs r2, #0xb1
	lsls r2, r2, #2
	adds r0, r5, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r1, _0811BBFC @ =gUnk_02020EE0
	ldr r0, _0811BC00 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811BBF0
	ldrb r0, [r5]
	cmp r0, #0
	bne _0811BBB4
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0811BBF0
_0811BBB4:
	ldr r1, _0811BC04 @ =gUnk_08D60FA4
	ldr r4, _0811BC08 @ =gSongTable
	ldr r2, _0811BC0C @ =0x000011B4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811BBD8
	ldr r7, _0811BC10 @ =0x000011B0
	adds r0, r4, r7
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811BBF0
_0811BBD8:
	cmp r3, #0
	beq _0811BBEA
	ldr r0, _0811BC14 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811BBF0
_0811BBEA:
	ldr r0, _0811BC18 @ =0x00000236
	bl m4aSongNumStart
_0811BBF0:
	movs r0, #5
	b _0811BC94
	.align 2, 0
_0811BBF4: .4byte gCurLevelInfo
_0811BBF8: .4byte 0x0000065E
_0811BBFC: .4byte gUnk_02020EE0
_0811BC00: .4byte gUnk_0203AD3C
_0811BC04: .4byte gUnk_08D60FA4
_0811BC08: .4byte gSongTable
_0811BC0C: .4byte 0x000011B4
_0811BC10: .4byte 0x000011B0
_0811BC14: .4byte gUnk_0203AD10
_0811BC18: .4byte 0x00000236
_0811BC1C:
	movs r2, #0xad
	lsls r2, r2, #2
	adds r0, r5, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r1, _0811BCB8 @ =gUnk_02020EE0
	ldr r0, _0811BCBC @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811BC92
	ldrb r0, [r5]
	cmp r0, #0
	bne _0811BC56
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0811BC92
_0811BC56:
	ldr r1, _0811BCC0 @ =gUnk_08D60FA4
	ldr r4, _0811BCC4 @ =gSongTable
	ldr r2, _0811BCC8 @ =0x00000B3C
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811BC7A
	ldr r7, _0811BCCC @ =0x00000B38
	adds r0, r4, r7
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811BC92
_0811BC7A:
	cmp r3, #0
	beq _0811BC8C
	ldr r0, _0811BCD0 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811BC92
_0811BC8C:
	ldr r0, _0811BCD4 @ =0x00000167
	bl m4aSongNumStart
_0811BC92:
	movs r0, #0
_0811BC94:
	mov ip, r0
	ldrh r0, [r5, #4]
	adds r1, r0, #1
	strh r1, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x40
	ble _0811BD9E
	movs r4, #0
	ldr r1, _0811BCD8 @ =gUnk_020229D4
	movs r3, #1
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
	movs r7, #0x8c
	adds r7, r7, r5
	mov sb, r7
	b _0811BCFC
	.align 2, 0
_0811BCB8: .4byte gUnk_02020EE0
_0811BCBC: .4byte gUnk_0203AD3C
_0811BCC0: .4byte gUnk_08D60FA4
_0811BCC4: .4byte gSongTable
_0811BCC8: .4byte 0x00000B3C
_0811BCCC: .4byte 0x00000B38
_0811BCD0: .4byte gUnk_0203AD10
_0811BCD4: .4byte 0x00000167
_0811BCD8: .4byte gUnk_020229D4
_0811BCDC:
	str r4, [r1]
	ldr r1, [sp, #0x24]
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _0811BD98
_0811BCE8:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1f
	bhi _0811BD04
	movs r3, #1
	lsls r3, r4
	ldr r2, [r1]
	adds r0, r2, #0
	ands r0, r3
_0811BCFC:
	cmp r0, #0
	bne _0811BCE8
	orrs r2, r3
	str r2, [r1]
_0811BD04:
	lsls r1, r4, #3
	adds r1, r1, r4
	lsls r1, r1, #2
	ldr r2, _0811BDCC @ =gUnk_020229E0
	adds r1, r1, r2
	movs r3, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x24
	strb r0, [r1, #1]
	ldr r0, [r6]
	ldrh r0, [r0, #6]
	movs r2, #0
	strh r0, [r1, #6]
	ldr r0, [r6]
	ldrh r0, [r0, #8]
	strh r0, [r1, #8]
	strb r2, [r1, #2]
	movs r0, #0x1f
	strb r0, [r1, #3]
	strb r2, [r1, #4]
	strb r2, [r1, #5]
	ldr r0, [r6]
	ldrh r0, [r0, #0x14]
	strb r0, [r1, #0xc]
	ldr r0, [r6]
	ldrb r0, [r0, #0xe]
	strb r0, [r1, #0xe]
	strb r2, [r1, #0xf]
	ldr r0, [r6]
	ldrb r0, [r0, #0x10]
	strb r0, [r1, #0x10]
	mov r7, ip
	strh r7, [r1, #0x22]
	ldr r0, [r6]
	ldrh r0, [r0, #0x1a]
	strh r0, [r1, #0x1a]
	ldr r0, [r6]
	ldrh r0, [r0, #0x1c]
	strh r0, [r1, #0x1c]
	ldr r0, [r6]
	ldrh r0, [r0, #0x1e]
	strh r0, [r1, #0x1e]
	ldr r0, [r6]
	ldrh r0, [r0, #0x20]
	strh r0, [r1, #0x20]
	strb r2, [r1, #0x11]
	strh r3, [r1, #0x12]
	strh r3, [r1, #0x14]
	strh r3, [r1, #0x16]
	strh r3, [r1, #0x18]
	ldr r2, [sp, #0x28]
	ldr r0, [r2]
	adds r0, #0x56
	ldrb r0, [r0]
	bl CreateObject
	adds r4, r0, #0
	mov r7, sb
	ldr r1, [r7]
	movs r2, #0
	ldr r0, [r6]
	ldrh r0, [r0, #0x14]
	lsrs r0, r0, #8
	cmp r2, r0
	bhs _0811BD98
	adds r3, r0, #0
_0811BD8A:
	ldr r0, [r1]
	cmp r0, #0
	beq _0811BCDC
	adds r1, #4
	adds r2, #1
	cmp r2, r3
	blo _0811BD8A
_0811BD98:
	movs r0, #0
	mov r1, sl
	strb r0, [r1]
_0811BD9E:
	ldr r0, [r6]
	ldrh r1, [r0, #0x22]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0811BDBA
	mov r0, r8
	adds r0, #0xde
	ldrb r0, [r0]
	cmp r0, #0
	beq _0811BDBA
	adds r0, r5, #0
	bl sub_0811BE64
_0811BDBA:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811BDCC: .4byte gUnk_020229E0

	thumb_func_start sub_0811BDD0
sub_0811BDD0: @ 0x0811BDD0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _0811BE04 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _0811BE08 @ =sub_0811BEBC
	str r1, [sp]
	movs r1, #0xe0
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811BE0C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _0811BE14
	.align 2, 0
_0811BE04: .4byte ObjectMain
_0811BE08: .4byte sub_0811BEBC
_0811BE0C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_0811BE14:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	ldr r1, _0811BE5C @ =gUnk_02018F40
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x5c]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r2, _0811BE60 @ =gUnk_08351648
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0811BE5C: .4byte gUnk_02018F40
_0811BE60: .4byte gUnk_08351648

	thumb_func_start sub_0811BE64
sub_0811BE64: @ 0x0811BE64
	push {r4, r5, r6, lr}
	mov ip, r0
	adds r0, #0x8c
	ldr r2, [r0]
	movs r4, #0
	adds r0, #0x24
	ldr r0, [r0]
	ldrh r0, [r0, #0x14]
	movs r1, #0xff
	lsls r1, r1, #8
	lsrs r0, r0, #8
	cmp r4, r0
	bhs _0811BEB6
	mov r3, ip
	adds r3, #0xde
	adds r6, r1, #0
	movs r5, #0x80
	lsls r5, r5, #5
_0811BE88:
	ldr r0, [r2]
	cmp r0, #0
	beq _0811BEA0
	ldr r0, [r0, #8]
	ands r0, r5
	cmp r0, #0
	beq _0811BEA0
	movs r0, #0
	str r0, [r2]
	ldrb r0, [r3]
	subs r0, #1
	strb r0, [r3]
_0811BEA0:
	adds r2, #4
	adds r4, #1
	mov r0, ip
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x14]
	adds r0, r6, #0
	ands r0, r1
	lsrs r0, r0, #8
	cmp r4, r0
	blo _0811BE88
_0811BEB6:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_0811BEBC
sub_0811BEBC: @ 0x0811BEBC
	push {r4, r5, r6, r7, lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811BED6
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0811BEDE
_0811BED6:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0811BEDE:
	adds r1, r0, #0
	adds r1, #0x56
	ldrb r6, [r1]
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r5, [r0, #2]
	ldrb r7, [r0, #3]
	ldr r1, _0811BF1C @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r6, r0
	adds r0, r0, r1
	ldr r1, _0811BF20 @ =0x0000065E
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r2, #0
	bl ObjectDestroy
	cmp r5, #0
	bne _0811BF0A
	cmp r6, #0xff
	beq _0811BF16
_0811BF0A:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	movs r3, #1
	bl sub_08001678
_0811BF16:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811BF1C: .4byte gCurLevelInfo
_0811BF20: .4byte 0x0000065E

	thumb_func_start sub_0811BF24
sub_0811BF24: @ 0x0811BF24
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov ip, r0
	ldr r2, _0811BFA8 @ =gCurLevelInfo
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	movs r1, #0xbf
	lsls r1, r1, #3
	adds r0, r0, r1
	ldrh r0, [r0]
	mov sl, r0
	movs r6, #0
	ldr r0, _0811BFAC @ =gUnk_0203AD44
	mov r8, r0
	ldrb r7, [r0]
	cmp r6, r7
	blo _0811BF58
	b _0811C05E
_0811BF58:
	ldr r5, _0811BFB0 @ =gUnk_02020EE0
	mov r4, sp
	mov sb, r5
	mov r0, ip
	adds r0, #0xb6
	str r0, [sp, #8]
_0811BF64:
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r6, r0
	add r0, sb
	adds r0, #0x60
	ldrh r0, [r0]
	cmp r0, sl
	bne _0811C050
	mov r0, ip
	adds r0, #0xb0
	ldr r3, [r0]
	ldrh r1, [r3, #0x22]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0811BFB4
	mov r1, ip
	ldr r2, [r1, #0x40]
	asrs r2, r2, #8
	ldrh r7, [r3, #0x1a]
	adds r2, r2, r7
	strh r2, [r4]
	ldr r0, [r1, #0x44]
	asrs r0, r0, #8
	ldrh r1, [r3, #0x1c]
	adds r0, r0, r1
	strh r0, [r4, #2]
	ldrh r1, [r3, #0x1e]
	adds r2, r2, r1
	strh r2, [r4, #4]
	ldrh r1, [r3, #0x20]
	adds r0, r0, r1
	strh r0, [r4, #6]
	b _0811BFD2
	.align 2, 0
_0811BFA8: .4byte gCurLevelInfo
_0811BFAC: .4byte gUnk_0203AD44
_0811BFB0: .4byte gUnk_02020EE0
_0811BFB4:
	mov r7, ip
	ldr r2, [r7, #0x40]
	asrs r2, r2, #8
	adds r0, r2, #0
	subs r0, #8
	strh r0, [r4]
	ldr r1, [r7, #0x44]
	asrs r1, r1, #8
	adds r0, r1, #0
	subs r0, #0x18
	strh r0, [r4, #2]
	adds r2, #8
	strh r2, [r4, #4]
	subs r1, #8
	strh r1, [r4, #6]
_0811BFD2:
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r3, r6, #0
	muls r3, r0, r3
	adds r0, r5, #0
	adds r0, #0x40
	adds r0, r3, r0
	ldr r1, [r0]
	lsls r1, r1, #8
	adds r0, r5, #0
	adds r0, #0x44
	adds r0, r3, r0
	ldr r0, [r0]
	lsls r0, r0, #8
	lsrs r2, r0, #0x10
	movs r7, #0
	ldrsh r0, [r4, r7]
	asrs r1, r1, #0x10
	cmp r0, r1
	bgt _0811C050
	movs r7, #4
	ldrsh r0, [r4, r7]
	cmp r0, r1
	blt _0811C050
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	lsls r1, r2, #0x10
	asrs r2, r1, #0x10
	cmp r0, r1
	bgt _0811C050
	movs r1, #6
	ldrsh r0, [r4, r1]
	cmp r0, r2
	blt _0811C050
	adds r0, r5, #0
	adds r0, #0xc
	adds r0, r3, r0
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _0811C050
	adds r0, r5, #0
	adds r0, #8
	adds r0, r3, r0
	ldr r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	bne _0811C050
	movs r0, #0x40
	ands r1, r0
	cmp r1, #0
	bne _0811C050
	ldr r7, [sp, #8]
	ldrh r1, [r7]
	movs r0, #1
	orrs r0, r1
	strh r0, [r7]
	ldr r0, _0811C078 @ =sub_0811C07C
	mov r1, ip
	str r0, [r1, #0x78]
_0811C050:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	mov r7, r8
	ldrb r7, [r7]
	cmp r6, r7
	blo _0811BF64
_0811C05E:
	mov r1, ip
	ldrh r0, [r1, #4]
	adds r0, #1
	strh r0, [r1, #4]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811C078: .4byte sub_0811C07C

	thumb_func_start sub_0811C07C
sub_0811C07C: @ 0x0811C07C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r6, r0, #0
	adds r4, r6, #0
	adds r4, #0x56
	ldrb r7, [r4]
	ldr r0, [r6, #0x40]
	lsls r0, r0, #4
	lsrs r0, r0, #0x10
	mov r8, r0
	ldr r0, [r6, #0x44]
	lsls r0, r0, #4
	lsrs r5, r0, #0x10
	adds r1, r6, #0
	adds r1, #0xb4
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bne _0811C170
	ldr r2, _0811C154 @ =0x0000028D
	adds r0, r6, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r1, _0811C158 @ =gUnk_02020EE0
	ldr r0, _0811C15C @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811C11C
	ldrb r0, [r6]
	cmp r0, #0
	bne _0811C0DC
	ldrb r0, [r4]
	cmp r0, r2
	bne _0811C11C
_0811C0DC:
	ldr r1, _0811C160 @ =gUnk_08D60FA4
	ldr r4, _0811C164 @ =gSongTable
	ldr r2, _0811C168 @ =0x00000FF4
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811C102
	movs r1, #0xff
	lsls r1, r1, #4
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811C11C
_0811C102:
	cmp r3, #0
	beq _0811C114
	ldr r0, _0811C16C @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811C11C
_0811C114:
	movs r0, #0xff
	lsls r0, r0, #1
	bl m4aSongNumStart
_0811C11C:
	mov r4, r8
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_080023E4
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r7, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r6, #8]
	b _0811C174
	.align 2, 0
_0811C154: .4byte 0x0000028D
_0811C158: .4byte gUnk_02020EE0
_0811C15C: .4byte gUnk_0203AD3C
_0811C160: .4byte gUnk_08D60FA4
_0811C164: .4byte gSongTable
_0811C168: .4byte 0x00000FF4
_0811C16C: .4byte gUnk_0203AD10
_0811C170:
	subs r0, r2, #1
	strh r0, [r1]
_0811C174:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0811C180
sub_0811C180: @ 0x0811C180
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _0811C1B4 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _0811C1B8 @ =sub_0811C234
	str r1, [sp]
	movs r1, #0xb8
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811C1BC
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _0811C1C4
	.align 2, 0
_0811C1B4: .4byte ObjectMain
_0811C1B8: .4byte sub_0811C234
_0811C1BC:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_0811C1C4:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	ldr r1, _0811C20C @ =gUnk_02018F40
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x5c]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r2, _0811C210 @ =gUnk_08351648
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0811C20C: .4byte gUnk_02018F40
_0811C210: .4byte gUnk_08351648

	thumb_func_start sub_0811C214
sub_0811C214: @ 0x0811C214
	adds r3, r0, #0
	movs r2, #0
	strh r2, [r3, #4]
	adds r1, r3, #0
	adds r1, #0xb4
	movs r0, #0xa
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0xb6
	strh r2, [r0]
	ldr r0, _0811C230 @ =sub_0811BF24
	str r0, [r3, #0x78]
	bx lr
	.align 2, 0
_0811C230: .4byte sub_0811BF24

	thumb_func_start sub_0811C234
sub_0811C234: @ 0x0811C234
	push {r4, r5, r6, r7, lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811C24E
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0811C256
_0811C24E:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0811C256:
	adds r1, r0, #0
	adds r1, #0x56
	ldrb r6, [r1]
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r5, [r0, #2]
	ldrb r7, [r0, #3]
	ldr r1, _0811C294 @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r6, r0
	adds r0, r0, r1
	ldr r1, _0811C298 @ =0x0000065E
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r2, #0
	bl ObjectDestroy
	cmp r5, #0
	bne _0811C282
	cmp r6, #0xff
	beq _0811C28E
_0811C282:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	movs r3, #1
	bl sub_08001678
_0811C28E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811C294: .4byte gCurLevelInfo
_0811C298: .4byte 0x0000065E

	thumb_func_start sub_0811C29C
sub_0811C29C: @ 0x0811C29C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	movs r0, #0
	mov sb, r0
	movs r0, #0
	strh r0, [r7, #4]
	ldr r0, _0811C324 @ =sub_0811C328
	str r0, [r7, #0x78]
	movs r0, #0x18
	bl sub_08159088
	adds r6, r0, #0
	adds r0, r7, #0
	adds r0, #0x8c
	str r6, [r0]
	subs r0, #0x2c
	ldrb r0, [r0]
	mov r8, r0
	ldr r5, [r7, #0x40]
	lsls r5, r5, #4
	lsrs r5, r5, #0x10
	ldr r4, [r7, #0x44]
	lsls r4, r4, #4
	lsrs r4, r4, #0x10
	lsls r1, r5, #0x18
	lsrs r1, r1, #0x18
	lsls r2, r4, #0x18
	lsrs r2, r2, #0x18
	bl sub_080025AC
	str r0, [r6, #0x14]
	adds r3, r6, #0
	adds r3, #8
	mov r0, r8
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_080015A8
	mov r0, r8
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_080023E4
	strb r0, [r6, #0x10]
	movs r0, #1
	strb r0, [r6]
	ldr r0, [r6, #0x14]
	ldrb r0, [r0, #0x10]
	strb r0, [r6, #1]
	strb r5, [r6, #2]
	strb r4, [r6, #3]
	movs r0, #0x14
	strh r0, [r6, #4]
	adds r0, r7, #0
	adds r0, #0x85
	mov r1, sb
	strb r1, [r0]
	subs r0, #1
	strb r1, [r0]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811C324: .4byte sub_0811C328

	thumb_func_start sub_0811C328
sub_0811C328: @ 0x0811C328
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r0, #0x8c
	ldr r7, [r0]
	subs r0, #0x2c
	ldrb r3, [r0]
	mov ip, r3
	adds r2, r4, #0
	adds r2, #0x84
	adds r0, #0x50
	ldr r1, [r0]
	ldrb r0, [r2]
	ldrh r1, [r1, #0x1e]
	cmp r0, r1
	bls _0811C37E
	adds r5, r4, #0
	adds r5, #0x85
	ldrb r1, [r5]
	movs r6, #1
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _0811C368
	adds r0, r3, #0
	adds r1, r7, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	movs r0, #0
	strb r0, [r5]
	b _0811C376
_0811C368:
	ldr r1, [r7, #0x14]
	mov r0, ip
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	strb r6, [r5]
_0811C376:
	adds r1, r4, #0
	adds r1, #0x84
	movs r0, #0
	strb r0, [r1]
_0811C37E:
	adds r0, r4, #0
	adds r0, #0x84
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0811C394
sub_0811C394: @ 0x0811C394
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _0811C3C8 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _0811C3CC @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811C3D0
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _0811C3D8
	.align 2, 0
_0811C3C8: .4byte ObjectMain
_0811C3CC: .4byte ObjectDestroy
_0811C3D0:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_0811C3D8:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	ldr r1, _0811C420 @ =gUnk_02018F40
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x5c]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r2, _0811C424 @ =gUnk_08351648
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0811C420: .4byte gUnk_02018F40
_0811C424: .4byte gUnk_08351648

	thumb_func_start sub_0811C428
sub_0811C428: @ 0x0811C428
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _0811C45C @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _0811C460 @ =sub_0811C768
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811C464
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0811C46C
	.align 2, 0
_0811C45C: .4byte ObjectMain
_0811C460: .4byte sub_0811C768
_0811C464:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0811C46C:
	adds r4, r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r2, [r4, #8]
	ldr r0, _0811C4A4 @ =gUnk_02008540
	orrs r2, r0
	str r2, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0811C4A8
	movs r0, #0x80
	lsls r0, r0, #9
	orrs r2, r0
	str r2, [r4, #8]
	ldr r0, [r4, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	b _0811C4B8
	.align 2, 0
_0811C4A4: .4byte gUnk_02008540
_0811C4A8:
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r2, r0
	str r2, [r4, #8]
	ldr r0, [r4, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
_0811C4B8:
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0xc]
	adds r2, r4, #0
	adds r2, #0xb0
	ldr r0, [r2]
	ldrh r1, [r0, #0x22]
	movs r3, #2
	adds r0, r3, #0
	ands r0, r1
	adds r5, r2, #0
	cmp r0, #0
	beq _0811C4E8
	ldr r0, [r4, #0x68]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #0x68]
_0811C4E8:
	add r1, sp, #4
	ldr r0, [r5]
	ldrh r0, [r0, #0x1a]
	strb r0, [r1]
	ldr r0, [r5]
	ldrh r0, [r0, #0x1c]
	strb r0, [r1, #1]
	adds r2, r1, #0
	ldr r0, [r5]
	ldrb r0, [r0, #0x1e]
	ldrb r1, [r1]
	adds r0, r0, r1
	strb r0, [r2, #2]
	adds r0, r2, #0
	ldr r1, [r5]
	ldrb r0, [r0, #1]
	ldrh r1, [r1, #0x20]
	adds r0, r0, r1
	strb r0, [r2, #3]
	ldr r0, [r5]
	ldrh r1, [r0, #0x22]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _0811C55C
	adds r0, r2, #0
	movs r1, #0
	ldrsb r1, [r0, r1]
	movs r2, #1
	ldrsb r2, [r0, r2]
	movs r3, #2
	ldrsb r3, [r0, r3]
	ldrb r0, [r0, #3]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r4, #0
	bl sub_0803E2B0
	add r0, sp, #4
	ldrb r1, [r0]
	adds r1, #4
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	movs r2, #1
	ldrsb r2, [r0, r2]
	ldrb r3, [r0, #2]
	subs r3, #4
	lsls r3, r3, #0x18
	asrs r3, r3, #0x18
	ldrb r0, [r0, #3]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r4, #0
	bl sub_0803E308
	b _0811C578
_0811C55C:
	add r0, sp, #4
	movs r1, #0
	ldrsb r1, [r0, r1]
	movs r2, #1
	ldrsb r2, [r0, r2]
	movs r3, #2
	ldrsb r3, [r0, r3]
	ldrb r0, [r0, #3]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r4, #0
	bl sub_0803E308
_0811C578:
	ldr r2, [r5]
	ldrh r1, [r2, #0x22]
	movs r5, #1
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _0811C5A6
	ldrb r1, [r2, #4]
	ldr r3, _0811C5CC @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _0811C5D0 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	str r5, [r0]
_0811C5A6:
	ldr r2, _0811C5D4 @ =gUnk_08351648
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0811C5CC: .4byte gCurLevelInfo
_0811C5D0: .4byte 0x0000065E
_0811C5D4: .4byte gUnk_08351648

	thumb_func_start sub_0811C5D8
sub_0811C5D8: @ 0x0811C5D8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	adds r6, r5, #0
	adds r6, #0xb0
	ldr r1, [r6]
	ldrh r2, [r1, #0x22]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _0811C690
	ldrb r1, [r1, #4]
	ldr r0, _0811C62C @ =gCurLevelInfo
	mov sb, r0
	adds r4, r5, #0
	adds r4, #0x56
	ldrb r0, [r4]
	movs r2, #0xcd
	lsls r2, r2, #3
	mov r8, r2
	mov r2, r8
	muls r2, r0, r2
	adds r0, r2, #0
	add r0, sb
	ldr r7, _0811C630 @ =0x0000065E
	adds r0, r0, r7
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	ldr r0, [r0]
	cmp r0, #0
	bne _0811C634
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r5, #8]
	b _0811C73E
	.align 2, 0
_0811C62C: .4byte gCurLevelInfo
_0811C630: .4byte 0x0000065E
_0811C634:
	ldr r0, [r6]
	ldrh r1, [r0, #0x22]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0811C67E
	ldrb r0, [r4]
	cmp r0, #0xff
	beq _0811C654
	mov r1, r8
	muls r1, r0, r1
	adds r0, r1, #0
	add r0, sb
	adds r0, r0, r7
	ldrb r0, [r0]
	b _0811C656
_0811C654:
	movs r0, #0xff
_0811C656:
	cmp r0, #0xff
	beq _0811C67E
	lsls r3, r0, #3
	ldr r1, _0811C688 @ =gUnk_02022F40
	adds r1, r0, r1
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0811C68C @ =gUnk_02022EC0
	lsls r1, r0, #2
	adds r1, r1, r2
	str r5, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_0811C67E:
	ldrb r0, [r4]
	cmp r0, #0xff
	bne _0811C6F0
	b _0811C714
	.align 2, 0
_0811C688: .4byte gUnk_02022F40
_0811C68C: .4byte gUnk_02022EC0
_0811C690:
	movs r0, #2
	ands r0, r2
	adds r4, r5, #0
	adds r4, #0x56
	cmp r0, #0
	beq _0811C6EA
	ldrb r0, [r4]
	cmp r0, #0xff
	beq _0811C6C0
	ldr r2, _0811C6B8 @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _0811C6BC @ =0x0000065E
	adds r0, r0, r1
	ldrb r0, [r0]
	b _0811C6C2
	.align 2, 0
_0811C6B8: .4byte gCurLevelInfo
_0811C6BC: .4byte 0x0000065E
_0811C6C0:
	movs r0, #0xff
_0811C6C2:
	cmp r0, #0xff
	beq _0811C6EA
	lsls r3, r0, #3
	ldr r1, _0811C704 @ =gUnk_02022F40
	adds r1, r0, r1
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0811C708 @ =gUnk_02022EC0
	lsls r1, r0, #2
	adds r1, r1, r2
	str r5, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_0811C6EA:
	ldrb r0, [r4]
	cmp r0, #0xff
	beq _0811C714
_0811C6F0:
	ldr r2, _0811C70C @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r2, _0811C710 @ =0x0000065E
	adds r0, r0, r2
	ldrb r4, [r0]
	b _0811C716
	.align 2, 0
_0811C704: .4byte gUnk_02022F40
_0811C708: .4byte gUnk_02022EC0
_0811C70C: .4byte gCurLevelInfo
_0811C710: .4byte 0x0000065E
_0811C714:
	movs r4, #0xff
_0811C716:
	cmp r4, #0xff
	beq _0811C73E
	lsls r3, r4, #3
	ldr r1, _0811C750 @ =gUnk_02022F40
	adds r1, r4, r1
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0811C754 @ =gUnk_02022EC0
	lsls r1, r0, #2
	adds r1, r1, r2
	str r5, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_0811C73E:
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811C750: .4byte gUnk_02022F40
_0811C754: .4byte gUnk_02022EC0

	thumb_func_start sub_0811C758
sub_0811C758: @ 0x0811C758
	movs r1, #0
	strh r1, [r0, #4]
	ldr r1, _0811C764 @ =sub_0811C5D8
	str r1, [r0, #0x78]
	bx lr
	.align 2, 0
_0811C764: .4byte sub_0811C5D8

	thumb_func_start sub_0811C768
sub_0811C768: @ 0x0811C768
	push {r4, r5, r6, r7, lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811C782
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0811C78A
_0811C782:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0811C78A:
	adds r1, r0, #0
	adds r1, #0x56
	ldrb r6, [r1]
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r5, [r0, #2]
	ldrb r7, [r0, #3]
	ldr r1, _0811C7C8 @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r6, r0
	adds r0, r0, r1
	ldr r1, _0811C7CC @ =0x0000065E
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r2, #0
	bl ObjectDestroy
	cmp r5, #0
	bne _0811C7B6
	cmp r6, #0xff
	beq _0811C7C2
_0811C7B6:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	movs r3, #1
	bl sub_08001678
_0811C7C2:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811C7C8: .4byte gCurLevelInfo
_0811C7CC: .4byte 0x0000065E

	thumb_func_start sub_0811C7D0
sub_0811C7D0: @ 0x0811C7D0
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r0, _0811C8A8 @ =gCurLevelInfo
	mov ip, r0
	movs r0, #0xcd
	lsls r0, r0, #3
	adds r4, r5, #0
	muls r4, r0, r4
	mov r0, ip
	adds r0, #0x7c
	adds r0, r4, r0
	ldr r1, [r3, #8]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x84
	adds r0, r4, r0
	ldr r1, [r3, #0x10]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x80
	adds r0, r4, r0
	ldr r1, [r3, #0xc]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x88
	adds r0, r4, r0
	ldr r1, [r3, #0x14]
	str r1, [r0]
	mov r0, ip
	adds r0, #0xa0
	adds r0, r4, r0
	ldr r1, [r3, #8]
	str r1, [r0]
	mov r0, ip
	adds r0, #0xa4
	adds r0, r4, r0
	ldr r1, [r3, #0xc]
	str r1, [r0]
	mov r0, ip
	adds r0, #0xa8
	adds r0, r4, r0
	ldr r1, [r3, #0x10]
	str r1, [r0]
	mov r0, ip
	adds r0, #0xac
	adds r0, r4, r0
	ldr r1, [r3, #0x14]
	str r1, [r0]
	movs r6, #0x10
	adds r0, r2, #0
	ands r0, r6
	cmp r0, #0
	beq _0811C8AC
	mov r0, ip
	adds r0, #0x6c
	adds r0, r4, r0
	ldr r1, [r3, #8]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x74
	adds r0, r4, r0
	ldr r1, [r3, #0x10]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x70
	adds r0, r4, r0
	ldr r1, [r3, #0xc]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x78
	adds r0, r4, r0
	ldr r1, [r3, #0x14]
	str r1, [r0]
	adds r1, r6, #0
	lsls r1, r5
	ldr r2, [r3, #4]
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _0811C8B4
	orrs r2, r1
	str r2, [r3, #4]
	mov r0, ip
	adds r0, #0x90
	adds r0, r4, r0
	ldr r1, [r3, #8]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x94
	adds r0, r4, r0
	ldr r1, [r3, #0xc]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x98
	adds r0, r4, r0
	ldr r1, [r3, #0x10]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x9c
	adds r0, r4, r0
	ldr r1, [r3, #0x14]
	str r1, [r0]
	b _0811C8B4
	.align 2, 0
_0811C8A8: .4byte gCurLevelInfo
_0811C8AC:
	adds r0, r3, #0
	adds r1, r5, #0
	bl sub_0811C8BC
_0811C8B4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0811C8BC
sub_0811C8BC: @ 0x0811C8BC
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	movs r2, #0x10
	lsls r2, r6
	ldr r1, [r3, #4]
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _0811C9BE
	orrs r1, r2
	str r1, [r3, #4]
	ldr r0, [r3, #0x10]
	ldr r1, [r3, #8]
	subs r0, r0, r1
	ldr r1, _0811C9C4 @ =0x0000EFFF
	ldr r2, _0811C9C8 @ =gCurLevelInfo
	mov ip, r2
	cmp r0, r1
	ble _0811C91C
	movs r0, #0xcd
	lsls r0, r0, #3
	adds r1, r6, #0
	muls r1, r0, r1
	mov r0, ip
	adds r0, #0x6c
	adds r4, r1, r0
	subs r0, #0x60
	adds r5, r1, r0
	ldr r0, [r5]
	ldr r7, _0811C9CC @ =0xFFFFF800
	adds r2, r0, r7
	ldr r0, [r4]
	cmp r0, r2
	bgt _0811C906
	str r2, [r4]
_0811C906:
	mov r0, ip
	adds r0, #0x74
	adds r2, r1, r0
	ldr r0, [r5]
	movs r4, #0xf8
	lsls r4, r4, #8
	adds r1, r0, r4
	ldr r0, [r2]
	cmp r0, r1
	blt _0811C91C
	str r1, [r2]
_0811C91C:
	ldr r0, [r3, #0x14]
	ldr r1, [r3, #0xc]
	subs r0, r0, r1
	ldr r1, _0811C9D0 @ =0x00009FFF
	cmp r0, r1
	ble _0811C95E
	movs r0, #0xcd
	lsls r0, r0, #3
	adds r2, r6, #0
	muls r2, r0, r2
	mov r0, ip
	adds r0, #0x70
	adds r3, r2, r0
	subs r0, #0x60
	adds r4, r2, r0
	ldr r0, [r4]
	ldr r5, _0811C9CC @ =0xFFFFF800
	adds r1, r0, r5
	ldr r0, [r3]
	cmp r0, r1
	bgt _0811C948
	str r1, [r3]
_0811C948:
	mov r0, ip
	adds r0, #0x78
	adds r2, r2, r0
	ldr r0, [r4]
	movs r7, #0xa8
	lsls r7, r7, #8
	adds r1, r0, r7
	ldr r0, [r2]
	cmp r0, r1
	blt _0811C95E
	str r1, [r2]
_0811C95E:
	mov r3, ip
	movs r0, #0xcd
	lsls r0, r0, #3
	adds r1, r6, #0
	muls r1, r0, r1
	adds r0, r3, #0
	adds r0, #0x90
	adds r4, r1, r0
	subs r0, #0x84
	adds r6, r1, r0
	ldr r0, [r6]
	ldr r7, _0811C9CC @ =0xFFFFF800
	adds r2, r0, r7
	ldr r0, [r4]
	cmp r0, r2
	bgt _0811C980
	str r2, [r4]
_0811C980:
	adds r0, r3, #0
	adds r0, #0x94
	adds r4, r1, r0
	subs r0, #0x84
	adds r5, r1, r0
	ldr r0, [r5]
	adds r2, r0, r7
	ldr r0, [r4]
	cmp r0, r2
	bgt _0811C996
	str r2, [r4]
_0811C996:
	adds r0, r3, #0
	adds r0, #0x98
	adds r3, r1, r0
	ldr r0, [r6]
	movs r4, #0xf8
	lsls r4, r4, #8
	adds r2, r0, r4
	ldr r0, [r3]
	cmp r0, r2
	blt _0811C9AC
	str r2, [r3]
_0811C9AC:
	mov r0, ip
	adds r0, #0x9c
	adds r1, r1, r0
	ldr r0, [r5]
	adds r2, r0, r4
	ldr r0, [r1]
	cmp r0, r2
	blt _0811C9BE
	str r2, [r1]
_0811C9BE:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811C9C4: .4byte 0x0000EFFF
_0811C9C8: .4byte gCurLevelInfo
_0811C9CC: .4byte 0xFFFFF800
_0811C9D0: .4byte 0x00009FFF

	thumb_func_start sub_0811C9D4
sub_0811C9D4: @ 0x0811C9D4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	adds r6, r0, #0
	movs r7, #0
	strh r7, [r6, #4]
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #0x22]
	movs r1, #3
	mov r8, r1
	mov r5, r8
	ands r5, r0
	cmp r5, #1
	beq _0811CA30
	cmp r5, #1
	bgt _0811C9FE
	cmp r5, #0
	beq _0811CA0C
	b _0811CA06
_0811C9FE:
	cmp r5, #2
	beq _0811CA54
	cmp r5, #3
	beq _0811CA78
_0811CA06:
	adds r4, r6, #0
	adds r4, #0x8c
	b _0811CA96
_0811CA0C:
	movs r0, #0x44
	bl sub_08159088
	adds r1, r0, #0
	adds r4, r6, #0
	adds r4, #0x8c
	str r1, [r4]
	str r7, [sp]
	ldr r2, _0811CA2C @ =0x05000011
	mov r0, sp
	bl CpuSet
	ldr r1, [r4]
	movs r0, #1
	b _0811CA94
	.align 2, 0
_0811CA2C: .4byte 0x05000011
_0811CA30:
	movs r0, #0x54
	bl sub_08159088
	adds r1, r0, #0
	adds r4, r6, #0
	adds r4, #0x8c
	str r1, [r4]
	str r7, [sp, #4]
	add r0, sp, #4
	ldr r2, _0811CA50 @ =0x05000015
	bl CpuSet
	ldr r0, [r4]
	str r5, [r0]
	b _0811CA96
	.align 2, 0
_0811CA50: .4byte 0x05000015
_0811CA54:
	movs r0, #0x44
	bl sub_08159088
	adds r1, r0, #0
	adds r4, r6, #0
	adds r4, #0x8c
	str r1, [r4]
	str r7, [sp, #8]
	add r0, sp, #8
	ldr r2, _0811CA74 @ =0x05000011
	bl CpuSet
	ldr r0, [r4]
	mov r1, r8
	str r1, [r0]
	b _0811CA96
	.align 2, 0
_0811CA74: .4byte 0x05000011
_0811CA78:
	movs r0, #0x54
	bl sub_08159088
	adds r1, r0, #0
	adds r4, r6, #0
	adds r4, #0x8c
	str r1, [r4]
	str r7, [sp, #0xc]
	add r0, sp, #0xc
	ldr r2, _0811CB08 @ =0x05000015
	bl CpuSet
	ldr r1, [r4]
	movs r0, #4
_0811CA94:
	str r0, [r1]
_0811CA96:
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r1, [r0]
	ldr r2, [r4]
	ldr r3, _0811CB0C @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r1, r0, r1
	adds r0, r3, #0
	adds r0, #0x7c
	adds r0, r1, r0
	ldr r0, [r0]
	str r0, [r2, #0x18]
	adds r0, r3, #0
	adds r0, #0x80
	adds r0, r1, r0
	ldr r0, [r0]
	str r0, [r2, #0x1c]
	adds r0, r3, #0
	adds r0, #0x84
	adds r0, r1, r0
	ldr r0, [r0]
	str r0, [r2, #0x20]
	adds r0, r3, #0
	adds r0, #0x88
	adds r0, r1, r0
	ldr r0, [r0]
	str r0, [r2, #0x24]
	adds r0, r3, #0
	adds r0, #0xa0
	adds r0, r1, r0
	ldr r0, [r0]
	str r0, [r2, #0x28]
	adds r0, r3, #0
	adds r0, #0xa4
	adds r0, r1, r0
	ldr r0, [r0]
	str r0, [r2, #0x2c]
	adds r0, r3, #0
	adds r0, #0xa8
	adds r0, r1, r0
	ldr r0, [r0]
	str r0, [r2, #0x30]
	adds r0, r3, #0
	adds r0, #0xac
	adds r1, r1, r0
	ldr r0, [r1]
	str r0, [r2, #0x34]
	ldr r2, [r2]
	cmp r2, #2
	beq _0811CB22
	cmp r2, #2
	bhi _0811CB10
	cmp r2, #1
	beq _0811CB1A
	b _0811CB38
	.align 2, 0
_0811CB08: .4byte 0x05000015
_0811CB0C: .4byte gCurLevelInfo
_0811CB10:
	cmp r2, #3
	beq _0811CB2A
	cmp r2, #4
	beq _0811CB32
	b _0811CB38
_0811CB1A:
	adds r0, r6, #0
	bl sub_0811CB44
	b _0811CB38
_0811CB22:
	adds r0, r6, #0
	bl sub_0811CBB8
	b _0811CB38
_0811CB2A:
	adds r0, r6, #0
	bl sub_0811CD1C
	b _0811CB38
_0811CB32:
	adds r0, r6, #0
	bl sub_0811CD90
_0811CB38:
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0811CB44
sub_0811CB44: @ 0x0811CB44
	push {r4, r5, r6, r7, lr}
	mov ip, r0
	adds r0, #0x8c
	ldr r4, [r0]
	mov r3, ip
	adds r3, #0xb0
	ldr r0, [r3]
	ldrh r2, [r0, #0x14]
	movs r1, #0xff
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r0, r2
	lsls r5, r0, #4
	str r5, [r4, #8]
	ldr r0, [r3]
	ldrb r0, [r0, #0x14]
	lsls r2, r0, #0xc
	str r2, [r4, #0xc]
	ldr r0, [r3]
	ldrh r0, [r0, #0x12]
	ands r1, r0
	lsls r1, r1, #4
	adds r7, r5, r1
	str r7, [r4, #0x10]
	ldr r0, [r3]
	ldrb r0, [r0, #0x12]
	lsls r0, r0, #0xc
	adds r6, r2, r0
	str r6, [r4, #0x14]
	ldr r0, [r3]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0811CB9E
	movs r1, #0x80
	lsls r1, r1, #4
	adds r0, r5, r1
	str r0, [r4, #8]
	adds r0, r2, r1
	str r0, [r4, #0xc]
	adds r0, r7, r1
	str r0, [r4, #0x10]
	adds r1, r6, r1
	str r1, [r4, #0x14]
_0811CB9E:
	ldr r0, _0811CBB4 @ =sub_0811CEF4
	mov r1, ip
	str r0, [r1, #0x78]
	ldr r0, [r4, #8]
	str r0, [r4, #0x38]
	ldr r0, [r4, #0xc]
	str r0, [r4, #0x3c]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811CBB4: .4byte sub_0811CEF4

	thumb_func_start sub_0811CBB8
sub_0811CBB8: @ 0x0811CBB8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r7, r0, #0
	adds r0, #0x8c
	ldr r0, [r0]
	mov ip, r0
	adds r5, r7, #0
	adds r5, #0xb0
	ldr r0, [r5]
	ldrh r0, [r0, #0x14]
	movs r4, #0xff
	lsls r4, r4, #8
	adds r1, r4, #0
	ands r1, r0
	lsls r1, r1, #4
	mov r0, ip
	str r1, [r0, #8]
	ldr r0, [r5]
	ldrb r2, [r0, #0x14]
	lsls r2, r2, #0xc
	mov r0, ip
	str r2, [r0, #0xc]
	ldr r0, [r5]
	ldrh r3, [r0, #0x12]
	adds r0, r4, #0
	ands r0, r3
	lsls r0, r0, #4
	adds r1, r1, r0
	mov r0, ip
	str r1, [r0, #0x10]
	ldr r0, [r5]
	ldrb r0, [r0, #0x12]
	lsls r0, r0, #0xc
	adds r2, r2, r0
	mov r1, ip
	str r2, [r1, #0x14]
	ldr r2, _0811CC74 @ =gCurLevelInfo
	movs r0, #0x56
	adds r0, r0, r7
	mov r8, r0
	ldr r0, [r5]
	ldrh r1, [r0, #0x18]
	adds r0, r4, #0
	ands r0, r1
	lsrs r0, r0, #4
	mov r6, ip
	adds r6, #0x44
	strh r0, [r6]
	ldr r0, [r5]
	ldrh r0, [r0, #0x18]
	mov r3, ip
	adds r3, #0x46
	strb r0, [r3]
	ldr r0, [r5]
	ldrh r0, [r0, #0x16]
	ands r4, r0
	lsrs r4, r4, #4
	mov r0, ip
	adds r0, #0x48
	strh r4, [r0]
	ldr r0, [r5]
	ldrh r0, [r0, #0x16]
	mov r1, ip
	adds r1, #0x4a
	strb r0, [r1]
	movs r0, #0
	ldrsb r0, [r3, r0]
	adds r5, r2, #0
	cmp r0, #0
	blt _0811CC7C
	mov r1, ip
	ldr r3, [r1, #8]
	ldr r2, [r1, #0x10]
	ldrh r0, [r6]
	lsls r0, r0, #8
	adds r2, r2, r0
	str r2, [r1, #0x4c]
	mov r0, r8
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r5
	adds r0, #0xbc
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0811CC78 @ =0xFFFFF800
	adds r0, r0, r1
	adds r4, r3, #0
	cmp r2, r0
	ble _0811CC98
	b _0811CC94
	.align 2, 0
_0811CC74: .4byte gCurLevelInfo
_0811CC78: .4byte 0xFFFFF800
_0811CC7C:
	ldrh r0, [r6]
	lsls r0, r0, #8
	mov r1, ip
	ldr r2, [r1, #8]
	subs r0, r2, r0
	str r0, [r1, #0x4c]
	ldr r1, _0811CCD8 @ =0x000007FF
	adds r4, r2, #0
	cmp r0, r1
	bgt _0811CC98
	movs r0, #0x80
	lsls r0, r0, #4
_0811CC94:
	mov r1, ip
	str r0, [r1, #0x4c]
_0811CC98:
	mov r0, ip
	adds r0, #0x4a
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	blt _0811CCE0
	mov r0, ip
	ldr r3, [r0, #0xc]
	ldr r2, [r0, #0x14]
	adds r0, #0x48
	ldrh r0, [r0]
	lsls r0, r0, #8
	adds r2, r2, r0
	mov r1, ip
	str r2, [r1, #0x50]
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r5
	adds r0, #0xbe
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0811CCDC @ =0xFFFFE800
	adds r0, r0, r1
	cmp r2, r0
	ble _0811CD00
	b _0811CCFC
	.align 2, 0
_0811CCD8: .4byte 0x000007FF
_0811CCDC: .4byte 0xFFFFE800
_0811CCE0:
	mov r0, ip
	adds r0, #0x48
	ldrh r0, [r0]
	lsls r0, r0, #8
	mov r1, ip
	ldr r2, [r1, #0xc]
	adds r0, r2, r0
	str r0, [r1, #0x50]
	ldr r1, _0811CD14 @ =0x000007FF
	adds r3, r2, #0
	cmp r0, r1
	bgt _0811CD00
	movs r0, #0x80
	lsls r0, r0, #4
_0811CCFC:
	mov r1, ip
	str r0, [r1, #0x50]
_0811CD00:
	ldr r0, _0811CD18 @ =sub_0811D158
	str r0, [r7, #0x78]
	mov r0, ip
	str r4, [r0, #0x38]
	str r3, [r0, #0x3c]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811CD14: .4byte 0x000007FF
_0811CD18: .4byte sub_0811D158

	thumb_func_start sub_0811CD1C
sub_0811CD1C: @ 0x0811CD1C
	push {r4, r5, r6, r7, lr}
	mov ip, r0
	adds r0, #0x8c
	ldr r4, [r0]
	mov r3, ip
	adds r3, #0xb0
	ldr r0, [r3]
	ldrh r2, [r0, #0x14]
	movs r1, #0xff
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r0, r2
	lsls r5, r0, #4
	str r5, [r4, #8]
	ldr r0, [r3]
	ldrb r0, [r0, #0x14]
	lsls r2, r0, #0xc
	str r2, [r4, #0xc]
	ldr r0, [r3]
	ldrh r0, [r0, #0x12]
	ands r1, r0
	lsls r1, r1, #4
	adds r7, r5, r1
	str r7, [r4, #0x10]
	ldr r0, [r3]
	ldrb r0, [r0, #0x12]
	lsls r0, r0, #0xc
	adds r6, r2, r0
	str r6, [r4, #0x14]
	ldr r0, [r3]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0811CD76
	movs r1, #0x80
	lsls r1, r1, #4
	adds r0, r5, r1
	str r0, [r4, #8]
	adds r0, r2, r1
	str r0, [r4, #0xc]
	adds r0, r7, r1
	str r0, [r4, #0x10]
	adds r1, r6, r1
	str r1, [r4, #0x14]
_0811CD76:
	ldr r0, _0811CD8C @ =sub_0811D508
	mov r1, ip
	str r0, [r1, #0x78]
	ldr r0, [r4, #8]
	str r0, [r4, #0x38]
	ldr r0, [r4, #0xc]
	str r0, [r4, #0x3c]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811CD8C: .4byte sub_0811D508

	thumb_func_start sub_0811CD90
sub_0811CD90: @ 0x0811CD90
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r7, r0, #0
	adds r0, #0x8c
	ldr r0, [r0]
	mov ip, r0
	adds r5, r7, #0
	adds r5, #0xb0
	ldr r0, [r5]
	ldrh r0, [r0, #0x14]
	movs r4, #0xff
	lsls r4, r4, #8
	adds r1, r4, #0
	ands r1, r0
	lsls r1, r1, #4
	mov r0, ip
	str r1, [r0, #8]
	ldr r0, [r5]
	ldrb r2, [r0, #0x14]
	lsls r2, r2, #0xc
	mov r0, ip
	str r2, [r0, #0xc]
	ldr r0, [r5]
	ldrh r3, [r0, #0x12]
	adds r0, r4, #0
	ands r0, r3
	lsls r0, r0, #4
	adds r1, r1, r0
	mov r0, ip
	str r1, [r0, #0x10]
	ldr r0, [r5]
	ldrb r0, [r0, #0x12]
	lsls r0, r0, #0xc
	adds r2, r2, r0
	mov r1, ip
	str r2, [r1, #0x14]
	ldr r2, _0811CE4C @ =gCurLevelInfo
	movs r0, #0x56
	adds r0, r0, r7
	mov r8, r0
	ldr r0, [r5]
	ldrh r1, [r0, #0x18]
	adds r0, r4, #0
	ands r0, r1
	lsrs r0, r0, #4
	mov r6, ip
	adds r6, #0x44
	strh r0, [r6]
	ldr r0, [r5]
	ldrh r0, [r0, #0x18]
	mov r3, ip
	adds r3, #0x46
	strb r0, [r3]
	ldr r0, [r5]
	ldrh r0, [r0, #0x16]
	ands r4, r0
	lsrs r4, r4, #4
	mov r0, ip
	adds r0, #0x48
	strh r4, [r0]
	ldr r0, [r5]
	ldrh r0, [r0, #0x16]
	mov r1, ip
	adds r1, #0x4a
	strb r0, [r1]
	movs r0, #0
	ldrsb r0, [r3, r0]
	adds r5, r2, #0
	cmp r0, #0
	blt _0811CE54
	mov r1, ip
	ldr r3, [r1, #8]
	ldr r2, [r1, #0x10]
	ldrh r0, [r6]
	lsls r0, r0, #8
	adds r2, r2, r0
	str r2, [r1, #0x4c]
	mov r0, r8
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r5
	adds r0, #0xbc
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0811CE50 @ =0xFFFFF800
	adds r0, r0, r1
	adds r4, r3, #0
	cmp r2, r0
	ble _0811CE70
	b _0811CE6C
	.align 2, 0
_0811CE4C: .4byte gCurLevelInfo
_0811CE50: .4byte 0xFFFFF800
_0811CE54:
	ldrh r0, [r6]
	lsls r0, r0, #8
	mov r1, ip
	ldr r2, [r1, #8]
	subs r0, r2, r0
	str r0, [r1, #0x4c]
	ldr r1, _0811CEB0 @ =0x000007FF
	adds r4, r2, #0
	cmp r0, r1
	bgt _0811CE70
	movs r0, #0x80
	lsls r0, r0, #4
_0811CE6C:
	mov r1, ip
	str r0, [r1, #0x4c]
_0811CE70:
	mov r0, ip
	adds r0, #0x4a
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	blt _0811CEB8
	mov r0, ip
	ldr r3, [r0, #0xc]
	ldr r2, [r0, #0x14]
	adds r0, #0x48
	ldrh r0, [r0]
	lsls r0, r0, #8
	adds r2, r2, r0
	mov r1, ip
	str r2, [r1, #0x50]
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r5
	adds r0, #0xbe
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0811CEB4 @ =0xFFFFE800
	adds r0, r0, r1
	cmp r2, r0
	ble _0811CED8
	b _0811CED4
	.align 2, 0
_0811CEB0: .4byte 0x000007FF
_0811CEB4: .4byte 0xFFFFE800
_0811CEB8:
	mov r0, ip
	adds r0, #0x48
	ldrh r0, [r0]
	lsls r0, r0, #8
	mov r1, ip
	ldr r2, [r1, #0xc]
	adds r0, r2, r0
	str r0, [r1, #0x50]
	ldr r1, _0811CEEC @ =0x000007FF
	adds r3, r2, #0
	cmp r0, r1
	bgt _0811CED8
	movs r0, #0x80
	lsls r0, r0, #4
_0811CED4:
	mov r1, ip
	str r0, [r1, #0x50]
_0811CED8:
	ldr r0, _0811CEF0 @ =sub_0811D68C
	str r0, [r7, #0x78]
	mov r0, ip
	str r4, [r0, #0x38]
	str r3, [r0, #0x3c]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811CEEC: .4byte 0x000007FF
_0811CEF0: .4byte sub_0811D68C

	thumb_func_start sub_0811CEF4
sub_0811CEF4: @ 0x0811CEF4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r6, r0, #0
	adds r0, #0x8c
	ldr r7, [r0]
	adds r1, r6, #0
	adds r1, #0x60
	ldr r0, _0811D0A0 @ =gUnk_02020EE0
	mov r8, r0
	adds r0, #0x60
	ldrh r2, [r0]
	ldrh r1, [r1]
	cmp r2, r1
	beq _0811CF1A
	b _0811D138
_0811CF1A:
	movs r0, #0x82
	lsls r0, r0, #2
	add r0, r8
	ldrh r1, [r0]
	cmp r1, r2
	beq _0811CF28
	b _0811D138
_0811CF28:
	movs r0, #0xec
	lsls r0, r0, #2
	add r0, r8
	ldrh r2, [r0]
	cmp r2, r1
	beq _0811CF36
	b _0811D138
_0811CF36:
	movs r0, #0xab
	lsls r0, r0, #3
	add r0, r8
	ldrh r0, [r0]
	cmp r0, r2
	beq _0811CF44
	b _0811D138
_0811CF44:
	ldr r1, [r6, #0x40]
	ldr r2, [r6, #0x44]
	adds r5, r6, #0
	adds r5, #0xb0
	ldr r4, [r5]
	movs r0, #0x1a
	ldrsh r3, [r4, r0]
	mov sb, r3
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	mov r0, r8
	mov r3, sb
	bl sub_08039430
	lsls r0, r0, #0x18
	mov sb, r5
	cmp r0, #0
	bne _0811CF74
	b _0811D0B8
_0811CF74:
	movs r0, #0xd4
	lsls r0, r0, #1
	add r0, r8
	ldr r1, [r6, #0x40]
	ldr r2, [r6, #0x44]
	ldr r5, [r5]
	movs r3, #0x1a
	ldrsh r4, [r5, r3]
	str r4, [sp, #0xc]
	movs r3, #0x1c
	ldrsh r4, [r5, r3]
	str r4, [sp]
	ldrh r4, [r5, #0x1e]
	str r4, [sp, #4]
	ldrh r4, [r5, #0x20]
	str r4, [sp, #8]
	ldr r3, [sp, #0xc]
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0811CFA2
	b _0811D0B8
_0811CFA2:
	movs r0, #0xd4
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r6, #0x40]
	ldr r2, [r6, #0x44]
	mov r4, sb
	ldr r5, [r4]
	movs r4, #0x1a
	ldrsh r3, [r5, r4]
	str r3, [sp, #0xc]
	movs r4, #0x1c
	ldrsh r3, [r5, r4]
	str r3, [sp]
	ldrh r4, [r5, #0x1e]
	str r4, [sp, #4]
	ldrh r4, [r5, #0x20]
	str r4, [sp, #8]
	ldr r3, [sp, #0xc]
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0811D0B8
	movs r0, #0x9f
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r6, #0x40]
	ldr r2, [r6, #0x44]
	mov r3, sb
	ldr r5, [r3]
	movs r3, #0x1a
	ldrsh r4, [r5, r3]
	str r4, [sp, #0xc]
	movs r3, #0x1c
	ldrsh r4, [r5, r3]
	str r4, [sp]
	ldrh r4, [r5, #0x1e]
	str r4, [sp, #4]
	ldrh r4, [r5, #0x20]
	str r4, [sp, #8]
	ldr r3, [sp, #0xc]
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0811D0B8
	ldr r0, [r7, #4]
	movs r2, #1
	adds r1, r0, #0
	ands r1, r2
	cmp r1, #0
	bne _0811D018
	orrs r0, r2
	str r0, [r7, #4]
	ldr r0, _0811D0A4 @ =gCurLevelInfo
	movs r4, #0xf6
	lsls r4, r4, #1
	adds r0, r0, r4
	str r1, [r0]
_0811D018:
	ldr r0, [r7, #4]
	movs r2, #2
	adds r1, r0, #0
	ands r1, r2
	cmp r1, #0
	bne _0811D030
	orrs r0, r2
	str r0, [r7, #4]
	ldr r0, _0811D0A4 @ =gCurLevelInfo
	ldr r2, _0811D0A8 @ =0x00000854
	adds r0, r0, r2
	str r1, [r0]
_0811D030:
	ldr r0, [r7, #4]
	movs r2, #4
	adds r1, r0, #0
	ands r1, r2
	cmp r1, #0
	bne _0811D048
	orrs r0, r2
	str r0, [r7, #4]
	ldr r0, _0811D0A4 @ =gCurLevelInfo
	ldr r3, _0811D0AC @ =0x00000EBC
	adds r0, r0, r3
	str r1, [r0]
_0811D048:
	ldr r0, [r7, #4]
	movs r2, #8
	adds r1, r0, #0
	ands r1, r2
	cmp r1, #0
	bne _0811D060
	orrs r0, r2
	str r0, [r7, #4]
	ldr r0, _0811D0A4 @ =gCurLevelInfo
	ldr r4, _0811D0B0 @ =0x00001524
	adds r0, r0, r4
	str r1, [r0]
_0811D060:
	movs r0, #0
	mov sl, r0
	ldr r0, _0811D0B4 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp sl, r0
	bge _0811D0C2
	mov r5, r8
_0811D06E:
	mov r1, sl
	lsls r4, r1, #0x18
	asrs r4, r4, #0x18
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r4, r0
	adds r0, r0, r5
	adds r0, #0x56
	ldrb r1, [r0]
	mov r2, sb
	ldr r0, [r2]
	ldrh r2, [r0, #0x22]
	adds r0, r7, #0
	bl sub_0811C7D0
	adds r4, #1
	lsls r4, r4, #0x18
	lsrs r3, r4, #0x18
	mov sl, r3
	asrs r4, r4, #0x18
	ldr r0, _0811D0B4 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r4, r0
	blt _0811D06E
	b _0811D0C2
	.align 2, 0
_0811D0A0: .4byte gUnk_02020EE0
_0811D0A4: .4byte gCurLevelInfo
_0811D0A8: .4byte 0x00000854
_0811D0AC: .4byte 0x00000EBC
_0811D0B0: .4byte 0x00001524
_0811D0B4: .4byte gUnk_0203AD44
_0811D0B8:
	ldr r0, [r7, #4]
	movs r1, #0x10
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r7, #4]
_0811D0C2:
	ldr r1, _0811D12C @ =gUnk_02020EE0
	mov r4, sl
	lsls r0, r4, #0x18
	asrs r4, r0, #0x18
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r4, r0
	adds r0, r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bgt _0811D0EA
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_0811DB48
_0811D0EA:
	mov r2, sb
	ldr r5, [r2]
	ldrb r0, [r5, #4]
	cmp r0, #0
	beq _0811D142
	adds r1, r0, #0
	ldr r3, _0811D130 @ =gCurLevelInfo
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r3, _0811D134 @ =0x0000065E
	adds r0, r0, r3
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	adds r1, r0, #0
	ldr r0, [r1]
	cmp r0, #0
	beq _0811D142
	subs r0, #1
	str r0, [r1]
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r6, #8]
	b _0811D142
	.align 2, 0
_0811D12C: .4byte gUnk_02020EE0
_0811D130: .4byte gCurLevelInfo
_0811D134: .4byte 0x0000065E
_0811D138:
	ldr r0, [r7, #4]
	movs r1, #0x10
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r7, #4]
_0811D142:
	ldrh r0, [r6, #4]
	adds r0, #1
	strh r0, [r6, #4]
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0811D158
sub_0811D158: @ 0x0811D158
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov sb, r0
	adds r0, #0x8c
	ldr r7, [r0]
	subs r0, #0x2c
	ldrh r2, [r0]
	subs r0, #0xa
	ldrb r0, [r0]
	mov sl, r0
	ldr r0, [r7, #4]
	movs r1, #0x80
	lsls r1, r1, #0x15
	ands r0, r1
	cmp r0, #0
	beq _0811D182
	b _0811D378
_0811D182:
	ldr r0, _0811D31C @ =gUnk_02020EE0
	mov r8, r0
	adds r0, #0x60
	ldrh r1, [r0]
	cmp r1, r2
	beq _0811D190
	b _0811D36C
_0811D190:
	movs r0, #0x82
	lsls r0, r0, #2
	add r0, r8
	ldrh r2, [r0]
	cmp r2, r1
	beq _0811D19E
	b _0811D36C
_0811D19E:
	movs r0, #0xec
	lsls r0, r0, #2
	add r0, r8
	ldrh r1, [r0]
	cmp r1, r2
	beq _0811D1AC
	b _0811D36C
_0811D1AC:
	movs r0, #0xab
	lsls r0, r0, #3
	add r0, r8
	ldrh r0, [r0]
	cmp r0, r1
	beq _0811D1BA
	b _0811D36C
_0811D1BA:
	mov r2, sb
	ldr r1, [r2, #0x40]
	ldr r2, [r2, #0x44]
	mov r5, sb
	adds r5, #0xb0
	ldr r4, [r5]
	movs r0, #0x1a
	ldrsh r3, [r4, r0]
	mov sl, r3
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	mov r0, r8
	mov r3, sl
	bl sub_08039430
	lsls r0, r0, #0x18
	mov sl, r5
	cmp r0, #0
	bne _0811D1EC
	b _0811D334
_0811D1EC:
	movs r0, #0xd4
	lsls r0, r0, #1
	add r0, r8
	mov r4, sb
	ldr r1, [r4, #0x40]
	ldr r2, [r4, #0x44]
	ldr r5, [r5]
	movs r4, #0x1a
	ldrsh r3, [r5, r4]
	str r3, [sp, #0xc]
	movs r4, #0x1c
	ldrsh r3, [r5, r4]
	str r3, [sp]
	ldrh r4, [r5, #0x1e]
	str r4, [sp, #4]
	ldrh r4, [r5, #0x20]
	str r4, [sp, #8]
	ldr r3, [sp, #0xc]
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0811D21C
	b _0811D334
_0811D21C:
	movs r0, #0xd4
	lsls r0, r0, #2
	add r0, r8
	mov r2, sb
	ldr r1, [r2, #0x40]
	ldr r2, [r2, #0x44]
	mov r3, sl
	ldr r5, [r3]
	movs r3, #0x1a
	ldrsh r4, [r5, r3]
	str r4, [sp, #0xc]
	movs r3, #0x1c
	ldrsh r4, [r5, r3]
	str r4, [sp]
	ldrh r4, [r5, #0x1e]
	str r4, [sp, #4]
	ldrh r4, [r5, #0x20]
	str r4, [sp, #8]
	ldr r3, [sp, #0xc]
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0811D334
	movs r0, #0x9f
	lsls r0, r0, #3
	add r0, r8
	mov r4, sb
	ldr r1, [r4, #0x40]
	ldr r2, [r4, #0x44]
	mov r3, sl
	ldr r5, [r3]
	movs r3, #0x1a
	ldrsh r4, [r5, r3]
	str r4, [sp, #0xc]
	movs r3, #0x1c
	ldrsh r4, [r5, r3]
	str r4, [sp]
	ldrh r4, [r5, #0x1e]
	str r4, [sp, #4]
	ldrh r4, [r5, #0x20]
	str r4, [sp, #8]
	ldr r3, [sp, #0xc]
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0811D334
	ldr r0, [r7, #4]
	movs r2, #1
	adds r1, r0, #0
	ands r1, r2
	cmp r1, #0
	bne _0811D296
	orrs r0, r2
	str r0, [r7, #4]
	ldr r0, _0811D320 @ =gCurLevelInfo
	movs r4, #0xf6
	lsls r4, r4, #1
	adds r0, r0, r4
	str r1, [r0]
_0811D296:
	ldr r0, [r7, #4]
	movs r2, #2
	adds r1, r0, #0
	ands r1, r2
	cmp r1, #0
	bne _0811D2AE
	orrs r0, r2
	str r0, [r7, #4]
	ldr r0, _0811D320 @ =gCurLevelInfo
	ldr r2, _0811D324 @ =0x00000854
	adds r0, r0, r2
	str r1, [r0]
_0811D2AE:
	ldr r0, [r7, #4]
	movs r2, #4
	adds r1, r0, #0
	ands r1, r2
	cmp r1, #0
	bne _0811D2C6
	orrs r0, r2
	str r0, [r7, #4]
	ldr r0, _0811D320 @ =gCurLevelInfo
	ldr r3, _0811D328 @ =0x00000EBC
	adds r0, r0, r3
	str r1, [r0]
_0811D2C6:
	ldr r0, [r7, #4]
	movs r2, #8
	adds r1, r0, #0
	ands r1, r2
	cmp r1, #0
	bne _0811D2DE
	orrs r0, r2
	str r0, [r7, #4]
	ldr r0, _0811D320 @ =gCurLevelInfo
	ldr r4, _0811D32C @ =0x00001524
	adds r0, r0, r4
	str r1, [r0]
_0811D2DE:
	movs r6, #0
	ldr r0, _0811D330 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r6, r0
	bhs _0811D310
	mov r4, r8
_0811D2EA:
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r6, r0
	adds r0, r0, r4
	adds r0, #0x56
	ldrb r1, [r0]
	mov r2, sl
	ldr r0, [r2]
	ldrh r2, [r0, #0x22]
	adds r0, r7, #0
	bl sub_0811C7D0
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, _0811D330 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r6, r0
	blo _0811D2EA
_0811D310:
	ldr r0, [r7, #4]
	movs r1, #0x80
	lsls r1, r1, #0x15
	orrs r0, r1
	b _0811D33C
	.align 2, 0
_0811D31C: .4byte gUnk_02020EE0
_0811D320: .4byte gCurLevelInfo
_0811D324: .4byte 0x00000854
_0811D328: .4byte 0x00000EBC
_0811D32C: .4byte 0x00001524
_0811D330: .4byte gUnk_0203AD44
_0811D334:
	ldr r0, [r7, #4]
	movs r1, #0x10
	rsbs r1, r1, #0
	ands r0, r1
_0811D33C:
	str r0, [r7, #4]
	ldr r1, _0811D368 @ =gUnk_02020EE0
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r6, r0
	adds r0, r0, r1
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bgt _0811D360
	mov r0, sb
	adds r1, r6, #0
	bl sub_0811DB48
_0811D360:
	mov r4, sl
	ldr r5, [r4]
	ldrb r0, [r5, #4]
	b _0811D4A8
	.align 2, 0
_0811D368: .4byte gUnk_02020EE0
_0811D36C:
	ldr r0, [r7, #4]
	movs r1, #0x10
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r7, #4]
	b _0811D4E2
_0811D378:
	adds r0, r7, #0
	adds r0, #0x46
	movs r1, #0
	ldrsb r1, [r0, r1]
	mov r8, r0
	cmp r1, #0
	beq _0811D406
	ldr r4, _0811D3F4 @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	mov r2, sl
	muls r2, r0, r2
	adds r0, r4, #0
	adds r0, #0x7c
	adds r6, r2, r0
	mov r0, r8
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [r6]
	adds r0, r4, #0
	adds r0, #0x84
	adds r5, r2, r0
	mov r3, r8
	movs r1, #0
	ldrsb r1, [r3, r1]
	ldr r0, [r5]
	adds r0, r0, r1
	str r0, [r5]
	adds r1, r4, #0
	adds r1, #0xa0
	adds r1, r2, r1
	ldrb r3, [r3]
	lsls r3, r3, #0x18
	asrs r3, r3, #0x18
	ldr r0, [r1]
	adds r0, r0, r3
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0xa8
	adds r2, r2, r0
	mov r4, r8
	movs r1, #0
	ldrsb r1, [r4, r1]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0
	beq _0811D406
	cmp r0, #0
	ble _0811D3F8
	ldr r1, [r5]
	ldr r0, [r7, #0x4c]
	cmp r1, r0
	ble _0811D406
	movs r0, #0
	strb r0, [r4]
	b _0811D406
	.align 2, 0
_0811D3F4: .4byte gCurLevelInfo
_0811D3F8:
	ldr r1, [r6]
	ldr r0, _0811D478 @ =0x000007FF
	cmp r1, r0
	bgt _0811D406
	movs r0, #0
	mov r1, r8
	strb r0, [r1]
_0811D406:
	adds r0, r7, #0
	adds r0, #0x4a
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r4, r0, #0
	cmp r1, #0
	beq _0811D48E
	ldr r5, _0811D47C @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	mov r2, sl
	muls r2, r0, r2
	adds r0, r5, #0
	adds r0, #0x80
	adds r0, r0, r2
	mov ip, r0
	movs r1, #0
	ldrsb r1, [r4, r1]
	ldr r0, [r0]
	adds r0, r0, r1
	mov r3, ip
	str r0, [r3]
	adds r0, r5, #0
	adds r0, #0x88
	adds r6, r2, r0
	movs r1, #0
	ldrsb r1, [r4, r1]
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [r6]
	adds r1, r5, #0
	adds r1, #0xa4
	adds r1, r2, r1
	movs r3, #0
	ldrsb r3, [r4, r3]
	ldr r0, [r1]
	adds r0, r0, r3
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0xac
	adds r2, r2, r0
	movs r1, #0
	ldrsb r1, [r4, r1]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0
	beq _0811D48E
	cmp r0, #0
	ble _0811D480
	ldr r1, [r6]
	ldr r0, [r7, #0x50]
	cmp r1, r0
	ble _0811D48E
	b _0811D48A
	.align 2, 0
_0811D478: .4byte 0x000007FF
_0811D47C: .4byte gCurLevelInfo
_0811D480:
	mov r0, ip
	ldr r1, [r0]
	ldr r0, _0811D4FC @ =0x000007FF
	cmp r1, r0
	bgt _0811D48E
_0811D48A:
	movs r0, #0
	strb r0, [r4]
_0811D48E:
	mov r1, r8
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bne _0811D4E2
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0
	bne _0811D4E2
	mov r0, sb
	adds r0, #0xb0
	ldr r1, [r0]
	ldrb r0, [r1, #4]
_0811D4A8:
	cmp r0, #0
	beq _0811D4E2
	adds r1, r0, #0
	ldr r3, _0811D500 @ =gCurLevelInfo
	mov r0, sb
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _0811D504 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	adds r1, r0, #0
	ldr r0, [r1]
	cmp r0, #0
	beq _0811D4E2
	subs r0, #1
	str r0, [r1]
	mov r3, sb
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r3, #8]
_0811D4E2:
	mov r4, sb
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811D4FC: .4byte 0x000007FF
_0811D500: .4byte gCurLevelInfo
_0811D504: .4byte 0x0000065E

	thumb_func_start sub_0811D508
sub_0811D508: @ 0x0811D508
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r7, r0, #0
	adds r0, #0x8c
	ldr r6, [r0]
	subs r0, #0x2c
	ldrh r0, [r0]
	str r0, [sp, #0xc]
	movs r0, #0
	b _0811D664
_0811D524:
	movs r0, #0xd4
	lsls r0, r0, #1
	mov r1, sl
	muls r1, r0, r1
	mov sb, r1
	ldr r2, _0811D5B4 @ =gUnk_02020EE0
	add r2, sb
	mov r8, r2
	mov r0, r8
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r3, [sp, #0xc]
	cmp r0, r3
	beq _0811D542
	b _0811D648
_0811D542:
	ldr r1, [r7, #0x40]
	ldr r2, [r7, #0x44]
	adds r5, r7, #0
	adds r5, #0xb0
	ldr r4, [r5]
	movs r3, #0x1a
	ldrsh r0, [r4, r3]
	mov ip, r0
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	mov r0, r8
	mov r3, ip
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0811D5C0
	ldr r0, _0811D5B8 @ =gUnk_02020EEC
	add r0, sb
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _0811D5CC
	movs r2, #1
	mov r0, sl
	lsls r2, r0
	ldr r0, [r6, #4]
	adds r1, r0, #0
	ands r1, r2
	cmp r1, #0
	bne _0811D5A2
	orrs r0, r2
	str r0, [r6, #4]
	movs r0, #0xcd
	lsls r0, r0, #3
	mov r2, sl
	muls r2, r0, r2
	adds r0, r2, #0
	ldr r3, _0811D5BC @ =gUnk_0202371C
	adds r0, r0, r3
	str r1, [r0]
_0811D5A2:
	mov r0, r8
	adds r0, #0x56
	ldrb r1, [r0]
	ldr r0, [r5]
	ldrh r2, [r0, #0x22]
	adds r0, r6, #0
	bl sub_0811C7D0
	b _0811D5CC
	.align 2, 0
_0811D5B4: .4byte gUnk_02020EE0
_0811D5B8: .4byte gUnk_02020EEC
_0811D5BC: .4byte gUnk_0202371C
_0811D5C0:
	movs r1, #1
	mov r0, sl
	lsls r1, r0
	ldr r0, [r6, #4]
	bics r0, r1
	str r0, [r6, #4]
_0811D5CC:
	movs r0, #0xd4
	lsls r0, r0, #1
	mov r1, sl
	muls r1, r0, r1
	adds r0, r1, #0
	ldr r2, _0811D63C @ =gUnk_02020EE0
	adds r0, r0, r2
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bgt _0811D5FE
	adds r0, r7, #0
	mov r1, sl
	bl sub_0811DB48
	movs r1, #0x10
	mov r0, sl
	lsls r1, r0
	ldr r0, [r6, #4]
	bics r0, r1
	str r0, [r6, #4]
_0811D5FE:
	ldr r5, [r5]
	ldrb r0, [r5, #4]
	cmp r0, #0
	beq _0811D65C
	adds r1, r0, #0
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	ldr r2, _0811D640 @ =gCurLevelInfo
	adds r0, r0, r2
	ldr r3, _0811D644 @ =0x0000065E
	adds r0, r0, r3
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	adds r1, r0, #0
	ldr r0, [r1]
	cmp r0, #0
	beq _0811D65C
	subs r0, #1
	str r0, [r1]
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r7, #8]
	b _0811D65C
	.align 2, 0
_0811D63C: .4byte gUnk_02020EE0
_0811D640: .4byte gCurLevelInfo
_0811D644: .4byte 0x0000065E
_0811D648:
	movs r0, #0x10
	mov r1, sl
	lsls r0, r1
	ldr r1, [r6, #4]
	bics r1, r0
	movs r0, #1
	mov r2, sl
	lsls r0, r2
	bics r1, r0
	str r1, [r6, #4]
_0811D65C:
	mov r0, sl
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_0811D664:
	mov sl, r0
	ldr r0, _0811D688 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp sl, r0
	bhs _0811D670
	b _0811D524
_0811D670:
	ldrh r0, [r7, #4]
	adds r0, #1
	strh r0, [r7, #4]
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811D688: .4byte gUnk_0203AD44

	thumb_func_start sub_0811D68C
sub_0811D68C: @ 0x0811D68C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov sl, r0
	adds r0, #0x8c
	ldr r7, [r0]
	subs r0, #0x2c
	ldrh r0, [r0]
	str r0, [sp, #0xc]
	mov r0, sl
	adds r0, #0x56
	ldrb r0, [r0]
	mov r8, r0
	ldr r0, [r7, #4]
	movs r1, #0x80
	lsls r1, r1, #0x15
	ands r0, r1
	cmp r0, #0
	beq _0811D6BA
	b _0811D818
_0811D6BA:
	movs r0, #0
	mov sb, r0
	ldr r0, _0811D760 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp sb, r0
	blo _0811D6C8
	b _0811D986
_0811D6C8:
	movs r0, #0xd4
	lsls r0, r0, #1
	mov r1, sb
	muls r1, r0, r1
	mov r8, r1
	ldr r6, _0811D764 @ =gUnk_02020EE0
	add r6, r8
	adds r0, r6, #0
	adds r0, #0x60
	ldrh r0, [r0]
	ldr r2, [sp, #0xc]
	cmp r0, r2
	beq _0811D6E4
	b _0811D7F0
_0811D6E4:
	mov r3, sl
	ldr r1, [r3, #0x40]
	ldr r2, [r3, #0x44]
	mov r5, sl
	adds r5, #0xb0
	ldr r4, [r5]
	movs r3, #0x1a
	ldrsh r0, [r4, r3]
	mov ip, r0
	movs r3, #0x1c
	ldrsh r0, [r4, r3]
	str r0, [sp]
	ldrh r0, [r4, #0x1e]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	adds r0, r6, #0
	mov r3, ip
	bl sub_08039430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0811D770
	ldr r0, _0811D768 @ =gUnk_02020EEC
	add r0, r8
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _0811D77C
	movs r2, #1
	mov r0, sb
	lsls r2, r0
	ldr r0, [r7, #4]
	adds r1, r0, #0
	ands r1, r2
	cmp r1, #0
	bne _0811D746
	orrs r0, r2
	str r0, [r7, #4]
	movs r0, #0xcd
	lsls r0, r0, #3
	mov r2, sb
	muls r2, r0, r2
	adds r0, r2, #0
	ldr r3, _0811D76C @ =gUnk_0202371C
	adds r0, r0, r3
	str r1, [r0]
_0811D746:
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r1, [r0]
	ldr r0, [r5]
	ldrh r2, [r0, #0x22]
	adds r0, r7, #0
	bl sub_0811C7D0
	ldr r0, [r7, #4]
	movs r1, #0x80
	lsls r1, r1, #0x15
	orrs r0, r1
	b _0811D77A
	.align 2, 0
_0811D760: .4byte gUnk_0203AD44
_0811D764: .4byte gUnk_02020EE0
_0811D768: .4byte gUnk_02020EEC
_0811D76C: .4byte gUnk_0202371C
_0811D770:
	movs r1, #1
	mov r0, sb
	lsls r1, r0
	ldr r0, [r7, #4]
	bics r0, r1
_0811D77A:
	str r0, [r7, #4]
_0811D77C:
	movs r0, #0xd4
	lsls r0, r0, #1
	mov r1, sb
	muls r1, r0, r1
	adds r0, r1, #0
	ldr r2, _0811D7E4 @ =gUnk_02020EE0
	adds r0, r0, r2
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bgt _0811D7A2
	mov r0, sl
	mov r1, sb
	bl sub_0811DB48
_0811D7A2:
	ldr r5, [r5]
	ldrb r0, [r5, #4]
	cmp r0, #0
	beq _0811D7FC
	adds r1, r0, #0
	mov r0, sl
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	ldr r2, _0811D7E8 @ =gCurLevelInfo
	adds r0, r0, r2
	ldr r3, _0811D7EC @ =0x0000065E
	adds r0, r0, r3
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	adds r1, r0, #0
	ldr r0, [r1]
	cmp r0, #0
	beq _0811D7FC
	subs r0, #1
	str r0, [r1]
	mov r1, sl
	ldr r0, [r1, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	mov r2, sl
	str r0, [r2, #8]
	b _0811D7FC
	.align 2, 0
_0811D7E4: .4byte gUnk_02020EE0
_0811D7E8: .4byte gCurLevelInfo
_0811D7EC: .4byte 0x0000065E
_0811D7F0:
	movs r1, #1
	mov r3, sb
	lsls r1, r3
	ldr r0, [r7, #4]
	bics r0, r1
	str r0, [r7, #4]
_0811D7FC:
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	ldr r0, _0811D814 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp sb, r0
	bhs _0811D810
	b _0811D6C8
_0811D810:
	b _0811D986
	.align 2, 0
_0811D814: .4byte gUnk_0203AD44
_0811D818:
	adds r0, r7, #0
	adds r0, #0x46
	movs r1, #0
	ldrsb r1, [r0, r1]
	mov sb, r0
	cmp r1, #0
	beq _0811D8AA
	ldr r4, _0811D898 @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	mov r2, r8
	muls r2, r0, r2
	adds r0, r4, #0
	adds r0, #0x7c
	adds r6, r2, r0
	mov r0, sb
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [r6]
	adds r0, r4, #0
	adds r0, #0x84
	adds r5, r2, r0
	mov r3, sb
	movs r1, #0
	ldrsb r1, [r3, r1]
	ldr r0, [r5]
	adds r0, r0, r1
	str r0, [r5]
	adds r1, r4, #0
	adds r1, #0xa0
	adds r1, r2, r1
	ldrb r3, [r3]
	lsls r3, r3, #0x18
	asrs r3, r3, #0x18
	ldr r0, [r1]
	adds r0, r0, r3
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0xa8
	adds r2, r2, r0
	mov r0, sb
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	mov r1, sb
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	beq _0811D8AA
	cmp r0, #0
	ble _0811D89C
	ldr r1, [r5]
	ldr r0, [r7, #0x4c]
	cmp r1, r0
	ble _0811D8AA
	movs r0, #0
	mov r2, sb
	strb r0, [r2]
	b _0811D8AA
	.align 2, 0
_0811D898: .4byte gCurLevelInfo
_0811D89C:
	ldr r1, [r6]
	ldr r0, _0811D91C @ =0x000007FF
	cmp r1, r0
	bgt _0811D8AA
	movs r0, #0
	mov r3, sb
	strb r0, [r3]
_0811D8AA:
	adds r0, r7, #0
	adds r0, #0x4a
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r4, r0, #0
	cmp r1, #0
	beq _0811D932
	ldr r5, _0811D920 @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	mov r2, r8
	muls r2, r0, r2
	adds r0, r5, #0
	adds r0, #0x80
	adds r0, r0, r2
	mov r8, r0
	movs r1, #0
	ldrsb r1, [r4, r1]
	ldr r0, [r0]
	adds r0, r0, r1
	mov r1, r8
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0x88
	adds r6, r2, r0
	movs r1, #0
	ldrsb r1, [r4, r1]
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [r6]
	adds r1, r5, #0
	adds r1, #0xa4
	adds r1, r2, r1
	movs r3, #0
	ldrsb r3, [r4, r3]
	ldr r0, [r1]
	adds r0, r0, r3
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0xac
	adds r2, r2, r0
	movs r1, #0
	ldrsb r1, [r4, r1]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0
	beq _0811D932
	cmp r0, #0
	ble _0811D924
	ldr r1, [r6]
	ldr r0, [r7, #0x50]
	cmp r1, r0
	ble _0811D932
	b _0811D92E
	.align 2, 0
_0811D91C: .4byte 0x000007FF
_0811D920: .4byte gCurLevelInfo
_0811D924:
	mov r2, r8
	ldr r1, [r2]
	ldr r0, _0811D9A0 @ =0x000007FF
	cmp r1, r0
	bgt _0811D932
_0811D92E:
	movs r0, #0
	strb r0, [r4]
_0811D932:
	mov r3, sb
	movs r0, #0
	ldrsb r0, [r3, r0]
	cmp r0, #0
	bne _0811D986
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0
	bne _0811D986
	mov r0, sl
	adds r0, #0xb0
	ldr r1, [r0]
	ldrb r0, [r1, #4]
	cmp r0, #0
	beq _0811D986
	adds r1, r0, #0
	ldr r3, _0811D9A4 @ =gCurLevelInfo
	mov r0, sl
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _0811D9A8 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	adds r1, r0, #0
	ldr r0, [r1]
	cmp r0, #0
	beq _0811D986
	subs r0, #1
	str r0, [r1]
	mov r3, sl
	ldr r0, [r3, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r3, #8]
_0811D986:
	mov r1, sl
	ldrh r0, [r1, #4]
	adds r0, #1
	strh r0, [r1, #4]
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811D9A0: .4byte 0x000007FF
_0811D9A4: .4byte gCurLevelInfo
_0811D9A8: .4byte 0x0000065E

	thumb_func_start sub_0811D9AC
sub_0811D9AC: @ 0x0811D9AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	ldrh r1, [r7, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811D9D0
	ldrh r0, [r7, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r1, r0, r1
	b _0811D9D8
_0811D9D0:
	ldrh r1, [r7, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
_0811D9D8:
	adds r0, r1, #0
	adds r0, #0x8c
	ldr r3, [r0]
	subs r0, #0x2c
	ldrh r0, [r0]
	mov sb, r0
	adds r0, r1, #0
	adds r0, #0x56
	ldrb r0, [r0]
	str r0, [sp, #8]
	adds r0, r1, #0
	adds r0, #0xb0
	ldr r1, [r0]
	ldrb r0, [r1, #2]
	mov sl, r0
	ldrb r4, [r1, #3]
	str r4, [sp]
	ldr r2, _0811DA24 @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	ldr r4, [sp, #8]
	muls r0, r4, r0
	adds r0, r0, r2
	ldr r4, _0811DA28 @ =0x0000065E
	adds r0, r0, r4
	ldrb r0, [r0]
	str r0, [sp, #4]
	ldrh r1, [r1, #0x22]
	movs r0, #8
	ands r0, r1
	mov ip, r2
	cmp r0, #0
	bne _0811DB10
	movs r6, #0
	ldr r0, _0811DA2C @ =gUnk_0203AD44
	mov r8, r0
	b _0811DB0A
	.align 2, 0
_0811DA24: .4byte gCurLevelInfo
_0811DA28: .4byte 0x0000065E
_0811DA2C: .4byte gUnk_0203AD44
_0811DA30:
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r6, r0
	ldr r1, _0811DB40 @ =gUnk_02020EE0
	adds r0, r0, r1
	adds r0, #0x60
	ldrh r0, [r0]
	cmp r0, sb
	bne _0811DB02
	movs r0, #0xcd
	lsls r0, r0, #3
	adds r2, r6, #0
	muls r2, r0, r2
	mov r0, ip
	adds r0, #0x7c
	adds r5, r2, r0
	ldr r1, [r3, #0x38]
	ldr r0, [r5]
	cmp r1, r0
	bne _0811DB02
	mov r0, ip
	adds r0, #0x80
	adds r4, r2, r0
	ldr r1, [r3, #0x3c]
	ldr r0, [r4]
	cmp r1, r0
	bne _0811DB02
	ldr r0, [r3, #0x18]
	str r0, [r5]
	ldr r0, [r3, #0x1c]
	str r0, [r4]
	mov r0, ip
	adds r0, #0x84
	adds r0, r2, r0
	ldr r1, [r3, #0x20]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x88
	adds r0, r2, r0
	ldr r1, [r3, #0x24]
	str r1, [r0]
	mov r0, ip
	adds r0, #0xa0
	adds r0, r2, r0
	ldr r1, [r3, #0x28]
	str r1, [r0]
	mov r0, ip
	adds r0, #0xa4
	adds r0, r2, r0
	ldr r1, [r3, #0x2c]
	str r1, [r0]
	mov r0, ip
	adds r0, #0xa8
	adds r0, r2, r0
	ldr r1, [r3, #0x30]
	str r1, [r0]
	mov r0, ip
	adds r0, #0xac
	adds r0, r2, r0
	ldr r1, [r3, #0x34]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x6c
	adds r0, r2, r0
	ldr r1, [r3, #0x18]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x70
	adds r0, r2, r0
	ldr r1, [r3, #0x1c]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x74
	adds r0, r2, r0
	ldr r1, [r3, #0x20]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x78
	adds r0, r2, r0
	ldr r1, [r3, #0x24]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x90
	adds r0, r2, r0
	ldr r1, [r3, #0x28]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x94
	adds r0, r2, r0
	ldr r1, [r3, #0x2c]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x98
	adds r0, r2, r0
	ldr r1, [r3, #0x30]
	str r1, [r0]
	mov r0, ip
	adds r0, #0x9c
	adds r0, r2, r0
	ldr r1, [r3, #0x34]
	str r1, [r0]
	ldr r4, _0811DB44 @ =gUnk_0202371C
	adds r1, r2, r4
	movs r0, #0
	str r0, [r1]
_0811DB02:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	mov r0, r8
_0811DB0A:
	ldrb r0, [r0]
	cmp r6, r0
	blo _0811DA30
_0811DB10:
	adds r0, r7, #0
	bl ObjectDestroy
	mov r1, sl
	cmp r1, #0
	bne _0811DB22
	ldr r4, [sp, #8]
	cmp r4, #0xff
	beq _0811DB2E
_0811DB22:
	mov r0, sl
	ldr r1, [sp]
	ldr r2, [sp, #4]
	movs r3, #1
	bl sub_08001678
_0811DB2E:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811DB40: .4byte gUnk_02020EE0
_0811DB44: .4byte gUnk_0202371C

	thumb_func_start sub_0811DB48
sub_0811DB48: @ 0x0811DB48
	push {r4, r5, r6, lr}
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	adds r1, r0, #0
	adds r1, #0x8c
	ldr r4, [r1]
	adds r0, #0x60
	ldr r2, _0811DC38 @ =gUnk_02020EE0
	movs r1, #0xd4
	lsls r1, r1, #1
	muls r1, r5, r1
	adds r1, r1, r2
	adds r1, #0x60
	ldrh r1, [r1]
	ldrh r0, [r0]
	cmp r1, r0
	bne _0811DC30
	ldr r3, _0811DC3C @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	adds r2, r5, #0
	muls r2, r0, r2
	adds r0, r3, #0
	adds r0, #0x7c
	adds r6, r2, r0
	ldr r1, [r4, #0x38]
	ldr r0, [r6]
	cmp r1, r0
	bne _0811DC30
	adds r0, r3, #0
	adds r0, #0x80
	adds r5, r2, r0
	ldr r1, [r4, #0x3c]
	ldr r0, [r5]
	cmp r1, r0
	bne _0811DC30
	ldr r0, [r4, #0x18]
	str r0, [r6]
	ldr r0, [r4, #0x1c]
	str r0, [r5]
	adds r0, r3, #0
	adds r0, #0x84
	adds r0, r2, r0
	ldr r1, [r4, #0x20]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x88
	adds r0, r2, r0
	ldr r1, [r4, #0x24]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0xa0
	adds r0, r2, r0
	ldr r1, [r4, #0x28]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0xa4
	adds r0, r2, r0
	ldr r1, [r4, #0x2c]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0xa8
	adds r0, r2, r0
	ldr r1, [r4, #0x30]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0xac
	adds r0, r2, r0
	ldr r1, [r4, #0x34]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x6c
	adds r0, r2, r0
	ldr r1, [r4, #0x18]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x70
	adds r0, r2, r0
	ldr r1, [r4, #0x1c]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x74
	adds r0, r2, r0
	ldr r1, [r4, #0x20]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x78
	adds r0, r2, r0
	ldr r1, [r4, #0x24]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x90
	adds r0, r2, r0
	ldr r1, [r4, #0x28]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x94
	adds r0, r2, r0
	ldr r1, [r4, #0x2c]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x98
	adds r0, r2, r0
	ldr r1, [r4, #0x30]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x9c
	adds r0, r2, r0
	ldr r1, [r4, #0x34]
	str r1, [r0]
	movs r1, #0xf6
	lsls r1, r1, #1
	adds r0, r3, r1
	adds r0, r2, r0
	movs r1, #0
	str r1, [r0]
_0811DC30:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0811DC38: .4byte gUnk_02020EE0
_0811DC3C: .4byte gCurLevelInfo

	thumb_func_start sub_0811DC40
sub_0811DC40: @ 0x0811DC40
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _0811DC74 @ =ObjectMain
	ldr r2, _0811DC78 @ =0x00000FF6
	ldr r1, _0811DC7C @ =sub_0811D9AC
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811DC80
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _0811DC88
	.align 2, 0
_0811DC74: .4byte ObjectMain
_0811DC78: .4byte 0x00000FF6
_0811DC7C: .4byte sub_0811D9AC
_0811DC80:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_0811DC88:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	ldr r1, _0811DCD0 @ =gUnk_02018F40
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x5c]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r2, _0811DCD4 @ =gUnk_08351648
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0811DCD0: .4byte gUnk_02018F40
_0811DCD4: .4byte gUnk_08351648

	thumb_func_start sub_0811DCD8
sub_0811DCD8: @ 0x0811DCD8
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _0811DD0C @ =ObjectMain
	ldr r2, _0811DD10 @ =0x00000FFE
	ldr r1, _0811DD14 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xc4
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811DD18
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _0811DD20
	.align 2, 0
_0811DD0C: .4byte ObjectMain
_0811DD10: .4byte 0x00000FFE
_0811DD14: .4byte ObjectDestroy
_0811DD18:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_0811DD20:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	ldr r1, _0811DD88 @ =0x02618141
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x68]
	movs r2, #8
	rsbs r2, r2, #0
	ands r0, r2
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	orrs r0, r2
	ldr r1, _0811DD8C @ =0xFFFEFEFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0xc]
	movs r0, #8
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r2, #0
	movs r3, #8
	bl sub_0803E2B0
	adds r0, r4, #0
	bl ObjectInitSprite
	ldr r2, _0811DD90 @ =gUnk_08351648
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0811DD88: .4byte 0x02618141
_0811DD8C: .4byte 0xFFFEFEFF
_0811DD90: .4byte gUnk_08351648

	thumb_func_start sub_0811DD94
sub_0811DD94: @ 0x0811DD94
	push {r4, lr}
	mov ip, r0
	movs r4, #0
	movs r3, #0
	strh r3, [r0, #4]
	adds r0, #0xb4
	strh r3, [r0]
	adds r0, #2
	strh r3, [r0]
	mov r2, ip
	adds r2, #0xb0
	ldr r0, [r2]
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r1, ip
	adds r1, #0xb8
	strh r0, [r1]
	ldr r0, [r2]
	ldrh r0, [r0, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r2]
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	adds r1, #2
	strh r0, [r1]
	ldr r0, [r2]
	ldrh r0, [r0, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	adds r1, #2
	strh r0, [r1]
	mov r0, ip
	adds r0, #0xc0
	strh r3, [r0]
	adds r0, #2
	strb r4, [r0]
	subs r0, #0x3f
	strb r4, [r0]
	ldr r0, _0811DDF8 @ =sub_0811E92C
	mov r1, ip
	str r0, [r1, #0x78]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811DDF8: .4byte sub_0811E92C

	thumb_func_start sub_0811DDFC
sub_0811DDFC: @ 0x0811DDFC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	adds r0, #0xbc
	ldrh r5, [r0]
	adds r0, #2
	ldrh r7, [r0]
	subs r0, #6
	ldrh r6, [r0]
	adds r0, #2
	ldrh r0, [r0]
	mov r8, r0
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r2, r7, #0
	bl sub_080023E4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	subs r0, #0x22
	cmp r0, #5
	bls _0811DE30
	b _0811E246
_0811DE30:
	lsls r0, r0, #2
	ldr r1, _0811DE3C @ =_0811DE40
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0811DE3C: .4byte _0811DE40
_0811DE40: @ jump table
	.4byte _0811DE58 @ case 0
	.4byte _0811DEB2 @ case 1
	.4byte _0811DF60 @ case 2
	.4byte _0811E018 @ case 3
	.4byte _0811E0FC @ case 4
	.4byte _0811E196 @ case 5
_0811DE58:
	cmp r7, r8
	blo _0811DE80
	adds r2, r4, #0
	adds r2, #0x52
	ldr r0, _0811DE7C @ =0xFFFFF000
	adds r1, r0, #0
	ldrh r3, [r2]
	adds r0, r1, r3
	strh r0, [r2]
	lsls r0, r0, #0x10
	lsls r1, r1, #0x10
	cmp r0, r1
	bge _0811DE9E
	movs r0, #0xf0
	lsls r0, r0, #8
	strh r0, [r2]
	b _0811DE9E
	.align 2, 0
_0811DE7C: .4byte 0xFFFFF000
_0811DE80:
	adds r2, r4, #0
	adds r2, #0x52
	movs r6, #0x80
	lsls r6, r6, #5
	adds r1, r6, #0
	ldrh r3, [r2]
	adds r0, r1, r3
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r0, r1
	ble _0811DE9E
	strh r1, [r2]
_0811DE9E:
	adds r0, r4, #0
	adds r0, #0xba
	strh r7, [r0]
	adds r1, r4, #0
	adds r1, #0xbe
	mov r6, r8
	subs r0, r7, r6
	ldrh r2, [r1]
	adds r0, r0, r2
	b _0811E244
_0811DEB2:
	cmp r5, r6
	bne _0811DF1C
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811DEEC
	adds r1, r4, #0
	adds r1, #0x50
	ldr r0, _0811DEE4 @ =0xFFFFF000
	adds r3, r0, #0
	ldrh r2, [r1]
	adds r0, r3, r2
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _0811DEE8 @ =0x00000FFF
	cmp r2, r0
	ble _0811DF0C
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r2, r0
	ble _0811DF36
	b _0811DF0E
	.align 2, 0
_0811DEE4: .4byte 0xFFFFF000
_0811DEE8: .4byte 0x00000FFF
_0811DEEC:
	adds r1, r4, #0
	adds r1, #0x50
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r3, #0
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _0811DF14 @ =0xFFFFF000
	cmp r2, r0
	bgt _0811DF0E
	ldr r0, _0811DF18 @ =0x00000FFF
	cmp r2, r0
	bgt _0811DF36
_0811DF0C:
	adds r0, #1
_0811DF0E:
	strh r0, [r1]
	b _0811DF36
	.align 2, 0
_0811DF14: .4byte 0xFFFFF000
_0811DF18: .4byte 0x00000FFF
_0811DF1C:
	adds r2, r4, #0
	adds r2, #0x52
	ldr r3, _0811DF4C @ =0xFFFFF000
	adds r0, r3, #0
	ldrh r3, [r2]
	adds r1, r0, r3
	strh r1, [r2]
	lsls r1, r1, #0x10
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	cmp r1, r0
	bge _0811DF36
	strh r3, [r2]
_0811DF36:
	cmp r5, r6
	bne _0811DF50
	adds r0, r4, #0
	adds r0, #0xba
	strh r7, [r0]
	adds r1, r4, #0
	adds r1, #0xbc
	ldrh r0, [r1]
	adds r0, #1
	b _0811E244
	.align 2, 0
_0811DF4C: .4byte 0xFFFFF000
_0811DF50:
	adds r0, r4, #0
	adds r0, #0xb8
	strh r5, [r0]
	adds r1, r4, #0
	adds r1, #0xbe
	ldrh r0, [r1]
	adds r0, #1
	b _0811E244
_0811DF60:
	cmp r5, r6
	bne _0811DFD8
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811DFA4
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	ldrh r3, [r1]
	adds r0, r0, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _0811DF90 @ =0x00000FFF
	cmp r2, r0
	bgt _0811DF94
	adds r0, #1
	strh r0, [r1]
	b _0811DFF2
	.align 2, 0
_0811DF90: .4byte 0x00000FFF
_0811DF94:
	ldr r0, _0811DFA0 @ =0xFFFFF000
	cmp r2, r0
	ble _0811DFF2
	strh r0, [r1]
	b _0811DFF2
	.align 2, 0
_0811DFA0: .4byte 0xFFFFF000
_0811DFA4:
	adds r2, r4, #0
	adds r2, #0x50
	ldr r0, _0811DFC4 @ =0xFFFFF000
	adds r1, r0, #0
	ldrh r3, [r2]
	adds r0, r1, r3
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r3, r1
	ble _0811DFC8
	strh r1, [r2]
	b _0811DFF2
	.align 2, 0
_0811DFC4: .4byte 0xFFFFF000
_0811DFC8:
	ldr r0, _0811DFD4 @ =0x00000FFF
	cmp r3, r0
	bgt _0811DFF2
	adds r0, #1
	strh r0, [r2]
	b _0811DFF2
	.align 2, 0
_0811DFD4: .4byte 0x00000FFF
_0811DFD8:
	adds r2, r4, #0
	adds r2, #0x52
	ldr r1, _0811E004 @ =0xFFFFF000
	adds r0, r1, #0
	ldrh r3, [r2]
	adds r1, r0, r3
	strh r1, [r2]
	lsls r1, r1, #0x10
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	cmp r1, r0
	bge _0811DFF2
	strh r3, [r2]
_0811DFF2:
	cmp r5, r6
	bne _0811E008
	adds r0, r4, #0
	adds r0, #0xba
	strh r7, [r0]
	adds r1, r4, #0
	adds r1, #0xbc
	b _0811E240
	.align 2, 0
_0811E004: .4byte 0xFFFFF000
_0811E008:
	adds r0, r4, #0
	adds r0, #0xb8
	strh r5, [r0]
	adds r1, r4, #0
	adds r1, #0xbe
	ldrh r0, [r1]
	adds r0, #1
	b _0811E244
_0811E018:
	cmp r5, r6
	blo _0811E07C
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811E04C
	adds r1, r4, #0
	adds r1, #0x50
	ldr r0, _0811E044 @ =0xFFFFF000
	adds r3, r0, #0
	ldrh r2, [r1]
	adds r0, r3, r2
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _0811E048 @ =0x00000FFF
	cmp r2, r0
	ble _0811E0A0
	lsls r0, r3, #0x10
	b _0811E0AC
	.align 2, 0
_0811E044: .4byte 0xFFFFF000
_0811E048: .4byte 0x00000FFF
_0811E04C:
	adds r1, r4, #0
	adds r1, #0x50
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r3, #0
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _0811E074 @ =0xFFFFF000
	cmp r2, r0
	bgt _0811E06E
	ldr r0, _0811E078 @ =0x00000FFF
	cmp r2, r0
	bgt _0811E0E6
	adds r0, #1
_0811E06E:
	strh r0, [r1]
	b _0811E0E6
	.align 2, 0
_0811E074: .4byte 0xFFFFF000
_0811E078: .4byte 0x00000FFF
_0811E07C:
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811E0B8
	adds r1, r4, #0
	adds r1, #0x50
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r3, #0
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _0811E0A8 @ =0x00000FFF
	cmp r2, r0
	bgt _0811E0AC
_0811E0A0:
	movs r0, #0x80
	lsls r0, r0, #5
	b _0811E06E
	.align 2, 0
_0811E0A8: .4byte 0x00000FFF
_0811E0AC:
	ldr r0, _0811E0B4 @ =0xFFFFF000
	cmp r2, r0
	ble _0811E0E6
	b _0811E06E
	.align 2, 0
_0811E0B4: .4byte 0xFFFFF000
_0811E0B8:
	adds r2, r4, #0
	adds r2, #0x50
	ldr r3, _0811E0D8 @ =0xFFFFF000
	adds r1, r3, #0
	ldrh r3, [r2]
	adds r0, r1, r3
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r3, r1
	ble _0811E0DC
	strh r1, [r2]
	b _0811E0E6
	.align 2, 0
_0811E0D8: .4byte 0xFFFFF000
_0811E0DC:
	ldr r0, _0811E0F8 @ =0x00000FFF
	cmp r3, r0
	bgt _0811E0E6
	adds r0, #1
	strh r0, [r2]
_0811E0E6:
	adds r0, r4, #0
	adds r0, #0xb8
	strh r5, [r0]
	adds r1, r4, #0
	adds r1, #0xbc
	subs r0, r5, r6
	ldrh r6, [r1]
	adds r0, r0, r6
	b _0811E244
	.align 2, 0
_0811E0F8: .4byte 0x00000FFF
_0811E0FC:
	cmp r5, r6
	bne _0811E164
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811E134
	adds r1, r4, #0
	adds r1, #0x50
	ldr r0, _0811E12C @ =0xFFFFF000
	adds r3, r0, #0
	ldrh r2, [r1]
	adds r0, r3, r2
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _0811E130 @ =0x00000FFF
	cmp r2, r0
	ble _0811E154
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r2, r0
	ble _0811E182
	b _0811E156
	.align 2, 0
_0811E12C: .4byte 0xFFFFF000
_0811E130: .4byte 0x00000FFF
_0811E134:
	adds r1, r4, #0
	adds r1, #0x50
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r3, #0
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _0811E15C @ =0xFFFFF000
	cmp r2, r0
	bgt _0811E156
	ldr r0, _0811E160 @ =0x00000FFF
	cmp r2, r0
	bgt _0811E182
_0811E154:
	adds r0, #1
_0811E156:
	strh r0, [r1]
	b _0811E182
	.align 2, 0
_0811E15C: .4byte 0xFFFFF000
_0811E160: .4byte 0x00000FFF
_0811E164:
	adds r2, r4, #0
	adds r2, #0x52
	movs r3, #0x80
	lsls r3, r3, #5
	adds r1, r3, #0
	ldrh r3, [r2]
	adds r0, r1, r3
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r0, r1
	ble _0811E182
	strh r1, [r2]
_0811E182:
	cmp r5, r6
	bne _0811E236
	adds r0, r4, #0
	adds r0, #0xba
	strh r7, [r0]
	adds r1, r4, #0
	adds r1, #0xbc
	ldrh r0, [r1]
	adds r0, #1
	b _0811E244
_0811E196:
	cmp r5, r6
	bne _0811E208
	ldr r0, [r4, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811E1D8
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	ldrh r3, [r1]
	adds r0, r0, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	ldr r0, _0811E1C4 @ =0x00000FFF
	cmp r2, r0
	bgt _0811E1C8
	adds r0, #1
	strh r0, [r1]
	b _0811E226
	.align 2, 0
_0811E1C4: .4byte 0x00000FFF
_0811E1C8:
	ldr r0, _0811E1D4 @ =0xFFFFF000
	cmp r2, r0
	ble _0811E226
	strh r0, [r1]
	b _0811E226
	.align 2, 0
_0811E1D4: .4byte 0xFFFFF000
_0811E1D8:
	adds r2, r4, #0
	adds r2, #0x50
	ldr r0, _0811E200 @ =0xFFFFF000
	adds r1, r0, #0
	ldrh r3, [r2]
	adds r0, r1, r3
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r3, r1
	bgt _0811E224
	ldr r0, _0811E204 @ =0x00000FFF
	cmp r3, r0
	bgt _0811E226
	adds r0, #1
	strh r0, [r2]
	b _0811E226
	.align 2, 0
_0811E200: .4byte 0xFFFFF000
_0811E204: .4byte 0x00000FFF
_0811E208:
	adds r2, r4, #0
	adds r2, #0x52
	movs r0, #0x80
	lsls r0, r0, #5
	adds r1, r0, #0
	ldrh r3, [r2]
	adds r0, r1, r3
	strh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r0, r1
	ble _0811E226
_0811E224:
	strh r1, [r2]
_0811E226:
	cmp r5, r6
	bne _0811E236
	adds r0, r4, #0
	adds r0, #0xba
	strh r7, [r0]
	adds r1, r4, #0
	adds r1, #0xbc
	b _0811E240
_0811E236:
	adds r0, r4, #0
	adds r0, #0xb8
	strh r5, [r0]
	adds r1, r4, #0
	adds r1, #0xbe
_0811E240:
	ldrh r0, [r1]
	subs r0, #1
_0811E244:
	strh r0, [r1]
_0811E246:
	ldr r1, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #4
	ands r1, r0
	adds r5, r4, #0
	adds r5, #0x52
	adds r3, r4, #0
	adds r3, #0x50
	cmp r1, #0
	bne _0811E272
	ldr r1, [r4, #0x40]
	str r1, [r4, #0x48]
	ldr r2, [r4, #0x44]
	str r2, [r4, #0x4c]
	movs r6, #0
	ldrsh r0, [r3, r6]
	adds r1, r1, r0
	str r1, [r4, #0x40]
	movs r1, #0
	ldrsh r0, [r5, r1]
	subs r2, r2, r0
	str r2, [r4, #0x44]
_0811E272:
	adds r1, r3, #0
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _0811E294
	ldr r6, _0811E290 @ =0x00007FFF
	adds r0, r2, r6
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811E2A4
	movs r0, #0
	strh r0, [r1]
	b _0811E2A4
	.align 2, 0
_0811E290: .4byte 0x00007FFF
_0811E294:
	ldr r1, _0811E2C4 @ =0xFFFF8001
	adds r0, r2, r1
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0811E2A4
	movs r0, #0
	strh r0, [r3]
_0811E2A4:
	adds r1, r5, #0
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _0811E2CC
	ldr r4, _0811E2C8 @ =0x00007FFF
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811E2DC
	movs r0, #0
	strh r0, [r1]
	b _0811E2DC
	.align 2, 0
_0811E2C4: .4byte 0xFFFF8001
_0811E2C8: .4byte 0x00007FFF
_0811E2CC:
	ldr r6, _0811E2E8 @ =0xFFFF8001
	adds r0, r2, r6
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0811E2DC
	movs r0, #0
	strh r0, [r5]
_0811E2DC:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811E2E8: .4byte 0xFFFF8001

	thumb_func_start sub_0811E2EC
sub_0811E2EC: @ 0x0811E2EC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	adds r0, #0xbc
	ldrh r5, [r0]
	adds r0, #2
	ldrh r7, [r0]
	subs r0, #6
	ldrh r6, [r0]
	adds r0, #2
	ldrh r0, [r0]
	mov r8, r0
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r2, r7, #0
	bl sub_080023E4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r2, r4, #0
	adds r2, #0x2b
	movs r1, #0xff
	strb r1, [r2]
	subs r0, #0x22
	cmp r0, #5
	bhi _0811E3C4
	lsls r0, r0, #2
	ldr r1, _0811E330 @ =_0811E334
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0811E330: .4byte _0811E334
_0811E334: @ jump table
	.4byte _0811E34C @ case 0
	.4byte _0811E360 @ case 1
	.4byte _0811E374 @ case 2
	.4byte _0811E388 @ case 3
	.4byte _0811E39C @ case 4
	.4byte _0811E3B0 @ case 5
_0811E34C:
	cmp r7, r8
	blo _0811E358
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #1
	b _0811E3C2
_0811E358:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #2
	b _0811E3C2
_0811E360:
	cmp r5, r6
	bne _0811E36C
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xa
	b _0811E3C2
_0811E36C:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #9
	b _0811E3C2
_0811E374:
	cmp r5, r6
	bne _0811E380
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xc
	b _0811E3C2
_0811E380:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xb
	b _0811E3C2
_0811E388:
	cmp r5, r6
	blo _0811E394
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #3
	b _0811E3C2
_0811E394:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #4
	b _0811E3C2
_0811E39C:
	cmp r5, r6
	bne _0811E3A8
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #5
	b _0811E3C2
_0811E3A8:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #6
	b _0811E3C2
_0811E3B0:
	cmp r5, r6
	bne _0811E3BC
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #7
	b _0811E3C2
_0811E3BC:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #8
_0811E3C2:
	strb r0, [r1]
_0811E3C4:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0811E3D0
sub_0811E3D0: @ 0x0811E3D0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	adds r0, #0xbc
	ldrh r5, [r0]
	adds r0, #2
	ldrh r7, [r0]
	subs r0, #6
	ldrh r6, [r0]
	adds r0, #2
	ldrh r0, [r0]
	mov r8, r0
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r2, r7, #0
	bl sub_080023E4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r2, r4, #0
	adds r2, #0x2b
	movs r1, #0xff
	strb r1, [r2]
	subs r0, #0x22
	cmp r0, #5
	bhi _0811E4A8
	lsls r0, r0, #2
	ldr r1, _0811E414 @ =_0811E418
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0811E414: .4byte _0811E418
_0811E418: @ jump table
	.4byte _0811E430 @ case 0
	.4byte _0811E444 @ case 1
	.4byte _0811E458 @ case 2
	.4byte _0811E46C @ case 3
	.4byte _0811E480 @ case 4
	.4byte _0811E494 @ case 5
_0811E430:
	cmp r7, r8
	blo _0811E43C
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xd
	b _0811E4A6
_0811E43C:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xe
	b _0811E4A6
_0811E444:
	cmp r5, r6
	bne _0811E450
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0x16
	b _0811E4A6
_0811E450:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0x15
	b _0811E4A6
_0811E458:
	cmp r5, r6
	bne _0811E464
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0x18
	b _0811E4A6
_0811E464:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0x17
	b _0811E4A6
_0811E46C:
	cmp r5, r6
	blo _0811E478
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0xf
	b _0811E4A6
_0811E478:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0x10
	b _0811E4A6
_0811E480:
	cmp r5, r6
	bne _0811E48C
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0x11
	b _0811E4A6
_0811E48C:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0x12
	b _0811E4A6
_0811E494:
	cmp r5, r6
	bne _0811E4A0
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0x13
	b _0811E4A6
_0811E4A0:
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0x14
_0811E4A6:
	strb r0, [r1]
_0811E4A8:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0811E4B4
sub_0811E4B4: @ 0x0811E4B4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	mov r8, r7
	adds r2, r7, #0
	adds r2, #0xc2
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #3
	ble _0811E546
	ldr r1, _0811E5A4 @ =gUnk_02020EE0
	ldr r0, _0811E5A8 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r7, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0811E53E
	ldrb r0, [r7]
	cmp r0, #0
	bne _0811E502
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r0, [r0]
	cmp r0, r2
	bne _0811E53E
_0811E502:
	ldr r1, _0811E5AC @ =gUnk_08D60FA4
	ldr r4, _0811E5B0 @ =gSongTable
	ldr r2, _0811E5B4 @ =0x00001014
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _0811E526
	ldr r5, _0811E5B8 @ =0x00001010
	adds r0, r4, r5
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0811E53E
_0811E526:
	cmp r3, #0
	beq _0811E538
	ldr r0, _0811E5BC @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811E53E
_0811E538:
	ldr r0, _0811E5C0 @ =0x00000202
	bl m4aSongNumStart
_0811E53E:
	mov r1, r8
	adds r1, #0xc2
	movs r0, #0
	strb r0, [r1]
_0811E546:
	ldr r0, [r7, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _0811E552
	b _0811E6E2
_0811E552:
	mov r0, r8
	bl sub_0811DDFC
	mov r6, r8
	adds r6, #0xbc
	ldrh r1, [r6]
	mov r5, r8
	adds r5, #0xbe
	ldrh r2, [r5]
	mov r4, r8
	adds r4, #0x56
	ldrb r0, [r4]
	bl sub_080023E4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r6
	adds r6, r5, #0
	mov sl, r4
	cmp r0, #0x27
	bgt _0811E580
	cmp r0, #0x22
	bge _0811E582
_0811E580:
	movs r0, #0
_0811E582:
	str r0, [sp]
	cmp r0, #0
	beq _0811E5C4
	mov r0, r8
	bl sub_0811E2EC
	mov r0, sl
	ldrb r4, [r0]
	mov r2, sb
	ldrh r1, [r2]
	ldrh r2, [r6]
	adds r0, r4, #0
	bl sub_080023E4
	mov r3, sb
	ldrb r1, [r3]
	b _0811E6B6
	.align 2, 0
_0811E5A4: .4byte gUnk_02020EE0
_0811E5A8: .4byte gUnk_0203AD3C
_0811E5AC: .4byte gUnk_08D60FA4
_0811E5B0: .4byte gSongTable
_0811E5B4: .4byte 0x00001014
_0811E5B8: .4byte 0x00001010
_0811E5BC: .4byte gUnk_0203AD10
_0811E5C0: .4byte 0x00000202
_0811E5C4:
	mov r2, r8
	adds r2, #0xb6
	ldrh r1, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0811E5D4
	b _0811E6D4
_0811E5D4:
	ldr r0, _0811E648 @ =0x0000FFFE
	ands r0, r1
	strh r0, [r2]
	ldrh r0, [r6]
	adds r0, #1
	strh r0, [r6]
	adds r2, r7, #0
	adds r2, #0x52
	ldr r5, _0811E64C @ =0xFFFFF000
	adds r0, r5, #0
	ldrh r3, [r2]
	adds r1, r0, r3
	strh r1, [r2]
	lsls r1, r1, #0x10
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	adds r4, r2, #0
	cmp r1, r0
	bge _0811E5FC
	strh r3, [r4]
_0811E5FC:
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	adds r3, r7, #0
	adds r3, #0x50
	cmp r0, #0
	bne _0811E626
	ldr r1, [r7, #0x40]
	str r1, [r7, #0x48]
	ldr r2, [r7, #0x44]
	str r2, [r7, #0x4c]
	movs r0, #0
	ldrsh r5, [r3, r0]
	mov ip, r5
	add r1, ip
	str r1, [r7, #0x40]
	movs r1, #0
	ldrsh r0, [r4, r1]
	subs r2, r2, r0
	str r2, [r7, #0x44]
_0811E626:
	adds r1, r3, #0
	ldrh r2, [r1]
	movs r0, #0
	ldrsh r5, [r1, r0]
	cmp r5, #0
	bge _0811E654
	ldr r3, _0811E650 @ =0x00007FFF
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811E666
	mov r5, sp
	ldrh r5, [r5]
	strh r5, [r1]
	b _0811E666
	.align 2, 0
_0811E648: .4byte 0x0000FFFE
_0811E64C: .4byte 0xFFFFF000
_0811E650: .4byte 0x00007FFF
_0811E654:
	ldr r1, _0811E684 @ =0xFFFF8001
	adds r0, r2, r1
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0811E666
	mov r2, sp
	ldrh r2, [r2]
	strh r2, [r3]
_0811E666:
	adds r1, r4, #0
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _0811E68C
	ldr r5, _0811E688 @ =0x00007FFF
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811E69C
	movs r0, #0
	strh r0, [r1]
	b _0811E69C
	.align 2, 0
_0811E684: .4byte 0xFFFF8001
_0811E688: .4byte 0x00007FFF
_0811E68C:
	ldr r1, _0811E6D0 @ =0xFFFF8001
	adds r0, r2, r1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0811E69C
	movs r0, #0
	strh r0, [r4]
_0811E69C:
	mov r0, r8
	bl sub_0811E2EC
	mov r2, sl
	ldrb r4, [r2]
	mov r3, sb
	ldrh r1, [r3]
	ldrh r2, [r6]
	adds r0, r4, #0
	bl sub_080023E4
	mov r5, sb
	ldrb r1, [r5]
_0811E6B6:
	ldrb r2, [r6]
	adds r0, r4, #0
	movs r3, #0
	bl sub_08002624
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	b _0811E6E2
	.align 2, 0
_0811E6D0: .4byte 0xFFFF8001
_0811E6D4:
	ldr r0, _0811E6F8 @ =sub_0811E890
	str r0, [r7, #0x78]
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r7, #8]
_0811E6E2:
	ldrh r0, [r7, #4]
	adds r0, #1
	strh r0, [r7, #4]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811E6F8: .4byte sub_0811E890

	thumb_func_start sub_0811E6FC
sub_0811E6FC: @ 0x0811E6FC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	mov sl, r6
	ldr r0, [r6, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _0811E716
	b _0811E876
_0811E716:
	movs r0, #0xb6
	adds r0, r0, r6
	mov r8, r0
	ldrh r1, [r0]
	movs r3, #1
	mov sb, r3
	mov r0, sb
	ands r0, r1
	adds r7, r6, #0
	adds r7, #0xbe
	cmp r0, #0
	bne _0811E75A
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r4, [r0]
	adds r5, r6, #0
	adds r5, #0xbc
	ldrh r1, [r5]
	ldrh r2, [r7]
	adds r0, r4, #0
	bl sub_080023E4
	ldrb r1, [r5]
	ldrb r2, [r7]
	adds r0, r4, #0
	movs r3, #1
	bl sub_08002624
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
_0811E75A:
	adds r0, r6, #0
	bl sub_0811DDFC
	mov r0, r8
	ldrh r1, [r0]
	mov r0, sb
	ands r0, r1
	cmp r0, #0
	beq _0811E840
	ldr r0, _0811E7DC @ =0x0000FFFE
	ands r0, r1
	movs r5, #0
	mov r1, r8
	strh r0, [r1]
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
	adds r2, r6, #0
	adds r2, #0x52
	ldr r3, _0811E7E0 @ =0xFFFFF000
	adds r0, r3, #0
	ldrh r7, [r2]
	adds r1, r0, r7
	strh r1, [r2]
	lsls r1, r1, #0x10
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	adds r4, r2, #0
	cmp r1, r0
	bge _0811E798
	strh r3, [r4]
_0811E798:
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	adds r3, r6, #0
	adds r3, #0x50
	cmp r0, #0
	bne _0811E7C0
	ldr r1, [r6, #0x40]
	str r1, [r6, #0x48]
	ldr r2, [r6, #0x44]
	str r2, [r6, #0x4c]
	movs r7, #0
	ldrsh r0, [r3, r7]
	adds r1, r1, r0
	str r1, [r6, #0x40]
	movs r1, #0
	ldrsh r0, [r4, r1]
	subs r2, r2, r0
	str r2, [r6, #0x44]
_0811E7C0:
	adds r1, r3, #0
	ldrh r2, [r1]
	movs r7, #0
	ldrsh r0, [r1, r7]
	cmp r0, #0
	bge _0811E7E8
	ldr r3, _0811E7E4 @ =0x00007FFF
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811E7F6
	strh r5, [r1]
	b _0811E7F6
	.align 2, 0
_0811E7DC: .4byte 0x0000FFFE
_0811E7E0: .4byte 0xFFFFF000
_0811E7E4: .4byte 0x00007FFF
_0811E7E8:
	ldr r7, _0811E814 @ =0xFFFF8001
	adds r0, r2, r7
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0811E7F6
	strh r5, [r3]
_0811E7F6:
	adds r1, r4, #0
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _0811E81C
	ldr r7, _0811E818 @ =0x00007FFF
	adds r0, r2, r7
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811E82C
	movs r0, #0
	strh r0, [r1]
	b _0811E82C
	.align 2, 0
_0811E814: .4byte 0xFFFF8001
_0811E818: .4byte 0x00007FFF
_0811E81C:
	ldr r1, _0811E838 @ =0xFFFF8001
	adds r0, r2, r1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0811E82C
	movs r0, #0
	strh r0, [r4]
_0811E82C:
	ldr r0, [r6, #8]
	ldr r1, _0811E83C @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r6, #8]
	b _0811E864
	.align 2, 0
_0811E838: .4byte 0xFFFF8001
_0811E83C: .4byte 0xFFFFFBFF
_0811E840:
	adds r0, r6, #0
	adds r0, #0xbc
	ldrh r1, [r0]
	ldrh r2, [r7]
	subs r0, #0x66
	ldrb r0, [r0]
	bl sub_080023E4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x27
	bgt _0811E85C
	cmp r0, #0x22
	bge _0811E85E
_0811E85C:
	movs r0, #0
_0811E85E:
	adds r1, r0, #0
	cmp r1, #0
	beq _0811E86C
_0811E864:
	mov r0, sl
	bl sub_0811E3D0
	b _0811E876
_0811E86C:
	ldr r0, _0811E88C @ =sub_0811DD94
	str r0, [r6, #0x78]
	adds r0, r6, #0
	adds r0, #0x83
	strb r1, [r0]
_0811E876:
	ldrh r0, [r6, #4]
	adds r0, #1
	strh r0, [r6, #4]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811E88C: .4byte sub_0811DD94

	thumb_func_start sub_0811E890
sub_0811E890: @ 0x0811E890
	push {r4, lr}
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0xb6
	ldrh r1, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0811E900
	ldr r0, [r4, #8]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0811E916
	adds r0, r4, #0
	adds r0, #0xbc
	ldrh r1, [r0]
	subs r0, #4
	strh r1, [r0]
	adds r0, #6
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0xba
	strh r0, [r1]
	subs r1, #6
	movs r0, #0x23
	strh r0, [r1]
	movs r0, #5
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	ldr r3, _0811E8F8 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _0811E8FC @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	ldr r1, [r0]
	adds r1, #1
	str r1, [r0]
	b _0811E916
	.align 2, 0
_0811E8F8: .4byte gCurLevelInfo
_0811E8FC: .4byte 0x0000065E
_0811E900:
	adds r0, r4, #0
	adds r0, #0xb4
	ldrh r1, [r0]
	subs r1, #1
	strh r1, [r0]
	lsls r1, r1, #0x10
	ldr r0, _0811E924 @ =0xFFFF0000
	cmp r1, r0
	bne _0811E916
	ldr r0, _0811E928 @ =sub_0811E6FC
	str r0, [r4, #0x78]
_0811E916:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811E924: .4byte 0xFFFF0000
_0811E928: .4byte sub_0811E6FC

	thumb_func_start sub_0811E92C
sub_0811E92C: @ 0x0811E92C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0xb
	ands r0, r1
	cmp r0, #0
	beq _0811E94E
	ldr r0, _0811E95C @ =sub_0811E4B4
	str r0, [r4, #0x78]
	adds r1, r4, #0
	adds r1, #0xb6
	movs r0, #3
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_08094930
_0811E94E:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811E95C: .4byte sub_0811E4B4

	thumb_func_start sub_0811E960
sub_0811E960: @ 0x0811E960
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _0811E994 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _0811E998 @ =sub_0811F034
	str r1, [sp]
	movs r1, #0xe4
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811E99C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0811E9A4
	.align 2, 0
_0811E994: .4byte ObjectMain
_0811E998: .4byte sub_0811F034
_0811E99C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0811E9A4:
	adds r7, r0, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r7, #8]
	ldr r1, _0811E9F8 @ =0x82C08000
	orrs r0, r1
	str r0, [r7, #8]
	ldr r2, [r7, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r2, r1
	ldr r0, [r7, #0x5c]
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	str r0, [r7, #0x5c]
	movs r0, #0x80
	lsls r0, r0, #4
	orrs r2, r0
	str r2, [r7, #0x68]
	ldr r0, [r7, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r7, #0xc]
	adds r0, r7, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #0x22]
	ands r1, r0
	cmp r1, #0
	beq _0811E9FC
	adds r1, r7, #0
	adds r1, #0xe1
	movs r0, #3
	strb r0, [r1]
	subs r1, #0x5e
	movs r0, #1
	strb r0, [r1]
	b _0811EA0A
	.align 2, 0
_0811E9F8: .4byte 0x82C08000
_0811E9FC:
	adds r2, r7, #0
	adds r2, #0xe1
	movs r0, #2
	strb r0, [r2]
	adds r0, r7, #0
	adds r0, #0x83
	strb r1, [r0]
_0811EA0A:
	movs r5, #7
	rsbs r5, r5, #0
	movs r6, #8
	rsbs r6, r6, #0
	movs r4, #8
	str r4, [sp]
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r6, #0
	movs r3, #7
	bl sub_0803E308
	str r4, [sp]
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r6, #0
	movs r3, #7
	bl sub_0803E2B0
	adds r0, r7, #0
	bl ObjectInitSprite
	ldr r2, _0811EA5C @ =gUnk_08351648
	adds r0, r7, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r7, #0
	bl _call_via_r1
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0811EA5C: .4byte gUnk_08351648

	thumb_func_start sub_0811EA60
sub_0811EA60: @ 0x0811EA60
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x20
	adds r5, r0, #0
	mov sb, r1
	ldr r0, _0811EB80 @ =gUnk_02020EE0
	mov r8, r0
	movs r0, #0xd4
	lsls r0, r0, #1
	mov r7, sb
	muls r7, r0, r7
	mov r1, r8
	adds r3, r7, r1
	adds r0, r3, #0
	adds r0, #0x60
	adds r1, r5, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _0811EA90
	b _0811EC72
_0811EA90:
	mov r0, r8
	adds r0, #0x40
	adds r0, r0, r7
	mov ip, r0
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0x3c
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r0, r1
	str r0, [sp]
	mov r2, r8
	adds r2, #0x44
	adds r2, r7, r2
	ldr r0, [r2]
	asrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0x3d
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r0, r1
	str r0, [sp, #4]
	mov r1, ip
	ldr r0, [r1]
	asrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0x3e
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r0, r1
	str r0, [sp, #8]
	ldr r0, [r2]
	asrs r0, r0, #8
	adds r1, r3, #0
	adds r1, #0x3f
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r0, r1
	str r0, [sp, #0xc]
	add r4, sp, #0x10
	ldr r0, [r5, #0x40]
	asrs r6, r0, #8
	adds r0, r5, #0
	adds r0, #0x3c
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r6, r0
	subs r0, #4
	str r0, [sp, #0x10]
	ldr r1, [r5, #0x44]
	asrs r1, r1, #8
	adds r0, r5, #0
	adds r0, #0x3d
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r1, r0
	str r0, [r4, #4]
	adds r0, r5, #0
	adds r0, #0x3e
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r6, r0
	adds r0, #4
	str r0, [r4, #8]
	adds r0, r5, #0
	adds r0, #0x3f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	str r1, [r4, #0xc]
	adds r0, r5, #0
	adds r0, #0x90
	ldrb r1, [r0]
	mov r3, sb
	lsls r2, r3, #1
	movs r3, #3
	adds r0, r3, #0
	lsls r0, r2
	ands r1, r0
	asrs r1, r2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r2, r1, #0
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _0811EBD4
	mov r0, r8
	adds r0, #0x74
	adds r0, r7, r0
	ldr r0, [r0]
	cmp r0, r5
	bne _0811EB5E
	b _0811EC72
_0811EB5E:
	mov r3, ip
	ldr r0, [r3]
	asrs r0, r0, #8
	cmp r0, r6
	ble _0811EB84
	adds r2, r5, #0
	adds r2, #0xe0
	ldrb r3, [r2]
	subs r0, r3, #1
	strb r0, [r2]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0811EC36
	subs r0, r3, #2
	strb r0, [r2]
	b _0811EC36
	.align 2, 0
_0811EB80: .4byte gUnk_02020EE0
_0811EB84:
	adds r1, r5, #0
	adds r1, #0xe0
	ldrb r0, [r1]
	adds r3, r0, #1
	strb r3, [r1]
	movs r0, #2
	ands r2, r0
	cmp r2, #0
	beq _0811EB9A
	adds r0, r3, #1
	strb r0, [r1]
_0811EB9A:
	ldr r2, [sp]
	ldr r1, [sp, #0x10]
	cmp r2, r1
	bgt _0811EBAC
	ldr r0, [sp, #8]
	cmp r0, r1
	bge _0811EBB2
	cmp r2, r1
	blt _0811EC72
_0811EBAC:
	ldr r0, [r4, #8]
	cmp r0, r2
	blt _0811EC72
_0811EBB2:
	ldr r2, [sp, #4]
	ldr r1, [r4, #4]
	cmp r2, r1
	bgt _0811EBC4
	ldr r0, [sp, #0xc]
	cmp r0, r1
	bge _0811EBCA
	cmp r2, r1
	blt _0811EC72
_0811EBC4:
	ldr r0, [r4, #0xc]
	cmp r0, r2
	blt _0811EC72
_0811EBCA:
	adds r2, r5, #0
	adds r2, #0xe3
	ldrb r1, [r2]
	movs r0, #0x20
	b _0811EC6E
_0811EBD4:
	adds r0, r5, #0
	bl sub_08070504
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0811EC72
	mov r0, r8
	adds r0, #0x74
	adds r0, r7, r0
	ldr r0, [r0]
	cmp r0, r5
	beq _0811EC72
	adds r0, r5, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0811EC36
	ldr r2, [sp]
	ldr r1, [sp, #0x10]
	cmp r2, r1
	bgt _0811EC0E
	ldr r0, [sp, #8]
	cmp r0, r1
	bge _0811EC14
	cmp r2, r1
	blt _0811EC72
_0811EC0E:
	ldr r0, [r4, #8]
	cmp r0, r2
	blt _0811EC72
_0811EC14:
	ldr r2, [sp, #4]
	ldr r1, [r4, #4]
	cmp r2, r1
	bgt _0811EC26
	ldr r0, [sp, #0xc]
	cmp r0, r1
	bge _0811EC2C
	cmp r2, r1
	blt _0811EC72
_0811EC26:
	ldr r0, [r4, #0xc]
	cmp r0, r2
	blt _0811EC72
_0811EC2C:
	adds r2, r5, #0
	adds r2, #0xe3
	ldrb r1, [r2]
	movs r0, #0x20
	b _0811EC6E
_0811EC36:
	ldr r2, [sp]
	ldr r1, [sp, #0x10]
	cmp r2, r1
	bgt _0811EC48
	ldr r0, [sp, #8]
	cmp r0, r1
	bge _0811EC4E
	cmp r2, r1
	blt _0811EC72
_0811EC48:
	ldr r0, [r4, #8]
	cmp r0, r2
	blt _0811EC72
_0811EC4E:
	ldr r2, [sp, #4]
	ldr r1, [r4, #4]
	cmp r2, r1
	bgt _0811EC60
	ldr r0, [sp, #0xc]
	cmp r0, r1
	bge _0811EC66
	cmp r2, r1
	blt _0811EC72
_0811EC60:
	ldr r0, [r4, #0xc]
	cmp r0, r2
	blt _0811EC72
_0811EC66:
	adds r2, r5, #0
	adds r2, #0xe3
	ldrb r1, [r2]
	movs r0, #0x10
_0811EC6E:
	orrs r0, r1
	strb r0, [r2]
_0811EC72:
	add sp, #0x20
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0811EC80
sub_0811EC80: @ 0x0811EC80
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r6, r0, #0
	mov sb, r6
	adds r1, r6, #0
	adds r1, #0x56
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _0811ECB4
	ldr r2, _0811ECAC @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _0811ECB0 @ =0x0000065E
	adds r0, r0, r1
	ldrb r0, [r0]
	b _0811ECB6
	.align 2, 0
_0811ECAC: .4byte gCurLevelInfo
_0811ECB0: .4byte 0x0000065E
_0811ECB4:
	movs r0, #0xff
_0811ECB6:
	cmp r0, #0xff
	beq _0811ECDE
	lsls r3, r0, #3
	ldr r1, _0811ED70 @ =gUnk_02022F40
	adds r1, r0, r1
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0811ED74 @ =gUnk_02022EC0
	lsls r1, r0, #2
	adds r1, r1, r2
	str r6, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_0811ECDE:
	mov r5, sb
	adds r5, #0xe0
	movs r2, #0
	mov r8, r2
	mov r4, r8
	strb r4, [r5]
	mov r4, sb
	adds r4, #0xe3
	ldrb r1, [r4]
	movs r0, #0xcf
	ands r0, r1
	strb r0, [r4]
	mov r0, sb
	movs r1, #0
	bl sub_0811EA60
	mov r0, sb
	movs r1, #1
	bl sub_0811EA60
	mov r0, sb
	movs r1, #2
	bl sub_0811EA60
	mov r0, sb
	movs r1, #3
	bl sub_0811EA60
	adds r2, r6, #0
	adds r2, #0x62
	ldrb r1, [r2]
	movs r0, #1
	ands r0, r1
	adds r3, r5, #0
	adds r7, r4, #0
	cmp r0, #0
	beq _0811ED30
	ldrb r0, [r7]
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r7]
_0811ED30:
	ldrb r1, [r2]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0811ED42
	ldrb r0, [r7]
	movs r1, #0x20
	orrs r0, r1
	strb r0, [r7]
_0811ED42:
	movs r0, #0
	ldrsb r0, [r3, r0]
	cmp r0, #0
	bge _0811ED4C
	rsbs r0, r0, #0
_0811ED4C:
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r6, #0
	adds r0, #0x50
	ldrh r2, [r0]
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r4, r0, #0
	cmp r1, #0
	bge _0811ED78
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r2, r1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811ED88
	b _0811ED84
	.align 2, 0
_0811ED70: .4byte gUnk_02022F40
_0811ED74: .4byte gUnk_02022EC0
_0811ED78:
	ldr r1, _0811EE14 @ =0xFFFFFE00
	adds r0, r2, r1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0811ED88
_0811ED84:
	mov r2, r8
	strh r2, [r4]
_0811ED88:
	lsls r0, r5, #0x18
	asrs r5, r0, #0x18
	cmp r5, #0
	beq _0811ED92
	b _0811EF1C
_0811ED92:
	adds r0, r6, #0
	bl sub_08070504
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0811EDA0
	b _0811EEE6
_0811EDA0:
	ldrb r0, [r7]
	movs r2, #0xf7
	ands r2, r0
	strb r2, [r7]
	movs r0, #4
	ands r0, r2
	cmp r0, #0
	bne _0811EDB8
	movs r1, #8
	adds r0, r2, #0
	orrs r0, r1
	strb r0, [r7]
_0811EDB8:
	ldrb r1, [r7]
	movs r0, #4
	adds r2, r1, #0
	orrs r2, r0
	movs r0, #0
	orrs r2, r0
	strb r2, [r7]
	adds r0, r6, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0811EE5E
	movs r0, #8
	ands r0, r2
	cmp r0, #0
	bne _0811EDE0
	b _0811EFEA
_0811EDE0:
	movs r0, #0x20
	ands r2, r0
	cmp r2, #0
	beq _0811EDEA
	b _0811EFEA
_0811EDEA:
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811EE18
	movs r0, #0x80
	lsls r0, r0, #2
	adds r2, r0, #0
	ldrh r1, [r4]
	adds r0, r2, r1
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	ldr r0, _0811EE14 @ =0xFFFFFE00
	cmp r1, r0
	blt _0811EE36
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _0811EE38
	b _0811EE36
	.align 2, 0
_0811EE14: .4byte 0xFFFFFE00
_0811EE18:
	ldr r0, _0811EE4C @ =0xFFFFFE00
	adds r2, r0, #0
	ldrh r1, [r4]
	adds r0, r2, r1
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r1, r0
	bgt _0811EE36
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bge _0811EE38
_0811EE36:
	strh r0, [r4]
_0811EE38:
	ldrb r1, [r7]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0811EE50
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0xc
	b _0811EE56
	.align 2, 0
_0811EE4C: .4byte 0xFFFFFE00
_0811EE50:
	adds r0, r6, #0
	movs r1, #0
	movs r2, #4
_0811EE56:
	movs r3, #1
	bl sub_08089864
	b _0811EFEA
_0811EE5E:
	movs r0, #8
	ands r0, r2
	cmp r0, #0
	bne _0811EE68
	b _0811EFEA
_0811EE68:
	movs r0, #0x10
	ands r2, r0
	cmp r2, #0
	beq _0811EE72
	b _0811EFEA
_0811EE72:
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811EEA0
	ldr r2, _0811EE9C @ =0xFFFFFE00
	adds r1, r2, #0
	ldrh r2, [r4]
	adds r0, r1, r2
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r0, r1
	blt _0811EEBE
	movs r1, #0x80
	lsls r1, r1, #2
	cmp r0, r1
	ble _0811EEC0
	b _0811EEBE
	.align 2, 0
_0811EE9C: .4byte 0xFFFFFE00
_0811EEA0:
	movs r0, #0x80
	lsls r0, r0, #2
	adds r1, r0, #0
	ldrh r2, [r4]
	adds r0, r1, r2
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r0, r1
	bgt _0811EEBE
	ldr r1, _0811EED4 @ =0xFFFFFE00
	cmp r0, r1
	bge _0811EEC0
_0811EEBE:
	strh r1, [r4]
_0811EEC0:
	ldrb r1, [r7]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0811EED8
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0xc
	b _0811EEDE
	.align 2, 0
_0811EED4: .4byte 0xFFFFFE00
_0811EED8:
	adds r0, r6, #0
	movs r1, #0
	movs r2, #4
_0811EEDE:
	movs r3, #0
	bl sub_08089864
	b _0811EFEA
_0811EEE6:
	ldrh r1, [r4]
	movs r2, #0
	ldrsh r0, [r4, r2]
	cmp r0, #0
	bge _0811EF00
	movs r2, #0x80
	lsls r2, r2, #2
	adds r0, r1, r2
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811EF0E
	b _0811EF0C
_0811EF00:
	ldr r2, _0811EF18 @ =0xFFFFFE00
	adds r0, r1, r2
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0811EF0E
_0811EF0C:
	strh r5, [r4]
_0811EF0E:
	ldrb r1, [r7]
	movs r0, #0xfb
	ands r0, r1
	strb r0, [r7]
	b _0811EFEA
	.align 2, 0
_0811EF18: .4byte 0xFFFFFE00
_0811EF1C:
	mov r0, sb
	adds r0, #0xe1
	ldrb r0, [r0]
	cmp r5, r0
	blt _0811EFEA
	ldrb r1, [r7]
	movs r0, #0x30
	ands r0, r1
	cmp r0, #0
	beq _0811EF88
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0811EF62
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _0811EFEA
	movs r0, #0
	ldrsb r0, [r3, r0]
	cmp r0, #0
	bge _0811EFEA
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0811EFB0
	ldrh r0, [r4]
	adds r0, #0x40
_0811EF56:
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x40
	bgt _0811EFC4
	b _0811EFE0
_0811EF62:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811EFEA
	movs r0, #0
	ldrsb r0, [r3, r0]
	cmp r0, #0
	ble _0811EFEA
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811EF82
	ldrh r0, [r4]
	adds r0, #0x40
	b _0811EFB4
_0811EF82:
	ldrh r0, [r4]
	subs r0, #0x40
	b _0811EF56
_0811EF88:
	movs r0, #0
	ldrsb r0, [r3, r0]
	cmp r0, #0
	ble _0811EFA6
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811EFA0
	ldrh r0, [r4]
	adds r0, #0x40
	b _0811EFB4
_0811EFA0:
	ldrh r0, [r4]
	subs r0, #0x40
	b _0811EF56
_0811EFA6:
	ldr r0, [r6, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811EFCA
_0811EFB0:
	ldrh r0, [r4]
	subs r0, #0x40
_0811EFB4:
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	subs r1, #0x41
	cmp r0, r1
	blt _0811EFE8
	cmp r0, #0x40
	ble _0811EFEA
_0811EFC4:
	movs r0, #0x40
	strh r0, [r4]
	b _0811EFEA
_0811EFCA:
	adds r1, r4, #0
	ldrh r0, [r1]
	adds r0, #0x40
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x40
	ble _0811EFE0
	movs r0, #0x40
	strh r0, [r1]
	b _0811EFEA
_0811EFE0:
	movs r1, #0x40
	rsbs r1, r1, #0
	cmp r0, r1
	bge _0811EFEA
_0811EFE8:
	strh r1, [r4]
_0811EFEA:
	ldr r2, [r6, #8]
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	beq _0811F028
	mov r4, sb
	adds r4, #0xe2
	ldrb r0, [r4]
	cmp r0, #0
	beq _0811F024
	adds r0, r6, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _0811F028
	movs r0, #0x80
	lsls r0, r0, #1
	orrs r2, r0
	str r2, [r6, #8]
	ldrb r1, [r7]
	movs r0, #2
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r7]
	b _0811F028
_0811F024:
	movs r0, #1
	strb r0, [r4]
_0811F028:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0811F034
sub_0811F034: @ 0x0811F034
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r3, r0, #0
	ldrh r1, [r3, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811F054
	ldrh r0, [r3, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0811F05C
_0811F054:
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0811F05C:
	adds r1, r0, #0
	adds r1, #0xe3
	ldrb r5, [r1]
	subs r1, #0x8d
	ldrb r2, [r1]
	adds r7, r2, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r4, [r0, #2]
	ldrb r6, [r0, #3]
	mov r8, r6
	cmp r2, #0xff
	beq _0811F088
	ldr r1, _0811F0AC @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r1
	ldr r1, _0811F0B0 @ =0x0000065E
	adds r0, r0, r1
	ldrb r0, [r0]
	mov sb, r0
_0811F088:
	adds r0, r3, #0
	bl ObjectDestroy
	cmp r4, #0
	bne _0811F096
	cmp r7, #0xff
	beq _0811F0C0
_0811F096:
	movs r0, #0x40
	ands r5, r0
	cmp r5, #0
	beq _0811F0B4
	adds r0, r4, #0
	adds r1, r6, #0
	mov r2, sb
	movs r3, #1
	bl sub_08001678
	b _0811F0C0
	.align 2, 0
_0811F0AC: .4byte gCurLevelInfo
_0811F0B0: .4byte 0x0000065E
_0811F0B4:
	adds r0, r4, #0
	mov r1, r8
	mov r2, sb
	movs r3, #0
	bl sub_08001678
_0811F0C0:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0811F0CC
sub_0811F0CC: @ 0x0811F0CC
	adds r2, r0, #0
	movs r0, #0
	movs r1, #0
	strh r1, [r2, #4]
	adds r1, r2, #0
	adds r1, #0xe2
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	ldr r0, _0811F0E4 @ =sub_0811F0E8
	str r0, [r2, #0x78]
	bx lr
	.align 2, 0
_0811F0E4: .4byte sub_0811F0E8

	thumb_func_start sub_0811F0E8
sub_0811F0E8: @ 0x0811F0E8
	push {r4, lr}
	adds r4, r0, #0
	bl sub_0811EC80
	ldr r2, [r4, #0x44]
	asrs r2, r2, #8
	ldr r3, _0811F124 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r3
	adds r0, #0xbe
	ldrh r0, [r0]
	subs r0, #8
	cmp r2, r0
	blt _0811F118
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
_0811F118:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811F124: .4byte gCurLevelInfo

	thumb_func_start sub_0811F128
sub_0811F128: @ 0x0811F128
	push {r4, r5, r6, lr}
	sub sp, #0xc
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _0811F15C @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _0811F160 @ =sub_0811F824
	str r1, [sp]
	movs r1, #0xc8
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811F164
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r5, r0, r1
	b _0811F16C
	.align 2, 0
_0811F15C: .4byte ObjectMain
_0811F160: .4byte sub_0811F824
_0811F164:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
_0811F16C:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r5, #8]
	ldr r1, _0811F204 @ =gUnk_02008740
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r5, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #0x68]
	ldr r0, [r5, #0x5c]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r5, #0x5c]
	ldr r0, [r5, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #0xc]
	add r1, sp, #4
	adds r2, r5, #0
	adds r2, #0xb0
	ldr r0, [r2]
	ldrh r0, [r0, #0x1a]
	strh r0, [r1]
	ldr r0, [r2]
	ldrh r0, [r0, #0x1c]
	strh r0, [r1, #2]
	adds r3, r1, #0
	ldr r0, [r2]
	ldrh r0, [r0, #0x1e]
	ldrh r1, [r1]
	adds r0, r0, r1
	strh r0, [r3, #4]
	adds r0, r3, #0
	ldr r1, [r2]
	ldrh r4, [r0, #2]
	ldrh r0, [r1, #0x20]
	adds r4, r4, r0
	strh r4, [r3, #6]
	adds r0, r3, #0
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldrh r2, [r0, #2]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	movs r3, #4
	ldrsb r3, [r0, r3]
	lsls r4, r4, #0x18
	asrs r4, r4, #0x18
	str r4, [sp]
	adds r0, r5, #0
	bl sub_0803E308
	ldr r2, _0811F208 @ =gUnk_08351648
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r5, #0
	bl _call_via_r1
	adds r0, r5, #0
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0811F204: .4byte gUnk_02008740
_0811F208: .4byte gUnk_08351648

	thumb_func_start sub_0811F20C
sub_0811F20C: @ 0x0811F20C
	push {r4, r5, lr}
	mov ip, r0
	movs r4, #0
	strh r4, [r0, #4]
	mov r3, ip
	adds r3, #0xb0
	ldr r0, [r3]
	ldrh r0, [r0, #6]
	mov r2, ip
	adds r2, #0xb8
	strh r0, [r2]
	ldr r0, [r3]
	ldrh r0, [r0, #8]
	mov r5, ip
	adds r5, #0xba
	strh r0, [r5]
	ldrh r1, [r2]
	mov r0, ip
	adds r0, #0xbc
	strh r1, [r0]
	ldrh r0, [r5]
	mov r1, ip
	adds r1, #0xbe
	strh r0, [r1]
	ldrh r1, [r2]
	mov r0, ip
	adds r0, #0xc0
	strh r1, [r0]
	ldrh r0, [r5]
	mov r1, ip
	adds r1, #0xc2
	strh r0, [r1]
	mov r0, ip
	adds r0, #0xc4
	strh r4, [r0]
	ldr r0, [r3]
	ldrh r0, [r0, #0x14]
	adds r1, #4
	strh r0, [r1]
	ldr r0, _0811F268 @ =sub_0811F918
	mov r1, ip
	str r0, [r1, #0x78]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0811F268: .4byte sub_0811F918

	thumb_func_start sub_0811F26C
sub_0811F26C: @ 0x0811F26C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0xb0
	ldr r0, [r5]
	ldrb r1, [r0, #4]
	ldr r3, _0811F304 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _0811F308 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	adds r3, r0, #0
	ldrb r0, [r3]
	cmp r0, #0
	bne _0811F2AE
	ldrb r0, [r3, #1]
	cmp r0, #0
	bne _0811F2AE
	ldrb r0, [r3, #2]
	cmp r0, #0
	beq _0811F348
_0811F2AE:
	adds r2, r4, #0
	adds r2, #0xb4
	ldrb r6, [r3]
	mov r8, r6
	adds r5, r2, #0
	ldrb r7, [r2]
	cmp r6, r7
	bne _0811F2D6
	ldrb r0, [r3, #1]
	ldrb r1, [r2, #1]
	cmp r0, r1
	bne _0811F2D6
	ldrb r0, [r3, #2]
	ldrb r1, [r2, #2]
	eors r0, r1
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r7, r1, #0x1f
	cmp r7, #0
	beq _0811F310
_0811F2D6:
	movs r1, #0
	mov r2, r8
	strb r2, [r5]
	ldrb r0, [r3, #1]
	strb r0, [r5, #1]
	ldrb r0, [r3, #2]
	strb r0, [r5, #2]
	strb r1, [r5, #3]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #0x14]
	adds r1, r4, #0
	adds r1, #0xc6
	strh r0, [r1]
	adds r2, r4, #0
	adds r2, #0xc4
	ldrh r1, [r2]
	ldr r0, _0811F30C @ =0x0000FDFF
	ands r0, r1
	strh r0, [r2]
	b _0811F402
	.align 2, 0
_0811F304: .4byte gCurLevelInfo
_0811F308: .4byte 0x0000065E
_0811F30C: .4byte 0x0000FDFF
_0811F310:
	adds r5, r4, #0
	adds r5, #0xc4
	ldrh r1, [r5]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0811F402
	strb r6, [r2]
	ldrb r0, [r3, #1]
	strb r0, [r2, #1]
	ldrb r0, [r3, #2]
	strb r0, [r2, #2]
	strb r7, [r2, #3]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x14]
	adds r0, r4, #0
	adds r0, #0xc6
	strh r1, [r0]
	ldrh r1, [r5]
	ldr r0, _0811F344 @ =0x0000FDFF
	ands r0, r1
	strh r0, [r5]
	b _0811F402
	.align 2, 0
_0811F344: .4byte 0x0000FDFF
_0811F348:
	adds r2, r4, #0
	adds r2, #0xc4
	ldrh r1, [r2]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	adds r6, r2, #0
	cmp r0, #0
	bne _0811F402
	ldr r0, [r5]
	ldrh r5, [r0, #8]
	mov sb, r5
	adds r1, r4, #0
	adds r1, #0xb8
	subs r2, #0xa
	ldrh r5, [r2]
	movs r7, #6
	ldrsh r3, [r0, r7]
	movs r7, #0
	ldrsh r0, [r1, r7]
	movs r7, #0
	mov ip, r7
	mov r8, r1
	cmp r3, r0
	bne _0811F382
	cmp sb, r5
	bne _0811F382
	movs r0, #1
	mov ip, r0
_0811F382:
	mov r1, ip
	cmp r1, #0
	beq _0811F3A4
	ldrh r1, [r6]
	ldr r0, _0811F3A0 @ =0x0000FDFF
	ands r0, r1
	movs r1, #0
	strh r0, [r6]
	adds r0, r4, #0
	adds r0, #0xb4
	strb r1, [r0]
	strb r1, [r0, #1]
	strb r1, [r0, #2]
	strb r1, [r0, #3]
	b _0811F402
	.align 2, 0
_0811F3A0: .4byte 0x0000FDFF
_0811F3A4:
	adds r0, r4, #0
	adds r0, #0xb4
	ldrb r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811F402
	adds r3, r4, #0
	adds r3, #0xc6
	ldrh r1, [r3]
	movs r5, #0
	ldrsh r0, [r3, r5]
	cmp r0, #0
	blt _0811F3C6
	subs r0, r1, #1
	strh r0, [r3]
	b _0811F402
_0811F3C6:
	mov r7, r8
	ldrh r1, [r7]
	adds r0, r4, #0
	adds r0, #0xbc
	strh r1, [r0]
	ldrh r0, [r2]
	adds r1, r4, #0
	adds r1, #0xbe
	strh r0, [r1]
	adds r2, r4, #0
	adds r2, #0xb0
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	adds r0, r4, #0
	adds r0, #0xc0
	strh r1, [r0]
	ldr r0, [r2]
	ldrh r1, [r0, #8]
	adds r0, r4, #0
	adds r0, #0xc2
	strh r1, [r0]
	ldr r0, [r2]
	ldrh r0, [r0, #0x14]
	strh r0, [r3]
	ldrh r1, [r6]
	movs r2, #0x80
	lsls r2, r2, #2
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r6]
_0811F402:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0811F410
sub_0811F410: @ 0x0811F410
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov ip, r0
	mov r1, ip
	adds r1, #0xb0
	ldr r0, [r1]
	ldrh r0, [r0, #6]
	mov r2, ip
	adds r2, #0xc0
	strh r0, [r2]
	ldr r0, [r1]
	ldrh r3, [r0, #8]
	mov r4, ip
	adds r4, #0xc2
	strh r3, [r4]
	mov r0, ip
	adds r0, #0xc4
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0811F4A0
	mov r0, ip
	adds r0, #0xb4
	ldrb r0, [r0]
	movs r1, #3
	ands r1, r0
	cmp r1, #1
	beq _0811F478
	cmp r1, #1
	bgt _0811F45E
	cmp r1, #0
	beq _0811F468
	b _0811F4A0
_0811F45E:
	cmp r1, #2
	beq _0811F484
	cmp r1, #3
	beq _0811F494
	b _0811F4A0
_0811F468:
	mov r0, ip
	adds r0, #0xb6
	ldrb r1, [r0]
	lsls r1, r1, #4
	ldrh r0, [r2]
	subs r0, r0, r1
	strh r0, [r2]
	b _0811F4A0
_0811F478:
	mov r0, ip
	adds r0, #0xb6
	ldrb r0, [r0]
	lsls r0, r0, #4
	subs r0, r3, r0
	b _0811F49E
_0811F484:
	mov r0, ip
	adds r0, #0xb6
	ldrb r0, [r0]
	lsls r0, r0, #4
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2]
	b _0811F4A0
_0811F494:
	mov r0, ip
	adds r0, #0xb6
	ldrb r0, [r0]
	lsls r0, r0, #4
	adds r0, r3, r0
_0811F49E:
	strh r0, [r4]
_0811F4A0:
	mov r2, ip
	adds r2, #0xc4
	ldrh r0, [r2]
	ldr r5, _0811F4D4 @ =0x0000FFE0
	ands r5, r0
	movs r7, #0
	strh r5, [r2]
	mov r0, ip
	adds r0, #0xc0
	ldr r4, [r0]
	mov r1, ip
	adds r1, #0xb8
	ldr r3, [r1]
	mov sl, r0
	adds r6, r2, #0
	mov sb, r1
	cmp r4, r3
	bne _0811F4D8
	movs r1, #0x10
	adds r0, r5, #0
	orrs r0, r1
	strh r0, [r6]
	movs r2, #0xba
	add r2, ip
	mov r8, r2
	b _0811F538
	.align 2, 0
_0811F4D4: .4byte 0x0000FFE0
_0811F4D8:
	mov r3, sl
	movs r0, #0
	ldrsh r4, [r3, r0]
	mov r1, sb
	movs r2, #0
	ldrsh r3, [r1, r2]
	cmp r4, r3
	beq _0811F512
	movs r0, #0xc2
	add r0, ip
	mov r8, r0
	mov r0, ip
	adds r0, #0xba
	mov r1, r8
	movs r2, #0
	ldrsh r1, [r1, r2]
	str r1, [sp]
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov r8, r0
	ldr r0, [sp]
	cmp r0, r1
	bne _0811F538
	cmp r3, r4
	bge _0811F50E
	movs r1, #4
	b _0811F532
_0811F50E:
	movs r1, #1
	b _0811F532
_0811F512:
	mov r1, ip
	adds r1, #0xc2
	mov r0, ip
	adds r0, #0xba
	movs r3, #0
	ldrsh r2, [r1, r3]
	movs r4, #0
	ldrsh r1, [r0, r4]
	mov r8, r0
	cmp r2, r1
	beq _0811F538
	cmp r1, r2
	bge _0811F530
	movs r1, #8
	b _0811F532
_0811F530:
	movs r1, #2
_0811F532:
	adds r0, r5, #0
	orrs r0, r1
	strh r0, [r6]
_0811F538:
	ldrh r1, [r6]
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r7, #0
	orrs r0, r1
	strh r0, [r6]
	movs r1, #0x1f
	ands r1, r0
	cmp r1, #2
	beq _0811F5BE
	cmp r1, #2
	bgt _0811F556
	cmp r1, #1
	beq _0811F560
	b _0811F674
_0811F556:
	cmp r1, #4
	beq _0811F5EE
	cmp r1, #8
	beq _0811F64C
	b _0811F674
_0811F560:
	mov r2, ip
	ldr r0, [r2, #8]
	ands r0, r1
	cmp r0, #0
	beq _0811F590
	mov r1, ip
	adds r1, #0x50
	adds r2, #0xb5
	ldrh r0, [r1]
	ldrb r3, [r2]
	adds r0, r0, r3
	strh r0, [r1]
	movs r4, #0
	ldrsh r3, [r1, r4]
	ldrb r0, [r2]
	rsbs r2, r0, #0
	cmp r3, r2
	bge _0811F588
	strh r2, [r1]
	b _0811F5B2
_0811F588:
	cmp r3, r0
	ble _0811F5B2
	strh r0, [r1]
	b _0811F5B2
_0811F590:
	mov r2, ip
	adds r2, #0x50
	mov r3, ip
	adds r3, #0xb5
	ldrb r1, [r3]
	ldrh r0, [r2]
	subs r0, r0, r1
	strh r0, [r2]
	movs r7, #0
	ldrsh r1, [r2, r7]
	ldrb r0, [r3]
	cmp r1, r0
	bgt _0811F5B0
	rsbs r0, r0, #0
	cmp r1, r0
	bge _0811F5B2
_0811F5B0:
	strh r0, [r2]
_0811F5B2:
	mov r1, ip
	ldr r0, [r1, #0x40]
	asrs r0, r0, #8
	mov r2, sb
	strh r0, [r2]
	b _0811F674
_0811F5BE:
	mov r3, ip
	adds r3, #0xb5
	ldrb r0, [r3]
	cmp r0, #0
	beq _0811F5E2
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	ldrb r4, [r3]
	adds r0, r0, r4
	strh r0, [r1]
	movs r7, #0
	ldrsh r0, [r1, r7]
	ldrb r2, [r3]
	cmp r0, r2
	ble _0811F66A
	strh r2, [r1]
	b _0811F66A
_0811F5E2:
	mov r2, ip
	adds r2, #0x52
	ldrh r0, [r2]
	ldrb r1, [r3]
	adds r0, r0, r1
	b _0811F65A
_0811F5EE:
	mov r2, ip
	ldr r0, [r2, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0811F620
	adds r2, #0x50
	mov r4, ip
	adds r4, #0xb5
	ldrb r1, [r4]
	ldrh r0, [r2]
	subs r0, r0, r1
	strh r0, [r2]
	movs r7, #0
	ldrsh r3, [r2, r7]
	ldrb r0, [r4]
	rsbs r1, r0, #0
	cmp r3, r1
	bge _0811F618
	strh r1, [r2]
	b _0811F642
_0811F618:
	cmp r3, r0
	ble _0811F642
	strh r0, [r2]
	b _0811F642
_0811F620:
	mov r1, ip
	adds r1, #0x50
	mov r3, ip
	adds r3, #0xb5
	ldrh r0, [r1]
	ldrb r2, [r3]
	adds r0, r0, r2
	strh r0, [r1]
	movs r4, #0
	ldrsh r2, [r1, r4]
	ldrb r0, [r3]
	cmp r2, r0
	bgt _0811F640
	rsbs r0, r0, #0
	cmp r2, r0
	bge _0811F642
_0811F640:
	strh r0, [r1]
_0811F642:
	mov r7, ip
	ldr r0, [r7, #0x40]
	asrs r0, r0, #8
	mov r1, sb
	b _0811F672
_0811F64C:
	mov r3, ip
	adds r3, #0xb5
	ldrb r4, [r3]
	mov r2, ip
	adds r2, #0x52
	ldrh r0, [r2]
	subs r0, r0, r4
_0811F65A:
	strh r0, [r2]
	movs r4, #0
	ldrsh r1, [r2, r4]
	ldrb r0, [r3]
	rsbs r0, r0, #0
	cmp r1, r0
	bge _0811F66A
	strh r0, [r2]
_0811F66A:
	mov r7, ip
	ldr r0, [r7, #0x44]
	asrs r0, r0, #8
	mov r1, r8
_0811F672:
	strh r0, [r1]
_0811F674:
	ldrh r0, [r6]
	movs r1, #0x1f
	ands r1, r0
	cmp r1, #2
	beq _0811F6E4
	cmp r1, #2
	bgt _0811F688
	cmp r1, #1
	beq _0811F692
	b _0811F7B2
_0811F688:
	cmp r1, #4
	beq _0811F718
	cmp r1, #8
	beq _0811F768
	b _0811F7B2
_0811F692:
	mov r2, sl
	movs r3, #0
	ldrsh r1, [r2, r3]
	mov r4, sb
	movs r7, #0
	ldrsh r0, [r4, r7]
	cmp r1, r0
	bge _0811F6A4
	b _0811F7BA
_0811F6A4:
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _0811F6C4
	ldr r4, _0811F6C0 @ =0x00007FFF
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811F6D4
	b _0811F6D0
	.align 2, 0
_0811F6C0: .4byte 0x00007FFF
_0811F6C4:
	ldr r7, _0811F6E0 @ =0xFFFF8001
	adds r0, r2, r7
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0811F6D4
_0811F6D0:
	movs r0, #0
	strh r0, [r1]
_0811F6D4:
	mov r1, sl
	ldrh r0, [r1]
	mov r2, sb
	strh r0, [r2]
	b _0811F7B2
	.align 2, 0
_0811F6E0: .4byte 0xFFFF8001
_0811F6E4:
	mov r0, ip
	adds r0, #0xc2
	movs r3, #0
	ldrsh r2, [r0, r3]
	mov r4, r8
	movs r7, #0
	ldrsh r1, [r4, r7]
	adds r3, r0, #0
	cmp r2, r1
	blt _0811F7BA
	mov r1, ip
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _0811F79C
	ldr r7, _0811F714 @ =0x00007FFF
	adds r0, r2, r7
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811F7AC
	b _0811F7A8
	.align 2, 0
_0811F714: .4byte 0x00007FFF
_0811F718:
	mov r0, sl
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov r3, sb
	movs r4, #0
	ldrsh r0, [r3, r4]
	cmp r1, r0
	bgt _0811F7BA
	mov r1, ip
	adds r1, #0x50
	ldrh r2, [r1]
	movs r7, #0
	ldrsh r0, [r1, r7]
	cmp r0, #0
	bge _0811F748
	ldr r3, _0811F744 @ =0x00007FFF
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811F758
	b _0811F754
	.align 2, 0
_0811F744: .4byte 0x00007FFF
_0811F748:
	ldr r4, _0811F764 @ =0xFFFF8001
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0811F758
_0811F754:
	movs r0, #0
	strh r0, [r1]
_0811F758:
	mov r7, sl
	ldrh r0, [r7]
	mov r1, sb
	strh r0, [r1]
	b _0811F7B2
	.align 2, 0
_0811F764: .4byte 0xFFFF8001
_0811F768:
	mov r0, ip
	adds r0, #0xc2
	movs r3, #0
	ldrsh r2, [r0, r3]
	mov r4, r8
	movs r7, #0
	ldrsh r1, [r4, r7]
	adds r3, r0, #0
	cmp r2, r1
	bgt _0811F7BA
	mov r1, ip
	adds r1, #0x52
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _0811F79C
	ldr r7, _0811F798 @ =0x00007FFF
	adds r0, r2, r7
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _0811F7AC
	b _0811F7A8
	.align 2, 0
_0811F798: .4byte 0x00007FFF
_0811F79C:
	ldr r4, _0811F818 @ =0xFFFF8001
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0811F7AC
_0811F7A8:
	movs r0, #0
	strh r0, [r1]
_0811F7AC:
	ldrh r0, [r3]
	mov r7, r8
	strh r0, [r7]
_0811F7B2:
	ldrh r1, [r6]
	ldr r0, _0811F81C @ =0x0000FEFF
	ands r0, r1
	strh r0, [r6]
_0811F7BA:
	ldr r3, _0811F820 @ =gCurLevelInfo
	movs r0, #0x56
	add r0, ip
	mov sl, r0
	ldrb r0, [r0]
	movs r5, #0xcd
	lsls r5, r5, #3
	adds r2, r0, #0
	muls r2, r5, r2
	adds r0, r3, #0
	adds r0, #0x2c
	adds r2, r2, r0
	mov r4, ip
	adds r4, #0xb0
	ldr r0, [r4]
	movs r1, #6
	ldrsh r0, [r0, r1]
	mov r6, sb
	movs r7, #0
	ldrsh r1, [r6, r7]
	subs r0, r0, r1
	lsls r0, r0, #8
	rsbs r0, r0, #0
	str r0, [r2]
	mov r1, sl
	ldrb r0, [r1]
	adds r2, r0, #0
	muls r2, r5, r2
	adds r3, #0x30
	adds r2, r2, r3
	ldr r0, [r4]
	movs r3, #8
	ldrsh r0, [r0, r3]
	mov r4, r8
	movs r6, #0
	ldrsh r1, [r4, r6]
	subs r0, r0, r1
	lsls r0, r0, #8
	str r0, [r2]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811F818: .4byte 0xFFFF8001
_0811F81C: .4byte 0x0000FEFF
_0811F820: .4byte gCurLevelInfo

	thumb_func_start sub_0811F824
sub_0811F824: @ 0x0811F824
	push {r4, r5, r6, lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811F83E
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0811F846
_0811F83E:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0811F846:
	adds r4, r0, #0
	ldr r2, [r4, #0x10]
	cmp r2, #0
	beq _0811F860
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	bne _0811F860
	adds r0, r2, #0
	bl sub_08157190
_0811F860:
	adds r0, r4, #0
	adds r0, #0x8c
	ldr r0, [r0]
	cmp r0, #0
	beq _0811F86E
	bl sub_081590EC
_0811F86E:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r2, [r0]
	adds r6, r0, #0
	adds r5, r4, #0
	adds r5, #0x56
	cmp r2, #0
	beq _0811F8F6
	ldrh r1, [r2, #2]
	movs r0, #0xf8
	lsls r0, r0, #5
	cmp r1, r0
	beq _0811F8BC
	ldrb r0, [r2, #2]
	cmp r0, #0
	bne _0811F894
	ldrb r0, [r5]
	cmp r0, #0xff
	beq _0811F90C
_0811F894:
	ldrb r0, [r2, #2]
	ldrb r1, [r2, #3]
	ldr r4, _0811F8B4 @ =gCurLevelInfo
	ldrb r3, [r5]
	movs r2, #0xcd
	lsls r2, r2, #3
	muls r2, r3, r2
	adds r2, r2, r4
	ldr r3, _0811F8B8 @ =0x0000065E
	adds r2, r2, r3
	ldrb r2, [r2]
	movs r3, #1
	bl sub_08001678
	b _0811F8F6
	.align 2, 0
_0811F8B4: .4byte gCurLevelInfo
_0811F8B8: .4byte 0x0000065E
_0811F8BC:
	ldr r1, _0811F8D0 @ =gUnk_020229E0
	movs r3, #0
	cmp r1, r2
	bne _0811F8D8
	ldr r2, _0811F8D4 @ =gUnk_020229D4
	movs r1, #2
	rsbs r1, r1, #0
	ldr r0, [r2]
	ands r0, r1
	b _0811F8F4
	.align 2, 0
_0811F8D0: .4byte gUnk_020229E0
_0811F8D4: .4byte gUnk_020229D4
_0811F8D8:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r1, #0x24
	cmp r3, #0x1f
	bhi _0811F8F6
	ldr r0, [r6]
	cmp r1, r0
	bne _0811F8D8
	ldr r2, _0811F914 @ =gUnk_020229D4
	movs r1, #1
	lsls r1, r3
	ldr r0, [r2]
	bics r0, r1
_0811F8F4:
	str r0, [r2]
_0811F8F6:
	ldrb r0, [r5]
	cmp r0, #0xff
	beq _0811F90C
	adds r4, r0, #0
	adds r1, r5, #0
	bl sub_08002984
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_080028CC
_0811F90C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0811F914: .4byte gUnk_020229D4

	thumb_func_start sub_0811F918
sub_0811F918: @ 0x0811F918
	push {r4, lr}
	adds r4, r0, #0
	bl sub_0811F26C
	adds r0, r4, #0
	bl sub_0811F410
	adds r1, r4, #0
	adds r1, #0x56
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _0811F94C
	ldr r2, _0811F944 @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _0811F948 @ =0x0000065E
	adds r0, r0, r1
	ldrb r0, [r0]
	b _0811F94E
	.align 2, 0
_0811F944: .4byte gCurLevelInfo
_0811F948: .4byte 0x0000065E
_0811F94C:
	movs r0, #0xff
_0811F94E:
	cmp r0, #0xff
	beq _0811F976
	lsls r3, r0, #3
	ldr r1, _0811F984 @ =gUnk_02022F40
	adds r1, r0, r1
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0811F988 @ =gUnk_02022EC0
	lsls r1, r0, #2
	adds r1, r1, r2
	str r4, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_0811F976:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811F984: .4byte gUnk_02022F40
_0811F988: .4byte gUnk_02022EC0

	thumb_func_start CreateStarPlatform
CreateStarPlatform: @ 0x0811F98C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _0811F9C0 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _0811F9C4 @ =sub_0811FC88
	str r1, [sp]
	movs r1, #0xbc
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811F9C8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _0811F9D0
	.align 2, 0
_0811F9C0: .4byte ObjectMain
_0811F9C4: .4byte sub_0811FC88
_0811F9C8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_0811F9D0:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	ldr r1, _0811FA84 @ =0x0210A940
	orrs r0, r1
	str r0, [r4, #8]
	ldr r2, [r4, #0x5c]
	ldr r0, _0811FA88 @ =0xFFFFDFFF
	orrs r2, r0
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r0, [r4, #0x68]
	subs r1, #9
	ands r0, r1
	str r0, [r4, #0x68]
	ands r2, r1
	str r2, [r4, #0x5c]
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #0
	strb r0, [r1]
	adds r1, #0x2d
	ldr r0, [r1]
	ldrh r0, [r0, #0x1a]
	adds r0, #8
	adds r2, r4, #0
	adds r2, #0xb4
	strh r0, [r2]
	ldr r0, [r1]
	ldrh r0, [r0, #0x1c]
	movs r3, #0xb6
	adds r3, r3, r4
	mov ip, r3
	strh r0, [r3]
	ldr r0, [r1]
	ldrh r0, [r0, #0x1e]
	ldrh r5, [r2]
	adds r0, r0, r5
	subs r0, #0x10
	adds r3, r4, #0
	adds r3, #0xb8
	strh r0, [r3]
	ldr r0, [r1]
	ldrh r0, [r0, #0x20]
	mov r1, ip
	ldrh r1, [r1]
	adds r0, r0, r1
	adds r1, r4, #0
	adds r1, #0xba
	strh r0, [r1]
	movs r1, #0
	ldrsb r1, [r2, r1]
	mov r5, ip
	movs r2, #0
	ldrsb r2, [r5, r2]
	ldrb r3, [r3]
	lsls r3, r3, #0x18
	asrs r3, r3, #0x18
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r4, #0
	bl sub_0803E2B0
	adds r0, r4, #0
	bl ObjectInitSprite
	ldr r2, _0811FA8C @ =gUnk_08351648
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0811FA84: .4byte 0x0210A940
_0811FA88: .4byte 0xFFFFDFFF
_0811FA8C: .4byte gUnk_08351648

	thumb_func_start sub_0811FA90
sub_0811FA90: @ 0x0811FA90
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r4, r0, #0
	adds r0, #0x56
	ldrb r6, [r0]
	mov r2, sp
	ldr r0, [r4, #0x40]
	adds r1, r4, #0
	adds r1, #0xb0
	ldr r3, [r1]
	asrs r0, r0, #8
	ldrh r1, [r3, #0x1a]
	adds r0, r0, r1
	strh r0, [r2]
	mov r1, sp
	ldr r0, [r4, #0x44]
	asrs r0, r0, #8
	ldrh r2, [r3, #0x1c]
	adds r0, r0, r2
	strh r0, [r1, #2]
	mov r2, sp
	ldrh r0, [r3, #0x1e]
	ldrh r1, [r1]
	adds r0, r0, r1
	strh r0, [r2, #4]
	mov r0, sp
	ldrh r0, [r0, #2]
	ldrh r1, [r3, #0x20]
	adds r0, r0, r1
	strh r0, [r2, #6]
	mov r0, sp
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	mov r0, sp
	ldrh r0, [r0, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	ldrh r0, [r3, #0x20]
	lsrs r7, r0, #4
	movs r5, #0
	cmp r5, r7
	bhs _0811FB44
	adds r0, r1, #1
	lsls r0, r0, #0x18
	mov sb, r0
	lsls r1, r1, #0x18
	mov r8, r1
_0811FB02:
	mov r0, sl
	adds r4, r0, r5
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r6, #0
	mov r2, r8
	lsrs r1, r2, #0x18
	adds r2, r4, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r6, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	adds r0, r6, #0
	mov r2, sb
	lsrs r1, r2, #0x18
	adds r2, r4, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r6, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, r7
	blo _0811FB02
_0811FB44:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0811FB54
sub_0811FB54: @ 0x0811FB54
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #0xb
	ands r0, r1
	cmp r0, #0
	beq _0811FC22
	ldr r0, [r5, #0x6c]
	ldr r0, [r0, #0x68]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	beq _0811FC22
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r6, [r0]
	ldr r4, _0811FC30 @ =gUnk_082D88B8
	ldr r1, [r5, #0x40]
	lsls r1, r1, #4
	lsrs r1, r1, #0x10
	ldr r2, [r5, #0x44]
	lsls r2, r2, #4
	lsrs r2, r2, #0x10
	adds r0, r6, #0
	bl sub_080023E4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r4
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	beq _0811FC22
	ldr r1, [r5, #0x40]
	asrs r1, r1, #0xc
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r5, #0x44]
	asrs r2, r2, #0xc
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r0, r6, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r6, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	ldr r1, [r5, #0x40]
	asrs r1, r1, #0xc
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r5, #0x44]
	asrs r2, r2, #0xc
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r0, r6, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r6, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	ldr r0, [r5, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	ldr r1, _0811FC34 @ =0xFFFFF7FF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r5, #8]
	adds r0, r5, #0
	bl sub_0811FA90
	ldr r0, _0811FC38 @ =sub_0811FC4C
	str r0, [r5, #0x78]
	ldr r0, [r5, #0x6c]
	ldr r4, [r0, #0x44]
	ldr r0, [r5, #0x44]
	subs r4, r4, r0
	asrs r4, r4, #8
	adds r0, r5, #0
	movs r1, #0
	adds r2, r4, #0
	movs r3, #0
	bl sub_08089864
	adds r0, r5, #0
	movs r1, #0
	adds r2, r4, #0
	movs r3, #1
	bl sub_08089864
_0811FC22:
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0811FC30: .4byte gUnk_082D88B8
_0811FC34: .4byte 0xFFFFF7FF
_0811FC38: .4byte sub_0811FC4C

	thumb_func_start sub_0811FC3C
sub_0811FC3C: @ 0x0811FC3C
	movs r1, #0
	strh r1, [r0, #4]
	ldr r1, _0811FC48 @ =sub_0811FB54
	str r1, [r0, #0x78]
	bx lr
	.align 2, 0
_0811FC48: .4byte sub_0811FB54

	thumb_func_start sub_0811FC4C
sub_0811FC4C: @ 0x0811FC4C
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, [r4, #0x44]
	asrs r2, r2, #8
	ldr r3, _0811FC84 @ =gCurLevelInfo
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r3
	adds r0, #0xbe
	ldrh r0, [r0]
	adds r0, #8
	cmp r2, r0
	blt _0811FC76
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
_0811FC76:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811FC84: .4byte gCurLevelInfo

	thumb_func_start sub_0811FC88
sub_0811FC88: @ 0x0811FC88
	push {r4, r5, r6, r7, lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811FCA2
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0811FCAA
_0811FCA2:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0811FCAA:
	adds r1, r0, #0
	adds r1, #0x56
	ldrb r6, [r1]
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r5, [r0, #2]
	ldrb r7, [r0, #3]
	ldr r1, _0811FCE8 @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r6, r0
	adds r0, r0, r1
	ldr r1, _0811FCEC @ =0x0000065E
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r2, #0
	bl ObjectDestroy
	cmp r5, #0
	bne _0811FCD6
	cmp r6, #0xff
	beq _0811FCE2
_0811FCD6:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	movs r3, #1
	bl sub_08001678
_0811FCE2:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0811FCE8: .4byte gCurLevelInfo
_0811FCEC: .4byte 0x0000065E

	thumb_func_start CreateLeftFacingFlame
CreateLeftFacingFlame: @ 0x0811FCF0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _0811FD24 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _0811FD28 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xc0
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0811FD2C
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0811FD34
	.align 2, 0
_0811FD24: .4byte ObjectMain
_0811FD28: .4byte ObjectDestroy
_0811FD2C:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0811FD34:
	adds r4, r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r3, [r4, #8]
	ldr r0, _0811FD80 @ =0x00018940
	orrs r3, r0
	str r3, [r4, #8]
	ldr r2, [r4, #0x68]
	movs r0, #8
	rsbs r0, r0, #0
	ands r2, r0
	movs r0, #3
	orrs r2, r0
	ldr r0, [r4, #0x5c]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r4, #0xc]
	movs r5, #1
	orrs r0, r5
	str r0, [r4, #0xc]
	movs r0, #0x80
	lsls r0, r0, #1
	orrs r2, r0
	str r2, [r4, #0x68]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _0811FD84
	orrs r3, r5
	str r3, [r4, #8]
	b _0811FDB0
	.align 2, 0
_0811FD80: .4byte 0x00018940
_0811FD84:
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0811FD96
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #7
	strb r0, [r1]
	b _0811FDB0
_0811FD96:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0811FDB0
	adds r1, r4, #0
	adds r1, #0x83
	movs r0, #7
	strb r0, [r1]
	ldr r0, [r4, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r4, #0x18]
_0811FDB0:
	adds r0, r4, #0
	bl ObjectInitSprite
	movs r2, #4
	rsbs r2, r2, #0
	movs r0, #4
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r2, #0
	movs r3, #4
	bl sub_0803E2B0
	ldr r2, _0811FDEC @ =gUnk_08351648
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0811FDEC: .4byte gUnk_08351648

	thumb_func_start sub_0811FDF0
sub_0811FDF0: @ 0x0811FDF0
	push {r4, lr}
	adds r3, r0, #0
	adds r4, r3, #0
	adds r0, #0xb4
	movs r2, #0
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #6
	strb r2, [r0]
	movs r0, #0xbf
	adds r0, r0, r3
	mov ip, r0
	strb r2, [r0]
	adds r0, r3, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r2, #1
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _0811FE2C
	ldr r0, [r3, #8]
	orrs r0, r2
	str r0, [r3, #8]
	b _0811FE54
_0811FE2C:
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0811FE3C
	movs r0, #6
	mov r1, ip
	strb r0, [r1]
	b _0811FE54
_0811FE3C:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0811FE54
	movs r0, #6
	mov r1, ip
	strb r0, [r1]
	ldr r0, [r3, #0x18]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r3, #0x18]
_0811FE54:
	ldr r0, [r3, #0x40]
	asrs r0, r0, #0xc
	adds r1, r4, #0
	adds r1, #0xba
	strh r0, [r1]
	ldr r0, [r3, #0x44]
	asrs r0, r0, #0xc
	strh r0, [r1]
	ldr r0, _0811FE70 @ =sub_0811FE74
	str r0, [r3, #0x78]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0811FE70: .4byte sub_0811FE74

	thumb_func_start sub_0811FE74
sub_0811FE74: @ 0x0811FE74
	push {r4, r5, r6, lr}
	mov ip, r0
	mov r6, ip
	mov r5, ip
	adds r5, #0xb6
	adds r0, #0xb0
	ldr r1, [r0]
	ldrh r0, [r5]
	ldrh r2, [r1, #0x12]
	cmp r0, r2
	bhi _0811FE8C
	b _0812002A
_0811FE8C:
	mov r2, ip
	adds r2, #0xb4
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0
	bge _0811FEAE
	mov r3, ip
	adds r3, #0xb8
	ldrh r0, [r3]
	ldrh r1, [r1, #0x16]
	cmp r0, r1
	bls _0811FED8
	movs r0, #0
	movs r1, #0
	strh r1, [r2]
	adds r2, #0xa
	b _0811FED0
_0811FEAE:
	movs r3, #0
	ldrsh r0, [r2, r3]
	ldrh r4, [r1, #0x14]
	cmp r0, r4
	blt _0811FEE4
	mov r3, ip
	adds r3, #0xb8
	ldrh r0, [r3]
	ldrh r1, [r1, #0x18]
	cmp r0, r1
	bls _0811FED8
	subs r0, r4, #1
	movs r1, #0
	strh r0, [r2]
	mov r2, ip
	adds r2, #0xbe
	movs r0, #1
_0811FED0:
	strb r0, [r2]
	ldr r0, _0811FEE0 @ =0x00000FFF
	strh r0, [r5]
	strh r1, [r3]
_0811FED8:
	ldrh r0, [r3]
	adds r0, #1
	strh r0, [r3]
	b _0812002A
	.align 2, 0
_0811FEE0: .4byte 0x00000FFF
_0811FEE4:
	mov r0, ip
	adds r0, #0xbe
	ldrb r0, [r0]
	cmp r0, #0
	beq _0811FF4A
	mov r1, ip
	adds r1, #0x56
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _0811FF14
	ldr r2, _0811FF0C @ =gCurLevelInfo
	adds r1, r0, #0
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r2
	ldr r1, _0811FF10 @ =0x0000065E
	adds r0, r0, r1
	ldrb r0, [r0]
	b _0811FF16
	.align 2, 0
_0811FF0C: .4byte gCurLevelInfo
_0811FF10: .4byte 0x0000065E
_0811FF14:
	movs r0, #0xff
_0811FF16:
	cmp r0, #0xff
	beq _0811FF40
	lsls r3, r0, #3
	ldr r1, _0811FF74 @ =gUnk_02022F40
	adds r1, r0, r1
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0811FF78 @ =gUnk_02022EC0
	lsls r1, r0, #2
	adds r1, r1, r2
	mov r3, ip
	str r3, [r1]
	adds r0, #1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
_0811FF40:
	adds r0, r6, #0
	adds r0, #0xbe
	ldrb r0, [r0]
	cmp r0, #0
	bne _0811FFBC
_0811FF4A:
	adds r1, r6, #0
	adds r1, #0xb4
	ldrh r0, [r1]
	adds r0, #1
	adds r2, r0, #0
	strh r0, [r1]
	adds r3, r2, #0
	mov r1, ip
	adds r1, #0x83
	strb r2, [r1]
	mov r0, ip
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #0x22]
	cmp r0, #4
	beq _0811FF98
	cmp r0, #4
	ble _0811FF7C
	cmp r0, #8
	beq _0811FFAE
	b _08120022
	.align 2, 0
_0811FF74: .4byte gUnk_02022F40
_0811FF78: .4byte gUnk_02022EC0
_0811FF7C:
	cmp r0, #2
	bgt _08120022
	cmp r0, #1
	blt _08120022
	mov r0, ip
	adds r0, #0x38
	ldrb r1, [r0]
	subs r1, #0xe
	strb r1, [r0]
	mov r1, ip
	adds r1, #0x3a
	ldrb r0, [r1]
	adds r0, #7
	b _08120020
_0811FF98:
	adds r0, r3, #6
	strb r0, [r1]
	mov r1, ip
	adds r1, #0x39
	ldrb r0, [r1]
	subs r0, #0xe
	strb r0, [r1]
	adds r1, #2
	ldrb r0, [r1]
	adds r0, #7
	b _08120020
_0811FFAE:
	adds r0, r3, #6
	strb r0, [r1]
	mov r1, ip
	adds r1, #0x3b
	ldrb r0, [r1]
	adds r0, #7
	b _08120020
_0811FFBC:
	adds r1, r6, #0
	adds r1, #0xb4
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	adds r1, r0, #0
	adds r0, r1, #2
	mov r2, ip
	adds r2, #0x83
	strb r0, [r2]
	mov r0, ip
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #0x22]
	cmp r0, #4
	beq _0811FFFE
	cmp r0, #4
	ble _0811FFE6
	cmp r0, #8
	beq _08120012
	b _08120022
_0811FFE6:
	cmp r0, #2
	bgt _08120022
	cmp r0, #1
	blt _08120022
	mov r0, ip
	adds r0, #0x38
	ldrb r1, [r0]
	adds r1, #0xe
	strb r1, [r0]
	mov r1, ip
	adds r1, #0x3a
	b _0812001C
_0811FFFE:
	adds r0, r1, #0
	adds r0, #8
	strb r0, [r2]
	mov r1, ip
	adds r1, #0x39
	ldrb r0, [r1]
	adds r0, #0xe
	strb r0, [r1]
	adds r1, #2
	b _0812001C
_08120012:
	adds r0, r1, #0
	adds r0, #8
	strb r0, [r2]
	mov r1, ip
	adds r1, #0x3b
_0812001C:
	ldrb r0, [r1]
	subs r0, #7
_08120020:
	strb r0, [r1]
_08120022:
	adds r1, r6, #0
	adds r1, #0xb6
	movs r0, #0
	strh r0, [r1]
_0812002A:
	adds r1, r6, #0
	adds r1, #0xb6
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #4
	orrs r0, r1
	mov r2, ip
	str r0, [r2, #8]
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_0812004C
sub_0812004C: @ 0x0812004C
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _08120080 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08120084 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xe4
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08120088
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08120090
	.align 2, 0
_08120080: .4byte ObjectMain
_08120084: .4byte ObjectDestroy
_08120088:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08120090:
	adds r7, r0, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r7, #8]
	ldr r1, _081200E4 @ =0x82C08000
	orrs r0, r1
	str r0, [r7, #8]
	ldr r1, [r7, #0x68]
	movs r2, #8
	rsbs r2, r2, #0
	ands r1, r2
	ldr r0, [r7, #0x5c]
	ands r0, r2
	movs r2, #4
	orrs r0, r2
	str r0, [r7, #0x5c]
	movs r0, #0x80
	lsls r0, r0, #4
	orrs r1, r0
	str r1, [r7, #0x68]
	ldr r0, [r7, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r7, #0xc]
	adds r0, r7, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #0x22]
	ands r1, r0
	cmp r1, #0
	beq _081200E8
	adds r1, r7, #0
	adds r1, #0xe1
	movs r0, #5
	strb r0, [r1]
	subs r1, #0x5e
	movs r0, #1
	strb r0, [r1]
	b _081200F2
	.align 2, 0
_081200E4: .4byte 0x82C08000
_081200E8:
	adds r0, r7, #0
	adds r0, #0xe1
	strb r2, [r0]
	subs r0, #0x5e
	strb r1, [r0]
_081200F2:
	movs r5, #0xf
	rsbs r5, r5, #0
	movs r6, #0x10
	rsbs r6, r6, #0
	movs r4, #0x10
	str r4, [sp]
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r6, #0
	movs r3, #0xf
	bl sub_0803E308
	str r4, [sp]
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r6, #0
	movs r3, #0xf
	bl sub_0803E2B0
	adds r0, r7, #0
	bl ObjectInitSprite
	ldr r2, _08120144 @ =gUnk_08351648
	adds r0, r7, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r7, #0
	bl _call_via_r1
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08120144: .4byte gUnk_08351648

	thumb_func_start sub_08120148
sub_08120148: @ 0x08120148
	adds r2, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r2, #4]
	adds r0, r2, #0
	adds r0, #0xe2
	strb r1, [r0]
	adds r1, r2, #0
	adds r1, #0xe3
	movs r0, #1
	strb r0, [r1]
	ldr r0, _08120164 @ =sub_08120168
	str r0, [r2, #0x78]
	bx lr
	.align 2, 0
_08120164: .4byte sub_08120168

	thumb_func_start sub_08120168
sub_08120168: @ 0x08120168
	push {r4, lr}
	adds r4, r0, #0
	bl sub_0811EC80
	ldr r2, [r4, #0x44]
	asrs r2, r2, #8
	ldr r3, _081201A4 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r3
	adds r0, #0xbe
	ldrh r0, [r0]
	subs r0, #0x10
	cmp r2, r0
	blt _08120198
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
_08120198:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_081201A4: .4byte gCurLevelInfo

	thumb_func_start CreateLargeStarStoneBlock
CreateLargeStarStoneBlock: @ 0x081201A8
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _081201DC @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _081201E0 @ =sub_08120608
	str r1, [sp]
	movs r1, #0xec
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081201E4
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081201EC
	.align 2, 0
_081201DC: .4byte ObjectMain
_081201E0: .4byte sub_08120608
_081201E4:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081201EC:
	adds r6, r0, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r6, #8]
	ldr r1, _08120240 @ =0x82408040
	orrs r0, r1
	str r0, [r6, #8]
	ldr r1, [r6, #0x68]
	movs r2, #8
	rsbs r2, r2, #0
	ands r1, r2
	ldr r0, [r6, #0x5c]
	ands r0, r2
	movs r2, #4
	orrs r0, r2
	str r0, [r6, #0x5c]
	movs r0, #0x80
	lsls r0, r0, #4
	orrs r1, r0
	str r1, [r6, #0x68]
	ldr r0, [r6, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r6, #0xc]
	adds r0, r6, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #0x22]
	ands r1, r0
	cmp r1, #0
	beq _08120244
	adds r1, r6, #0
	adds r1, #0xe1
	movs r0, #5
	strb r0, [r1]
	subs r1, #0x5e
	movs r0, #1
	strb r0, [r1]
	b _0812024E
	.align 2, 0
_08120240: .4byte 0x82408040
_08120244:
	adds r0, r6, #0
	adds r0, #0xe1
	strb r2, [r0]
	subs r0, #0x5e
	strb r1, [r0]
_0812024E:
	movs r4, #0x10
	rsbs r4, r4, #0
	movs r5, #0x10
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #0x10
	bl sub_0803E308
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #0x10
	bl sub_0803E2B0
	adds r0, r6, #0
	bl ObjectInitSprite
	ldr r2, _0812029C @ =gUnk_08351648
	adds r0, r6, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r6, #0
	bl _call_via_r1
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0812029C: .4byte gUnk_08351648

	thumb_func_start sub_081202A0
sub_081202A0: @ 0x081202A0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	bl sub_0811EC80
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	movs r1, #6
	ldrsh r0, [r0, r1]
	lsls r3, r0, #8
	adds r0, r4, #0
	adds r0, #0xe8
	ldr r2, [r4, #0x40]
	asrs r1, r2, #0xc
	ldr r0, [r0]
	cmp r0, r1
	bge _081202C6
	b _081203F4
_081202C6:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _081202E4
	movs r5, #0x80
	lsls r5, r5, #2
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _081202F4
	b _081202F0
_081202E4:
	ldr r3, _081203E4 @ =0xFFFFFE00
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _081202F4
_081202F0:
	movs r0, #0
	strh r0, [r1]
_081202F4:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	ldr r3, _081203E8 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0xac
	ldr r0, [r0]
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r5, _081203EC @ =0x0000065E
	adds r0, r0, r5
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	movs r1, #0
	str r1, [r0]
	adds r5, r4, #0
	adds r5, #0x56
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	subs r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_081205CC
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	subs r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_081205CC
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_081205CC
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_081205CC
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	adds r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_081205CC
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	adds r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_081205CC
	adds r1, r6, #0
	adds r1, #0xe8
	ldr r0, [r4, #0x44]
	asrs r0, r0, #0xc
	adds r0, #5
	str r0, [r1]
	ldr r0, [r4, #0x44]
	asrs r0, r0, #0xc
	adds r0, #2
	subs r1, #1
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, _081203F0 @ =sub_08120438
	str r0, [r4, #0x78]
	b _08120428
	.align 2, 0
_081203E4: .4byte 0xFFFFFE00
_081203E8: .4byte gCurLevelInfo
_081203EC: .4byte 0x0000065E
_081203F0: .4byte sub_08120438
_081203F4:
	cmp r3, r2
	bge _08120428
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _08120416
	movs r5, #0x80
	lsls r5, r5, #2
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08120426
	b _08120422
_08120416:
	ldr r5, _08120434 @ =0xFFFFFE00
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08120426
_08120422:
	movs r0, #0
	strh r0, [r1]
_08120426:
	str r3, [r4, #0x40]
_08120428:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08120434: .4byte 0xFFFFFE00

	thumb_func_start sub_08120438
sub_08120438: @ 0x08120438
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r7, r0, #0
	mov sl, r7
	adds r0, #0xe8
	ldr r1, [r7, #0x44]
	asrs r1, r1, #0xc
	ldr r0, [r0]
	cmp r0, r1
	blt _081204CC
	movs r0, #0xe7
	adds r0, r0, r7
	mov r8, r0
	ldrb r6, [r0]
	cmp r6, r1
	bne _081204CC
	movs r1, #0x56
	adds r1, r1, r7
	mov sb, r1
	ldrb r5, [r1]
	ldr r4, [r7, #0x40]
	asrs r4, r4, #0xc
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_080023E4
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	mov r0, sb
	ldrb r6, [r0]
	ldr r5, [r7, #0x40]
	asrs r5, r5, #0xc
	adds r5, #1
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r4, [r7, #0x44]
	asrs r4, r4, #0xc
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_080023E4
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r6, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	mov r1, r8
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_081204CC:
	mov r1, sl
	adds r1, #0xe4
	ldrb r2, [r1]
	movs r0, #1
	ands r0, r2
	adds r3, r1, #0
	cmp r0, #0
	beq _081204E2
	movs r0, #4
	orrs r0, r2
	b _081204E6
_081204E2:
	movs r0, #0xfb
	ands r0, r2
_081204E6:
	strb r0, [r3]
	ldr r0, [r7, #0x44]
	asrs r0, r0, #8
	cmp r0, #0x50
	ble _08120506
	ldr r0, [r7, #0x18]
	ldr r1, _08120520 @ =0xFFFFCFFF
	ands r0, r1
	movs r1, #0xc0
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r7, #0x18]
	ldrb r1, [r3]
	movs r0, #1
	orrs r0, r1
	strb r0, [r3]
_08120506:
	ldrb r1, [r3]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _08120524
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08120524
	movs r0, #2
	orrs r0, r1
	b _0812052A
	.align 2, 0
_08120520: .4byte 0xFFFFCFFF
_08120524:
	ldrb r1, [r3]
	movs r0, #0xfd
	ands r0, r1
_0812052A:
	strb r0, [r3]
	ldrb r1, [r3]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08120552
	movs r4, #0x10
	rsbs r4, r4, #0
	adds r0, r7, #0
	adds r1, r4, #0
	movs r2, #5
	movs r3, #0
	bl sub_08089864
	adds r0, r7, #0
	adds r1, r4, #0
	movs r2, #5
	movs r3, #1
	bl sub_08089864
_08120552:
	ldr r2, [r7, #0x44]
	asrs r2, r2, #8
	ldr r3, _08120590 @ =gCurLevelInfo
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r3
	adds r0, #0xbe
	ldrh r0, [r0]
	adds r0, #0x10
	cmp r2, r0
	blt _0812057A
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r7, #8]
_0812057A:
	ldrh r0, [r7, #4]
	adds r0, #1
	strh r0, [r7, #4]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08120590: .4byte gCurLevelInfo

	thumb_func_start sub_08120594
sub_08120594: @ 0x08120594
	adds r3, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r3, #4]
	adds r0, r3, #0
	adds r0, #0xe2
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #3
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r2, r3, #0
	adds r2, #0xe8
	ldr r0, [r3, #0x40]
	asrs r0, r0, #0xc
	subs r0, #3
	str r0, [r2]
	adds r0, r3, #0
	adds r0, #0xe4
	strb r1, [r0]
	ldr r0, _081205C8 @ =sub_081202A0
	str r0, [r3, #0x78]
	bx lr
	.align 2, 0
_081205C8: .4byte sub_081202A0

	thumb_func_start sub_081205CC
sub_081205CC: @ 0x081205CC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_080023E4
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08120608
sub_08120608: @ 0x08120608
	push {r4, r5, r6, r7, lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08120622
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _0812062A
_08120622:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_0812062A:
	adds r1, r0, #0
	adds r1, #0x56
	ldrb r6, [r1]
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r5, [r0, #2]
	ldrb r7, [r0, #3]
	ldr r1, _08120668 @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r6, r0
	adds r0, r0, r1
	ldr r1, _0812066C @ =0x0000065E
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r2, #0
	bl ObjectDestroy
	cmp r5, #0
	bne _08120656
	cmp r6, #0xff
	beq _08120662
_08120656:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	movs r3, #1
	bl sub_08001678
_08120662:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08120668: .4byte gCurLevelInfo
_0812066C: .4byte 0x0000065E

	thumb_func_start sub_08120670
sub_08120670: @ 0x08120670
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r4, r0, #0
	ldr r7, _08120780 @ =gCurLevelInfo
	adds r0, #0x56
	ldrb r0, [r0]
	movs r5, #0xcd
	lsls r5, r5, #3
	muls r0, r5, r0
	adds r0, r0, r7
	movs r1, #0xbf
	lsls r1, r1, #3
	adds r0, r0, r1
	ldrh r0, [r0]
	mov sb, r0
	adds r0, r4, #0
	bl sub_08039490
	adds r6, r0, #0
	mov r3, sp
	ldr r0, [r4, #0x40]
	adds r1, r4, #0
	adds r1, #0xb0
	ldr r2, [r1]
	asrs r0, r0, #8
	ldrh r1, [r2, #0x1a]
	adds r0, r0, r1
	strh r0, [r3]
	mov r1, sp
	ldr r0, [r4, #0x44]
	asrs r0, r0, #8
	ldrh r3, [r2, #0x1c]
	adds r0, r0, r3
	strh r0, [r1, #2]
	mov r3, sp
	ldrh r0, [r2, #0x1e]
	ldrh r1, [r1]
	adds r0, r0, r1
	strh r0, [r3, #4]
	mov r0, sp
	ldrh r0, [r0, #2]
	ldrh r1, [r2, #0x20]
	adds r0, r0, r1
	strh r0, [r3, #6]
	ldr r0, [r6]
	cmp r0, #0
	beq _0812076C
	mov r8, r7
	adds r7, r5, #0
	mov r5, sp
_081206DA:
	ldr r1, [r6]
	adds r0, r1, #0
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r7, r0
	add r0, r8
	movs r2, #0xbf
	lsls r2, r2, #3
	adds r0, r0, r2
	ldrh r0, [r0]
	cmp sb, r0
	bne _08120764
	adds r0, r1, #0
	adds r0, #0x82
	ldrb r0, [r0]
	cmp r0, #0x79
	beq _08120700
	cmp r0, #0x7d
	bne _08120764
_08120700:
	ldr r0, [r1, #0x40]
	lsls r0, r0, #8
	ldr r1, [r1, #0x44]
	lsls r1, r1, #8
	lsrs r3, r1, #0x10
	movs r2, #0
	ldrsh r1, [r5, r2]
	asrs r2, r0, #0x10
	cmp r1, r2
	bgt _08120764
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, r2
	blt _08120764
	ldrh r0, [r5, #2]
	lsls r0, r0, #0x10
	lsls r1, r3, #0x10
	asrs r2, r1, #0x10
	cmp r0, r1
	bgt _08120764
	movs r3, #6
	ldrsh r0, [r5, r3]
	cmp r0, r2
	blt _08120764
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	muls r0, r7, r0
	add r0, r8
	ldr r1, _08120784 @ =0x0000065E
	adds r0, r0, r1
	ldrb r2, [r0]
	movs r0, #0
	movs r1, #0xf
	bl sub_08002888
	adds r2, r0, #0
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #0x11]
	ldr r0, [r2]
	cmp r0, r1
	bhs _0812075A
	str r1, [r2]
_0812075A:
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
_08120764:
	adds r6, #4
	ldr r0, [r6]
	cmp r0, #0
	bne _081206DA
_0812076C:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08120780: .4byte gCurLevelInfo
_08120784: .4byte 0x0000065E

	thumb_func_start sub_08120788
sub_08120788: @ 0x08120788
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r4, r0, #0
	mov r3, sp
	ldr r0, [r4, #0x40]
	adds r1, r4, #0
	adds r1, #0xb0
	ldr r2, [r1]
	asrs r0, r0, #8
	ldrh r1, [r2, #0x1a]
	adds r0, r0, r1
	strh r0, [r3]
	mov r1, sp
	ldr r0, [r4, #0x44]
	asrs r0, r0, #8
	ldrh r3, [r2, #0x1c]
	adds r0, r0, r3
	strh r0, [r1, #2]
	mov r3, sp
	ldrh r0, [r2, #0x1e]
	ldrh r1, [r1]
	adds r0, r0, r1
	strh r0, [r3, #4]
	mov r0, sp
	ldrh r0, [r0, #2]
	ldrh r1, [r2, #0x20]
	adds r0, r0, r1
	strh r0, [r3, #6]
	ldr r2, _081208E0 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	movs r1, #0xcd
	lsls r1, r1, #3
	muls r0, r1, r0
	adds r0, r0, r2
	movs r3, #0xbf
	lsls r3, r3, #3
	adds r0, r0, r3
	ldrh r0, [r0]
	str r0, [sp, #8]
	movs r5, #0
	ldr r0, _081208E4 @ =gUnk_0203AD44
	mov sl, r0
	ldrb r0, [r0]
	cmp r5, r0
	bhs _081208C8
	mov sb, r2
	mov r8, r1
	mov r6, sp
_081207F4:
	mov r0, r8
	muls r0, r5, r0
	add r0, sb
	movs r1, #0xbf
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r2, [sp, #8]
	ldrh r0, [r0]
	cmp r2, r0
	bne _081208BA
	adds r7, r4, #0
	adds r7, #0xb0
	ldr r0, [r7]
	ldrh r1, [r0, #0x22]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08120820
	ldr r0, _081208E8 @ =gUnk_0203AD30
	ldrb r0, [r0]
	cmp r5, r0
	blo _081208BA
_08120820:
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _08120830
	ldr r0, _081208E8 @ =gUnk_0203AD30
	ldrb r0, [r0]
	cmp r5, r0
	bhs _081208BA
_08120830:
	movs r3, #0
	ldrsh r2, [r6, r3]
	ldr r0, _081208EC @ =gUnk_02020EE0
	mov ip, r0
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r3, r5, #0
	muls r3, r0, r3
	mov r0, ip
	adds r0, #0x40
	adds r0, r3, r0
	ldr r0, [r0]
	asrs r1, r0, #8
	cmp r2, r1
	bgt _081208BA
	movs r2, #4
	ldrsh r0, [r6, r2]
	cmp r0, r1
	blt _081208BA
	movs r0, #2
	ldrsh r2, [r6, r0]
	mov r0, ip
	adds r0, #0x44
	adds r0, r3, r0
	ldr r0, [r0]
	asrs r1, r0, #8
	cmp r2, r1
	bgt _081208BA
	movs r2, #6
	ldrsh r0, [r6, r2]
	cmp r0, r1
	blt _081208BA
	mov r0, ip
	adds r0, #0xc
	adds r0, r3, r0
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _081208BA
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r0, [r0]
	mov r3, r8
	muls r3, r0, r3
	adds r0, r3, #0
	add r0, sb
	ldr r1, _081208F0 @ =0x0000065E
	adds r0, r0, r1
	ldrb r2, [r0]
	movs r0, #0
	movs r1, #0xf
	bl sub_08002888
	adds r2, r0, #0
	ldr r0, [r7]
	ldrb r1, [r0, #0x11]
	ldr r0, [r2]
	cmp r0, r1
	bhs _081208AC
	str r1, [r2]
_081208AC:
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #8]
	ldr r2, _081208E4 @ =gUnk_0203AD44
	mov sl, r2
_081208BA:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	mov r3, sl
	ldrb r3, [r3]
	cmp r5, r3
	blo _081207F4
_081208C8:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081208E0: .4byte gCurLevelInfo
_081208E4: .4byte gUnk_0203AD44
_081208E8: .4byte gUnk_0203AD30
_081208EC: .4byte gUnk_02020EE0
_081208F0: .4byte 0x0000065E

	thumb_func_start sub_081208F4
sub_081208F4: @ 0x081208F4
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _08120928 @ =ObjectMain
	ldr r2, _0812092C @ =0x00001001
	ldr r1, _08120930 @ =sub_081209D8
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08120934
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _0812093C
	.align 2, 0
_08120928: .4byte ObjectMain
_0812092C: .4byte 0x00001001
_08120930: .4byte sub_081209D8
_08120934:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_0812093C:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	ldr r1, _08120984 @ =gUnk_02018F40
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x5c]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r2, _08120988 @ =gUnk_08351648
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08120984: .4byte gUnk_02018F40
_08120988: .4byte gUnk_08351648

	thumb_func_start sub_0812098C
sub_0812098C: @ 0x0812098C
	push {lr}
	adds r3, r0, #0
	movs r0, #0
	strh r0, [r3, #4]
	ldr r1, [r3, #0x40]
	ldr r2, _081209C4 @ =0xFFFFF800
	adds r1, r1, r2
	str r1, [r3, #0x40]
	ldr r0, [r3, #0x44]
	adds r0, r0, r2
	str r0, [r3, #0x44]
	str r1, [r3, #0x48]
	str r0, [r3, #0x4c]
	adds r0, r3, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _081209CC
	movs r0, #6
	ands r0, r1
	cmp r0, #0
	beq _081209CC
	ldr r0, _081209C8 @ =sub_08120788
	b _081209CE
	.align 2, 0
_081209C4: .4byte 0xFFFFF800
_081209C8: .4byte sub_08120788
_081209CC:
	ldr r0, _081209D4 @ =sub_08120670
_081209CE:
	str r0, [r3, #0x78]
	pop {r0}
	bx r0
	.align 2, 0
_081209D4: .4byte sub_08120670

	thumb_func_start sub_081209D8
sub_081209D8: @ 0x081209D8
	push {r4, r5, r6, r7, lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081209F2
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081209FA
_081209F2:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081209FA:
	adds r1, r0, #0
	adds r1, #0x56
	ldrb r6, [r1]
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r5, [r0, #2]
	ldrb r7, [r0, #3]
	ldr r1, _08120A38 @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r6, r0
	adds r0, r0, r1
	ldr r1, _08120A3C @ =0x0000065E
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r2, #0
	bl ObjectDestroy
	cmp r5, #0
	bne _08120A26
	cmp r6, #0xff
	beq _08120A32
_08120A26:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	movs r3, #1
	bl sub_08001678
_08120A32:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08120A38: .4byte gCurLevelInfo
_08120A3C: .4byte 0x0000065E

	thumb_func_start sub_08120A40
sub_08120A40: @ 0x08120A40
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	mov sb, r0
	mov r1, sb
	adds r0, r1, #0
	str r0, [sp]
	movs r2, #0
	strh r2, [r1, #4]
	ldr r1, _08120B84 @ =gUnk_08357D20
	mov r3, sb
	adds r3, #0xb0
	ldr r0, [r3]
	ldrh r0, [r0, #0x14]
	adds r0, r0, r1
	ldrb r0, [r0]
	mov r4, sb
	adds r4, #0xb4
	strh r0, [r4]
	ldr r0, [r3]
	ldrh r0, [r0, #0x14]
	mov r1, sb
	adds r1, #0xb6
	strh r0, [r1]
	mov r0, sb
	adds r0, #0xb8
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	ldrh r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	bl sub_08159088
	adds r1, r0, #0
	mov r0, sb
	adds r0, #0x8c
	str r1, [r0]
	subs r0, #0x36
	ldrb r0, [r0]
	str r0, [sp, #4]
	mov r2, sb
	ldr r0, [r2, #0x40]
	lsls r0, r0, #4
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	ldr r0, [r2, #0x44]
	lsls r0, r0, #4
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x10]
	mov sl, r0
	ldrh r4, [r4]
	cmp r0, r4
	bhs _08120B6E
	ldr r2, [sp, #8]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #0x14]
	adds r7, r1, #0
	adds r0, r7, #0
	adds r0, #8
	str r0, [sp, #0x1c]
	ldr r1, [sp, #0xc]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #0x18]
_08120AD0:
	ldr r0, [sp]
	adds r0, #0xb6
	ldrh r0, [r0]
	lsls r1, r0, #3
	adds r1, r1, r0
	lsls r1, r1, #1
	mov r2, sl
	adds r0, r2, r1
	ldr r2, _08120B88 @ =gUnk_08357D30
	adds r0, r0, r2
	movs r5, #0
	ldrsb r5, [r0, r5]
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	movs r0, #1
	add sl, r0
	add r1, sl
	adds r1, r1, r2
	movs r4, #0
	ldrsb r4, [r1, r4]
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	add sl, r0
	ldr r1, [sp, #8]
	adds r1, r1, r5
	mov r8, r1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [sp, #0xc]
	adds r6, r2, r4
	lsls r2, r6, #0x18
	lsrs r2, r2, #0x18
	ldr r0, [sp, #4]
	bl sub_080025AC
	str r0, [r7, #0x14]
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	ldr r0, [sp, #0x14]
	adds r5, r0, r5
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	ldr r1, [sp, #0x18]
	adds r4, r1, r4
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r0, [sp, #4]
	adds r1, r5, #0
	adds r2, r4, #0
	ldr r3, [sp, #0x1c]
	bl sub_080015A8
	ldr r0, [sp, #4]
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_080023E4
	strb r0, [r7, #0x10]
	movs r0, #1
	strb r0, [r7]
	mov r2, r8
	strb r2, [r7, #2]
	strb r6, [r7, #3]
	movs r0, #0x14
	strh r0, [r7, #4]
	adds r7, #0x18
	ldr r0, [sp, #0x1c]
	adds r0, #0x18
	str r0, [sp, #0x1c]
	ldr r1, [sp, #0x10]
	adds r1, #1
	str r1, [sp, #0x10]
	ldr r0, [sp]
	adds r0, #0xb4
	ldrh r0, [r0]
	cmp r1, r0
	blo _08120AD0
_08120B6E:
	ldr r0, _08120B8C @ =sub_08120B90
	mov r2, sb
	str r0, [r2, #0x78]
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08120B84: .4byte gUnk_08357D20
_08120B88: .4byte gUnk_08357D30
_08120B8C: .4byte sub_08120B90

	thumb_func_start sub_08120B90
sub_08120B90: @ 0x08120B90
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	adds r6, r7, #0
	adds r0, #0x8c
	ldr r0, [r0]
	str r0, [sp]
	adds r5, r7, #0
	adds r5, #0x56
	ldrb r0, [r5]
	mov r8, r0
	adds r4, r7, #0
	adds r4, #0xb0
	ldr r0, [r4]
	ldrb r1, [r0, #4]
	ldr r2, _08120C2C @ =gCurLevelInfo
	mov sl, r2
	movs r3, #0xcd
	lsls r3, r3, #3
	mov sb, r3
	mov r0, r8
	muls r0, r3, r0
	add r0, sl
	ldr r2, _08120C30 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	ldr r0, [r0]
	cmp r0, #0
	beq _08120C14
	ldr r0, [r4]
	ldrb r1, [r0, #4]
	ldrb r0, [r5]
	mov r3, sb
	muls r3, r0, r3
	adds r0, r3, #0
	add r0, sl
	ldr r2, _08120C30 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	movs r1, #0
	str r1, [r0]
	ldr r0, [r4]
	ldrh r0, [r0, #0x12]
	adds r1, r7, #0
	adds r1, #0xba
	strh r0, [r1]
	adds r2, r7, #0
	adds r2, #0xb8
	ldrh r1, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08120C14
	movs r0, #0x10
	orrs r0, r1
	strh r0, [r2]
_08120C14:
	adds r2, r6, #0
	adds r2, #0xba
	ldrh r1, [r2]
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0
	ble _08120C34
	subs r0, r1, #1
	strh r0, [r2]
	adds r4, r6, #0
	adds r4, #0xb8
	b _08120C4E
	.align 2, 0
_08120C2C: .4byte gCurLevelInfo
_08120C30: .4byte 0x0000065E
_08120C34:
	adds r1, r6, #0
	adds r1, #0xb8
	ldrh r3, [r1]
	movs r0, #1
	ands r0, r3
	adds r4, r1, #0
	cmp r0, #0
	beq _08120C4A
	movs r0, #0x10
	orrs r0, r3
	strh r0, [r4]
_08120C4A:
	movs r0, #0
	strh r0, [r2]
_08120C4E:
	adds r2, r4, #0
	ldrh r3, [r2]
	movs r0, #0x10
	ands r0, r3
	cmp r0, #0
	beq _08120CCE
	ldr r1, _08120C98 @ =0x0000FFEF
	ands r1, r3
	strh r1, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08120CA0
	ldr r0, _08120C9C @ =0x0000FFFE
	ands r0, r1
	strh r0, [r2]
	movs r5, #0
	adds r0, r6, #0
	adds r0, #0xb4
	adds r6, r0, #0
	ldrh r0, [r6]
	cmp r5, r0
	bhs _08120CCE
	ldr r4, [sp]
_08120C7E:
	mov r0, r8
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	adds r4, #0x18
	adds r5, #1
	ldrh r2, [r6]
	cmp r5, r2
	blo _08120C7E
	b _08120CCE
	.align 2, 0
_08120C98: .4byte 0x0000FFEF
_08120C9C: .4byte 0x0000FFFE
_08120CA0:
	adds r0, r1, #0
	movs r1, #1
	orrs r0, r1
	strh r0, [r4]
	movs r5, #0
	adds r0, r6, #0
	adds r0, #0xb4
	adds r6, r0, #0
	ldrh r3, [r6]
	cmp r5, r3
	bhs _08120CCE
	ldr r4, [sp]
_08120CB8:
	ldr r1, [r4, #0x14]
	mov r0, r8
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	adds r4, #0x18
	adds r5, #1
	ldrh r0, [r6]
	cmp r5, r0
	blo _08120CB8
_08120CCE:
	ldrh r0, [r7, #4]
	adds r0, #1
	strh r0, [r7, #4]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08120CE4
sub_08120CE4: @ 0x08120CE4
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _08120D18 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08120D1C @ =sub_08120D78
	str r1, [sp]
	movs r1, #0xbc
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08120D20
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _08120D28
	.align 2, 0
_08120D18: .4byte ObjectMain
_08120D1C: .4byte sub_08120D78
_08120D20:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_08120D28:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	ldr r1, _08120D70 @ =gUnk_02018F40
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x5c]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r2, _08120D74 @ =gUnk_08351648
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08120D70: .4byte gUnk_02018F40
_08120D74: .4byte gUnk_08351648

	thumb_func_start sub_08120D78
sub_08120D78: @ 0x08120D78
	push {r4, r5, r6, r7, lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08120D92
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08120D9A
_08120D92:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08120D9A:
	adds r1, r0, #0
	adds r1, #0x56
	ldrb r6, [r1]
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r5, [r0, #2]
	ldrb r7, [r0, #3]
	ldr r1, _08120DD8 @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r6, r0
	adds r0, r0, r1
	ldr r1, _08120DDC @ =0x0000065E
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r2, #0
	bl ObjectDestroy
	cmp r5, #0
	bne _08120DC6
	cmp r6, #0xff
	beq _08120DD2
_08120DC6:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	movs r3, #1
	bl sub_08001678
_08120DD2:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08120DD8: .4byte gCurLevelInfo
_08120DDC: .4byte 0x0000065E

	thumb_func_start sub_08120DE0
sub_08120DE0: @ 0x08120DE0
	push {r4, lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0xba
	ldrh r3, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bgt _08120E10
	adds r0, r2, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #0x1a]
	strh r0, [r1]
	subs r1, #2
	ldrh r0, [r1]
	cmp r0, #0
	beq _08120E08
	movs r0, #0
	b _08120E0A
_08120E08:
	movs r0, #1
_08120E0A:
	strh r0, [r1]
	movs r0, #1
	b _08120E16
_08120E10:
	subs r0, r3, #1
	strh r0, [r1]
	movs r0, #0
_08120E16:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_08120E1C
sub_08120E1C: @ 0x08120E1C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	bl sub_08120DE0
	cmp r0, #0
	beq _08120E5C
	adds r1, r4, #0
	adds r1, #0xb6
	ldrh r2, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r3, #0
	movs r4, #0
	orrs r2, r0
	strh r2, [r1]
	movs r0, #1
	ands r0, r2
	adds r3, r1, #0
	cmp r0, #0
	beq _08120E50
	ldr r0, _08120E4C @ =0x0000FFFD
	ands r2, r0
	b _08120E54
	.align 2, 0
_08120E4C: .4byte 0x0000FFFD
_08120E50:
	movs r0, #2
	orrs r2, r0
_08120E54:
	strh r2, [r3]
	ldrh r1, [r3]
	movs r0, #1
	b _08120EAC
_08120E5C:
	adds r0, r4, #0
	adds r0, #0xb6
	ldrh r1, [r0]
	ldr r5, _08120E98 @ =0x0000FEFF
	ands r5, r1
	movs r6, #0
	strh r5, [r0]
	adds r1, r4, #0
	adds r1, #0xb4
	movs r3, #0
	ldrsh r2, [r1, r3]
	adds r3, r0, #0
	adds r4, r1, #0
	cmp r2, #0
	bge _08120EB2
	ldr r1, _08120E9C @ =0x0000FFFE
	ands r1, r5
	ldr r0, _08120EA0 @ =0x0000FFDF
	ands r1, r0
	adds r0, #0x10
	ands r1, r0
	strh r1, [r3]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08120EA8
	ldr r0, _08120EA4 @ =0x0000FFFB
	ands r0, r1
	strh r0, [r3]
	b _08120EDA
	.align 2, 0
_08120E98: .4byte 0x0000FEFF
_08120E9C: .4byte 0x0000FFFE
_08120EA0: .4byte 0x0000FFDF
_08120EA4: .4byte 0x0000FFFB
_08120EA8:
	adds r0, r1, #0
	movs r1, #4
_08120EAC:
	orrs r0, r1
	strh r0, [r3]
	b _08120EDA
_08120EB2:
	movs r0, #0x10
	ands r0, r5
	cmp r0, #0
	beq _08120EC4
	ldr r0, _08120EC0 @ =0x0000FFDF
	ands r0, r5
	b _08120ECA
	.align 2, 0
_08120EC0: .4byte 0x0000FFDF
_08120EC4:
	movs r1, #0x20
	adds r0, r5, #0
	orrs r0, r1
_08120ECA:
	strh r0, [r3]
	ldrh r0, [r3]
	movs r1, #0x10
	orrs r1, r0
	strh r1, [r3]
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
_08120EDA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_08120EE0
sub_08120EE0: @ 0x08120EE0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0xb0
	ldr r0, [r4]
	ldrb r1, [r0, #4]
	ldr r3, _08120F38 @ =gCurLevelInfo
	adds r0, r5, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _08120F3C @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	adds r3, r0, #0
	adds r0, r5, #0
	adds r0, #0xb6
	ldrh r0, [r0]
	movs r6, #1
	ands r6, r0
	cmp r6, #0
	beq _08120F5A
	adds r0, r5, #0
	adds r0, #0xb8
	ldrh r1, [r0]
	cmp r1, #0
	beq _08120F40
	ldr r0, [r4]
	ldrh r0, [r0, #0x14]
	lsrs r0, r0, #8
	movs r1, #0
	strb r0, [r3]
	ldr r0, [r4]
	ldrh r0, [r0, #0x14]
	strb r0, [r3, #1]
	ldr r0, [r4]
	ldrh r0, [r0, #0x12]
	b _08120F52
	.align 2, 0
_08120F38: .4byte gCurLevelInfo
_08120F3C: .4byte 0x0000065E
_08120F40:
	ldr r0, [r4]
	ldrh r0, [r0, #0x18]
	lsrs r0, r0, #8
	strb r0, [r3]
	ldr r0, [r4]
	ldrh r0, [r0, #0x18]
	strb r0, [r3, #1]
	ldr r0, [r4]
	ldrh r0, [r0, #0x16]
_08120F52:
	lsrs r0, r0, #8
	strb r0, [r3, #2]
	strb r1, [r3, #3]
	b _08120F8A
_08120F5A:
	ldr r1, [r4]
	ldrh r0, [r1, #0x14]
	lsrs r2, r0, #8
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldrh r0, [r1, #0x12]
	lsrs r1, r0, #8
	ldrb r0, [r3]
	cmp r0, r2
	bne _08120F8A
	ldrb r0, [r3, #1]
	cmp r0, r4
	bne _08120F8A
	ldrb r0, [r3, #2]
	movs r2, #1
	cmp r0, r1
	beq _08120F7E
	movs r2, #0
_08120F7E:
	cmp r2, #0
	beq _08120F8A
	strb r6, [r3]
	strb r6, [r3, #1]
	strb r6, [r3, #2]
	strb r6, [r3, #3]
_08120F8A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_08120F90
sub_08120F90: @ 0x08120F90
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r0, _08120FC4 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08120FC8 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xbc
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08120FCC
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r4, r0, r1
	b _08120FD4
	.align 2, 0
_08120FC4: .4byte ObjectMain
_08120FC8: .4byte ObjectDestroy
_08120FCC:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
_08120FD4:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl InitObject
	ldr r0, [r4, #8]
	ldr r1, _08121024 @ =gUnk_02008300
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, [r4, #0x68]
	movs r1, #8
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x68]
	ldr r0, [r4, #0x5c]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #0x5c]
	ldr r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0xc]
	ldr r2, _08121028 @ =gUnk_08351648
	adds r0, r4, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08121024: .4byte gUnk_02008300
_08121028: .4byte gUnk_08351648

	thumb_func_start sub_0812102C
sub_0812102C: @ 0x0812102C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _08121074 @ =sub_08121080
	str r0, [r4, #0x78]
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	ldr r3, _08121078 @ =gCurLevelInfo
	adds r0, r4, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _0812107C @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	movs r1, #0
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xb4
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08121074: .4byte sub_08121080
_08121078: .4byte gCurLevelInfo
_0812107C: .4byte 0x0000065E

	thumb_func_start sub_08121080
sub_08121080: @ 0x08121080
	push {r4, lr}
	adds r4, r0, #0
	bl sub_08120E1C
	adds r0, r4, #0
	bl sub_08120EE0
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0812109C
sub_0812109C: @ 0x0812109C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _081210D0 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _081210D4 @ =sub_081214F4
	str r1, [sp]
	movs r1, #0xec
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081210D8
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081210E0
	.align 2, 0
_081210D0: .4byte ObjectMain
_081210D4: .4byte sub_081214F4
_081210D8:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081210E0:
	adds r6, r0, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r6, #8]
	ldr r1, _08121134 @ =0x82408040
	orrs r0, r1
	str r0, [r6, #8]
	ldr r1, [r6, #0x68]
	movs r2, #8
	rsbs r2, r2, #0
	ands r1, r2
	ldr r0, [r6, #0x5c]
	ands r0, r2
	movs r2, #4
	orrs r0, r2
	str r0, [r6, #0x5c]
	movs r0, #0x80
	lsls r0, r0, #4
	orrs r1, r0
	str r1, [r6, #0x68]
	ldr r0, [r6, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r6, #0xc]
	adds r0, r6, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #0x22]
	ands r1, r0
	cmp r1, #0
	beq _08121138
	adds r1, r6, #0
	adds r1, #0xe1
	movs r0, #5
	strb r0, [r1]
	subs r1, #0x5e
	movs r0, #1
	strb r0, [r1]
	b _08121142
	.align 2, 0
_08121134: .4byte 0x82408040
_08121138:
	adds r0, r6, #0
	adds r0, #0xe1
	strb r2, [r0]
	subs r0, #0x5e
	strb r1, [r0]
_08121142:
	movs r4, #0x10
	rsbs r4, r4, #0
	movs r5, #0x10
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #0x10
	bl sub_0803E308
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #0x10
	bl sub_0803E2B0
	adds r0, r6, #0
	bl ObjectInitSprite
	ldr r2, _08121190 @ =gUnk_08351648
	adds r0, r6, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r6, #0
	bl _call_via_r1
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08121190: .4byte gUnk_08351648

	thumb_func_start sub_08121194
sub_08121194: @ 0x08121194
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	bl sub_0811EC80
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	movs r1, #6
	ldrsh r0, [r0, r1]
	lsls r3, r0, #8
	adds r0, r4, #0
	adds r0, #0xe8
	ldr r2, [r4, #0x40]
	asrs r1, r2, #0xc
	ldr r0, [r0]
	cmp r0, r1
	ble _081211BA
	b _081212E0
_081211BA:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _081211D8
	movs r5, #0x80
	lsls r5, r5, #2
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _081211E8
	b _081211E4
_081211D8:
	ldr r3, _081212D0 @ =0xFFFFFE00
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _081211E8
_081211E4:
	movs r0, #0
	strh r0, [r1]
_081211E8:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	ldr r3, _081212D4 @ =gCurLevelInfo
	adds r5, r4, #0
	adds r5, #0x56
	ldrb r2, [r5]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _081212D8 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	movs r1, #0
	str r1, [r0]
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	subs r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_081214B8
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	subs r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_081214B8
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_081214B8
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_081214B8
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	adds r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_081214B8
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	adds r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_081214B8
	adds r1, r6, #0
	adds r1, #0xe8
	ldr r0, [r4, #0x44]
	asrs r0, r0, #0xc
	adds r0, #7
	str r0, [r1]
	ldr r0, [r4, #0x44]
	asrs r0, r0, #0xc
	adds r0, #2
	subs r1, #1
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, _081212DC @ =sub_08121324
	str r0, [r4, #0x78]
	b _08121314
	.align 2, 0
_081212D0: .4byte 0xFFFFFE00
_081212D4: .4byte gCurLevelInfo
_081212D8: .4byte 0x0000065E
_081212DC: .4byte sub_08121324
_081212E0:
	cmp r3, r2
	ble _08121314
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _08121302
	movs r5, #0x80
	lsls r5, r5, #2
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08121312
	b _0812130E
_08121302:
	ldr r5, _08121320 @ =0xFFFFFE00
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08121312
_0812130E:
	movs r0, #0
	strh r0, [r1]
_08121312:
	str r3, [r4, #0x40]
_08121314:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08121320: .4byte 0xFFFFFE00

	thumb_func_start sub_08121324
sub_08121324: @ 0x08121324
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r7, r0, #0
	mov sl, r7
	adds r0, #0xe8
	ldr r1, [r7, #0x44]
	asrs r1, r1, #0xc
	ldr r0, [r0]
	cmp r0, r1
	blt _081213B8
	movs r0, #0xe7
	adds r0, r0, r7
	mov r8, r0
	ldrb r6, [r0]
	cmp r6, r1
	bne _081213B8
	movs r1, #0x56
	adds r1, r1, r7
	mov sb, r1
	ldrb r5, [r1]
	ldr r4, [r7, #0x40]
	asrs r4, r4, #0xc
	subs r4, #1
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_080023E4
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	mov r0, sb
	ldrb r6, [r0]
	ldr r5, [r7, #0x40]
	asrs r5, r5, #0xc
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r4, [r7, #0x44]
	asrs r4, r4, #0xc
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_080023E4
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r6, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	mov r1, r8
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_081213B8:
	mov r1, sl
	adds r1, #0xe4
	ldrb r2, [r1]
	movs r0, #1
	ands r0, r2
	adds r3, r1, #0
	cmp r0, #0
	beq _081213CE
	movs r0, #4
	orrs r0, r2
	b _081213D2
_081213CE:
	movs r0, #0xfb
	ands r0, r2
_081213D2:
	strb r0, [r3]
	ldr r0, [r7, #0x44]
	asrs r0, r0, #8
	cmp r0, #0x70
	ble _081213F2
	ldr r0, [r7, #0x18]
	ldr r1, _0812140C @ =0xFFFFCFFF
	ands r0, r1
	movs r1, #0xc0
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r7, #0x18]
	ldrb r1, [r3]
	movs r0, #1
	orrs r0, r1
	strb r0, [r3]
_081213F2:
	ldrb r1, [r3]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _08121410
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08121410
	movs r0, #2
	orrs r0, r1
	b _08121416
	.align 2, 0
_0812140C: .4byte 0xFFFFCFFF
_08121410:
	ldrb r1, [r3]
	movs r0, #0xfd
	ands r0, r1
_08121416:
	strb r0, [r3]
	ldrb r1, [r3]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0812143E
	movs r4, #0x10
	rsbs r4, r4, #0
	adds r0, r7, #0
	adds r1, r4, #0
	movs r2, #5
	movs r3, #0
	bl sub_08089864
	adds r0, r7, #0
	adds r1, r4, #0
	movs r2, #5
	movs r3, #1
	bl sub_08089864
_0812143E:
	ldr r2, [r7, #0x44]
	asrs r2, r2, #8
	ldr r3, _0812147C @ =gCurLevelInfo
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r3
	adds r0, #0xbe
	ldrh r0, [r0]
	adds r0, #0x10
	cmp r2, r0
	blt _08121466
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r7, #8]
_08121466:
	ldrh r0, [r7, #4]
	adds r0, #1
	strh r0, [r7, #4]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0812147C: .4byte gCurLevelInfo

	thumb_func_start sub_08121480
sub_08121480: @ 0x08121480
	adds r3, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r3, #4]
	adds r0, r3, #0
	adds r0, #0xe2
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #3
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r2, r3, #0
	adds r2, #0xe8
	ldr r0, [r3, #0x40]
	asrs r0, r0, #0xc
	adds r0, #2
	str r0, [r2]
	adds r0, r3, #0
	adds r0, #0xe4
	strb r1, [r0]
	ldr r0, _081214B4 @ =sub_08121194
	str r0, [r3, #0x78]
	bx lr
	.align 2, 0
_081214B4: .4byte sub_08121194

	thumb_func_start sub_081214B8
sub_081214B8: @ 0x081214B8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_080023E4
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_081214F4
sub_081214F4: @ 0x081214F4
	push {r4, r5, r6, r7, lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0812150E
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _08121516
_0812150E:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_08121516:
	adds r1, r0, #0
	adds r1, #0x56
	ldrb r6, [r1]
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r5, [r0, #2]
	ldrb r7, [r0, #3]
	ldr r1, _08121554 @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r6, r0
	adds r0, r0, r1
	ldr r1, _08121558 @ =0x0000065E
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r2, #0
	bl ObjectDestroy
	cmp r5, #0
	bne _08121542
	cmp r6, #0xff
	beq _0812154E
_08121542:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	movs r3, #1
	bl sub_08001678
_0812154E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08121554: .4byte gCurLevelInfo
_08121558: .4byte 0x0000065E

	thumb_func_start sub_0812155C
sub_0812155C: @ 0x0812155C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _08121590 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08121594 @ =sub_081219B4
	str r1, [sp]
	movs r1, #0xec
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08121598
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081215A0
	.align 2, 0
_08121590: .4byte ObjectMain
_08121594: .4byte sub_081219B4
_08121598:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081215A0:
	adds r6, r0, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r6, #8]
	ldr r1, _081215F4 @ =0x82408040
	orrs r0, r1
	str r0, [r6, #8]
	ldr r1, [r6, #0x68]
	movs r2, #8
	rsbs r2, r2, #0
	ands r1, r2
	ldr r0, [r6, #0x5c]
	ands r0, r2
	movs r2, #4
	orrs r0, r2
	str r0, [r6, #0x5c]
	movs r0, #0x80
	lsls r0, r0, #4
	orrs r1, r0
	str r1, [r6, #0x68]
	ldr r0, [r6, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r6, #0xc]
	adds r0, r6, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #0x22]
	ands r1, r0
	cmp r1, #0
	beq _081215F8
	adds r1, r6, #0
	adds r1, #0xe1
	movs r0, #5
	strb r0, [r1]
	subs r1, #0x5e
	movs r0, #1
	strb r0, [r1]
	b _08121602
	.align 2, 0
_081215F4: .4byte 0x82408040
_081215F8:
	adds r0, r6, #0
	adds r0, #0xe1
	strb r2, [r0]
	subs r0, #0x5e
	strb r1, [r0]
_08121602:
	movs r4, #0x10
	rsbs r4, r4, #0
	movs r5, #0x10
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #0x10
	bl sub_0803E308
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #0x10
	bl sub_0803E2B0
	adds r0, r6, #0
	bl ObjectInitSprite
	ldr r2, _08121650 @ =gUnk_08351648
	adds r0, r6, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r6, #0
	bl _call_via_r1
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08121650: .4byte gUnk_08351648

	thumb_func_start sub_08121654
sub_08121654: @ 0x08121654
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	bl sub_0811EC80
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	movs r1, #6
	ldrsh r0, [r0, r1]
	lsls r3, r0, #8
	adds r0, r4, #0
	adds r0, #0xe8
	ldr r2, [r4, #0x40]
	asrs r1, r2, #0xc
	ldr r0, [r0]
	cmp r0, r1
	bge _0812167A
	b _081217A0
_0812167A:
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _08121698
	movs r5, #0x80
	lsls r5, r5, #2
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _081216A8
	b _081216A4
_08121698:
	ldr r3, _08121790 @ =0xFFFFFE00
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _081216A8
_081216A4:
	movs r0, #0
	strh r0, [r1]
_081216A8:
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	ldr r3, _08121794 @ =gCurLevelInfo
	adds r5, r4, #0
	adds r5, #0x56
	ldrb r2, [r5]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _08121798 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	movs r1, #0
	str r1, [r0]
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	subs r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_08121978
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	subs r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_08121978
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_08121978
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_08121978
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	adds r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_08121978
	ldrb r0, [r5]
	ldr r1, [r4, #0x40]
	asrs r1, r1, #0xc
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [r4, #0x44]
	asrs r2, r2, #0xc
	adds r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	bl sub_08121978
	adds r1, r6, #0
	adds r1, #0xe8
	ldr r0, [r4, #0x44]
	asrs r0, r0, #0xc
	adds r0, #7
	str r0, [r1]
	ldr r0, [r4, #0x44]
	asrs r0, r0, #0xc
	adds r0, #2
	subs r1, #1
	strb r0, [r1]
	ldr r0, [r4, #8]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #8]
	ldr r0, _0812179C @ =sub_081217E4
	str r0, [r4, #0x78]
	b _081217D4
	.align 2, 0
_08121790: .4byte 0xFFFFFE00
_08121794: .4byte gCurLevelInfo
_08121798: .4byte 0x0000065E
_0812179C: .4byte sub_081217E4
_081217A0:
	cmp r3, r2
	bge _081217D4
	adds r1, r4, #0
	adds r1, #0x50
	ldrh r2, [r1]
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #0
	bge _081217C2
	movs r5, #0x80
	lsls r5, r5, #2
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _081217D2
	b _081217CE
_081217C2:
	ldr r5, _081217E0 @ =0xFFFFFE00
	adds r0, r2, r5
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _081217D2
_081217CE:
	movs r0, #0
	strh r0, [r1]
_081217D2:
	str r3, [r4, #0x40]
_081217D4:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_081217E0: .4byte 0xFFFFFE00

	thumb_func_start sub_081217E4
sub_081217E4: @ 0x081217E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r7, r0, #0
	mov sl, r7
	adds r0, #0xe8
	ldr r1, [r7, #0x44]
	asrs r1, r1, #0xc
	ldr r0, [r0]
	cmp r0, r1
	blt _08121878
	movs r0, #0xe7
	adds r0, r0, r7
	mov r8, r0
	ldrb r6, [r0]
	cmp r6, r1
	bne _08121878
	movs r1, #0x56
	adds r1, r1, r7
	mov sb, r1
	ldrb r5, [r1]
	ldr r4, [r7, #0x40]
	asrs r4, r4, #0xc
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_080023E4
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	mov r0, sb
	ldrb r6, [r0]
	ldr r5, [r7, #0x40]
	asrs r5, r5, #0xc
	adds r5, #1
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r4, [r7, #0x44]
	asrs r4, r4, #0xc
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_080023E4
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r6, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	mov r1, r8
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_08121878:
	mov r1, sl
	adds r1, #0xe4
	ldrb r2, [r1]
	movs r0, #1
	ands r0, r2
	adds r3, r1, #0
	cmp r0, #0
	beq _0812188E
	movs r0, #4
	orrs r0, r2
	b _08121892
_0812188E:
	movs r0, #0xfb
	ands r0, r2
_08121892:
	strb r0, [r3]
	ldr r0, [r7, #0x44]
	asrs r0, r0, #8
	cmp r0, #0x70
	ble _081218B2
	ldr r0, [r7, #0x18]
	ldr r1, _081218CC @ =0xFFFFCFFF
	ands r0, r1
	movs r1, #0xc0
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r7, #0x18]
	ldrb r1, [r3]
	movs r0, #1
	orrs r0, r1
	strb r0, [r3]
_081218B2:
	ldrb r1, [r3]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _081218D0
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _081218D0
	movs r0, #2
	orrs r0, r1
	b _081218D6
	.align 2, 0
_081218CC: .4byte 0xFFFFCFFF
_081218D0:
	ldrb r1, [r3]
	movs r0, #0xfd
	ands r0, r1
_081218D6:
	strb r0, [r3]
	ldrb r1, [r3]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _081218FE
	movs r4, #0x10
	rsbs r4, r4, #0
	adds r0, r7, #0
	adds r1, r4, #0
	movs r2, #5
	movs r3, #0
	bl sub_08089864
	adds r0, r7, #0
	adds r1, r4, #0
	movs r2, #5
	movs r3, #1
	bl sub_08089864
_081218FE:
	ldr r2, [r7, #0x44]
	asrs r2, r2, #8
	ldr r3, _0812193C @ =gCurLevelInfo
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r1, r0
	adds r0, r0, r3
	adds r0, #0xbe
	ldrh r0, [r0]
	adds r0, #0x10
	cmp r2, r0
	blt _08121926
	ldr r0, [r7, #8]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r7, #8]
_08121926:
	ldrh r0, [r7, #4]
	adds r0, #1
	strh r0, [r7, #4]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0812193C: .4byte gCurLevelInfo

	thumb_func_start sub_08121940
sub_08121940: @ 0x08121940
	adds r3, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r3, #4]
	adds r0, r3, #0
	adds r0, #0xe2
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #3
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r2, r3, #0
	adds r2, #0xe8
	ldr r0, [r3, #0x40]
	asrs r0, r0, #0xc
	subs r0, #3
	str r0, [r2]
	adds r0, r3, #0
	adds r0, #0xe4
	strb r1, [r0]
	ldr r0, _08121974 @ =sub_08121654
	str r0, [r3, #0x78]
	bx lr
	.align 2, 0
_08121974: .4byte sub_08121654

	thumb_func_start sub_08121978
sub_08121978: @ 0x08121978
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_080023E4
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_080025AC
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_08001408
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_081219B4
sub_081219B4: @ 0x081219B4
	push {r4, r5, r6, r7, lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _081219CE
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	b _081219D6
_081219CE:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
_081219D6:
	adds r1, r0, #0
	adds r1, #0x56
	ldrb r6, [r1]
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r5, [r0, #2]
	ldrb r7, [r0, #3]
	ldr r1, _08121A14 @ =gCurLevelInfo
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r6, r0
	adds r0, r0, r1
	ldr r1, _08121A18 @ =0x0000065E
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r2, #0
	bl ObjectDestroy
	cmp r5, #0
	bne _08121A02
	cmp r6, #0xff
	beq _08121A0E
_08121A02:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	movs r3, #1
	bl sub_08001678
_08121A0E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08121A14: .4byte gCurLevelInfo
_08121A18: .4byte 0x0000065E

	thumb_func_start CreateKirbyCannon
CreateKirbyCannon: @ 0x08121A1C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _08121A50 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08121A54 @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xc0
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08121A58
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r5, r0, r1
	b _08121A60
	.align 2, 0
_08121A50: .4byte ObjectMain
_08121A54: .4byte ObjectDestroy
_08121A58:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
_08121A60:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r5, #8]
	ldr r1, _08121AEC @ =0x02218140
	orrs r0, r1
	str r0, [r5, #8]
	ldr r0, [r5, #0x68]
	movs r4, #8
	rsbs r4, r4, #0
	ands r0, r4
	str r0, [r5, #0x68]
	ldr r0, [r5, #0x5c]
	orrs r0, r4
	movs r1, #0x81
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #0x5c]
	ldr r0, [r5, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #0xc]
	subs r1, #5
	movs r2, #0x20
	rsbs r2, r2, #0
	movs r0, #0x1c
	rsbs r0, r0, #0
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #4
	bl sub_0803E2B0
	movs r2, #0x10
	rsbs r2, r2, #0
	movs r0, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #8
	bl sub_0803E308
	ldr r0, [r5, #0x40]
	ldr r1, _08121AF0 @ =0xFFFFFD00
	adds r0, r0, r1
	str r0, [r5, #0x40]
	str r0, [r5, #0x48]
	adds r0, r5, #0
	bl ObjectInitSprite
	ldr r2, _08121AF4 @ =gUnk_08351648
	adds r0, r5, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r5, #0
	bl _call_via_r1
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08121AEC: .4byte 0x02218140
_08121AF0: .4byte 0xFFFFFD00
_08121AF4: .4byte gUnk_08351648

	thumb_func_start sub_08121AF8
sub_08121AF8: @ 0x08121AF8
	push {r4, lr}
	adds r2, r0, #0
	movs r4, #0
	movs r0, #0
	strh r0, [r2, #4]
	adds r0, r2, #0
	adds r0, #0xb4
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	movs r0, #0xb6
	adds r0, r0, r2
	mov ip, r0
	movs r0, #8
	mov r1, ip
	strb r0, [r1]
	adds r3, r2, #0
	adds r3, #0xb0
	ldr r0, [r3]
	ldrh r1, [r0, #0x22]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08121B2E
	movs r0, #0x20
	mov r1, ip
	strb r0, [r1]
_08121B2E:
	adds r1, r2, #0
	adds r1, #0xb7
	movs r0, #3
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0xb8
	strb r4, [r0]
	ldr r0, [r3]
	ldrh r0, [r0, #0x12]
	adds r1, #3
	strh r0, [r1]
	ldr r0, [r3]
	ldrh r0, [r0, #0x18]
	lsrs r0, r0, #8
	adds r1, #2
	strb r0, [r1]
	ldr r0, [r3]
	ldrh r0, [r0, #0x18]
	rsbs r0, r0, #0
	lsrs r0, r0, #0x1f
	adds r1, #1
	strb r0, [r1]
	ldr r0, [r2, #8]
	movs r1, #1
	orrs r0, r1
	str r0, [r2, #8]
	ldr r0, _08121B6C @ =sub_08121B70
	str r0, [r2, #0x78]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08121B6C: .4byte sub_08121B70

	thumb_func_start sub_08121B70
sub_08121B70: @ 0x08121B70
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	mov sb, r6
	adds r0, #0x60
	ldrh r0, [r0]
	mov sl, r0
	adds r0, r6, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #0x14]
	ldr r3, _08121BC0 @ =gCurLevelInfo
	adds r0, r6, #0
	adds r0, #0x56
	ldrb r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _08121BC4 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	adds r1, r0, #0
	ldr r0, [r1]
	cmp r0, #0
	beq _08121BC8
	adds r2, r6, #0
	adds r2, #0xb6
	ldrb r0, [r2]
	movs r1, #0xf7
	ands r1, r0
	movs r0, #0x20
	orrs r1, r0
	b _08121BD6
	.align 2, 0
_08121BC0: .4byte gCurLevelInfo
_08121BC4: .4byte 0x0000065E
_08121BC8:
	adds r2, r6, #0
	adds r2, #0xb6
	ldrb r0, [r2]
	movs r1, #8
	orrs r1, r0
	movs r0, #0xdf
	ands r1, r0
_08121BD6:
	strb r1, [r2]
	mov r1, sb
	adds r1, #0xb6
	ldrb r2, [r1]
	movs r0, #8
	ands r0, r2
	mov r8, r1
	cmp r0, #0
	bne _08121BEA
	b _08121E46
_08121BEA:
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #0xb
	ands r0, r1
	cmp r0, #0
	bne _08121BF8
	b _08121D74
_08121BF8:
	ldr r1, [r6, #0x6c]
	movs r7, #0
	movs r0, #1
	orrs r0, r2
	mov r2, r8
	strb r0, [r2]
	adds r1, #0x56
	ldr r0, _08121D68 @ =gUnk_0203AD30
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	blo _08121C12
	b _08121E46
_08121C12:
	cmp r0, #0
	beq _08121C58
	ldr r5, _08121D6C @ =gUnk_02020EE0
	adds r0, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	cmp r0, sl
	bne _08121C58
	mov r4, sb
	adds r4, #0xb8
	ldrb r1, [r4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08121C58
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_0803925C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08121C58
	ldr r0, [r5, #0x6c]
	cmp r0, r6
	bne _08121C58
	adds r0, r5, #0
	bl sub_080510EC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08121C58
	ldrb r0, [r4]
	movs r1, #1
	orrs r0, r1
	strb r0, [r4]
_08121C58:
	ldr r0, _08121D68 @ =gUnk_0203AD30
	ldrb r0, [r0]
	cmp r0, #1
	bls _08121CB0
	ldr r4, _08121D6C @ =gUnk_02020EE0
	movs r2, #0x82
	lsls r2, r2, #2
	adds r0, r4, r2
	ldrh r0, [r0]
	cmp r0, sl
	bne _08121CB0
	mov r5, sb
	adds r5, #0xb8
	ldrb r1, [r5]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08121CB0
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r7, r4, r0
	adds r0, r6, #0
	adds r1, r7, #0
	bl sub_0803925C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08121CB0
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, r6
	bne _08121CB0
	adds r0, r7, #0
	bl sub_080510EC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08121CB0
	ldrb r1, [r5]
	movs r0, #2
	orrs r0, r1
	strb r0, [r5]
_08121CB0:
	ldr r0, _08121D68 @ =gUnk_0203AD30
	ldrb r0, [r0]
	cmp r0, #2
	bls _08121D08
	ldr r4, _08121D6C @ =gUnk_02020EE0
	movs r2, #0xec
	lsls r2, r2, #2
	adds r0, r4, r2
	ldrh r0, [r0]
	cmp r0, sl
	bne _08121D08
	mov r5, sb
	adds r5, #0xb8
	ldrb r1, [r5]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _08121D08
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r7, r4, r0
	adds r0, r6, #0
	adds r1, r7, #0
	bl sub_0803925C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08121D08
	movs r1, #0xef
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, r6
	bne _08121D08
	adds r0, r7, #0
	bl sub_080510EC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08121D08
	ldrb r1, [r5]
	movs r0, #4
	orrs r0, r1
	strb r0, [r5]
_08121D08:
	ldr r0, _08121D68 @ =gUnk_0203AD30
	ldrb r0, [r0]
	cmp r0, #3
	bhi _08121D12
	b _08121E46
_08121D12:
	ldr r5, _08121D6C @ =gUnk_02020EE0
	movs r2, #0xab
	lsls r2, r2, #3
	adds r0, r5, r2
	ldrh r0, [r0]
	cmp r0, sl
	beq _08121D22
	b _08121E46
_08121D22:
	mov r4, sb
	adds r4, #0xb8
	ldrb r1, [r4]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08121D32
	b _08121E46
_08121D32:
	movs r0, #0x9f
	lsls r0, r0, #3
	adds r7, r5, r0
	adds r0, r6, #0
	adds r1, r7, #0
	bl sub_0803925C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08121D48
	b _08121E46
_08121D48:
	ldr r1, _08121D70 @ =0x00000564
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, r6
	bne _08121E46
	adds r0, r7, #0
	bl sub_080510EC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08121E46
	ldrb r1, [r4]
	movs r0, #8
	orrs r0, r1
	strb r0, [r4]
	b _08121E46
	.align 2, 0
_08121D68: .4byte gUnk_0203AD30
_08121D6C: .4byte gUnk_02020EE0
_08121D70: .4byte 0x00000564
_08121D74:
	movs r3, #1
	adds r0, r3, #0
	ands r0, r2
	cmp r0, #0
	beq _08121E46
	mov r2, sb
	adds r2, #0xb8
	ldrb r1, [r2]
	adds r0, r3, #0
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	beq _08121DAE
	ldr r2, _08121EFC @ =gUnk_02020EE0
	movs r1, #0x8d
	lsls r1, r1, #1
	adds r0, r2, r1
	ldrh r1, [r0]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _08121DAE
	adds r0, r2, #0
	bl sub_08051544
	ldrb r1, [r4]
	movs r0, #0xfe
	ands r0, r1
	strb r0, [r4]
_08121DAE:
	ldrb r1, [r4]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08121DDA
	ldr r2, _08121EFC @ =gUnk_02020EE0
	ldr r1, _08121F00 @ =0x000002C2
	adds r0, r2, r1
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08121DDA
	movs r1, #0xd4
	lsls r1, r1, #1
	adds r0, r2, r1
	bl sub_08051544
	ldrb r1, [r4]
	movs r0, #0xfd
	ands r0, r1
	strb r0, [r4]
_08121DDA:
	ldrb r1, [r4]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08121E06
	ldr r2, _08121EFC @ =gUnk_02020EE0
	ldr r1, _08121F04 @ =0x0000046A
	adds r0, r2, r1
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08121E06
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	bl sub_08051544
	ldrb r1, [r4]
	movs r0, #0xfb
	ands r0, r1
	strb r0, [r4]
_08121E06:
	ldrb r1, [r4]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08121E32
	ldr r2, _08121EFC @ =gUnk_02020EE0
	ldr r1, _08121F08 @ =0x00000612
	adds r0, r2, r1
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08121E32
	movs r1, #0x9f
	lsls r1, r1, #3
	adds r0, r2, r1
	bl sub_08051544
	ldrb r1, [r4]
	movs r0, #0xf7
	ands r0, r1
	strb r0, [r4]
_08121E32:
	ldrb r1, [r4]
	movs r0, #0xf
	ands r0, r1
	cmp r0, #0
	bne _08121E46
	mov r2, r8
	ldrb r1, [r2]
	movs r0, #0xfe
	ands r0, r1
	strb r0, [r2]
_08121E46:
	mov r0, sb
	adds r0, #0xb0
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	ldr r3, _08121F0C @ =gCurLevelInfo
	adds r4, r6, #0
	adds r4, #0x56
	ldrb r2, [r4]
	movs r0, #0xcd
	lsls r0, r0, #3
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r2, _08121F10 @ =0x0000065E
	adds r0, r0, r2
	ldrb r2, [r0]
	movs r0, #0
	bl sub_08002888
	adds r1, r0, #0
	ldr r0, [r1]
	cmp r0, #0
	beq _08121E82
	subs r0, #1
	str r0, [r1]
	mov r0, r8
	ldrb r1, [r0]
	movs r0, #2
	orrs r0, r1
	mov r1, r8
	strb r0, [r1]
_08121E82:
	mov r2, r8
	ldrb r1, [r2]
	movs r7, #2
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	bne _08121E92
	b _08121F9C
_08121E92:
	movs r0, #0xf7
	ands r0, r1
	strb r0, [r2]
	movs r5, #1
	ands r0, r5
	cmp r0, #0
	beq _08121F2A
	mov r4, sb
	adds r4, #0xb8
	ldrb r1, [r4]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _08121EB4
	ldr r0, _08121EFC @ =gUnk_02020EE0
	bl sub_0805BE64
_08121EB4:
	ldrb r1, [r4]
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	beq _08121EC4
	ldr r0, _08121F14 @ =gUnk_02021088
	bl sub_0805BE64
_08121EC4:
	ldrb r1, [r4]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08121ED4
	ldr r0, _08121F18 @ =gUnk_02021230
	bl sub_0805BE64
_08121ED4:
	ldrb r1, [r4]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08121EE4
	ldr r0, _08121F1C @ =gUnk_020213D8
	bl sub_0805BE64
_08121EE4:
	adds r0, r6, #0
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r1, [r0, #0x22]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _08121F20
	adds r0, r6, #0
	adds r0, #0x83
	strb r7, [r0]
	b _08121F98
	.align 2, 0
_08121EFC: .4byte gUnk_02020EE0
_08121F00: .4byte 0x000002C2
_08121F04: .4byte 0x0000046A
_08121F08: .4byte 0x00000612
_08121F0C: .4byte gCurLevelInfo
_08121F10: .4byte 0x0000065E
_08121F14: .4byte gUnk_02021088
_08121F18: .4byte gUnk_02021230
_08121F1C: .4byte gUnk_020213D8
_08121F20:
	adds r1, r6, #0
	adds r1, #0x83
	movs r0, #1
	strb r0, [r1]
	b _08121F98
_08121F2A:
	adds r0, r6, #0
	bl sub_08094EDC
	ldr r1, _08121FB0 @ =gUnk_02020EE0
	ldr r0, _08121FB4 @ =gUnk_0203AD3C
	ldrb r2, [r0]
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r2, r0
	adds r0, r0, r1
	adds r0, #0x60
	adds r1, r6, #0
	adds r1, #0x60
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bne _08121F98
	ldrb r0, [r6]
	cmp r0, #0
	bne _08121F58
	ldrb r0, [r4]
	cmp r0, r2
	bne _08121F98
_08121F58:
	ldr r1, _08121FB8 @ =gUnk_08D60FA4
	ldr r4, _08121FBC @ =gSongTable
	ldr r2, _08121FC0 @ =0x00001024
	adds r0, r4, r2
	ldrh r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r2, #4]
	cmp r0, #0
	blt _08121F7E
	movs r1, #0x81
	lsls r1, r1, #5
	adds r0, r4, r1
	ldr r1, [r0]
	ldrb r0, [r2, #9]
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _08121F98
_08121F7E:
	cmp r3, #0
	beq _08121F90
	ldr r0, _08121FC4 @ =gUnk_0203AD10
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08121F98
_08121F90:
	movs r0, #0x81
	lsls r0, r0, #2
	bl m4aSongNumStart
_08121F98:
	ldr r0, _08121FC8 @ =sub_08121FCC
	str r0, [r6, #0x78]
_08121F9C:
	ldrh r0, [r6, #4]
	adds r0, #1
	strh r0, [r6, #4]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08121FB0: .4byte gUnk_02020EE0
_08121FB4: .4byte gUnk_0203AD3C
_08121FB8: .4byte gUnk_08D60FA4
_08121FBC: .4byte gSongTable
_08121FC0: .4byte 0x00001024
_08121FC4: .4byte gUnk_0203AD10
_08121FC8: .4byte sub_08121FCC

	thumb_func_start sub_08121FCC
sub_08121FCC: @ 0x08121FCC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r6, r0, #0
	mov r8, r6
	ldr r0, [r6, #8]
	movs r1, #2
	mov sb, r1
	ands r0, r1
	cmp r0, #0
	bne _08121FEA
	b _08122122
_08121FEA:
	adds r0, r6, #0
	adds r0, #0x83
	movs r4, #0
	mov r2, sb
	strb r2, [r0]
	ldr r0, _08122134 @ =sub_08122248
	str r0, [r6, #0x78]
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r6, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	ldr r1, [r0, #0x38]
	ldr r2, _08122138 @ =0xFFFFE000
	adds r1, r1, r2
	str r1, [r0, #0x38]
	movs r0, #3
	adds r1, r6, #0
	bl sub_0806FE64
	adds r0, r6, #0
	adds r0, #0xb5
	strb r4, [r0]
	adds r7, r6, #0
	adds r7, #0xb8
	ldrb r1, [r7]
	movs r0, #1
	mov sl, r0
	ands r0, r1
	cmp r0, #0
	beq _08122062
	ldr r0, _0812213C @ =gUnk_02020EE0
	adds r1, r6, #0
	adds r1, #0xba
	ldrh r1, [r1]
	adds r2, r6, #0
	adds r2, #0xbc
	ldrb r2, [r2]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	adds r3, r6, #0
	adds r3, #0xbd
	ldrb r3, [r3]
	lsls r3, r3, #0x18
	asrs r3, r3, #0x18
	adds r4, r6, #0
	adds r4, #0xb0
	ldr r4, [r4]
	ldrh r5, [r4, #0x22]
	mov r4, sl
	ands r4, r5
	str r4, [sp]
	bl sub_080515D4
	ldrb r1, [r7]
	movs r0, #0xfe
	ands r0, r1
	strb r0, [r7]
_08122062:
	ldrb r1, [r7]
	mov r0, sb
	ands r0, r1
	cmp r0, #0
	beq _081220A2
	ldr r0, _08122140 @ =gUnk_02021088
	adds r1, r6, #0
	adds r1, #0xba
	ldrh r1, [r1]
	adds r2, r6, #0
	adds r2, #0xbc
	ldrb r2, [r2]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	adds r3, r6, #0
	adds r3, #0xbd
	ldrb r3, [r3]
	lsls r3, r3, #0x18
	asrs r3, r3, #0x18
	adds r4, r6, #0
	adds r4, #0xb0
	ldr r4, [r4]
	ldrh r5, [r4, #0x22]
	mov r4, sl
	ands r4, r5
	str r4, [sp]
	bl sub_080515D4
	ldrb r1, [r7]
	movs r0, #0xfd
	ands r0, r1
	strb r0, [r7]
_081220A2:
	ldrb r1, [r7]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _081220E2
	ldr r0, _08122144 @ =gUnk_02021230
	adds r1, r6, #0
	adds r1, #0xba
	ldrh r1, [r1]
	adds r2, r6, #0
	adds r2, #0xbc
	ldrb r2, [r2]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	adds r3, r6, #0
	adds r3, #0xbd
	ldrb r3, [r3]
	lsls r3, r3, #0x18
	asrs r3, r3, #0x18
	adds r4, r6, #0
	adds r4, #0xb0
	ldr r4, [r4]
	ldrh r5, [r4, #0x22]
	mov r4, sl
	ands r4, r5
	str r4, [sp]
	bl sub_080515D4
	ldrb r1, [r7]
	movs r0, #0xfb
	ands r0, r1
	strb r0, [r7]
_081220E2:
	ldrb r1, [r7]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08122122
	ldr r0, _08122148 @ =gUnk_020213D8
	mov r1, r8
	adds r1, #0xba
	ldrh r1, [r1]
	mov r2, r8
	adds r2, #0xbc
	ldrb r2, [r2]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	mov r3, r8
	adds r3, #0xbd
	ldrb r3, [r3]
	lsls r3, r3, #0x18
	asrs r3, r3, #0x18
	mov r4, r8
	adds r4, #0xb0
	ldr r4, [r4]
	ldrh r5, [r4, #0x22]
	mov r4, sl
	ands r4, r5
	str r4, [sp]
	bl sub_080515D4
	ldrb r1, [r7]
	movs r0, #0xf7
	ands r0, r1
	strb r0, [r7]
_08122122:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08122134: .4byte sub_08122248
_08122138: .4byte 0xFFFFE000
_0812213C: .4byte gUnk_02020EE0
_08122140: .4byte gUnk_02021088
_08122144: .4byte gUnk_02021230
_08122148: .4byte gUnk_020213D8

	thumb_func_start sub_0812214C
sub_0812214C: @ 0x0812214C
	push {r4, r5, lr}
	mov ip, r0
	mov r3, ip
	adds r3, #0xb5
	ldrb r0, [r3]
	cmp r0, #0xb
	bhi _08122238
	mov r1, ip
	adds r1, #0xb4
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r5, r1, #0
	cmp r0, #0xff
	bne _0812222E
	ldr r4, _08122198 @ =gUnk_08357E78
	ldrb r0, [r3]
	adds r0, r0, r4
	ldrb r0, [r0]
	lsls r2, r0, #8
	cmp r2, #0
	ble _0812219C
	subs r1, #0x62
	ldrh r0, [r1]
	adds r0, r0, r2
	strh r0, [r1]
	movs r0, #0
	ldrsh r2, [r1, r0]
	ldrb r0, [r3]
	adds r0, r0, r4
	ldrb r0, [r0]
	lsls r0, r0, #8
	adds r3, r1, #0
	cmp r2, r0
	ble _081221BC
	b _081221BA
	.align 2, 0
_08122198: .4byte gUnk_08357E78
_0812219C:
	mov r1, ip
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, r0, r2
	strh r0, [r1]
	movs r0, #0
	ldrsh r2, [r1, r0]
	ldrb r0, [r3]
	adds r0, r0, r4
	ldrb r0, [r0]
	lsls r0, r0, #8
	rsbs r0, r0, #0
	adds r3, r1, #0
	cmp r2, r0
	bge _081221BC
_081221BA:
	strh r0, [r3]
_081221BC:
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	bne _081221EC
	mov r4, ip
	ldr r1, [r4, #0x40]
	str r1, [r4, #0x48]
	ldr r2, [r4, #0x44]
	str r2, [r4, #0x4c]
	mov r0, ip
	adds r0, #0x50
	movs r4, #0
	ldrsh r0, [r0, r4]
	adds r1, r1, r0
	mov r0, ip
	str r1, [r0, #0x40]
	movs r1, #0
	ldrsh r0, [r3, r1]
	subs r2, r2, r0
	mov r4, ip
	str r2, [r4, #0x44]
_081221EC:
	adds r1, r3, #0
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _08122210
	ldr r3, _0812220C @ =0x00007FFF
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08122220
	movs r0, #0
	strh r0, [r1]
	b _08122220
	.align 2, 0
_0812220C: .4byte 0x00007FFF
_08122210:
	ldr r4, _08122234 @ =0xFFFF8001
	adds r0, r2, r4
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08122220
	movs r0, #0
	strh r0, [r3]
_08122220:
	movs r0, #0
	strb r0, [r5]
	mov r1, ip
	adds r1, #0xb5
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0812222E:
	movs r0, #1
	b _08122242
	.align 2, 0
_08122234: .4byte 0xFFFF8001
_08122238:
	mov r1, ip
	adds r1, #0xb4
	movs r0, #0
	strb r0, [r1]
	strb r0, [r3]
_08122242:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08122248
sub_08122248: @ 0x08122248
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0xb6
	ldrb r1, [r5]
	movs r0, #4
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0
	beq _08122280
	adds r0, r4, #0
	bl sub_0812214C
	cmp r0, #0
	bne _081222A0
	movs r0, #8
	strb r0, [r5]
	adds r1, r4, #0
	adds r1, #0xb7
	movs r0, #3
	strb r0, [r1]
	ldr r0, _0812227C @ =sub_08121B70
	str r0, [r4, #0x78]
	b _081222A0
	.align 2, 0
_0812227C: .4byte sub_08121B70
_08122280:
	adds r1, r4, #0
	adds r1, #0xb7
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _081222A0
	ldrb r0, [r5]
	movs r1, #4
	orrs r0, r1
	strb r0, [r5]
	adds r0, r4, #0
	adds r0, #0x83
	strb r2, [r0]
_081222A0:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_081222AC
sub_081222AC: @ 0x081222AC
	push {lr}
	adds r3, r0, #0
	lsls r1, r1, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #7
	bls _081222BA
	b _081223EA
_081222BA:
	lsls r0, r0, #2
	ldr r1, _081222C4 @ =_081222C8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_081222C4: .4byte _081222C8
_081222C8: @ jump table
	.4byte _081222E8 @ case 0
	.4byte _08122304 @ case 1
	.4byte _08122328 @ case 2
	.4byte _08122344 @ case 3
	.4byte _08122362 @ case 4
	.4byte _0812237E @ case 5
	.4byte _081223A4 @ case 6
	.4byte _081223C4 @ case 7
_081222E8:
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r3, #0
	movs r1, #0
	movs r3, #0
	bl sub_0808AE30
	adds r2, r0, #0
	ldr r0, [r2, #0x38]
	ldr r1, _08122300 @ =0xFFFFF000
	b _08122378
	.align 2, 0
_08122300: .4byte 0xFFFFF000
_08122304:
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r3, #0
	movs r1, #0
	movs r3, #1
	bl sub_0808AE30
	adds r2, r0, #0
	ldr r0, [r2, #0x34]
	movs r1, #0xc0
	lsls r1, r1, #4
	adds r0, r0, r1
	str r0, [r2, #0x34]
	ldr r0, [r2, #0x38]
	ldr r1, _08122324 @ =0xFFFFF400
	b _08122378
	.align 2, 0
_08122324: .4byte 0xFFFFF400
_08122328:
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r3, #0
	movs r1, #0
	movs r3, #2
	bl sub_0808AE30
	adds r2, r0, #0
	ldr r0, [r2, #0x34]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r0, r1
	str r0, [r2, #0x34]
	b _081223EA
_08122344:
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r3, #0
	movs r1, #0
	movs r3, #3
	bl sub_0808AE30
	adds r2, r0, #0
	ldr r0, [r2, #0x34]
	movs r1, #0xc0
	lsls r1, r1, #4
	adds r0, r0, r1
	str r0, [r2, #0x34]
	ldr r0, [r2, #0x38]
	b _08122378
_08122362:
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r3, #0
	movs r1, #0
	movs r3, #4
	bl sub_0808AE30
	adds r2, r0, #0
	ldr r0, [r2, #0x38]
	movs r1, #0x80
	lsls r1, r1, #5
_08122378:
	adds r0, r0, r1
	str r0, [r2, #0x38]
	b _081223EA
_0812237E:
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r3, #0
	movs r1, #0
	movs r3, #3
	bl sub_0808AE30
	adds r2, r0, #0
	ldr r0, [r2, #0x34]
	ldr r1, _081223A0 @ =0xFFFFF400
	adds r0, r0, r1
	str r0, [r2, #0x34]
	ldr r0, [r2, #0x38]
	movs r1, #0xc0
	lsls r1, r1, #4
	b _081223DE
	.align 2, 0
_081223A0: .4byte 0xFFFFF400
_081223A4:
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r3, #0
	movs r1, #0
	movs r3, #2
	bl sub_0808AE30
	adds r2, r0, #0
	ldr r0, [r2, #0x34]
	ldr r1, _081223C0 @ =0xFFFFF000
	adds r0, r0, r1
	str r0, [r2, #0x34]
	b _081223E2
	.align 2, 0
_081223C0: .4byte 0xFFFFF000
_081223C4:
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r3, #0
	movs r1, #0
	movs r3, #1
	bl sub_0808AE30
	adds r2, r0, #0
	ldr r0, [r2, #0x34]
	ldr r1, _081223F0 @ =0xFFFFF400
	adds r0, r0, r1
	str r0, [r2, #0x34]
	ldr r0, [r2, #0x38]
_081223DE:
	adds r0, r0, r1
	str r0, [r2, #0x38]
_081223E2:
	ldrh r1, [r2, #6]
	movs r0, #1
	orrs r0, r1
	strh r0, [r2, #6]
_081223EA:
	pop {r0}
	bx r0
	.align 2, 0
_081223F0: .4byte 0xFFFFF400

	thumb_func_start Create8DirCannon
Create8DirCannon: @ 0x081223F4
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r0, _08122428 @ =ObjectMain
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _0812242C @ =ObjectDestroy
	str r1, [sp]
	movs r1, #0xc0
	movs r3, #0
	bl TaskCreate
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08122430
	ldrh r0, [r2, #6]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r6, r0, r1
	b _08122438
	.align 2, 0
_08122428: .4byte ObjectMain
_0812242C: .4byte ObjectDestroy
_08122430:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
_08122438:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl InitObject
	ldr r0, [r6, #8]
	ldr r1, _081224B0 @ =0x00218940
	orrs r0, r1
	str r0, [r6, #8]
	ldr r0, [r6, #0x68]
	movs r4, #8
	rsbs r4, r4, #0
	ands r0, r4
	str r0, [r6, #0x68]
	ldr r0, [r6, #0x5c]
	orrs r0, r4
	movs r1, #0x81
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r6, #0x5c]
	ldr r0, [r6, #0xc]
	movs r1, #1
	orrs r0, r1
	str r0, [r6, #0xc]
	movs r5, #8
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #8
	bl sub_0803E2B0
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #8
	bl sub_0803E308
	adds r0, r6, #0
	bl ObjectInitSprite
	ldr r2, _081224B4 @ =gUnk_08351648
	adds r0, r6, #0
	adds r0, #0x82
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x10
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r6, #0
	bl _call_via_r1
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_081224B0: .4byte 0x00218940
_081224B4: .4byte gUnk_08351648

	thumb_func_start sub_081224B8
sub_081224B8: @ 0x081224B8
	mov ip, r0
	movs r3, #0
	movs r0, #0
	mov r1, ip
	strh r0, [r1, #4]
	mov r0, ip
	adds r0, #0xb0
	ldr r0, [r0]
	ldrh r0, [r0, #0x14]
	mov r2, ip
	adds r2, #0xb4
	strb r0, [r2]
	adds r1, #0xb5
	movs r0, #5
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xf
	strb r0, [r1]
	adds r1, #1
	movs r0, #8
	strb r0, [r1]
	adds r1, #1
	movs r0, #2
	strb r0, [r1]
	mov r0, ip
	adds r0, #0xb9
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	ldrb r0, [r2]
	subs r1, #0x35
	strb r0, [r1]
	ldr r0, _08122500 @ =sub_08122504
	mov r1, ip
	str r0, [r1, #0x78]
	bx lr
	.align 2, 0
_08122500: .4byte sub_08122504

	thumb_func_start sub_08122504
sub_08122504: @ 0x08122504
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r5, r0, #0
	adds r7, r5, #0
	adds r0, #0x60
	ldrh r0, [r0]
	mov sb, r0
	adds r3, r5, #0
	adds r3, #0xb7
	ldrb r2, [r3]
	movs r0, #8
	ands r0, r2
	cmp r0, #0
	bne _0812252A
	b _08122784
_0812252A:
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #0xb
	ands r0, r1
	cmp r0, #0
	bne _08122538
	b _08122784
_08122538:
	ldr r0, [r5, #0x6c]
	adds r0, #0x56
	ldr r1, _081227A0 @ =gUnk_0203AD30
	ldrb r0, [r0]
	ldrb r4, [r1]
	cmp r0, r4
	blo _08122548
	b _08122790
_08122548:
	movs r0, #1
	mov sl, r0
	movs r1, #0
	mov r8, r1
	mov r0, sl
	orrs r0, r2
	strb r0, [r3]
	mov r1, sp
	adds r0, r5, #0
	adds r0, #0x38
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #8
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x39
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #8
	strh r0, [r1, #2]
	adds r0, r5, #0
	adds r0, #0x3a
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #8
	strh r0, [r1, #4]
	adds r0, r5, #0
	adds r0, #0x3b
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #8
	strh r0, [r1, #6]
	ldr r6, _081227A4 @ =gUnk_02020EE0
	adds r0, r6, #0
	adds r0, #0x60
	ldrh r0, [r0]
	cmp r0, sb
	bne _081225FC
	cmp r4, #0
	beq _081225FC
	adds r4, r5, #0
	adds r4, #0xba
	ldrb r1, [r4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _081225FC
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_0803925C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _081225FC
	ldr r0, [r6, #0x6c]
	cmp r0, r5
	bne _081225FC
	adds r0, r6, #0
	bl sub_08051C40
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _081225FC
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r5, #0
	movs r1, #0
	movs r3, #7
	bl sub_0808AE30
	ldrb r0, [r4]
	mov r1, sl
	orrs r1, r0
	mov r0, r8
	orrs r1, r0
	strb r1, [r4]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _081225FC
	movs r0, #0x10
	orrs r1, r0
	strb r1, [r4]
	adds r0, r5, #0
	adds r0, #0xbc
	str r6, [r0]
_081225FC:
	ldr r4, _081227A4 @ =gUnk_02020EE0
	movs r1, #0x82
	lsls r1, r1, #2
	adds r0, r4, r1
	ldrh r0, [r0]
	adds r6, r7, #0
	adds r6, #0xba
	cmp r0, sb
	bne _0812267C
	ldr r0, _081227A0 @ =gUnk_0203AD30
	ldrb r0, [r0]
	cmp r0, #1
	bls _0812267C
	ldrb r1, [r6]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0812267C
	movs r0, #0xd4
	lsls r0, r0, #1
	adds r0, r0, r4
	mov r8, r0
	adds r0, r7, #0
	mov r1, r8
	bl sub_0803925C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0812267C
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, r7
	bne _0812267C
	mov r0, r8
	bl sub_08051C40
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0812267C
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r7, #0
	movs r1, #0
	movs r3, #7
	bl sub_0808AE30
	ldrb r1, [r6]
	movs r2, #0
	movs r0, #2
	orrs r1, r0
	strb r1, [r6]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _0812267C
	movs r0, #0x10
	orrs r1, r0
	strb r1, [r6]
	adds r0, r7, #0
	adds r0, #0xbc
	mov r1, r8
	str r1, [r0]
_0812267C:
	ldr r4, _081227A4 @ =gUnk_02020EE0
	movs r1, #0xec
	lsls r1, r1, #2
	adds r0, r4, r1
	ldrh r0, [r0]
	cmp r0, sb
	bne _081226F8
	ldr r0, _081227A0 @ =gUnk_0203AD30
	ldrb r0, [r0]
	cmp r0, #2
	bls _081226F8
	ldrb r1, [r6]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _081226F8
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r0, r0, r4
	mov r8, r0
	adds r0, r7, #0
	mov r1, r8
	bl sub_0803925C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _081226F8
	movs r1, #0xef
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, r7
	bne _081226F8
	mov r0, r8
	bl sub_08051C40
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _081226F8
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r7, #0
	movs r1, #0
	movs r3, #7
	bl sub_0808AE30
	ldrb r1, [r6]
	movs r2, #0
	movs r0, #4
	orrs r1, r0
	strb r1, [r6]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _081226F8
	movs r0, #0x10
	orrs r1, r0
	strb r1, [r6]
	adds r0, r7, #0
	adds r0, #0xbc
	mov r1, r8
	str r1, [r0]
_081226F8:
	ldr r4, _081227A4 @ =gUnk_02020EE0
	movs r1, #0xab
	lsls r1, r1, #3
	adds r0, r4, r1
	ldrh r0, [r0]
	cmp r0, sb
	bne _08122772
	ldr r0, _081227A0 @ =gUnk_0203AD30
	ldrb r0, [r0]
	cmp r0, #3
	bls _08122772
	ldrb r1, [r6]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _08122772
	movs r0, #0x9f
	lsls r0, r0, #3
	adds r0, r0, r4
	mov r8, r0
	adds r0, r7, #0
	mov r1, r8
	bl sub_0803925C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08122772
	ldr r1, _081227A8 @ =0x00000564
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, r7
	bne _08122772
	mov r0, r8
	bl sub_08051C40
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08122772
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r7, #0
	movs r1, #0
	movs r3, #7
	bl sub_0808AE30
	ldrb r1, [r6]
	movs r2, #0
	movs r0, #8
	orrs r1, r0
	strb r1, [r6]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _08122772
	movs r0, #0x10
	orrs r1, r0
	strb r1, [r6]
	adds r0, r7, #0
	adds r0, #0xbc
	mov r1, r8
	str r1, [r0]
_08122772:
	ldrb r0, [r6]
	cmp r0, #0
	bne _08122784
	adds r2, r7, #0
	adds r2, #0xb7
	ldrb r1, [r2]
	movs r0, #0xfe
	ands r0, r1
	strb r0, [r2]
_08122784:
	adds r0, r5, #0
	bl sub_081227AC
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
_08122790:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_081227A0: .4byte gUnk_0203AD30
_081227A4: .4byte gUnk_02020EE0
_081227A8: .4byte 0x00000564

	thumb_func_start sub_081227AC
sub_081227AC: @ 0x081227AC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	mov r8, r6
	adds r2, r6, #0
	adds r2, #0xb7
	ldrb r4, [r2]
	movs r3, #1
	adds r0, r3, #0
	ands r0, r4
	cmp r0, #0
	bne _081227C8
	b _08122906
_081227C8:
	adds r0, r6, #0
	adds r0, #0xb0
	ldr r0, [r0]
	mov ip, r0
	ldrh r1, [r0, #0x22]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	bne _08122858
	adds r0, r6, #0
	adds r0, #0xbc
	ldr r0, [r0]
	movs r1, #0x8d
	lsls r1, r1, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r3, #0
	ands r0, r1
	adds r7, r2, #0
	cmp r0, #0
	beq _081228C0
	movs r4, #0
	ldr r0, _081227FC @ =gUnk_0203AD44
	adds r5, r6, #0
	adds r5, #0xb4
	b _08122828
	.align 2, 0
_081227FC: .4byte gUnk_0203AD44
_08122800:
	mov r0, r8
	adds r0, #0xba
	ldrb r0, [r0]
	asrs r0, r4
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08122820
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r4, r0
	ldr r1, _0812284C @ =gUnk_02020EE0
	adds r0, r0, r1
	ldrb r1, [r5]
	bl sub_08051F70
_08122820:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, _08122850 @ =gUnk_0203AD44
_08122828:
	ldrb r0, [r0]
	cmp r4, r0
	blo _08122800
	ldr r0, _08122854 @ =sub_08122B34
	str r0, [r6, #0x78]
	ldrb r1, [r7]
	movs r0, #0xf7
	ands r0, r1
	strb r0, [r7]
	ldrb r1, [r5]
	adds r0, r6, #0
	bl sub_081222AC
	movs r0, #3
	adds r1, r6, #0
	bl sub_0806FE64
	b _081228C0
	.align 2, 0
_0812284C: .4byte gUnk_02020EE0
_08122850: .4byte gUnk_0203AD44
_08122854: .4byte sub_08122B34
_08122858:
	movs r0, #2
	ands r0, r4
	adds r7, r2, #0
	cmp r0, #0
	beq _081228C0
	adds r0, r6, #0
	adds r0, #0xb4
	ldrb r1, [r0]
	adds r5, r0, #0
	mov r2, ip
	ldrh r2, [r2, #0x14]
	cmp r1, r2
	bne _081228C0
	movs r4, #0
	b _0812289C
_08122876:
	mov r0, r8
	adds r0, #0xba
	ldrb r0, [r0]
	asrs r0, r4
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08122896
	movs r0, #0xd4
	lsls r0, r0, #1
	muls r0, r4, r0
	ldr r1, _08122910 @ =gUnk_02020EE0
	adds r0, r0, r1
	ldrb r1, [r5]
	bl sub_08051F70
_08122896:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0812289C:
	ldr r0, _08122914 @ =gUnk_0203AD44
	ldrb r0, [r0]
	cmp r4, r0
	blo _08122876
	ldr r0, _08122918 @ =sub_08122B34
	str r0, [r6, #0x78]
	ldrb r1, [r7]
	movs r0, #0xf7
	ands r0, r1
	strb r0, [r7]
	ldrb r1, [r5]
	adds r0, r6, #0
	bl sub_081222AC
	movs r0, #3
	adds r1, r6, #0
	bl sub_0806FE64
_081228C0:
	ldrb r1, [r7]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08122906
	mov r3, r8
	adds r3, #0xb5
	ldrb r0, [r3]
	subs r0, #1
	strb r0, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08122906
	mov r2, r8
	adds r2, #0xb4
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _081228FA
	movs r0, #0
	strb r0, [r2]
	ldrb r0, [r7]
	movs r1, #2
	orrs r0, r1
	strb r0, [r7]
_081228FA:
	ldrb r0, [r2]
	adds r1, r6, #0
	adds r1, #0x83
	strb r0, [r1]
	movs r0, #5
	strb r0, [r3]
_08122906:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08122910: .4byte gUnk_02020EE0
_08122914: .4byte gUnk_0203AD44
_08122918: .4byte sub_08122B34

	thumb_func_start sub_0812291C
sub_0812291C: @ 0x0812291C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov ip, r0
	mov sb, ip
	mov r5, ip
	adds r5, #0xb9
	ldrb r0, [r5]
	cmp r0, #9
	bls _08122936
	b _08122B18
_08122936:
	mov r1, ip
	adds r1, #0xb8
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r1
	cmp r0, #0xff
	beq _0812294C
	b _08122B10
_0812294C:
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _081229AA
	mov r2, ip
	adds r2, #0x50
	ldr r3, _081229A0 @ =gUnk_08357EA4
	mov r4, ip
	adds r4, #0xb4
	ldrb r1, [r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #1
	ldrb r1, [r5]
	adds r0, r0, r1
	adds r0, r0, r3
	ldrb r1, [r0]
	lsls r1, r1, #8
	ldrh r0, [r2]
	subs r0, r0, r1
	strh r0, [r2]
	movs r0, #0
	ldrsh r7, [r2, r0]
	ldrb r1, [r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #1
	ldrb r5, [r5]
	adds r0, r0, r5
	adds r0, r0, r3
	ldrb r0, [r0]
	lsls r0, r0, #8
	rsbs r1, r0, #0
	adds r5, r2, #0
	mov r8, r3
	adds r6, r4, #0
	cmp r7, r1
	bge _081229A4
	strh r1, [r5]
	b _081229F4
	.align 2, 0
_081229A0: .4byte gUnk_08357EA4
_081229A4:
	cmp r7, r0
	ble _081229F4
	b _081229F2
_081229AA:
	mov r2, ip
	adds r2, #0x50
	ldr r3, _08122A3C @ =gUnk_08357EA4
	mov r4, ip
	adds r4, #0xb4
	ldrb r1, [r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #1
	ldrb r1, [r5]
	adds r0, r0, r1
	adds r0, r0, r3
	ldrb r0, [r0]
	lsls r0, r0, #8
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2]
	movs r0, #0
	ldrsh r7, [r2, r0]
	ldrb r1, [r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #1
	ldrb r5, [r5]
	adds r0, r0, r5
	adds r0, r0, r3
	ldrb r0, [r0]
	lsls r0, r0, #8
	adds r5, r2, #0
	mov r8, r3
	adds r6, r4, #0
	cmp r7, r0
	bgt _081229F2
	rsbs r0, r0, #0
	cmp r7, r0
	bge _081229F4
_081229F2:
	strh r0, [r5]
_081229F4:
	mov r3, ip
	adds r3, #0xb9
	ldrb r1, [r3]
	ldrb r2, [r6]
	lsls r0, r2, #2
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, #1
	adds r1, r1, r0
	add r1, r8
	ldrb r0, [r1]
	lsls r1, r0, #8
	adds r7, r3, #0
	cmp r1, #0
	ble _08122A40
	mov r4, sb
	adds r4, #0x52
	ldrh r0, [r4]
	adds r0, r0, r1
	strh r0, [r4]
	movs r1, #0
	ldrsh r3, [r4, r1]
	ldrb r1, [r7]
	ldrb r2, [r6]
	lsls r0, r2, #2
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, #1
	adds r1, r1, r0
	add r1, r8
	ldrb r0, [r1]
	lsls r0, r0, #8
	cmp r3, r0
	ble _08122A6A
	b _08122A68
	.align 2, 0
_08122A3C: .4byte gUnk_08357EA4
_08122A40:
	mov r4, sb
	adds r4, #0x52
	ldrh r0, [r4]
	adds r0, r0, r1
	strh r0, [r4]
	movs r0, #0
	ldrsh r3, [r4, r0]
	ldrb r1, [r7]
	ldrb r2, [r6]
	lsls r0, r2, #2
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, #1
	adds r1, r1, r0
	add r1, r8
	ldrb r0, [r1]
	lsls r0, r0, #8
	rsbs r0, r0, #0
	cmp r3, r0
	bge _08122A6A
_08122A68:
	strh r0, [r4]
_08122A6A:
	mov r1, ip
	ldr r0, [r1, #8]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	mov r3, ip
	adds r3, #0x52
	cmp r0, #0
	bne _08122A9A
	mov r4, ip
	ldr r1, [r4, #0x40]
	str r1, [r4, #0x48]
	ldr r2, [r4, #0x44]
	str r2, [r4, #0x4c]
	movs r4, #0
	ldrsh r0, [r5, r4]
	adds r1, r1, r0
	mov r0, ip
	str r1, [r0, #0x40]
	movs r1, #0
	ldrsh r0, [r3, r1]
	subs r2, r2, r0
	mov r4, ip
	str r2, [r4, #0x44]
_08122A9A:
	adds r1, r5, #0
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _08122ABC
	ldr r4, _08122AB8 @ =0x00007FFF
	adds r0, r2, r4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08122ACC
	movs r0, #0
	strh r0, [r1]
	b _08122ACC
	.align 2, 0
_08122AB8: .4byte 0x00007FFF
_08122ABC:
	ldr r1, _08122AEC @ =0xFFFF8001
	adds r0, r2, r1
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08122ACC
	movs r0, #0
	strh r0, [r5]
_08122ACC:
	adds r1, r3, #0
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _08122AF4
	ldr r3, _08122AF0 @ =0x00007FFF
	adds r0, r2, r3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08122B04
	movs r0, #0
	strh r0, [r1]
	b _08122B04
	.align 2, 0
_08122AEC: .4byte 0xFFFF8001
_08122AF0: .4byte 0x00007FFF
_08122AF4:
	ldr r4, _08122B14 @ =0xFFFF8001
	adds r0, r2, r4
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08122B04
	movs r0, #0
	strh r0, [r3]
_08122B04:
	movs r0, #2
	mov r1, sl
	strb r0, [r1]
	ldrb r0, [r7]
	adds r0, #2
	strb r0, [r7]
_08122B10:
	movs r0, #1
	b _08122B26
	.align 2, 0
_08122B14: .4byte 0xFFFF8001
_08122B18:
	mov r0, ip
	adds r0, #0xb8
	movs r2, #0
	movs r1, #2
	strb r1, [r0]
	strb r2, [r5]
	movs r0, #0
_08122B26:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08122B34
sub_08122B34: @ 0x08122B34
	push {r4, lr}
	adds r4, r0, #0
	bl sub_0812291C
	adds r2, r0, #0
	cmp r2, #0
	bne _08122B5A
	adds r1, r4, #0
	adds r1, #0xb7
	movs r0, #8
	strb r0, [r1]
	subs r1, #2
	movs r0, #5
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0xba
	strb r2, [r0]
	ldr r0, _08122B68 @ =sub_08122504
	str r0, [r4, #0x78]
_08122B5A:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08122B68: .4byte sub_08122504
